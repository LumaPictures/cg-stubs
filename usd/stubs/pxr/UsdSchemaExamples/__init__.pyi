# mypy: disable-error-code="misc, override, no-redef"

import Boost.Python
import pxr.Sdf
import pxr.Tf
import pxr.Usd
import typing
import typing_extensions
from typing import Any, ClassVar, overload

__MFB_FULL_PACKAGE_NAME: str

class Complex(Simple):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, schemaObj: pxr.Usd.SchemaBase) -> None: ...
    @overload
    def __init__(self, prim: pxr.Usd.Prim) -> None: ...
    @overload
    def __init__(self) -> None: ...
    def CreateComplexStringAttr(self, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    @staticmethod
    def Define(stage: pxr.Usd.Stage, path: pxr.Sdf.Path | str) -> typing_extensions.Self: ...
    @staticmethod
    def Get(stage: pxr.Usd.Stage, path: pxr.Sdf.Path | str) -> typing_extensions.Self: ...
    def GetComplexStringAttr(self) -> Attribute: ...
    @staticmethod
    def GetSchemaAttributeNames(includeInherited: bool = ...) -> list: ...
    @staticmethod
    def _GetStaticTfType() -> pxr.Tf.Type: ...
    def __bool__(self) -> bool: ...

class ParamsAPI(pxr.Usd.APISchemaBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, schemaObj: pxr.Usd.SchemaBase) -> None: ...
    @overload
    def __init__(self, prim: pxr.Usd.Prim) -> None: ...
    @overload
    def __init__(self) -> None: ...
    @staticmethod
    def Apply(prim: pxr.Usd.Prim) -> typing_extensions.Self: ...
    @staticmethod
    def CanApply(prim: pxr.Usd.Prim) -> _CanApplyResult: ...
    def CreateMassAttr(self, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateVelocityAttr(self, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateVolumeAttr(self, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    @staticmethod
    def Get(stage: pxr.Usd.Stage, path: pxr.Sdf.Path | str) -> typing_extensions.Self: ...
    def GetMassAttr(self) -> Attribute: ...
    @staticmethod
    def GetSchemaAttributeNames(includeInherited: bool = ...) -> list: ...
    def GetVelocityAttr(self) -> Attribute: ...
    def GetVolumeAttr(self) -> Attribute: ...
    @staticmethod
    def _GetStaticTfType() -> pxr.Tf.Type: ...
    def __bool__(self) -> bool: ...

class Simple(pxr.Usd.Typed):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, schemaObj: pxr.Usd.SchemaBase) -> None: ...
    @overload
    def __init__(self, prim: pxr.Usd.Prim) -> None: ...
    @overload
    def __init__(self) -> None: ...
    def CreateIntAttrAttr(self, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateTargetRel(self) -> Relationship: ...
    @staticmethod
    def Get(stage: pxr.Usd.Stage, path: pxr.Sdf.Path | str) -> typing_extensions.Self: ...
    def GetIntAttrAttr(self) -> Attribute: ...
    @staticmethod
    def GetSchemaAttributeNames(includeInherited: bool = ...) -> list: ...
    def GetTargetRel(self) -> Relationship: ...
    @staticmethod
    def _GetStaticTfType() -> pxr.Tf.Type: ...
    def __bool__(self) -> bool: ...

class Tokens(Boost.Python.instance):
    ComplexPrim: ClassVar[str] = ...  # read-only
    ParamsAPI: ClassVar[str] = ...  # read-only
    SimplePrim: ClassVar[str] = ...  # read-only
    complexString: ClassVar[str] = ...  # read-only
    intAttr: ClassVar[str] = ...  # read-only
    paramsMass: ClassVar[str] = ...  # read-only
    paramsVelocity: ClassVar[str] = ...  # read-only
    paramsVolume: ClassVar[str] = ...  # read-only
    target: ClassVar[str] = ...  # read-only
    def __init__(self, *args, **kwargs) -> None: ...

class _CanApplyResult(Boost.Python.instance):
    __instance_size__: ClassVar[int] = ...
    def __init__(self, arg2: bool, arg3: object) -> None: ...
    def __bool__(self) -> bool: ...
    def __eq__(self, other: object) -> bool: ...
    def __getitem__(self, arg2: int) -> Any: ...
    def __iter__(self) -> typing.Iterator[Any]: ...
    def __ne__(self, other: object) -> bool: ...
    @property
    def whyNot(self): ...
