# mypy: disable-error-code="misc, override, no-redef"

import Boost.Python
import pxr.PxOsd
import pxr.Vt
from typing import ClassVar

__MFB_FULL_PACKAGE_NAME: str

class CapsuleMeshGenerator(Boost.Python.instance):
    minNumCapAxial: ClassVar[int] = ...  # read-only
    minNumRadial: ClassVar[int] = ...  # read-only
    def __init__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def ComputeNumPoints(arg1: int, arg2: int, arg3: bool) -> int: ...
    @staticmethod
    def GeneratePoints(arg1: int, arg2: int, arg3: float, arg4: float) -> pxr.Vt.Vec3fArray: ...
    @staticmethod
    def GenerateTopology(arg1: int, arg2: int, arg3: bool) -> pxr.PxOsd.MeshTopology: ...

class ConeMeshGenerator(Boost.Python.instance):
    minNumRadial: ClassVar[int] = ...  # read-only
    def __init__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def ComputeNumPoints(arg1: int, arg2: bool) -> int: ...
    @staticmethod
    def GeneratePoints(arg1: int, arg2: float, arg3: float) -> pxr.Vt.Vec3fArray: ...
    @staticmethod
    def GenerateTopology(arg1: int, arg2: bool) -> pxr.PxOsd.MeshTopology: ...

class CuboidMeshGenerator(Boost.Python.instance):
    def __init__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def ComputeNumPoints() -> int: ...
    @staticmethod
    def GeneratePoints(arg1: float, arg2: float, arg3: float) -> pxr.Vt.Vec3fArray: ...
    @staticmethod
    def GenerateTopology() -> pxr.PxOsd.MeshTopology: ...

class CylinderMeshGenerator(Boost.Python.instance):
    minNumRadial: ClassVar[int] = ...  # read-only
    def __init__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def ComputeNumPoints(arg1: int, arg2: bool) -> int: ...
    @staticmethod
    def GeneratePoints(arg1: int, arg2: float, arg3: float) -> pxr.Vt.Vec3fArray: ...
    @staticmethod
    def GenerateTopology(arg1: int, arg2: bool) -> pxr.PxOsd.MeshTopology: ...

class SphereMeshGenerator(Boost.Python.instance):
    minNumAxial: ClassVar[int] = ...  # read-only
    minNumRadial: ClassVar[int] = ...  # read-only
    def __init__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def ComputeNumPoints(arg1: int, arg2: int, arg3: bool) -> int: ...
    @staticmethod
    def GeneratePoints(arg1: int, arg2: int, arg3: float) -> pxr.Vt.Vec3fArray: ...
    @staticmethod
    def GenerateTopology(arg1: int, arg2: int, arg3: bool) -> pxr.PxOsd.MeshTopology: ...
