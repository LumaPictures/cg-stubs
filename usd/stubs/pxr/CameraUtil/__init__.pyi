# mypy: disable-error-code="misc, override, no-redef"

import Boost.Python
import pxr.Gf
import pxr.Tf
from _typeshed import Incomplete
from typing import Any, ClassVar, overload

Crop: ConformWindowPolicy
DontConform: ConformWindowPolicy
Fit: ConformWindowPolicy
MatchHorizontally: ConformWindowPolicy
MatchVertically: ConformWindowPolicy
__MFB_FULL_PACKAGE_NAME: str

class ConformWindowPolicy(pxr.Tf.Tf_PyEnumWrapper):
    _baseName: ClassVar[str] = ...
    allValues: ClassVar[tuple] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def GetValueFromName(name: object) -> Any: ...

class Framing(Boost.Python.instance):
    __instance_size__: ClassVar[int] = ...
    dataWindow: Incomplete
    displayWindow: Incomplete
    pixelAspectRatio: Incomplete
    @overload
    def __init__(self, displayWindow: pxr.Gf.Range2f | list[float] | tuple[float, float], dataWindow: pxr.Gf.Rect2i, pixelAspectRatio: float = ...) -> None: ...
    @overload
    def __init__(self, dataWindow: pxr.Gf.Rect2i) -> None: ...
    @overload
    def __init__(self, arg2: Framing) -> None: ...
    @overload
    def __init__(self) -> None: ...
    def ApplyToProjectionMatrix(self, projectionMatrix: pxr.Gf.Matrix4d, windowPolicy: ConformWindowPolicy) -> pxr.Gf.Matrix4d: ...
    def ComputeFilmbackWindow(self, cameraAspectRatio: float, windowPolicy: ConformWindowPolicy) -> pxr.Gf.Range2f: ...
    def IsValid(self) -> bool: ...
    def __eq__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...

class ScreenWindowParameters(Boost.Python.instance):
    def __init__(self, arg2: pxr.Gf.Camera) -> None: ...
    @property
    def fieldOfView(self) -> float: ...
    @property
    def screenWindow(self) -> pxr.Gf.Vec4d: ...
    @property
    def zFacingViewMatrix(self) -> pxr.Gf.Matrix4d: ...

@overload
def ConformWindow(frustum: pxr.Gf.Frustum, policy: ConformWindowPolicy, targetAspect: float) -> None: ...
@overload
def ConformWindow(camera: pxr.Gf.Camera, policy: ConformWindowPolicy, targetAspect: float) -> None: ...
@overload
def ConformedWindow(window: pxr.Gf.Range2d | list[float] | tuple[float, float], policy: ConformWindowPolicy, targetAspect: float) -> pxr.Gf.Range2d: ...
@overload
def ConformedWindow(window: pxr.Gf.Vec2d | list[float] | tuple[float, float], policy: ConformWindowPolicy, targetAspect: float) -> pxr.Gf.Vec2d: ...
@overload
def ConformedWindow(window: pxr.Gf.Vec4d | list[float] | tuple[float, float, float, float], policy: ConformWindowPolicy, targetAspect: float) -> pxr.Gf.Vec4d: ...
@overload
def ConformedWindow(window: pxr.Gf.Matrix4d, policy: ConformWindowPolicy, targetAspect: float) -> pxr.Gf.Matrix4d: ...
