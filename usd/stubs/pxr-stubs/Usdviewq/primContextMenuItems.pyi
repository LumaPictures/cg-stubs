from .qt import QtGui as QtGui, QtWidgets as QtWidgets
from .usdviewContextMenuItem import UsdviewContextMenuItem as UsdviewContextMenuItem
from _typeshed import Incomplete

def _GetContextMenuItems(appController, item): ...

class PrimContextMenuItem(UsdviewContextMenuItem):
    _selectionDataModel: Incomplete
    _currentFrame: Incomplete
    _appController: Incomplete
    _item: Incomplete
    def __init__(self, appController, item) -> None: ...
    def IsEnabled(self): ...
    def IsSeparator(self): ...
    def GetText(self): ...
    def RunCommand(self): ...

class SeparatorMenuItem(PrimContextMenuItem):
    def IsSeparator(self): ...

class JumpToEnclosingModelItem(PrimContextMenuItem):
    def IsEnabled(self): ...
    def GetText(self): ...
    def RunCommand(self) -> None: ...

class SelectBoundPreviewMaterialMenuItem(PrimContextMenuItem):
    _boundPreviewMaterial: Incomplete
    _bindingRel: Incomplete
    def __init__(self, appController, item) -> None: ...
    def IsEnabled(self): ...
    def GetText(self): ...
    def RunCommand(self) -> None: ...

class SelectBoundFullMaterialMenuItem(PrimContextMenuItem):
    _boundFullMaterial: Incomplete
    _bindingRel: Incomplete
    def __init__(self, appController, item) -> None: ...
    def IsEnabled(self): ...
    def GetText(self): ...
    def RunCommand(self) -> None: ...

class ActiveMenuItem(PrimContextMenuItem):
    def GetText(self): ...
    def RunCommand(self) -> None: ...

class ToggleVisibilityMenuItem(PrimContextMenuItem):
    _imageable: bool
    _isVisible: bool
    def __init__(self, appController, item) -> None: ...
    def IsEnabled(self): ...
    def GetText(self): ...
    def RunCommand(self) -> None: ...

class VisOnlyMenuItem(PrimContextMenuItem):
    def IsEnabled(self): ...
    def GetText(self): ...
    def RunCommand(self) -> None: ...

class RemoveVisMenuItem(PrimContextMenuItem):
    def IsEnabled(self): ...
    def GetText(self): ...
    def RunCommand(self) -> None: ...

class LoadOrUnloadMenuItem(PrimContextMenuItem):
    def __init__(self, appController, item) -> None: ...
    def IsEnabled(self): ...
    def GetText(self): ...
    def RunCommand(self) -> None: ...

class CopyPrimPathMenuItem(PrimContextMenuItem):
    def GetText(self): ...
    def RunCommand(self) -> None: ...

class CopyModelPathMenuItem(PrimContextMenuItem):
    _modelPrim: Incomplete
    def __init__(self, appController, item) -> None: ...
    def IsEnabled(self): ...
    def GetText(self): ...
    def RunCommand(self) -> None: ...

class IsolateCopyPrimMenuItem(PrimContextMenuItem):
    def GetText(self): ...
    def RunCommand(self) -> None: ...
    def IsEnabled(self): ...

class IsolateAssetMenuItem(PrimContextMenuItem):
    _assetName: Incomplete
    _filePath: Incomplete
    def __init__(self, appController, item) -> None: ...
    def IsEnabled(self): ...
    def GetText(self): ...
    def RunCommand(self) -> None: ...

class SetAsActiveCamera(PrimContextMenuItem):
    _nonActiveCameraPrim: Incomplete
    def __init__(self, appController, item) -> None: ...
    def IsEnabled(self): ...
    def GetText(self): ...
    def RunCommand(self) -> None: ...
