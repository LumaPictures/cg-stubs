# mypy: disable-error-code="misc, override, no-redef"

import PySide6.QtCore
import PySide6.QtCore.Qt
import PySide6.QtWidgets
import pxr.Sdf as Sdf
from _typeshed import Incomplete
from pxr.Usdviewq import ContainerDataSource as ContainerDataSource, DataSourceLocator as DataSourceLocator, DataSourceLocatorSet as DataSourceLocatorSet, HydraObserver as HydraObserver, SampledDataSource as SampledDataSource, VectorDataSource as VectorDataSource
from typing import ClassVar

class HydraSceneBrowser(PySide6.QtWidgets.QWidget):
    staticMetaObject: ClassVar[PySide6.QtCore.QMetaObject] = ...
    def __init__(self, parent: Incomplete | None = ...) -> None: ...
    def _HydraSceneBrowser__DataSourceSelected(self, dataSourceProxy): ...
    def _HydraSceneBrowser__FillGoToInputMenu(self): ...
    def _HydraSceneBrowser__PollForNotices(self): ...
    def _HydraSceneBrowser__PrimDirtied(self, primPath, locators): ...
    def _HydraSceneBrowser__PrimSelected(self, primPath, dataSourceProxy): ...
    def _HydraSceneBrowser__SceneIndexChanged(self): ...
    def _HydraSceneBrowser__SceneIndexSelected(self, name): ...
    def _HydraSceneBrowser__ShowLoggerWindow(self): ...
    def _HydraSceneBrowser__UpdateNameLabel(self, prefix: Incomplete | None = ...): ...

class _DataSourceProxy:
    def __init__(self, value: Incomplete | None = ...) -> None: ...

class _DataSourceTreeWidget(PySide6.QtWidgets.QTreeWidget):
    dataSourceSelected: ClassVar[PySide6.QtCore.Signal] = ...
    staticMetaObject: ClassVar[PySide6.QtCore.QMetaObject] = ...
    def __init__(self, parent) -> None: ...
    def PrimDirtied(self, primPath, dataSource, locatorSet): ...
    def SetPrimDataSource(self, primPath, dataSource): ...
    def _DataSourceTreeWidget__ItemCollapsed(self, item): ...
    def _DataSourceTreeWidget__ItemExpanded(self, item): ...
    def _DataSourceTreeWidget__ItemSelectionChanged(self): ...
    def _GetExpandedSet(self): ...

class _DataSourceTreeWidgetItem(PySide6.QtWidgets.QTreeWidgetItem):
    def __init__(self, locator, parentItem, dataSource) -> None: ...
    def GetDataSource(self): ...
    def GetLocator(self): ...
    def SetDirty(self, dataSource): ...
    def WasCollapsed(self): ...
    def WasExpanded(self): ...
    def _DataSourceTreeWidgetItem__BuildChildren(self): ...
    def _DataSourceTreeWidgetItem__IsInExpandedSet(self): ...
    def _DataSourceTreeWidgetItem__RebuildChildren(self): ...
    def _DataSourceTreeWidgetItem__SetIsInExpandedSet(self, state): ...

class _DataSourceValueTreeView(PySide6.QtWidgets.QTreeView):
    staticMetaObject: ClassVar[PySide6.QtCore.QMetaObject] = ...
    def __init__(self, parent) -> None: ...
    def Refresh(self): ...
    def SetDataSource(self, dataSource): ...

class _NoticeLoggingWidget(PySide6.QtWidgets.QWidget):
    staticMetaObject: ClassVar[PySide6.QtCore.QMetaObject] = ...
    def __init__(self, parent) -> None: ...
    def AddNotices(self, entries): ...
    def SetText(self, value): ...
    def _NoticeLoggingWidget__Clear(self): ...
    def _NoticeLoggingWidget__ToggleRecordingState(self): ...

class _ObserverLoggingItemModel(PySide6.QtCore.QAbstractItemModel):
    staticMetaObject: ClassVar[PySide6.QtCore.QMetaObject] = ...
    def __init__(self, parent) -> None: ...
    def AddEntries(self, newEntries): ...
    def Clear(self): ...
    def columnCount(self, parent: PySide6.QtCore.QModelIndex = ...): ...
    def data(self, modelIndex, role: PySide6.QtCore.Qt.ItemDataRole = ...): ...
    def headerData(self, section, orientation, role: PySide6.QtCore.Qt.ItemDataRole = ...): ...
    def index(self, row, column, parent: Incomplete | None = ...): ...
    def parent(self, modelIndex): ...
    def rowCount(self, parent: PySide6.QtCore.QModelIndex = ...): ...

class _ObserverLoggingTreeView(PySide6.QtWidgets.QTreeView):
    staticMetaObject: ClassVar[PySide6.QtCore.QMetaObject] = ...
    def __init__(self, parent: Incomplete | None = ...) -> None: ...
    def GetModel(self): ...

class _RegisteredSceneIndexChooser(PySide6.QtWidgets.QPushButton):
    sceneIndexSelected: ClassVar[PySide6.QtCore.Signal] = ...
    staticMetaObject: ClassVar[PySide6.QtCore.QMetaObject] = ...
    def __init__(self, parent: Incomplete | None = ...) -> None: ...
    def _RegisteredSceneIndexChooser__AboutToShow(self): ...
    def _RegisteredSceneIndexChooser__Triggered(self, action): ...

class _SceneIndexPrimTreeWidgetItem(PySide6.QtWidgets.QTreeWidgetItem):
    def __init__(self, parent, primPath, queryOnExpansion: bool = ...) -> None: ...
    def GetPrimPath(self): ...
    def WasExpanded(self, treeWidget, observer): ...

class _SceneIndexTreeWidget(PySide6.QtWidgets.QTreeWidget):
    primDirtied: ClassVar[PySide6.QtCore.Signal] = ...
    primSelected: ClassVar[PySide6.QtCore.Signal] = ...
    staticMetaObject: ClassVar[PySide6.QtCore.QMetaObject] = ...
    def __init__(self, observer, parent: Incomplete | None = ...) -> None: ...
    def AddToExpandedSet(self, primPath): ...
    def PrimIsExpanded(self, primPath): ...
    def PrimsAdded(self, entries): ...
    def PrimsDirtied(self, entries): ...
    def PrimsRemoved(self, entries): ...
    def RemoveFromExpandedSet(self, primPath): ...
    def Requery(self, observer, lazy: bool = ...): ...
    def _AddPrimItem(self, primPath, item): ...
    def _GetPrimItem(self, primPath, createIfNecessary: bool = ...): ...
    def _RemoveSubtree(self, primPath): ...
    def _RemoveSubtreeEntries(self, primPath): ...
    def _SceneIndexTreeWidget__ItemCollapsed(self, item): ...
    def _SceneIndexTreeWidget__ItemExpanded(self, item): ...
    def _SceneIndexTreeWidget__ItemSelectionChanged(self): ...
    def contextMenuEvent(self, event): ...

class _ValueItemModel(PySide6.QtCore.QAbstractItemModel):
    staticMetaObject: ClassVar[PySide6.QtCore.QMetaObject] = ...
    def __init__(self, value, typeStr, parent: Incomplete | None = ...) -> None: ...
    def columnCount(self, parent: PySide6.QtCore.QModelIndex = ...): ...
    def data(self, modelIndex, role: PySide6.QtCore.Qt.ItemDataRole = ...): ...
    def headerData(self, section, orientation, role: PySide6.QtCore.Qt.ItemDataRole = ...): ...
    def index(self, row, column, parent: Incomplete | None = ...): ...
    def parent(self, model): ...
    def rowCount(self, parent: PySide6.QtCore.QModelIndex = ...): ...
