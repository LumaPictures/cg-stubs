from .qt import QtCore as QtCore, QtGui as QtGui, QtWidgets as QtWidgets
from _typeshed import Incomplete

def _GetLengthOfRange(start, stop, step): ...

class _ArrayAttributeModel(QtCore.QAbstractListModel):
    """This is a data model that represents a slice into some array data.
    """
    RawDataRole: Incomplete
    _arrayData: Incomplete
    _scalarTypeName: str
    _slice: Incomplete
    _fetchMoreTimer: Incomplete
    _rowCount: int
    _publishedRows: int
    def __init__(self) -> None: ...
    def SetArrayDataAndTypeName(self, arrayData, scalarTypeName) -> None: ...
    def SetSlice(self, slice_) -> None: ...
    def _Reset(self) -> None: ...
    def GetArrayData(self): ...
    def GetScalarTypeName(self): ...
    def index(self, row, col, parent=...): ...
    def parent(self, index): ...
    def rowCount(self, parent=...): ...
    def columnCount(self, parent=...): ...
    def data(self, index, role=...): ...
    def fetchMore(self, index) -> None: ...
    def canFetchMore(self, index): ...
    def TryToFetchMore(self) -> None: ...

class ArrayAttributeView(QtWidgets.QWidget):
    _lineEdit: Incomplete
    _arrayAttrModel: Incomplete
    _listView: Incomplete
    def __init__(self, parent: Incomplete | None = None) -> None: ...
    def SetAttribute(self, attr, frame) -> None: ...
    def CanView(self, attr): ...
    def keyPressEvent(self, e): ...
    def _SetupContextMenu(self) -> None: ...
    def _ShowContextMenu(self, point) -> None: ...
    def CopyAll(self) -> None: ...
    def CopySelected(self) -> None: ...
    def _CopyValsToClipboard(self, vals) -> None: ...
    def SelectAll(self) -> None: ...

def _IntOrNone(s): ...
def _GetSliceFromString(s): ...

class _SliceLineEdit(QtWidgets.QLineEdit):
    """LineEdit for inputing strings that represent slices"""
    SliceChanged: Incomplete
    def __init__(self, parent: Incomplete | None = None) -> None: ...
    class Validator(QtGui.QValidator):
        def validate(self, s, pos): ...
    def setText(self, t) -> None: ...
    def _OnEditingFinished(self) -> None: ...
