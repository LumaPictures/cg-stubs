from _typeshed import Incomplete
from rez.exceptions import ReleaseVCSError
from rez.release_vcs import ReleaseVCS

class GitReleaseVCSError(ReleaseVCSError): ...

class GitReleaseVCS(ReleaseVCS):
    schema_dict: Incomplete
    @classmethod
    def name(cls) -> str: ...
    executable: str
    def __init__(self, pkg_root, vcs_root: Incomplete | None = None) -> None: ...
    @classmethod
    def is_valid_root(cls, path): ...
    @classmethod
    def search_parents_for_root(cls) -> bool: ...
    def git(self, *nargs): ...
    def get_relative_to_remote(self):
        """Return the number of commits we are relative to the remote. Negative
        is behind, positive in front, zero means we are matched to remote.
        """
    def get_local_branch(self):
        """Returns the label of the current local branch."""
    def get_tracking_branch(self):
        """Returns (remote, branch) tuple, or None,None if there is no remote.
        """
    def validate_repostate(self) -> None: ...
    def get_changelog(self, previous_revision: Incomplete | None = None, max_revisions: Incomplete | None = None): ...
    def get_current_revision(self): ...
    def tag_exists(self, tag_name) -> bool: ...
    def create_release_tag(self, tag_name, message: Incomplete | None = None) -> None: ...
    @classmethod
    def export(cls, revision, path) -> None: ...

def register_plugin(): ...
