import maya.OpenMaya
from _typeshed import Incomplete
from typing import Callable, ClassVar

class _SwigNonDynamicMeta(type):
    __setattr__: ClassVar[Callable] = ...

class charPtr:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
    @classmethod
    def value(cls, *args, **kwargs): ...
    @classmethod
    def cast(cls, *args, **kwargs): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...

class intPtr:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
    @classmethod
    def value(cls, *args, **kwargs): ...
    @classmethod
    def cast(cls, *args, **kwargs): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...

class shortPtr:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
    @classmethod
    def value(cls, *args, **kwargs): ...
    @classmethod
    def cast(cls, *args, **kwargs): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...

class floatPtr:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
    @classmethod
    def value(cls, *args, **kwargs): ...
    @classmethod
    def cast(cls, *args, **kwargs): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...

class doublePtr:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
    @classmethod
    def value(cls, *args, **kwargs): ...
    @classmethod
    def cast(cls, *args, **kwargs): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...

class boolPtr:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
    @classmethod
    def value(cls, *args, **kwargs): ...
    @classmethod
    def cast(cls, *args, **kwargs): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...

class uIntPtr:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
    @classmethod
    def value(cls, *args, **kwargs): ...
    @classmethod
    def cast(cls, *args, **kwargs): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...

class uCharPtr:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
    @classmethod
    def value(cls, *args, **kwargs): ...
    @classmethod
    def cast(cls, *args, **kwargs): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...

class MColorMixingSpaceHelper:
    __init__: ClassVar[Callable] = ...
    kForward: ClassVar[int] = ...
    kInverse: ClassVar[int] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def refresh(cls, *args, **kwargs): ...
    @classmethod
    def getMixingSpaceNames(cls, *args, **kwargs): ...
    @classmethod
    def setMixingSpace(cls, *args, **kwargs): ...
    @classmethod
    def mixingSpace(cls, *args, **kwargs): ...
    @classmethod
    def mixingSpaceHasViews(cls, *args, **kwargs): ...
    @classmethod
    def getViewNames(cls, *args, **kwargs): ...
    @classmethod
    def setView(cls, *args, **kwargs): ...
    @classmethod
    def view(cls, *args, **kwargs): ...
    @classmethod
    def applyMixingTransform(cls, *args, **kwargs): ...
    @classmethod
    def mixingToSlider(cls, *args, **kwargs): ...
    @classmethod
    def sliderToMixing(cls, *args, **kwargs): ...

class MColorPickerCallback:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def getColor(cls, *args, **kwargs): ...
    @classmethod
    def getKey(cls, *args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...

class MColorPickerUtilities:
    kForward: ClassVar[int] = ...
    kInverse: ClassVar[int] = ...
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @staticmethod
    def isRegisteredToColorPicking(*args, **kwargs): ...
    @staticmethod
    def doRegisterToColorPicking(*args, **kwargs): ...
    @staticmethod
    def unregisterFromColorPicking(*args, **kwargs): ...
    @staticmethod
    def applyViewTransform(*args, **kwargs): ...
    @staticmethod
    def grabColor(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...

class MCommonRenderSettingsData:
    kRelativePath: ClassVar[int] = ...
    kFullPathImage: ClassVar[int] = ...
    kFullPathTmp: ClassVar[int] = ...
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    name: Incomplete
    namingScheme: Incomplete
    framePadding: Incomplete
    namePattern: Incomplete
    imageFormat: Incomplete
    customImageFormat: Incomplete
    frameStart: Incomplete
    frameEnd: Incomplete
    frameBy: Incomplete
    skipExistingFrames: Incomplete
    renderAll: Incomplete
    useCustomExt: Incomplete
    customExt: Incomplete
    renumberFrames: Incomplete
    renumberStart: Incomplete
    renumberBy: Incomplete
    width: Incomplete
    height: Incomplete
    deviceAspectRatio: Incomplete
    pixelAspectRatio: Incomplete
    dotPerInch: Incomplete
    enableDefaultLight: Incomplete
    preMel: Incomplete
    postMel: Incomplete
    preRenderLayerMel: Incomplete
    postRenderLayerMel: Incomplete
    preRenderMel: Incomplete
    postRenderMel: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def isAnimated(cls, *args, **kwargs): ...
    @classmethod
    def isMovieFormat(cls, *args, **kwargs): ...
    @classmethod
    def setPassName(cls, *args, **kwargs): ...
    @classmethod
    def setFieldName(cls, *args, **kwargs): ...
    @classmethod
    def getImageName(cls, *args, **kwargs): ...
    @classmethod
    def shouldRenderFrameAtTime(cls, *args, **kwargs): ...
    @classmethod
    def getBufferName(cls, *args, **kwargs): ...
    @staticmethod
    def getPreRenderFrameCmd(*args, **kwargs): ...
    @staticmethod
    def getPostRenderFrameCmd(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...

class MD3D9Renderer:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def makeSwatchContextCurrent(cls, *args, **kwargs): ...
    @classmethod
    def setBackgroundColor(cls, *args, **kwargs): ...
    @classmethod
    def readSwatchContextPixels(cls, *args, **kwargs): ...
    @classmethod
    def getD3D9Device(cls, *args, **kwargs): ...
    @staticmethod
    def theRenderer(*args, **kwargs): ...
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...

class MDrawProcedureBase:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def execute(cls, *args, **kwargs): ...
    @classmethod
    def setEnabled(cls, *args, **kwargs): ...
    @classmethod
    def enabled(cls, *args, **kwargs): ...
    @classmethod
    def setName(cls, *args, **kwargs): ...
    @classmethod
    def name(cls, *args, **kwargs): ...

class MFnRenderLayer(maya.OpenMaya.MFnDependencyNode):
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @classmethod
    def inLayer(cls, *args, **kwargs): ...
    @classmethod
    def layerChildren(cls, *args, **kwargs): ...
    @classmethod
    def inCurrentRenderLayer(cls, *args, **kwargs): ...
    @classmethod
    def listMembers(cls, *args, **kwargs): ...
    @classmethod
    def isPlugAdjusted(cls, *args, **kwargs): ...
    @classmethod
    def adjustmentPlug(cls, *args, **kwargs): ...
    @classmethod
    def externalRenderPasses(cls, *args, **kwargs): ...
    @classmethod
    def passHasObject(cls, *args, **kwargs): ...
    @classmethod
    def passHasLight(cls, *args, **kwargs): ...
    @staticmethod
    def findLayerByName(*args, **kwargs): ...
    @staticmethod
    def defaultRenderLayer(*args, **kwargs): ...
    @staticmethod
    def listAllRenderLayers(*args, **kwargs): ...
    @staticmethod
    def currentLayer(*args, **kwargs): ...

class MFnRenderPass(maya.OpenMaya.MFnDependencyNode):
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @classmethod
    def setImplementation(cls, *args, **kwargs): ...
    @classmethod
    def getImplementation(cls, *args, **kwargs): ...
    @classmethod
    def frameBufferType(cls, *args, **kwargs): ...
    @classmethod
    def frameBufferChannels(cls, *args, **kwargs): ...
    @classmethod
    def usesFiltering(cls, *args, **kwargs): ...
    @classmethod
    def passID(cls, *args, **kwargs): ...
    @classmethod
    def customTokenString(cls, *args, **kwargs): ...

class MFnImageSource(maya.OpenMaya.MFnDependencyNode):
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @classmethod
    def getImageName(cls, *args, **kwargs): ...
    @classmethod
    def sourceLayer(cls, *args, **kwargs): ...
    @classmethod
    def sourceCamera(cls, *args, **kwargs): ...

class MGeometryData:
    kInvalidElementSize: ClassVar[int] = ...
    kOne: ClassVar[int] = ...
    kTwo: ClassVar[int] = ...
    kThree: ClassVar[int] = ...
    kFour: ClassVar[int] = ...
    kInvalidElementType: ClassVar[int] = ...
    kFloat: ClassVar[int] = ...
    kDouble: ClassVar[int] = ...
    kChar: ClassVar[int] = ...
    kUnsignedChar: ClassVar[int] = ...
    kInt16: ClassVar[int] = ...
    kUnsignedInt16: ClassVar[int] = ...
    kInt32: ClassVar[int] = ...
    kUnsignedInt32: ClassVar[int] = ...
    kInvalidDataType: ClassVar[int] = ...
    kPosition: ClassVar[int] = ...
    kNormal: ClassVar[int] = ...
    kTexCoord: ClassVar[int] = ...
    kColor: ClassVar[int] = ...
    kWeight: ClassVar[int] = ...
    kAPISupported: ClassVar[int] = ...
    kTangent: ClassVar[int] = ...
    kBiNormal: ClassVar[int] = ...
    kVelocity: ClassVar[int] = ...
    kPrimitiveCenter: ClassVar[int] = ...
    kColorMask: ClassVar[int] = ...
    kUserData: ClassVar[int] = ...
    kMaxDataTypeIndex: ClassVar[int] = ...
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def objectName(cls, *args, **kwargs): ...
    @classmethod
    def uniqueID(cls, *args, **kwargs): ...
    @classmethod
    def dataType(cls, *args, **kwargs): ...
    @classmethod
    def elementType(cls, *args, **kwargs): ...
    @classmethod
    def elementTypeSize(cls, *args, **kwargs): ...
    @classmethod
    def elementSize(cls, *args, **kwargs): ...
    @classmethod
    def elementCount(cls, *args, **kwargs): ...
    @classmethod
    def data(cls, *args, **kwargs): ...
    @classmethod
    def setCollectionNumber(cls, *args, **kwargs): ...
    @classmethod
    def collectionNumber(cls, *args, **kwargs): ...
    @classmethod
    def setObjectOwnsData(cls, *args, **kwargs): ...
    @classmethod
    def objectOwnsData(cls, *args, **kwargs): ...

class MGeometryLegacy:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
    @classmethod
    def primitiveArrayCount(cls, *args, **kwargs): ...
    @classmethod
    def primitiveArray(cls, *args, **kwargs): ...
    @classmethod
    def position(cls, *args, **kwargs): ...
    @classmethod
    def normal(cls, *args, **kwargs): ...
    @classmethod
    def componentId(cls, *args, **kwargs): ...
    @classmethod
    def texCoord(cls, *args, **kwargs): ...
    @classmethod
    def color(cls, *args, **kwargs): ...
    @classmethod
    def tangent(cls, *args, **kwargs): ...
    @classmethod
    def binormal(cls, *args, **kwargs): ...
    @classmethod
    def data(cls, *args, **kwargs): ...

class MGeometryList:
    __init__: ClassVar[Callable] = ...
    kNone: ClassVar[int] = ...
    kMatrices: ClassVar[int] = ...
    kFixedFunctionLighting: ClassVar[int] = ...
    kCulling: ClassVar[int] = ...
    kAll: ClassVar[int] = ...
    kCullNone: ClassVar[int] = ...
    kCullCW: ClassVar[int] = ...
    kCullCCW: ClassVar[int] = ...
    thisown: Incomplete
    MSetupFlags: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def isDone(cls, *args, **kwargs): ...
    @classmethod
    def next(cls, *args, **kwargs): ...
    @classmethod
    def reset(cls, *args, **kwargs): ...
    @classmethod
    def length(cls, *args, **kwargs): ...
    @classmethod
    def setCurrentElement(cls, *args, **kwargs): ...
    @classmethod
    def geometry(cls, *args, **kwargs): ...
    @classmethod
    def objectToWorldMatrix(cls, *args, **kwargs): ...
    @classmethod
    def projectionMatrix(cls, *args, **kwargs): ...
    @classmethod
    def viewMatrix(cls, *args, **kwargs): ...
    @classmethod
    def path(cls, *args, **kwargs): ...
    @classmethod
    def cullMode(cls, *args, **kwargs): ...
    @classmethod
    def addLast(cls, *args, **kwargs): ...

class MGeometryManager:
    kDefaultSphere: ClassVar[int] = ...
    kDefaultPlane: ClassVar[int] = ...
    kDefaultCube: ClassVar[int] = ...
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @staticmethod
    def getGeometry(*args, **kwargs): ...
    @staticmethod
    def referenceDefaultGeometry(*args, **kwargs): ...
    @staticmethod
    def dereferenceDefaultGeometry(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...

class MGeometryPrimitive:
    __init__: ClassVar[Callable] = ...
    kInvalidIndexType: ClassVar[int] = ...
    kPoints: ClassVar[int] = ...
    kLines: ClassVar[int] = ...
    kLineStrip: ClassVar[int] = ...
    kLineLoop: ClassVar[int] = ...
    kTriangles: ClassVar[int] = ...
    kTriangleStrip: ClassVar[int] = ...
    kTriangleFan: ClassVar[int] = ...
    kQuads: ClassVar[int] = ...
    kQuadStrip: ClassVar[int] = ...
    kPolygon: ClassVar[int] = ...
    kMaxDrawPrimitiveTypeIndex: ClassVar[int] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def uniqueID(cls, *args, **kwargs): ...
    @classmethod
    def drawPrimitiveType(cls, *args, **kwargs): ...
    @classmethod
    def elementCount(cls, *args, **kwargs): ...
    @classmethod
    def dataType(cls, *args, **kwargs): ...
    @classmethod
    def data(cls, *args, **kwargs): ...

class MGeometryRequirementsLegacy:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def addPosition(cls, *args, **kwargs): ...
    @classmethod
    def addComponentId(cls, *args, **kwargs): ...
    @classmethod
    def addNormal(cls, *args, **kwargs): ...
    @classmethod
    def addTexCoord(cls, *args, **kwargs): ...
    @classmethod
    def addTangent(cls, *args, **kwargs): ...
    @classmethod
    def addBinormal(cls, *args, **kwargs): ...
    @classmethod
    def addColor(cls, *args, **kwargs): ...
    @classmethod
    def addFaceOffsets(cls, *args, **kwargs): ...

class MUniformParameter:
    kTypeUnknown: ClassVar[int] = ...
    kTypeBool: ClassVar[int] = ...
    kTypeInt: ClassVar[int] = ...
    kTypeFloat: ClassVar[int] = ...
    kType1DTexture: ClassVar[int] = ...
    kType2DTexture: ClassVar[int] = ...
    kType3DTexture: ClassVar[int] = ...
    kTypeCubeTexture: ClassVar[int] = ...
    kTypeEnvTexture: ClassVar[int] = ...
    kTypeString: ClassVar[int] = ...
    kTypeEnum: ClassVar[int] = ...
    kSemanticUnknown: ClassVar[int] = ...
    kSemanticObjectDir: ClassVar[int] = ...
    kSemanticWorldDir: ClassVar[int] = ...
    kSemanticViewDir: ClassVar[int] = ...
    kSemanticProjectionDir: ClassVar[int] = ...
    kSemanticObjectPos: ClassVar[int] = ...
    kSemanticWorldPos: ClassVar[int] = ...
    kSemanticViewPos: ClassVar[int] = ...
    kSemanticProjectionPos: ClassVar[int] = ...
    kSemanticColor: ClassVar[int] = ...
    kSemanticNormal: ClassVar[int] = ...
    kSemanticBump: ClassVar[int] = ...
    kSemanticEnvironment: ClassVar[int] = ...
    kSemanticWorldMatrix: ClassVar[int] = ...
    kSemanticWorldInverseMatrix: ClassVar[int] = ...
    kSemanticWorldInverseTransposeMatrix: ClassVar[int] = ...
    kSemanticViewMatrix: ClassVar[int] = ...
    kSemanticViewInverseMatrix: ClassVar[int] = ...
    kSemanticViewInverseTransposeMatrix: ClassVar[int] = ...
    kSemanticProjectionMatrix: ClassVar[int] = ...
    kSemanticProjectionInverseMatrix: ClassVar[int] = ...
    kSemanticProjectionInverseTransposeMatrix: ClassVar[int] = ...
    kSemanticWorldViewMatrix: ClassVar[int] = ...
    kSemanticWorldViewInverseMatrix: ClassVar[int] = ...
    kSemanticWorldViewInverseTransposeMatrix: ClassVar[int] = ...
    kSemanticWorldViewProjectionMatrix: ClassVar[int] = ...
    kSemanticWorldViewProjectionInverseMatrix: ClassVar[int] = ...
    kSemanticWorldViewProjectionInverseTransposeMatrix: ClassVar[int] = ...
    kSemanticColorTexture: ClassVar[int] = ...
    kSemanticNormalTexture: ClassVar[int] = ...
    kSemanticBumpTexture: ClassVar[int] = ...
    kSemanticNormalizationTexture: ClassVar[int] = ...
    kSemanticTranspDepthTexture: ClassVar[int] = ...
    kSemanticOpaqueDepthTexture: ClassVar[int] = ...
    kSemanticTime: ClassVar[int] = ...
    kSemanticWorldTransposeMatrix: ClassVar[int] = ...
    kSemanticViewTransposeMatrix: ClassVar[int] = ...
    kSemanticProjectionTransposeMatrix: ClassVar[int] = ...
    kSemanticWorldViewTransposeMatrix: ClassVar[int] = ...
    kSemanticWorldViewProjectionTransposeMatrix: ClassVar[int] = ...
    kSemanticViewProjectionMatrix: ClassVar[int] = ...
    kSemanticViewProjectionInverseMatrix: ClassVar[int] = ...
    kSemanticViewProjectionTransposeMatrix: ClassVar[int] = ...
    kSemanticViewProjectionInverseTransposeMatrix: ClassVar[int] = ...
    kSemanticLocalViewer: ClassVar[int] = ...
    kSemanticViewportPixelSize: ClassVar[int] = ...
    kSemanticBackgroundColor: ClassVar[int] = ...
    kSemanticFrameNumber: ClassVar[int] = ...
    kSemanticNearClipPlane: ClassVar[int] = ...
    kSemanticFarClipPlane: ClassVar[int] = ...
    kSemanticHWSPrimitiveBase: ClassVar[int] = ...
    kSemanticHWSPrimitiveCountPerInstance: ClassVar[int] = ...
    kSemanticHWSObjectLevel: ClassVar[int] = ...
    kSemanticHWSFaceLevel: ClassVar[int] = ...
    kSemanticHWSEdgeLevel: ClassVar[int] = ...
    kSemanticHWSVertexLevel: ClassVar[int] = ...
    kSemanticHWSOccluder: ClassVar[int] = ...
    kSemanticHWSFrontCCW: ClassVar[int] = ...
    kSemanticHWSInstancedDraw: ClassVar[int] = ...
    kSemanticHWSHighlighting: ClassVar[int] = ...
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
    @classmethod
    def name(cls, *args, **kwargs): ...
    @classmethod
    def type(cls, *args, **kwargs): ...
    @classmethod
    def semantic(cls, *args, **kwargs): ...
    @classmethod
    def numRows(cls, *args, **kwargs): ...
    @classmethod
    def numColumns(cls, *args, **kwargs): ...
    @classmethod
    def numElements(cls, *args, **kwargs): ...
    @classmethod
    def userData(cls, *args, **kwargs): ...
    @classmethod
    def setRangeMin(cls, *args, **kwargs): ...
    @classmethod
    def setRangeMax(cls, *args, **kwargs): ...
    @classmethod
    def setSoftRangeMin(cls, *args, **kwargs): ...
    @classmethod
    def setSoftRangeMax(cls, *args, **kwargs): ...
    @classmethod
    def setUIHidden(cls, *args, **kwargs): ...
    @classmethod
    def UIHidden(cls, *args, **kwargs): ...
    @classmethod
    def setEnumFieldNames(cls, *args, **kwargs): ...
    @classmethod
    def setKeyable(cls, *args, **kwargs): ...
    @classmethod
    def keyable(cls, *args, **kwargs): ...
    @classmethod
    def isATexture(cls, *args, **kwargs): ...
    @classmethod
    def hasChanged(cls, *args, **kwargs): ...
    @classmethod
    def getAsFloatArray(cls, *args, **kwargs): ...
    @classmethod
    def setAsFloatArray(cls, *args, **kwargs): ...
    @classmethod
    def getAsFloat(cls, *args, **kwargs): ...
    @classmethod
    def setAsFloat(cls, *args, **kwargs): ...
    @classmethod
    def getAsString(cls, *args, **kwargs): ...
    @classmethod
    def setAsString(cls, *args, **kwargs): ...
    @classmethod
    def getAsBool(cls, *args, **kwargs): ...
    @classmethod
    def setAsBool(cls, *args, **kwargs): ...
    @classmethod
    def getAsInt(cls, *args, **kwargs): ...
    @classmethod
    def setAsInt(cls, *args, **kwargs): ...
    @classmethod
    def setUINiceName(cls, *args, **kwargs): ...
    @classmethod
    def getPlug(cls, *args, **kwargs): ...
    @classmethod
    def getSource(cls, *args, **kwargs): ...
    @classmethod
    def setDirty(cls, *args, **kwargs): ...

class MUniformParameterList:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def append(cls, *args, **kwargs): ...
    @classmethod
    def length(cls, *args, **kwargs): ...
    @classmethod
    def setLength(cls, *args, **kwargs): ...
    @classmethod
    def getElement(cls, *args, **kwargs): ...
    @classmethod
    def setElement(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...

class MVaryingParameter:
    kInvalidParameter: ClassVar[int] = ...
    kStructure: ClassVar[int] = ...
    kFloat: ClassVar[int] = ...
    kDouble: ClassVar[int] = ...
    kChar: ClassVar[int] = ...
    kUnsignedChar: ClassVar[int] = ...
    kInt16: ClassVar[int] = ...
    kUnsignedInt16: ClassVar[int] = ...
    kInt32: ClassVar[int] = ...
    kUnsignedInt32: ClassVar[int] = ...
    kNoSemantic: ClassVar[int] = ...
    kPosition: ClassVar[int] = ...
    kNormal: ClassVar[int] = ...
    kTexCoord: ClassVar[int] = ...
    kColor: ClassVar[int] = ...
    kWeight: ClassVar[int] = ...
    kTangent: ClassVar[int] = ...
    kBinormal: ClassVar[int] = ...
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
    @classmethod
    def name(cls, *args, **kwargs): ...
    @classmethod
    def type(cls, *args, **kwargs): ...
    @classmethod
    def semantic(cls, *args, **kwargs): ...
    @classmethod
    def semanticName(cls, *args, **kwargs): ...
    @classmethod
    def destinationSet(cls, *args, **kwargs): ...
    @classmethod
    def dimension(cls, *args, **kwargs): ...
    @classmethod
    def getBuffer(cls, *args, **kwargs): ...
    @classmethod
    def getSourceType(cls, *args, **kwargs): ...
    @classmethod
    def getSourceSetName(cls, *args, **kwargs): ...
    @classmethod
    def setSource(cls, *args, **kwargs): ...
    @classmethod
    def getElementSize(cls, *args, **kwargs): ...
    @classmethod
    def getMaximumStride(cls, *args, **kwargs): ...
    @classmethod
    def addElement(cls, *args, **kwargs): ...
    @classmethod
    def numElements(cls, *args, **kwargs): ...
    @classmethod
    def getElement(cls, *args, **kwargs): ...
    @classmethod
    def removeElements(cls, *args, **kwargs): ...
    @classmethod
    def getUpdateId(cls, *args, **kwargs): ...

class MVaryingParameterList:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def append(cls, *args, **kwargs): ...
    @classmethod
    def length(cls, *args, **kwargs): ...
    @classmethod
    def setLength(cls, *args, **kwargs): ...
    @classmethod
    def getElement(cls, *args, **kwargs): ...
    @classmethod
    def setElement(cls, *args, **kwargs): ...
    @classmethod
    def assign(cls, *args, **kwargs): ...
MGL_ACCUM: int
MGL_LOAD: int
MGL_RETURN: int
MGL_MULT: int
MGL_ADD: int
MGL_NEVER: int
MGL_LESS: int
MGL_EQUAL: int
MGL_LEQUAL: int
MGL_GREATER: int
MGL_NOTEQUAL: int
MGL_GEQUAL: int
MGL_ALWAYS: int
MGL_CURRENT_BIT: int
MGL_POINT_BIT: int
MGL_LINE_BIT: int
MGL_POLYGON_BIT: int
MGL_POLYGON_STIPPLE_BIT: int
MGL_PIXEL_MODE_BIT: int
MGL_LIGHTING_BIT: int
MGL_FOG_BIT: int
MGL_DEPTH_BUFFER_BIT: int
MGL_ACCUM_BUFFER_BIT: int
MGL_STENCIL_BUFFER_BIT: int
MGL_VIEWPORT_BIT: int
MGL_TRANSFORM_BIT: int
MGL_ENABLE_BIT: int
MGL_COLOR_BUFFER_BIT: int
MGL_HINT_BIT: int
MGL_EVAL_BIT: int
MGL_LIST_BIT: int
MGL_TEXTURE_BIT: int
MGL_SCISSOR_BIT: int
MGL_ALL_ATTRIB_BITS: int
MGL_POINTS: int
MGL_LINES: int
MGL_LINE_LOOP: int
MGL_LINE_STRIP: int
MGL_TRIANGLES: int
MGL_TRIANGLE_STRIP: int
MGL_TRIANGLE_FAN: int
MGL_QUADS: int
MGL_QUAD_STRIP: int
MGL_POLYGON: int
MGL_ZERO: int
MGL_ONE: int
MGL_SRC_COLOR: int
MGL_ONE_MINUS_SRC_COLOR: int
MGL_SRC_ALPHA: int
MGL_ONE_MINUS_SRC_ALPHA: int
MGL_DST_ALPHA: int
MGL_ONE_MINUS_DST_ALPHA: int
MGL_DST_COLOR: int
MGL_ONE_MINUS_DST_COLOR: int
MGL_SRC_ALPHA_SATURATE: int
MGL_TRUE: int
MGL_FALSE: int
MGL_CLIP_PLANE0: int
MGL_CLIP_PLANE1: int
MGL_CLIP_PLANE2: int
MGL_CLIP_PLANE3: int
MGL_CLIP_PLANE4: int
MGL_CLIP_PLANE5: int
MGL_BYTE: int
MGL_UNSIGNED_BYTE: int
MGL_SHORT: int
MGL_UNSIGNED_SHORT: int
MGL_INT: int
MGL_UNSIGNED_INT: int
MGL_FLOAT: int
MGL_2_BYTES: int
MGL_3_BYTES: int
MGL_4_BYTES: int
MGL_DOUBLE: int
MGL_HALF_FLOAT: int
MGL_NONE: int
MGL_FRONT_LEFT: int
MGL_FRONT_RIGHT: int
MGL_BACK_LEFT: int
MGL_BACK_RIGHT: int
MGL_FRONT: int
MGL_BACK: int
MGL_LEFT: int
MGL_RIGHT: int
MGL_FRONT_AND_BACK: int
MGL_AUX0: int
MGL_AUX1: int
MGL_AUX2: int
MGL_AUX3: int
MGL_NO_ERROR: int
MGL_INVALID_ENUM: int
MGL_INVALID_VALUE: int
MGL_INVALID_OPERATION: int
MGL_STACK_OVERFLOW: int
MGL_STACK_UNDERFLOW: int
MGL_OUT_OF_MEMORY: int
MGL_2D: int
MGL_3D: int
MGL_3D_COLOR: int
MGL_3D_COLOR_TEXTURE: int
MGL_4D_COLOR_TEXTURE: int
MGL_PASS_THROUGH_TOKEN: int
MGL_POINT_TOKEN: int
MGL_LINE_TOKEN: int
MGL_POLYGON_TOKEN: int
MGL_BITMAP_TOKEN: int
MGL_DRAW_PIXEL_TOKEN: int
MGL_COPY_PIXEL_TOKEN: int
MGL_LINE_RESET_TOKEN: int
MGL_EXP: int
MGL_EXP2: int
MGL_CW: int
MGL_CCW: int
MGL_COEFF: int
MGL_ORDER: int
MGL_DOMAIN: int
MGL_CURRENT_COLOR: int
MGL_CURRENT_INDEX: int
MGL_CURRENT_NORMAL: int
MGL_CURRENT_TEXTURE_COORDS: int
MGL_CURRENT_RASTER_COLOR: int
MGL_CURRENT_RASTER_INDEX: int
MGL_CURRENT_RASTER_TEXTURE_COORDS: int
MGL_CURRENT_RASTER_POSITION: int
MGL_CURRENT_RASTER_POSITION_VALID: int
MGL_CURRENT_RASTER_DISTANCE: int
MGL_POINT_SMOOTH: int
MGL_POINT_SIZE: int
MGL_POINT_SIZE_RANGE: int
MGL_POINT_SIZE_GRANULARITY: int
MGL_LINE_SMOOTH: int
MGL_LINE_WIDTH: int
MGL_LINE_WIDTH_RANGE: int
MGL_LINE_WIDTH_GRANULARITY: int
MGL_LINE_STIPPLE: int
MGL_LINE_STIPPLE_PATTERN: int
MGL_LINE_STIPPLE_REPEAT: int
MGL_LIST_MODE: int
MGL_MAX_LIST_NESTING: int
MGL_LIST_BASE: int
MGL_LIST_INDEX: int
MGL_POLYGON_MODE: int
MGL_POLYGON_SMOOTH: int
MGL_POLYGON_STIPPLE: int
MGL_EDGE_FLAG: int
MGL_CULL_FACE: int
MGL_CULL_FACE_MODE: int
MGL_FRONT_FACE: int
MGL_LIGHTING: int
MGL_LIGHT_MODEL_LOCAL_VIEWER: int
MGL_LIGHT_MODEL_TWO_SIDE: int
MGL_LIGHT_MODEL_AMBIENT: int
MGL_SHADE_MODEL: int
MGL_COLOR_MATERIAL_FACE: int
MGL_COLOR_MATERIAL_PARAMETER: int
MGL_COLOR_MATERIAL: int
MGL_FOG: int
MGL_FOG_INDEX: int
MGL_FOG_DENSITY: int
MGL_FOG_START: int
MGL_FOG_END: int
MGL_FOG_MODE: int
MGL_FOG_COLOR: int
MGL_DEPTH_RANGE: int
MGL_DEPTH_TEST: int
MGL_DEPTH_WRITEMASK: int
MGL_DEPTH_CLEAR_VALUE: int
MGL_DEPTH_FUNC: int
MGL_ACCUM_CLEAR_VALUE: int
MGL_STENCIL_TEST: int
MGL_STENCIL_CLEAR_VALUE: int
MGL_STENCIL_FUNC: int
MGL_STENCIL_VALUE_MASK: int
MGL_STENCIL_FAIL: int
MGL_STENCIL_PASS_DEPTH_FAIL: int
MGL_STENCIL_PASS_DEPTH_PASS: int
MGL_STENCIL_REF: int
MGL_STENCIL_WRITEMASK: int
MGL_MATRIX_MODE: int
MGL_NORMALIZE: int
MGL_VIEWPORT: int
MGL_MODELVIEW_STACK_DEPTH: int
MGL_PROJECTION_STACK_DEPTH: int
MGL_TEXTURE_STACK_DEPTH: int
MGL_MODELVIEW_MATRIX: int
MGL_PROJECTION_MATRIX: int
MGL_TEXTURE_MATRIX: int
MGL_ATTRIB_STACK_DEPTH: int
MGL_CLIENT_ATTRIB_STACK_DEPTH: int
MGL_ALPHA_TEST: int
MGL_ALPHA_TEST_FUNC: int
MGL_ALPHA_TEST_REF: int
MGL_DITHER: int
MGL_BLEND_DST: int
MGL_BLEND_SRC: int
MGL_BLEND: int
MGL_LOGIC_OP_MODE: int
MGL_INDEX_LOGIC_OP: int
MGL_COLOR_LOGIC_OP: int
MGL_AUX_BUFFERS: int
MGL_DRAW_BUFFER: int
MGL_READ_BUFFER: int
MGL_SCISSOR_BOX: int
MGL_SCISSOR_TEST: int
MGL_INDEX_CLEAR_VALUE: int
MGL_INDEX_WRITEMASK: int
MGL_COLOR_CLEAR_VALUE: int
MGL_COLOR_WRITEMASK: int
MGL_INDEX_MODE: int
MGL_RGBA_MODE: int
MGL_DOUBLEBUFFER: int
MGL_STEREO: int
MGL_RENDER_MODE: int
MGL_PERSPECTIVE_CORRECTION_HINT: int
MGL_POINT_SMOOTH_HINT: int
MGL_LINE_SMOOTH_HINT: int
MGL_POLYGON_SMOOTH_HINT: int
MGL_FOG_HINT: int
MGL_TEXTURE_GEN_S: int
MGL_TEXTURE_GEN_T: int
MGL_TEXTURE_GEN_R: int
MGL_TEXTURE_GEN_Q: int
MGL_PIXEL_MAP_I_TO_I: int
MGL_PIXEL_MAP_S_TO_S: int
MGL_PIXEL_MAP_I_TO_R: int
MGL_PIXEL_MAP_I_TO_G: int
MGL_PIXEL_MAP_I_TO_B: int
MGL_PIXEL_MAP_I_TO_A: int
MGL_PIXEL_MAP_R_TO_R: int
MGL_PIXEL_MAP_G_TO_G: int
MGL_PIXEL_MAP_B_TO_B: int
MGL_PIXEL_MAP_A_TO_A: int
MGL_PIXEL_MAP_I_TO_I_SIZE: int
MGL_PIXEL_MAP_S_TO_S_SIZE: int
MGL_PIXEL_MAP_I_TO_R_SIZE: int
MGL_PIXEL_MAP_I_TO_G_SIZE: int
MGL_PIXEL_MAP_I_TO_B_SIZE: int
MGL_PIXEL_MAP_I_TO_A_SIZE: int
MGL_PIXEL_MAP_R_TO_R_SIZE: int
MGL_PIXEL_MAP_G_TO_G_SIZE: int
MGL_PIXEL_MAP_B_TO_B_SIZE: int
MGL_PIXEL_MAP_A_TO_A_SIZE: int
MGL_UNPACK_SWAP_BYTES: int
MGL_UNPACK_LSB_FIRST: int
MGL_UNPACK_ROW_LENGTH: int
MGL_UNPACK_SKIP_ROWS: int
MGL_UNPACK_SKIP_PIXELS: int
MGL_UNPACK_ALIGNMENT: int
MGL_PACK_SWAP_BYTES: int
MGL_PACK_LSB_FIRST: int
MGL_PACK_ROW_LENGTH: int
MGL_PACK_SKIP_ROWS: int
MGL_PACK_SKIP_PIXELS: int
MGL_PACK_ALIGNMENT: int
MGL_MAP_COLOR: int
MGL_MAP_STENCIL: int
MGL_INDEX_SHIFT: int
MGL_INDEX_OFFSET: int
MGL_RED_SCALE: int
MGL_RED_BIAS: int
MGL_ZOOM_X: int
MGL_ZOOM_Y: int
MGL_GREEN_SCALE: int
MGL_GREEN_BIAS: int
MGL_BLUE_SCALE: int
MGL_BLUE_BIAS: int
MGL_ALPHA_SCALE: int
MGL_ALPHA_BIAS: int
MGL_DEPTH_SCALE: int
MGL_DEPTH_BIAS: int
MGL_MAX_EVAL_ORDER: int
MGL_MAX_LIGHTS: int
MGL_MAX_CLIP_PLANES: int
MGL_MAX_TEXTURE_SIZE: int
MGL_MAX_PIXEL_MAP_TABLE: int
MGL_MAX_ATTRIB_STACK_DEPTH: int
MGL_MAX_MODELVIEW_STACK_DEPTH: int
MGL_MAX_NAME_STACK_DEPTH: int
MGL_MAX_PROJECTION_STACK_DEPTH: int
MGL_MAX_TEXTURE_STACK_DEPTH: int
MGL_MAX_VIEWPORT_DIMS: int
MGL_MAX_CLIENT_ATTRIB_STACK_DEPTH: int
MGL_SUBPIXEL_BITS: int
MGL_INDEX_BITS: int
MGL_RED_BITS: int
MGL_GREEN_BITS: int
MGL_BLUE_BITS: int
MGL_ALPHA_BITS: int
MGL_DEPTH_BITS: int
MGL_STENCIL_BITS: int
MGL_ACCUM_RED_BITS: int
MGL_ACCUM_GREEN_BITS: int
MGL_ACCUM_BLUE_BITS: int
MGL_ACCUM_ALPHA_BITS: int
MGL_NAME_STACK_DEPTH: int
MGL_AUTO_NORMAL: int
MGL_MAP1_COLOR_4: int
MGL_MAP1_INDEX: int
MGL_MAP1_NORMAL: int
MGL_MAP1_TEXTURE_COORD_1: int
MGL_MAP1_TEXTURE_COORD_2: int
MGL_MAP1_TEXTURE_COORD_3: int
MGL_MAP1_TEXTURE_COORD_4: int
MGL_MAP1_VERTEX_3: int
MGL_MAP1_VERTEX_4: int
MGL_MAP2_COLOR_4: int
MGL_MAP2_INDEX: int
MGL_MAP2_NORMAL: int
MGL_MAP2_TEXTURE_COORD_1: int
MGL_MAP2_TEXTURE_COORD_2: int
MGL_MAP2_TEXTURE_COORD_3: int
MGL_MAP2_TEXTURE_COORD_4: int
MGL_MAP2_VERTEX_3: int
MGL_MAP2_VERTEX_4: int
MGL_MAP1_GRID_DOMAIN: int
MGL_MAP1_GRID_SEGMENTS: int
MGL_MAP2_GRID_DOMAIN: int
MGL_MAP2_GRID_SEGMENTS: int
MGL_TEXTURE_1D: int
MGL_TEXTURE_2D: int
MGL_FEEDBACK_BUFFER_POINTER: int
MGL_FEEDBACK_BUFFER_SIZE: int
MGL_FEEDBACK_BUFFER_TYPE: int
MGL_SELECTION_BUFFER_POINTER: int
MGL_SELECTION_BUFFER_SIZE: int
MGL_TEXTURE_WIDTH: int
MGL_TEXTURE_HEIGHT: int
MGL_TEXTURE_INTERNAL_FORMAT: int
MGL_TEXTURE_BORDER_COLOR: int
MGL_TEXTURE_BORDER: int
MGL_DONT_CARE: int
MGL_FASTEST: int
MGL_NICEST: int
MGL_LIGHT0: int
MGL_LIGHT1: int
MGL_LIGHT2: int
MGL_LIGHT3: int
MGL_LIGHT4: int
MGL_LIGHT5: int
MGL_LIGHT6: int
MGL_LIGHT7: int
MGL_AMBIENT: int
MGL_DIFFUSE: int
MGL_SPECULAR: int
MGL_POSITION: int
MGL_SPOT_DIRECTION: int
MGL_SPOT_EXPONENT: int
MGL_SPOT_CUTOFF: int
MGL_CONSTANT_ATTENUATION: int
MGL_LINEAR_ATTENUATION: int
MGL_QUADRATIC_ATTENUATION: int
MGL_COMPILE: int
MGL_COMPILE_AND_EXECUTE: int
MGL_CLEAR: int
MGL_AND: int
MGL_AND_REVERSE: int
MGL_COPY: int
MGL_AND_INVERTED: int
MGL_NOOP: int
MGL_XOR: int
MGL_OR: int
MGL_NOR: int
MGL_EQUIV: int
MGL_INVERT: int
MGL_OR_REVERSE: int
MGL_COPY_INVERTED: int
MGL_OR_INVERTED: int
MGL_NAND: int
MGL_SET: int
MGL_EMISSION: int
MGL_SHININESS: int
MGL_AMBIENT_AND_DIFFUSE: int
MGL_COLOR_INDEXES: int
MGL_MODELVIEW: int
MGL_PROJECTION: int
MGL_TEXTURE: int
MGL_COLOR: int
MGL_DEPTH: int
MGL_STENCIL: int
MGL_COLOR_INDEX: int
MGL_STENCIL_INDEX: int
MGL_DEPTH_COMPONENT: int
MGL_RED: int
MGL_GREEN: int
MGL_BLUE: int
MGL_ALPHA: int
MGL_RGB: int
MGL_RGBA: int
MGL_LUMINANCE: int
MGL_LUMINANCE_ALPHA: int
MGL_BITMAP: int
MGL_POINT: int
MGL_LINE: int
MGL_FILL: int
MGL_RENDER: int
MGL_FEEDBACK: int
MGL_SELECT: int
MGL_FLAT: int
MGL_SMOOTH: int
MGL_KEEP: int
MGL_REPLACE: int
MGL_INCR: int
MGL_DECR: int
MGL_VENDOR: int
MGL_RENDERER: int
MGL_VERSION: int
MGL_EXTENSIONS: int
MGL_S: int
MGL_T: int
MGL_R: int
MGL_Q: int
MGL_MODULATE: int
MGL_DECAL: int
MGL_TEXTURE_ENV_MODE: int
MGL_TEXTURE_ENV_COLOR: int
MGL_TEXTURE_ENV: int
MGL_EYE_LINEAR: int
MGL_OBJECT_LINEAR: int
MGL_SPHERE_MAP: int
MGL_TEXTURE_GEN_MODE: int
MGL_OBJECT_PLANE: int
MGL_EYE_PLANE: int
MGL_NEAREST: int
MGL_LINEAR: int
MGL_NEAREST_MIPMAP_NEAREST: int
MGL_LINEAR_MIPMAP_NEAREST: int
MGL_NEAREST_MIPMAP_LINEAR: int
MGL_LINEAR_MIPMAP_LINEAR: int
MGL_TEXTURE_MAG_FILTER: int
MGL_TEXTURE_MIN_FILTER: int
MGL_TEXTURE_WRAP_S: int
MGL_TEXTURE_WRAP_T: int
MGL_CLAMP: int
MGL_REPEAT: int
MGL_CLIENT_PIXEL_STORE_BIT: int
MGL_CLIENT_VERTEX_ARRAY_BIT: int
MGL_CLIENT_ALL_ATTRIB_BITS: int
MGL_POLYGON_OFFSET_FACTOR: int
MGL_POLYGON_OFFSET_UNITS: int
MGL_POLYGON_OFFSET_POINT: int
MGL_POLYGON_OFFSET_LINE: int
MGL_POLYGON_OFFSET_FILL: int
MGL_ALPHA4: int
MGL_ALPHA8: int
MGL_ALPHA12: int
MGL_ALPHA16: int
MGL_LUMINANCE4: int
MGL_LUMINANCE8: int
MGL_LUMINANCE12: int
MGL_LUMINANCE16: int
MGL_LUMINANCE4_ALPHA4: int
MGL_LUMINANCE6_ALPHA2: int
MGL_LUMINANCE8_ALPHA8: int
MGL_LUMINANCE12_ALPHA4: int
MGL_LUMINANCE12_ALPHA12: int
MGL_LUMINANCE16_ALPHA16: int
MGL_INTENSITY: int
MGL_INTENSITY4: int
MGL_INTENSITY8: int
MGL_INTENSITY12: int
MGL_INTENSITY16: int
MGL_R3_G3_B2: int
MGL_RGB4: int
MGL_RGB5: int
MGL_RGB8: int
MGL_RGB10: int
MGL_RGB12: int
MGL_RGB16: int
MGL_RGBA2: int
MGL_RGBA4: int
MGL_RGB5_A1: int
MGL_RGBA8: int
MGL_RGB10_A2: int
MGL_RGBA12: int
MGL_RGBA16: int
MGL_TEXTURE_RED_SIZE: int
MGL_TEXTURE_GREEN_SIZE: int
MGL_TEXTURE_BLUE_SIZE: int
MGL_TEXTURE_ALPHA_SIZE: int
MGL_TEXTURE_LUMINANCE_SIZE: int
MGL_TEXTURE_INTENSITY_SIZE: int
MGL_PROXY_TEXTURE_1D: int
MGL_PROXY_TEXTURE_2D: int
MGL_TEXTURE_1D_BINDING: int
MGL_TEXTURE_2D_BINDING: int
MGL_TEXTURE_PRIORITY: int
MGL_TEXTURE_RESIDENT: int
MGL_TEXTURE_BINDING_1D: int
MGL_TEXTURE_BINDING_2D: int
MGL_VERTEX_ARRAY: int
MGL_NORMAL_ARRAY: int
MGL_COLOR_ARRAY: int
MGL_INDEX_ARRAY: int
MGL_TEXTURE_COORD_ARRAY: int
MGL_EDGE_FLAG_ARRAY: int
MGL_VERTEX_ARRAY_SIZE: int
MGL_VERTEX_ARRAY_TYPE: int
MGL_VERTEX_ARRAY_STRIDE: int
MGL_NORMAL_ARRAY_TYPE: int
MGL_NORMAL_ARRAY_STRIDE: int
MGL_COLOR_ARRAY_SIZE: int
MGL_COLOR_ARRAY_TYPE: int
MGL_COLOR_ARRAY_STRIDE: int
MGL_INDEX_ARRAY_TYPE: int
MGL_INDEX_ARRAY_STRIDE: int
MGL_TEXTURE_COORD_ARRAY_SIZE: int
MGL_TEXTURE_COORD_ARRAY_TYPE: int
MGL_TEXTURE_COORD_ARRAY_STRIDE: int
MGL_EDGE_FLAG_ARRAY_STRIDE: int
MGL_VERTEX_ARRAY_POINTER: int
MGL_NORMAL_ARRAY_POINTER: int
MGL_COLOR_ARRAY_POINTER: int
MGL_INDEX_ARRAY_POINTER: int
MGL_TEXTURE_COORD_ARRAY_POINTER: int
MGL_EDGE_FLAG_ARRAY_POINTER: int
MGL_V2F: int
MGL_V3F: int
MGL_C4UB_V2F: int
MGL_C4UB_V3F: int
MGL_C3F_V3F: int
MGL_N3F_V3F: int
MGL_C4F_N3F_V3F: int
MGL_T2F_V3F: int
MGL_T4F_V4F: int
MGL_T2F_C4UB_V3F: int
MGL_T2F_C3F_V3F: int
MGL_T2F_N3F_V3F: int
MGL_T2F_C4F_N3F_V3F: int
MGL_T4F_C4F_N3F_V4F: int
MGL_COLOR_TABLE_FORMAT_EXT: int
MGL_COLOR_TABLE_WIDTH_EXT: int
MGL_COLOR_TABLE_RED_SIZE_EXT: int
MGL_COLOR_TABLE_GREEN_SIZE_EXT: int
MGL_COLOR_TABLE_BLUE_SIZE_EXT: int
MGL_COLOR_TABLE_ALPHA_SIZE_EXT: int
MGL_COLOR_TABLE_LUMINANCE_SIZE_EXT: int
MGL_COLOR_TABLE_INTENSITY_SIZE_EXT: int
MGL_COLOR_INDEX1_EXT: int
MGL_COLOR_INDEX2_EXT: int
MGL_COLOR_INDEX4_EXT: int
MGL_COLOR_INDEX8_EXT: int
MGL_COLOR_INDEX12_EXT: int
MGL_COLOR_INDEX16_EXT: int
MGL_PHONG_WIN: int
MGL_PHONG_HINT_WIN: int
MGL_FOG_SPECULAR_TEXTURE_WIN: int
MGL_OCCLUSION_TEST_HP: int
MGL_OCCLUSION_TEST_RESULT_HP: int
MGL_GENERATE_MIPMAP_SGIS: int
MGL_LOGIC_OP: int
MGL_TEXTURE_COMPONENTS: int
MGL_TEXTURE0: int
MGL_TEXTURE1: int
MGL_TEXTURE2: int
MGL_TEXTURE3: int
MGL_TEXTURE4: int
MGL_TEXTURE5: int
MGL_TEXTURE6: int
MGL_TEXTURE7: int
MGL_TEXTURE8: int
MGL_TEXTURE9: int
MGL_TEXTURE10: int
MGL_TEXTURE11: int
MGL_TEXTURE12: int
MGL_TEXTURE13: int
MGL_TEXTURE14: int
MGL_TEXTURE15: int
MGL_TEXTURE16: int
MGL_TEXTURE17: int
MGL_TEXTURE18: int
MGL_TEXTURE19: int
MGL_TEXTURE20: int
MGL_TEXTURE21: int
MGL_TEXTURE22: int
MGL_TEXTURE23: int
MGL_TEXTURE24: int
MGL_TEXTURE25: int
MGL_TEXTURE26: int
MGL_TEXTURE27: int
MGL_TEXTURE28: int
MGL_TEXTURE29: int
MGL_TEXTURE30: int
MGL_TEXTURE31: int
MGL_ACTIVE_TEXTURE: int
MGL_CLIENT_ACTIVE_TEXTURE: int
MGL_MAX_TEXTURE_UNITS: int
MGL_TRANSPOSE_MODELVIEW_MATRIX: int
MGL_TRANSPOSE_PROJECTION_MATRIX: int
MGL_TRANSPOSE_TEXTURE_MATRIX: int
MGL_TRANSPOSE_COLOR_MATRIX: int
MGL_MULTISAMPLE: int
MGL_SAMPLE_ALPHA_TO_COVERAGE: int
MGL_SAMPLE_ALPHA_TO_ONE: int
MGL_SAMPLE_COVERAGE: int
MGL_SAMPLE_BUFFERS: int
MGL_SAMPLES: int
MGL_SAMPLE_COVERAGE_VALUE: int
MGL_SAMPLE_COVERAGE_INVERT: int
MGL_MULTISAMPLE_BIT: int
MGL_NORMAL_MAP: int
MGL_REFLECTION_MAP: int
MGL_TEXTURE_CUBE_MAP: int
MGL_TEXTURE_BINDING_CUBE_MAP: int
MGL_TEXTURE_CUBE_MAP_POSITIVE_X: int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_X: int
MGL_TEXTURE_CUBE_MAP_POSITIVE_Y: int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_Y: int
MGL_TEXTURE_CUBE_MAP_POSITIVE_Z: int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_Z: int
MGL_PROXY_TEXTURE_CUBE_MAP: int
MGL_MAX_CUBE_MAP_TEXTURE_SIZE: int
MGL_COMPRESSED_ALPHA: int
MGL_COMPRESSED_LUMINANCE: int
MGL_COMPRESSED_LUMINANCE_ALPHA: int
MGL_COMPRESSED_INTENSITY: int
MGL_COMPRESSED_RGB: int
MGL_COMPRESSED_RGBA: int
MGL_TEXTURE_COMPRESSION_HINT: int
MGL_TEXTURE_COMPRESSED_IMAGE_SIZE: int
MGL_TEXTURE_COMPRESSED: int
MGL_NUM_COMPRESSED_TEXTURE_FORMATS: int
MGL_COMPRESSED_TEXTURE_FORMATS: int
MGL_CLAMP_TO_BORDER: int
MGL_CLAMP_TO_BORDER_SGIS: int
MGL_COMBINE: int
MGL_COMBINE_RGB: int
MGL_COMBINE_ALPHA: int
MGL_SOURCE0_RGB: int
MGL_SOURCE1_RGB: int
MGL_SOURCE2_RGB: int
MGL_SOURCE0_ALPHA: int
MGL_SOURCE1_ALPHA: int
MGL_SOURCE2_ALPHA: int
MGL_OPERAND0_RGB: int
MGL_OPERAND1_RGB: int
MGL_OPERAND2_RGB: int
MGL_OPERAND0_ALPHA: int
MGL_OPERAND1_ALPHA: int
MGL_OPERAND2_ALPHA: int
MGL_RGB_SCALE: int
MGL_ADD_SIGNED: int
MGL_INTERPOLATE: int
MGL_SUBTRACT: int
MGL_CONSTANT: int
MGL_PRIMARY_COLOR: int
MGL_PREVIOUS: int
MGL_DOT3_RGB: int
MGL_DOT3_RGBA: int
MGL_CLAMP_TO_EDGE: int
MGL_ABGR_EXT: int
MGL_CONSTANT_COLOR: int
MGL_CONSTANT_COLOR_EXT: int
MGL_ONE_MINUS_CONSTANT_COLOR: int
MGL_ONE_MINUS_CONSTANT_COLOR_EXT: int
MGL_CONSTANT_ALPHA: int
MGL_CONSTANT_ALPHA_EXT: int
MGL_ONE_MINUS_CONSTANT_ALPHA: int
MGL_ONE_MINUS_CONSTANT_ALPHA_EXT: int
MGL_BLEND_COLOR: int
MGL_BLEND_COLOR_EXT: int
MGL_FUNC_ADD: int
MGL_FUNC_ADD_EXT: int
MGL_MIN: int
MGL_MIN_EXT: int
MGL_MAX: int
MGL_MAX_EXT: int
MGL_BLEND_EQUATION: int
MGL_BLEND_EQUATION_EXT: int
MGL_FUNC_SUBTRACT: int
MGL_FUNC_SUBTRACT_EXT: int
MGL_FUNC_REVERSE_SUBTRACT: int
MGL_FUNC_REVERSE_SUBTRACT_EXT: int
MGL_UNSIGNED_BYTE_3_3_2_EXT: int
MGL_UNSIGNED_SHORT_4_4_4_4_EXT: int
MGL_UNSIGNED_SHORT_5_5_5_1_EXT: int
MGL_UNSIGNED_INT_8_8_8_8_EXT: int
MGL_UNSIGNED_INT_10_10_10_2_EXT: int
MGL_RESCALE_NORMAL_EXT: int
MGL_PACK_SKIP_IMAGES: int
MGL_PACK_SKIP_IMAGES_EXT: int
MGL_PACK_IMAGE_HEIGHT: int
MGL_PACK_IMAGE_HEIGHT_EXT: int
MGL_UNPACK_SKIP_IMAGES: int
MGL_UNPACK_SKIP_IMAGES_EXT: int
MGL_UNPACK_IMAGE_HEIGHT: int
MGL_UNPACK_IMAGE_HEIGHT_EXT: int
MGL_TEXTURE_3D: int
MGL_TEXTURE_3D_EXT: int
MGL_PROXY_TEXTURE_3D: int
MGL_PROXY_TEXTURE_3D_EXT: int
MGL_TEXTURE_DEPTH: int
MGL_TEXTURE_DEPTH_EXT: int
MGL_TEXTURE_WRAP_R: int
MGL_TEXTURE_WRAP_R_EXT: int
MGL_MAX_3D_TEXTURE_SIZE: int
MGL_MAX_3D_TEXTURE_SIZE_EXT: int
MGL_VERTEX_ARRAY_EXT: int
MGL_NORMAL_ARRAY_EXT: int
MGL_COLOR_ARRAY_EXT: int
MGL_INDEX_ARRAY_EXT: int
MGL_TEXTURE_COORD_ARRAY_EXT: int
MGL_EDGE_FLAG_ARRAY_EXT: int
MGL_VERTEX_ARRAY_SIZE_EXT: int
MGL_VERTEX_ARRAY_TYPE_EXT: int
MGL_VERTEX_ARRAY_STRIDE_EXT: int
MGL_VERTEX_ARRAY_COUNT_EXT: int
MGL_NORMAL_ARRAY_TYPE_EXT: int
MGL_NORMAL_ARRAY_STRIDE_EXT: int
MGL_NORMAL_ARRAY_COUNT_EXT: int
MGL_COLOR_ARRAY_SIZE_EXT: int
MGL_COLOR_ARRAY_TYPE_EXT: int
MGL_COLOR_ARRAY_STRIDE_EXT: int
MGL_COLOR_ARRAY_COUNT_EXT: int
MGL_INDEX_ARRAY_TYPE_EXT: int
MGL_INDEX_ARRAY_STRIDE_EXT: int
MGL_INDEX_ARRAY_COUNT_EXT: int
MGL_TEXTURE_COORD_ARRAY_SIZE_EXT: int
MGL_TEXTURE_COORD_ARRAY_TYPE_EXT: int
MGL_TEXTURE_COORD_ARRAY_STRIDE_EXT: int
MGL_TEXTURE_COORD_ARRAY_COUNT_EXT: int
MGL_EDGE_FLAG_ARRAY_STRIDE_EXT: int
MGL_EDGE_FLAG_ARRAY_COUNT_EXT: int
MGL_VERTEX_ARRAY_POINTER_EXT: int
MGL_NORMAL_ARRAY_POINTER_EXT: int
MGL_COLOR_ARRAY_POINTER_EXT: int
MGL_INDEX_ARRAY_POINTER_EXT: int
MGL_TEXTURE_COORD_ARRAY_POINTER_EXT: int
MGL_EDGE_FLAG_ARRAY_POINTER_EXT: int
MGL_MULTISAMPLE_ARB: int
MGL_SAMPLE_ALPHA_TO_COVERAGE_ARB: int
MGL_SAMPLE_ALPHA_TO_ONE_ARB: int
MGL_SAMPLE_COVERAGE_ARB: int
MGL_SAMPLE_BUFFERS_ARB: int
MGL_SAMPLES_ARB: int
MGL_SAMPLE_COVERAGE_VALUE_ARB: int
MGL_SAMPLE_COVERAGE_INVERT_ARB: int
MGL_MULTISAMPLE_BIT_ARB: int
MGL_BGR_EXT: int
MGL_BGRA_EXT: int
MGL_CLIP_VOLUME_CLIPPING_HINT_EXT: int
MGL_POINT_SIZE_MIN_ARB: int
MGL_POINT_SIZE_MAX_ARB: int
MGL_POINT_FADE_THRESHOLD_SIZE_ARB: int
MGL_POINT_DISTANCE_ATTENUATION_ARB: int
MGL_ARB_depth_texture: int
MGL_DEPTH_COMPONENT16_ARB: int
MGL_DEPTH_COMPONENT24_ARB: int
MGL_DEPTH_COMPONENT32_ARB: int
MGL_TEXTURE_DEPTH_SIZE_ARB: int
MGL_DEPTH_TEXTURE_MODE_ARB: int
MGL_ARB_shadow: int
MGL_TEXTURE_COMPARE_MODE_ARB: int
MGL_TEXTURE_COMPARE_FUNC_ARB: int
MGL_COMPARE_R_TO_TEXTURE_ARB: int
MGL_TEXTURE_COMPARE_SGIX: int
MGL_TEXTURE_COMPARE_OPERATOR_SGIX: int
MGL_TEXTURE_LEQUAL_R_SGIX: int
MGL_TEXTURE_GEQUAL_R_SGIX: int
MGL_ARB_shadow_ambient: int
MGL_TEXTURE_COMPARE_FAIL_VALUE_ARB: int
MGL_CLAMP_TO_BORDER_ARB: int
MGL_ARRAY_ELEMENT_LOCK_FIRST_EXT: int
MGL_ARRAY_ELEMENT_LOCK_COUNT_EXT: int
MGL_CULL_VERTEX_EXT: int
MGL_CULL_VERTEX_EYE_POSITION_EXT: int
MGL_CULL_VERTEX_OBJECT_POSITION_EXT: int
MGL_LIGHT_MODEL_COLOR_CONTROL: int
MGL_SINGLE_COLOR: int
MGL_SEPARATE_SPECULAR_COLOR: int
MGL_IBM_TEXTURE_MIRRORED_REPEAT: int
MGL_MIRRORED_REPEAT_IBM: int
MGL_COMPRESSED_RGB_S3TC_DXT1_EXT: int
MGL_COMPRESSED_RGBA_S3TC_DXT1_EXT: int
MGL_COMPRESSED_RGBA_S3TC_DXT3_EXT: int
MGL_COMPRESSED_RGBA_S3TC_DXT5_EXT: int
MGL_FOG_COORDINATE_SOURCE_EXT: int
MGL_FOG_COORDINATE_EXT: int
MGL_FRAGMENT_DEPTH_EXT: int
MGL_CURRENT_FOG_COORDINATE_EXT: int
MGL_FOG_COORDINATE_ARRAY_TYPE_EXT: int
MGL_FOG_COORDINATE_ARRAY_STRIDE_EXT: int
MGL_FOG_COORDINATE_ARRAY_POINTER_EXT: int
MGL_FOG_COORDINATE_ARRAY_EXT: int
MGL_COLOR_SUM_EXT: int
MGL_CURRENT_SECONDARY_COLOR_EXT: int
MGL_SECONDARY_COLOR_ARRAY_SIZE_EXT: int
MGL_SECONDARY_COLOR_ARRAY_TYPE_EXT: int
MGL_SECONDARY_COLOR_ARRAY_STRIDE_EXT: int
MGL_SECONDARY_COLOR_ARRAY_POINTER_EXT: int
MGL_SECONDARY_COLOR_ARRAY_EXT: int
MGL_TEXTURE0_ARB: int
MGL_TEXTURE1_ARB: int
MGL_TEXTURE2_ARB: int
MGL_TEXTURE3_ARB: int
MGL_TEXTURE4_ARB: int
MGL_TEXTURE5_ARB: int
MGL_TEXTURE6_ARB: int
MGL_TEXTURE7_ARB: int
MGL_TEXTURE8_ARB: int
MGL_TEXTURE9_ARB: int
MGL_TEXTURE10_ARB: int
MGL_TEXTURE11_ARB: int
MGL_TEXTURE12_ARB: int
MGL_TEXTURE13_ARB: int
MGL_TEXTURE14_ARB: int
MGL_TEXTURE15_ARB: int
MGL_TEXTURE16_ARB: int
MGL_TEXTURE17_ARB: int
MGL_TEXTURE18_ARB: int
MGL_TEXTURE19_ARB: int
MGL_TEXTURE20_ARB: int
MGL_TEXTURE21_ARB: int
MGL_TEXTURE22_ARB: int
MGL_TEXTURE23_ARB: int
MGL_TEXTURE24_ARB: int
MGL_TEXTURE25_ARB: int
MGL_TEXTURE26_ARB: int
MGL_TEXTURE27_ARB: int
MGL_TEXTURE28_ARB: int
MGL_TEXTURE29_ARB: int
MGL_TEXTURE30_ARB: int
MGL_TEXTURE31_ARB: int
MGL_ACTIVE_TEXTURE_ARB: int
MGL_CLIENT_ACTIVE_TEXTURE_ARB: int
MGL_MAX_TEXTURE_UNITS_ARB: int
MGL_TRANSPOSE_MODELVIEW_MATRIX_ARB: int
MGL_TRANSPOSE_PROJECTION_MATRIX_ARB: int
MGL_TRANSPOSE_TEXTURE_MATRIX_ARB: int
MGL_TRANSPOSE_COLOR_MATRIX_ARB: int
MGL_ALL_COMPLETED_NV: int
MGL_FENCE_STATUS_NV: int
MGL_FENCE_CONDITION_NV: int
MGL_FRAGMENT_PROGRAM_NV: int
MGL_MAX_TEXTURE_COORDS_NV: int
MGL_MAX_TEXTURE_IMAGE_UNITS_NV: int
MGL_FRAGMENT_PROGRAM_BINDING_NV: int
MGL_PROGRAM_ERROR_STRING_NV: int
MGL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV: int
MGL_FRAGMENT_PROGRAM_ARB: int
MGL_PROGRAM_ALU_INSTRUCTIONS_ARB: int
MGL_PROGRAM_TEX_INSTRUCTIONS_ARB: int
MGL_PROGRAM_TEX_INDIRECTIONS_ARB: int
MGL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB: int
MGL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB: int
MGL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB: int
MGL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB: int
MGL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB: int
MGL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB: int
MGL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB: int
MGL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB: int
MGL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB: int
MGL_MAX_TEXTURE_COORDS_ARB: int
MGL_MAX_TEXTURE_IMAGE_UNITS_ARB: int
MGL_TEXTURE_MAX_ANISOTROPY_EXT: int
MGL_MAX_TEXTURE_MAX_ANISOTROPY_EXT: int
MGL_MODELVIEW0_STACK_DEPTH_EXT: int
MGL_MODELVIEW1_STACK_DEPTH_EXT: int
MGL_MODELVIEW0_MATRIX_EXT: int
MGL_MODELVIEW_MATRIX1_EXT: int
MGL_VERTEX_WEIGHTING_EXT: int
MGL_MODELVIEW0_EXT: int
MGL_MODELVIEW1_EXT: int
MGL_CURRENT_VERTEX_WEIGHT_EXT: int
MGL_VERTEX_WEIGHT_ARRAY_EXT: int
MGL_VERTEX_WEIGHT_ARRAY_SIZE_EXT: int
MGL_VERTEX_WEIGHT_ARRAY_TYPE_EXT: int
MGL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT: int
MGL_VERTEX_WEIGHT_ARRAY_POINTER_EXT: int
MGL_COMPRESSED_ALPHA_ARB: int
MGL_COMPRESSED_LUMINANCE_ARB: int
MGL_COMPRESSED_LUMINANCE_ALPHA_ARB: int
MGL_COMPRESSED_INTENSITY_ARB: int
MGL_COMPRESSED_RGB_ARB: int
MGL_COMPRESSED_RGBA_ARB: int
MGL_TEXTURE_COMPRESSION_HINT_ARB: int
MGL_TEXTURE_IMAGE_SIZE_ARB: int
MGL_TEXTURE_COMPRESSED_ARB: int
MGL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB: int
MGL_COMPRESSED_TEXTURE_FORMATS_ARB: int
MGL_ARB_texture_env_dot3: int
MGL_DOT3_RGB_ARB: int
MGL_DOT3_RGB_EXT: int
MGL_DOT3_RGBA_ARB: int
MGL_DOT3_RGBA_EXT: int
MGL_INCR_WRAP_EXT: int
MGL_DECR_WRAP_EXT: int
MGL_NORMAL_MAP_ARB: int
MGL_REFLECTION_MAP_ARB: int
MGL_TEXTURE_CUBE_MAP_ARB: int
MGL_TEXTURE_BINDING_CUBE_MAP_ARB: int
MGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB: int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB: int
MGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB: int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB: int
MGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB: int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB: int
MGL_PROXY_TEXTURE_CUBE_MAP_ARB: int
MGL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB: int
MGL_TEXTURE_RED_TYPE: int
MGL_TEXTURE_GREEN_TYPE: int
MGL_TEXTURE_BLUE_TYPE: int
MGL_TEXTURE_ALPHA_TYPE: int
MGL_TEXTURE_LUMINANCE_TYPE: int
MGL_TEXTURE_INTENSITY_TYPE: int
MGL_TEXTURE_DEPTH_TYPE: int
MGL_UNSIGNED_NORMALIZED: int
MGL_RGBA32F: int
MGL_RGB32F: int
MGL_ALPHA32F: int
MGL_INTENSITY32F: int
MGL_LUMINANCE32F: int
MGL_LUMINANCE_ALPHA32F: int
MGL_RGBA16F: int
MGL_RGB16F: int
MGL_ALPHA16F: int
MGL_INTENSITY16F: int
MGL_LUMINANCE16F: int
MGL_LUMINANCE_ALPHA16F: int
MGL_TEXTURE_RECTANGLE: int
MGL_TEXTURE_BINDING_RECTANGLE: int
MGL_PROXY_TEXTURE_RECTANGLE: int
MGL_MAX_RECTANGLE_TEXTURE_SIZE: int
MGL_RGBA_FLOAT_MODE: int
MGL_CLAMP_VERTEX_COLOR: int
MGL_CLAMP_FRAGMENT_COLOR: int
MGL_CLAMP_READ_COLOR: int
MGL_FIXED_ONLY: int
MGL_VERTEX_ARRAY_RANGE_NV: int
MGL_VERTEX_ARRAY_RANGE_LENGTH_NV: int
MGL_VERTEX_ARRAY_RANGE_VALID_NV: int
MGL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV: int
MGL_VERTEX_ARRAY_RANGE_POINTER_NV: int
MGL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV: int
MGL_REGISTER_COMBINERS_NV: int
MGL_VARIABLE_A_NV: int
MGL_VARIABLE_B_NV: int
MGL_VARIABLE_C_NV: int
MGL_VARIABLE_D_NV: int
MGL_VARIABLE_E_NV: int
MGL_VARIABLE_F_NV: int
MGL_VARIABLE_G_NV: int
MGL_CONSTANT_COLOR0_NV: int
MGL_CONSTANT_COLOR1_NV: int
MGL_PRIMARY_COLOR_NV: int
MGL_SECONDARY_COLOR_NV: int
MGL_SPARE0_NV: int
MGL_SPARE1_NV: int
MGL_DISCARD_NV: int
MGL_E_TIMES_F_NV: int
MGL_SPARE0_PLUS_SECONDARY_COLOR_NV: int
MGL_UNSIGNED_IDENTITY_NV: int
MGL_UNSIGNED_INVERT_NV: int
MGL_EXPAND_NORMAL_NV: int
MGL_EXPAND_NEGATE_NV: int
MGL_HALF_BIAS_NORMAL_NV: int
MGL_HALF_BIAS_NEGATE_NV: int
MGL_SIGNED_IDENTITY_NV: int
MGL_SIGNED_NEGATE_NV: int
MGL_SCALE_BY_TWO_NV: int
MGL_SCALE_BY_FOUR_NV: int
MGL_SCALE_BY_ONE_HALF_NV: int
MGL_BIAS_BY_NEGATIVE_ONE_HALF_NV: int
MGL_COMBINER_INPUT_NV: int
MGL_COMBINER_MAPPING_NV: int
MGL_COMBINER_COMPONENT_USAGE_NV: int
MGL_COMBINER_AB_DOT_PRODUCT_NV: int
MGL_COMBINER_CD_DOT_PRODUCT_NV: int
MGL_COMBINER_MUX_SUM_NV: int
MGL_COMBINER_SCALE_NV: int
MGL_COMBINER_BIAS_NV: int
MGL_COMBINER_AB_OUTPUT_NV: int
MGL_COMBINER_CD_OUTPUT_NV: int
MGL_COMBINER_SUM_OUTPUT_NV: int
MGL_MAX_GENERAL_COMBINERS_NV: int
MGL_NUM_GENERAL_COMBINERS_NV: int
MGL_COLOR_SUM_CLAMP_NV: int
MGL_COMBINER0_NV: int
MGL_COMBINER1_NV: int
MGL_COMBINER2_NV: int
MGL_COMBINER3_NV: int
MGL_COMBINER4_NV: int
MGL_COMBINER5_NV: int
MGL_COMBINER6_NV: int
MGL_COMBINER7_NV: int
MGL_PRIMITIVE_RESTART_NV: int
MGL_PRIMITIVE_RESTART_INDEX_NV: int
MGL_EMBOSS_LIGHT_NV: int
MGL_EMBOSS_CONSTANT_NV: int
MGL_EMBOSS_MAP_NV: int
MGL_COMBINE_EXT: int
MGL_COMBINE_RGB_EXT: int
MGL_COMBINE_ALPHA_EXT: int
MGL_RGB_SCALE_EXT: int
MGL_ADD_SIGNED_EXT: int
MGL_INTERPOLATE_EXT: int
MGL_CONSTANT_EXT: int
MGL_PRIMARY_COLOR_EXT: int
MGL_PREVIOUS_EXT: int
MGL_SOURCE0_RGB_EXT: int
MGL_SOURCE1_RGB_EXT: int
MGL_SOURCE2_RGB_EXT: int
MGL_SOURCE0_ALPHA_EXT: int
MGL_SOURCE1_ALPHA_EXT: int
MGL_SOURCE2_ALPHA_EXT: int
MGL_OPERAND0_RGB_EXT: int
MGL_OPERAND1_RGB_EXT: int
MGL_OPERAND2_RGB_EXT: int
MGL_OPERAND0_ALPHA_EXT: int
MGL_OPERAND1_ALPHA_EXT: int
MGL_OPERAND2_ALPHA_EXT: int
MGL_COMBINE4_NV: int
MGL_SOURCE3_RGB_NV: int
MGL_SOURCE3_ALPHA_NV: int
MGL_OPERAND3_RGB_NV: int
MGL_OPERAND3_ALPHA_NV: int
MGL_VERTEX_PROGRAM_NV: int
MGL_VERTEX_STATE_PROGRAM_NV: int
MGL_ATTRIB_ARRAY_SIZE_NV: int
MGL_ATTRIB_ARRAY_STRIDE_NV: int
MGL_ATTRIB_ARRAY_TYPE_NV: int
MGL_CURRENT_ATTRIB_NV: int
MGL_PROGRAM_LENGTH_NV: int
MGL_PROGRAM_STRING_NV: int
MGL_MODELVIEW_PROJECTION_NV: int
MGL_IDENTITY_NV: int
MGL_INVERSE_NV: int
MGL_TRANSPOSE_NV: int
MGL_INVERSE_TRANSPOSE_NV: int
MGL_MAX_TRACK_MATRIX_STACK_DEPTH_NV: int
MGL_MAX_TRACK_MATRICES_NV: int
MGL_MATRIX0_NV: int
MGL_MATRIX1_NV: int
MGL_MATRIX2_NV: int
MGL_MATRIX3_NV: int
MGL_MATRIX4_NV: int
MGL_MATRIX5_NV: int
MGL_MATRIX6_NV: int
MGL_MATRIX7_NV: int
MGL_CURRENT_MATRIX_STACK_DEPTH_NV: int
MGL_CURRENT_MATRIX_NV: int
MGL_VERTEX_PROGRAM_POINT_SIZE_NV: int
MGL_VERTEX_PROGRAM_TWO_SIDE_NV: int
MGL_PROGRAM_PARAMETER_NV: int
MGL_ATTRIB_ARRAY_POINTER_NV: int
MGL_PROGRAM_TARGET_NV: int
MGL_PROGRAM_RESIDENT_NV: int
MGL_TRACK_MATRIX_NV: int
MGL_TRACK_MATRIX_TRANSFORM_NV: int
MGL_VERTEX_PROGRAM_BINDING_NV: int
MGL_PROGRAM_ERROR_POSITION_NV: int
MGL_VERTEX_ATTRIB_ARRAY0_NV: int
MGL_VERTEX_ATTRIB_ARRAY1_NV: int
MGL_VERTEX_ATTRIB_ARRAY2_NV: int
MGL_VERTEX_ATTRIB_ARRAY3_NV: int
MGL_VERTEX_ATTRIB_ARRAY4_NV: int
MGL_VERTEX_ATTRIB_ARRAY5_NV: int
MGL_VERTEX_ATTRIB_ARRAY6_NV: int
MGL_VERTEX_ATTRIB_ARRAY7_NV: int
MGL_VERTEX_ATTRIB_ARRAY8_NV: int
MGL_VERTEX_ATTRIB_ARRAY9_NV: int
MGL_VERTEX_ATTRIB_ARRAY10_NV: int
MGL_VERTEX_ATTRIB_ARRAY11_NV: int
MGL_VERTEX_ATTRIB_ARRAY12_NV: int
MGL_VERTEX_ATTRIB_ARRAY13_NV: int
MGL_VERTEX_ATTRIB_ARRAY14_NV: int
MGL_VERTEX_ATTRIB_ARRAY15_NV: int
MGL_MAP1_VERTEX_ATTRIB0_4_NV: int
MGL_MAP1_VERTEX_ATTRIB1_4_NV: int
MGL_MAP1_VERTEX_ATTRIB2_4_NV: int
MGL_MAP1_VERTEX_ATTRIB3_4_NV: int
MGL_MAP1_VERTEX_ATTRIB4_4_NV: int
MGL_MAP1_VERTEX_ATTRIB5_4_NV: int
MGL_MAP1_VERTEX_ATTRIB6_4_NV: int
MGL_MAP1_VERTEX_ATTRIB7_4_NV: int
MGL_MAP1_VERTEX_ATTRIB8_4_NV: int
MGL_MAP1_VERTEX_ATTRIB9_4_NV: int
MGL_MAP1_VERTEX_ATTRIB10_4_NV: int
MGL_MAP1_VERTEX_ATTRIB11_4_NV: int
MGL_MAP1_VERTEX_ATTRIB12_4_NV: int
MGL_MAP1_VERTEX_ATTRIB13_4_NV: int
MGL_MAP1_VERTEX_ATTRIB14_4_NV: int
MGL_MAP1_VERTEX_ATTRIB15_4_NV: int
MGL_MAP2_VERTEX_ATTRIB0_4_NV: int
MGL_MAP2_VERTEX_ATTRIB1_4_NV: int
MGL_MAP2_VERTEX_ATTRIB2_4_NV: int
MGL_MAP2_VERTEX_ATTRIB3_4_NV: int
MGL_MAP2_VERTEX_ATTRIB4_4_NV: int
MGL_MAP2_VERTEX_ATTRIB5_4_NV: int
MGL_MAP2_VERTEX_ATTRIB6_4_NV: int
MGL_MAP2_VERTEX_ATTRIB7_4_NV: int
MGL_MAP2_VERTEX_ATTRIB8_4_NV: int
MGL_MAP2_VERTEX_ATTRIB9_4_NV: int
MGL_MAP2_VERTEX_ATTRIB10_4_NV: int
MGL_MAP2_VERTEX_ATTRIB11_4_NV: int
MGL_MAP2_VERTEX_ATTRIB12_4_NV: int
MGL_MAP2_VERTEX_ATTRIB13_4_NV: int
MGL_MAP2_VERTEX_ATTRIB14_4_NV: int
MGL_MAP2_VERTEX_ATTRIB15_4_NV: int
MGL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV: int
MGL_UNSIGNED_INT_S8_S8_8_8_NV: int
MGL_UNSIGNED_INT_S8_S8_8_8_REV_NV: int
MGL_DSDT_MAG_INTENSITY_NV: int
MGL_SHADER_CONSISTENT_NV: int
MGL_TEXTURE_SHADER_NV: int
MGL_SHADER_OPERATION_NV: int
MGL_CULL_MODES_NV: int
MGL_OFFSET_TEXTURE_2D_MATRIX_NV: int
MGL_OFFSET_TEXTURE_2D_SCALE_NV: int
MGL_OFFSET_TEXTURE_2D_BIAS_NV: int
MGL_PREVIOUS_TEXTURE_INPUT_NV: int
MGL_CONST_EYE_NV: int
MGL_PASS_THROUGH_NV: int
MGL_CULL_FRAGMENT_NV: int
MGL_OFFSET_TEXTURE_2D_NV: int
MGL_DEPENDENT_AR_TEXTURE_2D_NV: int
MGL_DEPENDENT_GB_TEXTURE_2D_NV: int
MGL_ISOTROPIC_BRDF_NV: int
MGL_DOT_PRODUCT_NV: int
MGL_DOT_PRODUCT_DEPTH_REPLACE_NV: int
MGL_DOT_PRODUCT_TEXTURE_2D_NV: int
MGL_DOT_PRODUCT_TEXTURE_3D_NV: int
MGL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV: int
MGL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV: int
MGL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV: int
MGL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV: int
MGL_HILO_NV: int
MGL_DSDT_NV: int
MGL_DSDT_MAG_NV: int
MGL_DSDT_MAG_VIB_NV: int
MGL_HILO16_NV: int
MGL_SIGNED_HILO_NV: int
MGL_SIGNED_HILO16_NV: int
MGL_SIGNED_RGBA_NV: int
MGL_SIGNED_RGBA8_NV: int
MGL_SIGNED_RGB_NV: int
MGL_SIGNED_RGB8_NV: int
MGL_SIGNED_LUMINANCE_NV: int
MGL_SIGNED_LUMINANCE8_NV: int
MGL_SIGNED_LUMINANCE_ALPHA_NV: int
MGL_SIGNED_LUMINANCE8_ALPHA8_NV: int
MGL_SIGNED_ALPHA_NV: int
MGL_SIGNED_ALPHA8_NV: int
MGL_SIGNED_INTENSITY_NV: int
MGL_SIGNED_INTENSITY8_NV: int
MGL_DSDT8_NV: int
MGL_DSDT8_MAG8_NV: int
MGL_DSDT8_MAG8_INTENSITY8_NV: int
MGL_SIGNED_RGB_UNSIGNED_ALPHA_NV: int
MGL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV: int
MGL_HI_SCALE_NV: int
MGL_LO_SCALE_NV: int
MGL_DS_SCALE_NV: int
MGL_DT_SCALE_NV: int
MGL_MAGNITUDE_SCALE_NV: int
MGL_VIBRANCE_SCALE_NV: int
MGL_HI_BIAS_NV: int
MGL_LO_BIAS_NV: int
MGL_DS_BIAS_NV: int
MGL_DT_BIAS_NV: int
MGL_MAGNITUDE_BIAS_NV: int
MGL_VIBRANCE_BIAS_NV: int
MGL_TEXTURE_BORDER_VALUES_NV: int
MGL_TEXTURE_HI_SIZE_NV: int
MGL_TEXTURE_LO_SIZE_NV: int
MGL_TEXTURE_DS_SIZE_NV: int
MGL_TEXTURE_DT_SIZE_NV: int
MGL_TEXTURE_MAG_SIZE_NV: int
MGL_MIRROR_CLAMP_ATI: int
MGL_MIRROR_CLAMP_TO_EDGE_ATI: int
MGL_RGBA_FLOAT_MODE_ATI: int
MGL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI: int
MGL_FLOAT_R_NV: int
MGL_FLOAT_RG_NV: int
MGL_FLOAT_RGB_NV: int
MGL_FLOAT_RGBA_NV: int
MGL_FLOAT_R16_NV: int
MGL_FLOAT_R32_NV: int
MGL_FLOAT_RG16_NV: int
MGL_FLOAT_RG32_NV: int
MGL_FLOAT_RGB16_NV: int
MGL_FLOAT_RGB32_NV: int
MGL_FLOAT_RGBA16_NV: int
MGL_FLOAT_RGBA32_NV: int
MGL_TEXTURE_FLOAT_COMPONENTS_NV: int
MGL_FLOAT_CLEAR_COLOR_VALUE_NV: int
MGL_FLOAT_RGBA_MODE_NV: int
MGL_PIXEL_COUNTER_BITS_NV: int
MGL_CURRENT_OCCLUSION_QUERY_ID_NV: int
MGL_PIXEL_COUNT_NV: int
MGL_PIXEL_COUNT_AVAILABLE_NV: int
MGL_PIXEL_COUNTER_BITS_ARB: int
MGL_SAMPLES_PASSED_ARB: int
MGL_CURRENT_QUERY_ARB: int
MGL_QUERY_RESULT_ARB: int
MGL_QUERY_RESULT_AVAILABLE_ARB: int
MGL_PN_TRIANGLES_ATI: int
MGL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI: int
MGL_PN_TRIANGLES_POINT_MODE_ATI: int
MGL_PN_TRIANGLES_NORMAL_MODE_ATI: int
MGL_PN_TRIANGLES_TESSELATION_LEVEL_ATI: int
MGL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI: int
MGL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI: int
MGL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI: int
MGL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI: int
MGL_EXT_vertex_shader: int
MGL_VERTEX_SHADER_EXT: int
MGL_VERTEX_SHADER_BINDING_EXT: int
MGL_OP_INDEX_EXT: int
MGL_OP_NEGATE_EXT: int
MGL_OP_DOT3_EXT: int
MGL_OP_DOT4_EXT: int
MGL_OP_MUL_EXT: int
MGL_OP_ADD_EXT: int
MGL_OP_MADD_EXT: int
MGL_OP_FRAC_EXT: int
MGL_OP_MAX_EXT: int
MGL_OP_MIN_EXT: int
MGL_OP_SET_GE_EXT: int
MGL_OP_SET_LT_EXT: int
MGL_OP_CLAMP_EXT: int
MGL_OP_FLOOR_EXT: int
MGL_OP_ROUND_EXT: int
MGL_OP_EXP_BASE_2_EXT: int
MGL_OP_LOG_BASE_2_EXT: int
MGL_OP_POWER_EXT: int
MGL_OP_RECIP_EXT: int
MGL_OP_RECIP_SQRT_EXT: int
MGL_OP_SUB_EXT: int
MGL_OP_CROSS_PRODUCT_EXT: int
MGL_OP_MULTIPLY_MATRIX_EXT: int
MGL_OP_MOV_EXT: int
MGL_OUTPUT_VERTEX_EXT: int
MGL_OUTPUT_COLOR0_EXT: int
MGL_OUTPUT_COLOR1_EXT: int
MGL_OUTPUT_TEXTURE_COORD0_EXT: int
MGL_OUTPUT_TEXTURE_COORD1_EXT: int
MGL_OUTPUT_TEXTURE_COORD2_EXT: int
MGL_OUTPUT_TEXTURE_COORD3_EXT: int
MGL_OUTPUT_TEXTURE_COORD4_EXT: int
MGL_OUTPUT_TEXTURE_COORD5_EXT: int
MGL_OUTPUT_TEXTURE_COORD6_EXT: int
MGL_OUTPUT_TEXTURE_COORD7_EXT: int
MGL_OUTPUT_TEXTURE_COORD8_EXT: int
MGL_OUTPUT_TEXTURE_COORD9_EXT: int
MGL_OUTPUT_TEXTURE_COORD10_EXT: int
MGL_OUTPUT_TEXTURE_COORD11_EXT: int
MGL_OUTPUT_TEXTURE_COORD12_EXT: int
MGL_OUTPUT_TEXTURE_COORD13_EXT: int
MGL_OUTPUT_TEXTURE_COORD14_EXT: int
MGL_OUTPUT_TEXTURE_COORD15_EXT: int
MGL_OUTPUT_TEXTURE_COORD16_EXT: int
MGL_OUTPUT_TEXTURE_COORD17_EXT: int
MGL_OUTPUT_TEXTURE_COORD18_EXT: int
MGL_OUTPUT_TEXTURE_COORD19_EXT: int
MGL_OUTPUT_TEXTURE_COORD20_EXT: int
MGL_OUTPUT_TEXTURE_COORD21_EXT: int
MGL_OUTPUT_TEXTURE_COORD22_EXT: int
MGL_OUTPUT_TEXTURE_COORD23_EXT: int
MGL_OUTPUT_TEXTURE_COORD24_EXT: int
MGL_OUTPUT_TEXTURE_COORD25_EXT: int
MGL_OUTPUT_TEXTURE_COORD26_EXT: int
MGL_OUTPUT_TEXTURE_COORD27_EXT: int
MGL_OUTPUT_TEXTURE_COORD28_EXT: int
MGL_OUTPUT_TEXTURE_COORD29_EXT: int
MGL_OUTPUT_TEXTURE_COORD30_EXT: int
MGL_OUTPUT_TEXTURE_COORD31_EXT: int
MGL_OUTPUT_FOG_EXT: int
MGL_SCALAR_EXT: int
MGL_VECTOR_EXT: int
MGL_MATRIX_EXT: int
MGL_VARIANT_EXT: int
MGL_INVARIANT_EXT: int
MGL_LOCAL_CONSTANT_EXT: int
MGL_LOCAL_EXT: int
MGL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT: int
MGL_MAX_VERTEX_SHADER_VARIANTS_EXT: int
MGL_MAX_VERTEX_SHADER_INVARIANTS_EXT: int
MGL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT: int
MGL_MAX_VERTEX_SHADER_LOCALS_EXT: int
MGL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT: int
MGL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT: int
MGL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT: int
MGL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT: int
MGL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT: int
MGL_VERTEX_SHADER_INSTRUCTIONS_EXT: int
MGL_VERTEX_SHADER_VARIANTS_EXT: int
MGL_VERTEX_SHADER_INVARIANTS_EXT: int
MGL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT: int
MGL_VERTEX_SHADER_LOCALS_EXT: int
MGL_VERTEX_SHADER_OPTIMIZED_EXT: int
MGL_X_EXT: int
MGL_Y_EXT: int
MGL_Z_EXT: int
MGL_W_EXT: int
MGL_NEGATIVE_X_EXT: int
MGL_NEGATIVE_Y_EXT: int
MGL_NEGATIVE_Z_EXT: int
MGL_NEGATIVE_W_EXT: int
MGL_ZERO_EXT: int
MGL_ONE_EXT: int
MGL_NEGATIVE_ONE_EXT: int
MGL_NORMALIZED_RANGE_EXT: int
MGL_FULL_RANGE_EXT: int
MGL_CURRENT_VERTEX_EXT: int
MGL_MVP_MATRIX_EXT: int
MGL_VARIANT_VALUE_EXT: int
MGL_VARIANT_DATATYPE_EXT: int
MGL_VARIANT_ARRAY_STRIDE_EXT: int
MGL_VARIANT_ARRAY_TYPE_EXT: int
MGL_VARIANT_ARRAY_EXT: int
MGL_VARIANT_ARRAY_POINTER_EXT: int
MGL_INVARIANT_VALUE_EXT: int
MGL_INVARIANT_DATATYPE_EXT: int
MGL_LOCAL_CONSTANT_VALUE_EXT: int
MGL_LOCAL_CONSTANT_DATATYPE_EXT: int
MGL_FRAGMENT_SHADER_ATI: int
MGL_REG_0_ATI: int
MGL_REG_1_ATI: int
MGL_REG_2_ATI: int
MGL_REG_3_ATI: int
MGL_REG_4_ATI: int
MGL_REG_5_ATI: int
MGL_REG_6_ATI: int
MGL_REG_7_ATI: int
MGL_REG_8_ATI: int
MGL_REG_9_ATI: int
MGL_REG_10_ATI: int
MGL_REG_11_ATI: int
MGL_REG_12_ATI: int
MGL_REG_13_ATI: int
MGL_REG_14_ATI: int
MGL_REG_15_ATI: int
MGL_REG_16_ATI: int
MGL_REG_17_ATI: int
MGL_REG_18_ATI: int
MGL_REG_19_ATI: int
MGL_REG_20_ATI: int
MGL_REG_21_ATI: int
MGL_REG_22_ATI: int
MGL_REG_23_ATI: int
MGL_REG_24_ATI: int
MGL_REG_25_ATI: int
MGL_REG_26_ATI: int
MGL_REG_27_ATI: int
MGL_REG_28_ATI: int
MGL_REG_29_ATI: int
MGL_REG_30_ATI: int
MGL_REG_31_ATI: int
MGL_CON_0_ATI: int
MGL_CON_1_ATI: int
MGL_CON_2_ATI: int
MGL_CON_3_ATI: int
MGL_CON_4_ATI: int
MGL_CON_5_ATI: int
MGL_CON_6_ATI: int
MGL_CON_7_ATI: int
MGL_CON_8_ATI: int
MGL_CON_9_ATI: int
MGL_CON_10_ATI: int
MGL_CON_11_ATI: int
MGL_CON_12_ATI: int
MGL_CON_13_ATI: int
MGL_CON_14_ATI: int
MGL_CON_15_ATI: int
MGL_CON_16_ATI: int
MGL_CON_17_ATI: int
MGL_CON_18_ATI: int
MGL_CON_19_ATI: int
MGL_CON_20_ATI: int
MGL_CON_21_ATI: int
MGL_CON_22_ATI: int
MGL_CON_23_ATI: int
MGL_CON_24_ATI: int
MGL_CON_25_ATI: int
MGL_CON_26_ATI: int
MGL_CON_27_ATI: int
MGL_CON_28_ATI: int
MGL_CON_29_ATI: int
MGL_CON_30_ATI: int
MGL_CON_31_ATI: int
MGL_MOV_ATI: int
MGL_ADD_ATI: int
MGL_MUL_ATI: int
MGL_SUB_ATI: int
MGL_DOT3_ATI: int
MGL_DOT4_ATI: int
MGL_MAD_ATI: int
MGL_LERP_ATI: int
MGL_CND_ATI: int
MGL_CND0_ATI: int
MGL_DOT2_ADD_ATI: int
MGL_SECONDARY_INTERPOLATOR_ATI: int
MGL_NUM_FRAGMENT_REGISTERS_ATI: int
MGL_NUM_FRAGMENT_CONSTANTS_ATI: int
MGL_NUM_PASSES_ATI: int
MGL_NUM_INSTRUCTIONS_PER_PASS_ATI: int
MGL_NUM_INSTRUCTIONS_TOTAL_ATI: int
MGL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI: int
MGL_NUM_LOOPBACK_COMPONENTS_ATI: int
MGL_COLOR_ALPHA_PAIRING_ATI: int
MGL_SWIZZLE_STR_ATI: int
MGL_SWIZZLE_STQ_ATI: int
MGL_SWIZZLE_STR_DR_ATI: int
MGL_SWIZZLE_STQ_DQ_ATI: int
MGL_SWIZZLE_STRQ_ATI: int
MGL_SWIZZLE_STRQ_DQ_ATI: int
MGL_RED_BIT_ATI: int
MGL_GREEN_BIT_ATI: int
MGL_BLUE_BIT_ATI: int
MGL_2X_BIT_ATI: int
MGL_4X_BIT_ATI: int
MGL_8X_BIT_ATI: int
MGL_HALF_BIT_ATI: int
MGL_QUARTER_BIT_ATI: int
MGL_EIGHTH_BIT_ATI: int
MGL_SATURATE_BIT_ATI: int
MGL_COMP_BIT_ATI: int
MGL_NEGATE_BIT_ATI: int
MGL_BIAS_BIT_ATI: int
MGL_VERTEX_PROGRAM: int
MGL_VERTEX_PROGRAM_POINT_SIZE: int
MGL_VERTEX_PROGRAM_TWO_SIDE: int
MGL_COLOR_SUM: int
MGL_PROGRAM_FORMAT_ASCII: int
MGL_VERTEX_ATTRIB_ARRAY_ENABLED: int
MGL_VERTEX_ATTRIB_ARRAY_SIZE: int
MGL_VERTEX_ATTRIB_ARRAY_STRIDE: int
MGL_VERTEX_ATTRIB_ARRAY_TYPE: int
MGL_VERTEX_ATTRIB_ARRAY_NORMALIZED: int
MGL_CURRENT_VERTEX_ATTRIB: int
MGL_VERTEX_ATTRIB_ARRAY_POINTER: int
MGL_PROGRAM_LENGTH: int
MGL_PROGRAM_FORMAT: int
MGL_PROGRAM_BINDING: int
MGL_PROGRAM_INSTRUCTIONS: int
MGL_MAX_PROGRAM_INSTRUCTIONS: int
MGL_PROGRAM_NATIVE_INSTRUCTIONS: int
MGL_MAX_PROGRAM_NATIVE_INSTRUCTIONS: int
MGL_PROGRAM_TEMPORARIES: int
MGL_MAX_PROGRAM_TEMPORARIES: int
MGL_PROGRAM_NATIVE_TEMPORARIES: int
MGL_MAX_PROGRAM_NATIVE_TEMPORARIES: int
MGL_PROGRAM_PARAMETERS: int
MGL_MAX_PROGRAM_PARAMETERS: int
MGL_PROGRAM_NATIVE_PARAMETERS: int
MGL_MAX_PROGRAM_NATIVE_PARAMETERS: int
MGL_PROGRAM_ATTRIBS: int
MGL_MAX_PROGRAM_ATTRIBS: int
MGL_PROGRAM_NATIVE_ATTRIBS: int
MGL_MAX_PROGRAM_NATIVE_ATTRIBS: int
MGL_PROGRAM_ADDRESS_REGISTERS: int
MGL_MAX_PROGRAM_ADDRESS_REGISTERS: int
MGL_PROGRAM_NATIVE_ADDRESS_REGISTERS: int
MGL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS: int
MGL_MAX_PROGRAM_LOCAL_PARAMETERS: int
MGL_MAX_PROGRAM_ENV_PARAMETERS: int
MGL_PROGRAM_UNDER_NATIVE_LIMITS: int
MGL_PROGRAM_STRING: int
MGL_PROGRAM_ERROR_POSITION: int
MGL_CURRENT_MATRIX: int
MGL_TRANSPOSE_CURRENT_MATRIX: int
MGL_CURRENT_MATRIX_STACK_DEPTH: int
MGL_MAX_VERTEX_ATTRIBS: int
MGL_MAX_PROGRAM_MATRICES: int
MGL_MAX_PROGRAM_MATRIX_STACK_DEPTH: int
MGL_PROGRAM_ERROR_STRING: int
MGL_MATRIX0: int
MGL_MATRIX1: int
MGL_MATRIX2: int
MGL_MATRIX3: int
MGL_MATRIX4: int
MGL_MATRIX5: int
MGL_MATRIX6: int
MGL_MATRIX7: int
MGL_MATRIX8: int
MGL_MATRIX9: int
MGL_MATRIX10: int
MGL_MATRIX11: int
MGL_MATRIX12: int
MGL_MATRIX13: int
MGL_MATRIX14: int
MGL_MATRIX15: int
MGL_MATRIX16: int
MGL_MATRIX17: int
MGL_MATRIX18: int
MGL_MATRIX19: int
MGL_MATRIX20: int
MGL_MATRIX21: int
MGL_MATRIX22: int
MGL_MATRIX23: int
MGL_MATRIX24: int
MGL_MATRIX25: int
MGL_MATRIX26: int
MGL_MATRIX27: int
MGL_MATRIX28: int
MGL_MATRIX29: int
MGL_MATRIX30: int
MGL_MATRIX31: int
MGL_ARRAY_BUFFER_ARB: int
MGL_ELEMENT_ARRAY_BUFFER_ARB: int
MGL_ARRAY_BUFFER_BINDING_ARB: int
MGL_ELEMENT_ARRAY_BUFFER_BINDING_ARB: int
MGL_VERTEX_ARRAY_BUFFER_BINDING_ARB: int
MGL_NORMAL_ARRAY_BUFFER_BINDING_ARB: int
MGL_COLOR_ARRAY_BUFFER_BINDING_ARB: int
MGL_INDEX_ARRAY_BUFFER_BINDING_ARB: int
MGL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB: int
MGL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB: int
MGL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB: int
MGL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB: int
MGL_WEIGHT_ARRAY_BUFFER_BINDING_ARB: int
MGL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB: int
MGL_STREAM_DRAW_ARB: int
MGL_STREAM_READ_ARB: int
MGL_STREAM_COPY_ARB: int
MGL_STATIC_DRAW_ARB: int
MGL_STATIC_READ_ARB: int
MGL_STATIC_COPY_ARB: int
MGL_DYNAMIC_DRAW_ARB: int
MGL_DYNAMIC_READ_ARB: int
MGL_DYNAMIC_COPY_ARB: int
MGL_READ_ONLY_ARB: int
MGL_WRITE_ONLY_ARB: int
MGL_READ_WRITE_ARB: int
MGL_BUFFER_SIZE_ARB: int
MGL_BUFFER_USAGE_ARB: int
MGL_BUFFER_ACCESS_ARB: int
MGL_BUFFER_MAPPED_ARB: int
MGL_BUFFER_MAP_POINTER_ARB: int
MGL_BACK_PRIMARY_COLOR_NV: int
MGL_BACK_SECONDARY_COLOR_NV: int
MGL_TEXTURE_COORD_NV: int
MGL_CLIP_DISTANCE_NV: int
MGL_VERTEX_ID_NV: int
MGL_PRIMITIVE_ID_NV: int
MGL_GENERIC_ATTRIB_NV: int
MGL_TRANSFORM_FEEDBACK_ATTRIBS_NV: int
MGL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV: int
MGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV: int
MGL_ACTIVE_VARYINGS_NV: int
MGL_ACTIVE_VARYING_MAX_LENGTH_NV: int
MGL_TRANSFORM_FEEDBACK_VARYINGS_NV: int
MGL_TRANSFORM_FEEDBACK_BUFFER_START_NV: int
MGL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV: int
MGL_TRANSFORM_FEEDBACK_RECORD_NV: int
MGL_PRIMITIVES_GENERATED_NV: int
MGL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV: int
MGL_RASTERIZER_DISCARD_NV: int
MGL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV: int
MGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV: int
MGL_INTERLEAVED_ATTRIBS_NV: int
MGL_SEPARATE_ATTRIBS_NV: int
MGL_TRANSFORM_FEEDBACK_BUFFER_NV: int
MGL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV: int
MGL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT: int
MGL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT: int
MGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT: int
MGL_TRANSFORM_FEEDBACK_VARYINGS_EXT: int
MGL_TRANSFORM_FEEDBACK_BUFFER_START_EXT: int
MGL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT: int
MGL_PRIMITIVES_GENERATED_EXT: int
MGL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT: int
MGL_RASTERIZER_DISCARD_EXT: int
MGL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT: int
MGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT: int
MGL_INTERLEAVED_ATTRIBS_EXT: int
MGL_SEPARATE_ATTRIBS_EXT: int
MGL_TRANSFORM_FEEDBACK_BUFFER_EXT: int
MGL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT: int
MGL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX: int
MGL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX: int
MGL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX: int
MGL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX: int
MGL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX: int
MGL_VBO_FREE_MEMORY_ATI: int
MGL_TEXTURE_FREE_MEMORY_ATI: int
MGL_RENDERBUFFER_FREE_MEMORY_ATI: int
MGL_PROGRAM_OBJECT_ARB: int
MGL_OBJECT_TYPE_ARB: int
MGL_OBJECT_SUBTYPE_ARB: int
MGL_OBJECT_DELETE_STATUS_ARB: int
MGL_OBJECT_COMPILE_STATUS_ARB: int
MGL_OBJECT_LINK_STATUS_ARB: int
MGL_OBJECT_VALIDATE_STATUS_ARB: int
MGL_OBJECT_INFO_LOG_LENGTH_ARB: int
MGL_OBJECT_ATTACHED_OBJECTS_ARB: int
MGL_OBJECT_ACTIVE_UNIFORMS_ARB: int
MGL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB: int
MGL_OBJECT_SHADER_SOURCE_LENGTH_ARB: int
MGL_SHADER_OBJECT_ARB: int
MGL_FLOAT_VEC2_ARB: int
MGL_FLOAT_VEC3_ARB: int
MGL_FLOAT_VEC4_ARB: int
MGL_INT_VEC2_ARB: int
MGL_INT_VEC3_ARB: int
MGL_INT_VEC4_ARB: int
MGL_BOOL_ARB: int
MGL_BOOL_VEC2_ARB: int
MGL_BOOL_VEC3_ARB: int
MGL_BOOL_VEC4_ARB: int
MGL_FLOAT_MAT2_ARB: int
MGL_FLOAT_MAT3_ARB: int
MGL_FLOAT_MAT4_ARB: int
MGL_VERTEX_SHADER_ARB: int
MGL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB: int
MGL_MAX_VARYING_FLOATS_ARB: int
MGL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB: int
MGL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB: int
MGL_OBJECT_ACTIVE_ATTRIBUTES_ARB: int
MGL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB: int
MGL_FRAGMENT_SHADER_ARB: int
MGL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB: int
MGL_INVALID_FRAMEBUFFER_OPERATION: int
MGL_MAX_RENDERBUFFER_SIZE: int
MGL_FRAMEBUFFER_BINDING: int
MGL_RENDERBUFFER_BINDING: int
MGL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: int
MGL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: int
MGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: int
MGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: int
MGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET: int
MGL_FRAMEBUFFER_COMPLETE: int
MGL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: int
MGL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: int
MGL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT: int
MGL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS: int
MGL_FRAMEBUFFER_INCOMPLETE_FORMATS: int
MGL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER: int
MGL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER: int
MGL_FRAMEBUFFER_UNSUPPORTED: int
MGL_MAX_COLOR_ATTACHMENTS: int
MGL_COLOR_ATTACHMENT0: int
MGL_COLOR_ATTACHMENT1: int
MGL_COLOR_ATTACHMENT2: int
MGL_COLOR_ATTACHMENT3: int
MGL_COLOR_ATTACHMENT4: int
MGL_COLOR_ATTACHMENT5: int
MGL_COLOR_ATTACHMENT6: int
MGL_COLOR_ATTACHMENT7: int
MGL_COLOR_ATTACHMENT8: int
MGL_COLOR_ATTACHMENT9: int
MGL_COLOR_ATTACHMENT10: int
MGL_COLOR_ATTACHMENT11: int
MGL_COLOR_ATTACHMENT12: int
MGL_COLOR_ATTACHMENT13: int
MGL_COLOR_ATTACHMENT14: int
MGL_COLOR_ATTACHMENT15: int
MGL_DEPTH_ATTACHMENT: int
MGL_STENCIL_ATTACHMENT: int
MGL_FRAMEBUFFER: int
MGL_RENDERBUFFER: int
MGL_RENDERBUFFER_WIDTH: int
MGL_RENDERBUFFER_HEIGHT: int
MGL_RENDERBUFFER_INTERNAL_FORMAT: int
MGL_STENCIL_INDEX1: int
MGL_STENCIL_INDEX4: int
MGL_STENCIL_INDEX8: int
MGL_STENCIL_INDEX16: int
MGL_RENDERBUFFER_RED_SIZE: int
MGL_RENDERBUFFER_GREEN_SIZE: int
MGL_RENDERBUFFER_BLUE_SIZE: int
MGL_RENDERBUFFER_ALPHA_SIZE: int
MGL_RENDERBUFFER_DEPTH_SIZE: int
MGL_RENDERBUFFER_STENCIL_SIZE: int
MGL_READ_FRAMEBUFFER: int
MGL_DRAW_FRAMEBUFFER: int
kMGLext_abgr: int
kMGLext_bgra: int
kMGLext_draw_range_elements: int
kMGLext_packed_pixels: int
kMGLext_rescale_normal: int
kMGLext_separate_specular_color: int
kMGLext_texture3D: int
kMGLext_texture_edge_clamp: int
kMGLext_texture_lod: int
kMGLext_multitexture: int
kMGLext_multisample: int
kMGLext_texture_compression: int
kMGLext_texture_cube_map: int
kMGLext_texture_env_add: int
kMGLext_texture_env_combine: int
kMGLext_texture_env_dot3: int
kMGLext_texture_border_clamp: int
kMGLext_transpose_matrix: int
kMGLext_multi_draw_arrays: int
kMGLext_texture_mirrored_repeat: int
kMGLext_ARB_texture_non_power_of_two: int
kMGLext_ARB_texture_rectangle: int
kMGLext_imaging_subset: int
kMGLext_blend_color: int
kMGLext_blend_minmax: int
kMGLext_blend_subtract: int
kMGLext_histogram: int
kMGLext_color_matrix: int
kMGLext_color_table: int
kMGLext_convolution: int
kMGLext_ARB_vertex_blend: int
kMGLext_ARB_matrix_palette: int
kMGLext_ARB_point_parameters: int
kMGLext_ARB_texture_env_crossbar: int
kMGLext_ARB_depth_texture: int
kMGLext_ARB_shadow: int
kMGLext_ARB_shadow_ambient: int
kMGLext_SGIX_depth_texture: int
kMGLext_SGIX_shadow: int
kMGLext_ARB_texgen_reflection: int
kMGLext_ARB_vertex_program: int
kMGLext_ARB_fragment_program: int
kMGLext_ARB_occlusion_query: int
kMGLext_ARB_vertex_buffer_object: int
kMGLext_ARB_half_float_pixel: int
kMGLext_ARB_texture_float: int
kMGLext_ARB_color_buffer_float: int
kMGLext_ARB_fragment_program_shadow: int
kMGLext_ATI_pixel_format_float: int
kMGLext_NV_float_buffer: int
kMGLext_ARB_OpenMGL20: int
kMGLext_ARB_explicit_attrib_location: int
kMGLext_ARB_instanced_arrays: int
kMGLext_ARB_ES2_compatibility: int
kMGLext_EXT_compiled_vertex_array: int
kMGLext_EXT_cull_vertex: int
kMGLext_EXT_secondary_color: int
kMGLext_EXT_fog_coord: int
kMGLext_EXT_vertex_weighting: int
kMGLext_EXT_vertex_shader: int
kMGLext_EXT_texture_filter_anisotropic: int
kMGLext_texture_compression_s3tc: int
kMGLext_EXT_transform_feedback: int
kMGLext_ARB_sync: int
kMGLext_ARB_cl_event: int
kMGLext_ATI_fragment_shader: int
kMGLext_ATI_meminfo: int
kMGLext_ATI_texture_mirror_once: int
kMGLext_NV_fence: int
kMGLext_NV_register_combiners: int
kMGLext_NV_texture_shader: int
kMGLext_NV_vertex_array_range: int
kMGLext_NV_vertex_program: int
kMGLext_NV_fragment_program: int
kMGLext_NV_occlusion_query: int
kMGLext_NV_primitive_restart: int
kMGLext_NV_transform_feedback: int
kMGLext_NVX_gpu_memory_info: int
kMGLext_SGIS_generate_mipmap: int
kMGLext_frame_buffer_object: int
kMGLext_packed_depth_stencil: int
kMGLext_framebuffer_multisample: int
kMGLext_texture_array: int
kMGLext_WMGL_ARB_extensions_string: int
kMGLext_WMGL_ARB_buffer_region: int
kMGLext_WMGL_ARB_pbuffer: int
kMGLext_WMGL_ARB_pixel_format: int
kMGLext_WMGL_ARB_make_current_read: int
kMGLext_WMGL_ARB_render_texture: int
kMGLext_WMGL_NV_allocate_memory: int
kMGLext_MGLX_create_pbuffer: int
kMGLext_MGLX_choose_fbconfig: int
kMGLext_MGLX_create_new_context: int
kMGLext_MGLX_destroy_window: int
kMGLext_MGLX_destroy_pbuffer: int
kMGLext_MGLX_create_pbuffer_sgix: int
kMGLext_MGLX_choose_fbconfig_sgix: int
kMGLext_MGLX_create_context_with_config_sgix: int
kMGLext_MGLX_get_visual_from_fbconfig_sgix: int
kMGLext_NUMBER_OF_EXTENSIONS: int

class MGLFunctionTable:
    __init__: ClassVar[Callable] = ...
    kMGL_Version11: ClassVar[int] = ...
    kMGL_Version12: ClassVar[int] = ...
    kMGL_Version121: ClassVar[int] = ...
    kMGL_Version13: ClassVar[int] = ...
    kMGL_Version14: ClassVar[int] = ...
    kMGL_Version15: ClassVar[int] = ...
    kMGL_Version20: ClassVar[int] = ...
    thisown: Incomplete
    @classmethod
    def glClear(cls, *args, **kwargs): ...
    @classmethod
    def glClearAccum(cls, *args, **kwargs): ...
    @classmethod
    def glClearColor(cls, *args, **kwargs): ...
    @classmethod
    def glClearDepth(cls, *args, **kwargs): ...
    @classmethod
    def glClearIndex(cls, *args, **kwargs): ...
    @classmethod
    def glClearStencil(cls, *args, **kwargs): ...
    @classmethod
    def glSampleCoverage(cls, *args, **kwargs): ...
    @classmethod
    def extensionExists(cls, *args, **kwargs): ...
    @classmethod
    def numTexUnits(cls, *args, **kwargs): ...
    @classmethod
    def numTexInterpolants(cls, *args, **kwargs): ...
    @classmethod
    def numTexImageUnits(cls, *args, **kwargs): ...
    @classmethod
    def maxTextureSize(cls, *args, **kwargs): ...
    @classmethod
    def maxVertexAttributes(cls, *args, **kwargs): ...
    @classmethod
    def glAccum(cls, *args, **kwargs): ...
    @classmethod
    def glAlphaFunc(cls, *args, **kwargs): ...
    @classmethod
    def glAreTexturesResident(cls, *args, **kwargs): ...
    @classmethod
    def glArrayElement(cls, *args, **kwargs): ...
    @classmethod
    def glBegin(cls, *args, **kwargs): ...
    @classmethod
    def glBindTexture(cls, *args, **kwargs): ...
    @classmethod
    def glBitmap(cls, *args, **kwargs): ...
    @classmethod
    def glBlendFunc(cls, *args, **kwargs): ...
    @classmethod
    def glCallList(cls, *args, **kwargs): ...
    @classmethod
    def glCallLists(cls, *args, **kwargs): ...
    @classmethod
    def glClipPlane(cls, *args, **kwargs): ...
    @classmethod
    def glColor3b(cls, *args, **kwargs): ...
    @classmethod
    def glColor3bv(cls, *args, **kwargs): ...
    @classmethod
    def glColor3d(cls, *args, **kwargs): ...
    @classmethod
    def glColor3dv(cls, *args, **kwargs): ...
    @classmethod
    def glColor3f(cls, *args, **kwargs): ...
    @classmethod
    def glColor3fv(cls, *args, **kwargs): ...
    @classmethod
    def glColor3i(cls, *args, **kwargs): ...
    @classmethod
    def glColor3iv(cls, *args, **kwargs): ...
    @classmethod
    def glColor3s(cls, *args, **kwargs): ...
    @classmethod
    def glColor3sv(cls, *args, **kwargs): ...
    @classmethod
    def glColor3ub(cls, *args, **kwargs): ...
    @classmethod
    def glColor3ubv(cls, *args, **kwargs): ...
    @classmethod
    def glColor3ui(cls, *args, **kwargs): ...
    @classmethod
    def glColor3uiv(cls, *args, **kwargs): ...
    @classmethod
    def glColor3us(cls, *args, **kwargs): ...
    @classmethod
    def glColor3usv(cls, *args, **kwargs): ...
    @classmethod
    def glColor4b(cls, *args, **kwargs): ...
    @classmethod
    def glColor4bv(cls, *args, **kwargs): ...
    @classmethod
    def glColor4d(cls, *args, **kwargs): ...
    @classmethod
    def glColor4dv(cls, *args, **kwargs): ...
    @classmethod
    def glColor4f(cls, *args, **kwargs): ...
    @classmethod
    def glColor4fv(cls, *args, **kwargs): ...
    @classmethod
    def glColor4i(cls, *args, **kwargs): ...
    @classmethod
    def glColor4iv(cls, *args, **kwargs): ...
    @classmethod
    def glColor4s(cls, *args, **kwargs): ...
    @classmethod
    def glColor4sv(cls, *args, **kwargs): ...
    @classmethod
    def glColor4ub(cls, *args, **kwargs): ...
    @classmethod
    def glColor4ubv(cls, *args, **kwargs): ...
    @classmethod
    def glColor4ui(cls, *args, **kwargs): ...
    @classmethod
    def glColor4uiv(cls, *args, **kwargs): ...
    @classmethod
    def glColor4us(cls, *args, **kwargs): ...
    @classmethod
    def glColor4usv(cls, *args, **kwargs): ...
    @classmethod
    def glColorMask(cls, *args, **kwargs): ...
    @classmethod
    def glColorMaterial(cls, *args, **kwargs): ...
    @classmethod
    def glColorPointer(cls, *args, **kwargs): ...
    @classmethod
    def glCopyPixels(cls, *args, **kwargs): ...
    @classmethod
    def glCopyTexImage1D(cls, *args, **kwargs): ...
    @classmethod
    def glCopyTexImage2D(cls, *args, **kwargs): ...
    @classmethod
    def glCopyTexSubImage1D(cls, *args, **kwargs): ...
    @classmethod
    def glCopyTexSubImage2D(cls, *args, **kwargs): ...
    @classmethod
    def glCullFace(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteLists(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteTextures(cls, *args, **kwargs): ...
    @classmethod
    def glDepthFunc(cls, *args, **kwargs): ...
    @classmethod
    def glDepthMask(cls, *args, **kwargs): ...
    @classmethod
    def glDepthRange(cls, *args, **kwargs): ...
    @classmethod
    def glDisable(cls, *args, **kwargs): ...
    @classmethod
    def glDisableClientState(cls, *args, **kwargs): ...
    @classmethod
    def glDrawArrays(cls, *args, **kwargs): ...
    @classmethod
    def glDrawBuffer(cls, *args, **kwargs): ...
    @classmethod
    def glDrawElements(cls, *args, **kwargs): ...
    @classmethod
    def glDrawPixels(cls, *args, **kwargs): ...
    @classmethod
    def glEdgeFlag(cls, *args, **kwargs): ...
    @classmethod
    def glEdgeFlagPointer(cls, *args, **kwargs): ...
    @classmethod
    def glEdgeFlagv(cls, *args, **kwargs): ...
    @classmethod
    def glEnable(cls, *args, **kwargs): ...
    @classmethod
    def glEnableClientState(cls, *args, **kwargs): ...
    @classmethod
    def glEnd(cls, *args, **kwargs): ...
    @classmethod
    def glEndList(cls, *args, **kwargs): ...
    @classmethod
    def glEvalCoord1d(cls, *args, **kwargs): ...
    @classmethod
    def glEvalCoord1dv(cls, *args, **kwargs): ...
    @classmethod
    def glEvalCoord1f(cls, *args, **kwargs): ...
    @classmethod
    def glEvalCoord1fv(cls, *args, **kwargs): ...
    @classmethod
    def glEvalCoord2d(cls, *args, **kwargs): ...
    @classmethod
    def glEvalCoord2dv(cls, *args, **kwargs): ...
    @classmethod
    def glEvalCoord2f(cls, *args, **kwargs): ...
    @classmethod
    def glEvalCoord2fv(cls, *args, **kwargs): ...
    @classmethod
    def glEvalMesh1(cls, *args, **kwargs): ...
    @classmethod
    def glEvalMesh2(cls, *args, **kwargs): ...
    @classmethod
    def glEvalPoint1(cls, *args, **kwargs): ...
    @classmethod
    def glEvalPoint2(cls, *args, **kwargs): ...
    @classmethod
    def glFeedbackBuffer(cls, *args, **kwargs): ...
    @classmethod
    def glFinish(cls, *args, **kwargs): ...
    @classmethod
    def glFlush(cls, *args, **kwargs): ...
    @classmethod
    def glFogf(cls, *args, **kwargs): ...
    @classmethod
    def glFogfv(cls, *args, **kwargs): ...
    @classmethod
    def glFogi(cls, *args, **kwargs): ...
    @classmethod
    def glFogiv(cls, *args, **kwargs): ...
    @classmethod
    def glFrontFace(cls, *args, **kwargs): ...
    @classmethod
    def glFrustum(cls, *args, **kwargs): ...
    @classmethod
    def glGenLists(cls, *args, **kwargs): ...
    @classmethod
    def glGenTextures(cls, *args, **kwargs): ...
    @classmethod
    def glGetBooleanv(cls, *args, **kwargs): ...
    @classmethod
    def glGetClipPlane(cls, *args, **kwargs): ...
    @classmethod
    def glGetDoublev(cls, *args, **kwargs): ...
    @classmethod
    def glGetError(cls, *args, **kwargs): ...
    @classmethod
    def glGetFloatv(cls, *args, **kwargs): ...
    @classmethod
    def glGetIntegerv(cls, *args, **kwargs): ...
    @classmethod
    def glGetLightfv(cls, *args, **kwargs): ...
    @classmethod
    def glGetLightiv(cls, *args, **kwargs): ...
    @classmethod
    def glGetMapdv(cls, *args, **kwargs): ...
    @classmethod
    def glGetMapfv(cls, *args, **kwargs): ...
    @classmethod
    def glGetMapiv(cls, *args, **kwargs): ...
    @classmethod
    def glGetMaterialfv(cls, *args, **kwargs): ...
    @classmethod
    def glGetMaterialiv(cls, *args, **kwargs): ...
    @classmethod
    def glGetPixelMapfv(cls, *args, **kwargs): ...
    @classmethod
    def glGetPixelMapuiv(cls, *args, **kwargs): ...
    @classmethod
    def glGetPixelMapusv(cls, *args, **kwargs): ...
    @classmethod
    def glGetPointerv(cls, *args, **kwargs): ...
    @classmethod
    def glGetPolygonStipple(cls, *args, **kwargs): ...
    @classmethod
    def glGetString(cls, *args, **kwargs): ...
    @classmethod
    def glGetTexEnvfv(cls, *args, **kwargs): ...
    @classmethod
    def glGetTexEnviv(cls, *args, **kwargs): ...
    @classmethod
    def glGetTexGendv(cls, *args, **kwargs): ...
    @classmethod
    def glGetTexGenfv(cls, *args, **kwargs): ...
    @classmethod
    def glGetTexGeniv(cls, *args, **kwargs): ...
    @classmethod
    def glGetTexImage(cls, *args, **kwargs): ...
    @classmethod
    def glGetTexLevelParameterfv(cls, *args, **kwargs): ...
    @classmethod
    def glGetTexLevelParameteriv(cls, *args, **kwargs): ...
    @classmethod
    def glGetTexParameterfv(cls, *args, **kwargs): ...
    @classmethod
    def glGetTexParameteriv(cls, *args, **kwargs): ...
    @classmethod
    def glHint(cls, *args, **kwargs): ...
    @classmethod
    def glIndexMask(cls, *args, **kwargs): ...
    @classmethod
    def glIndexPointer(cls, *args, **kwargs): ...
    @classmethod
    def glIndexd(cls, *args, **kwargs): ...
    @classmethod
    def glIndexdv(cls, *args, **kwargs): ...
    @classmethod
    def glIndexf(cls, *args, **kwargs): ...
    @classmethod
    def glIndexfv(cls, *args, **kwargs): ...
    @classmethod
    def glIndexi(cls, *args, **kwargs): ...
    @classmethod
    def glIndexiv(cls, *args, **kwargs): ...
    @classmethod
    def glIndexs(cls, *args, **kwargs): ...
    @classmethod
    def glIndexsv(cls, *args, **kwargs): ...
    @classmethod
    def glIndexub(cls, *args, **kwargs): ...
    @classmethod
    def glIndexubv(cls, *args, **kwargs): ...
    @classmethod
    def glInitNames(cls, *args, **kwargs): ...
    @classmethod
    def glInterleavedArrays(cls, *args, **kwargs): ...
    @classmethod
    def glIsEnabled(cls, *args, **kwargs): ...
    @classmethod
    def glIsList(cls, *args, **kwargs): ...
    @classmethod
    def glIsTexture(cls, *args, **kwargs): ...
    @classmethod
    def glLightModelf(cls, *args, **kwargs): ...
    @classmethod
    def glLightModelfv(cls, *args, **kwargs): ...
    @classmethod
    def glLightModeli(cls, *args, **kwargs): ...
    @classmethod
    def glLightModeliv(cls, *args, **kwargs): ...
    @classmethod
    def glLightf(cls, *args, **kwargs): ...
    @classmethod
    def glLightfv(cls, *args, **kwargs): ...
    @classmethod
    def glLighti(cls, *args, **kwargs): ...
    @classmethod
    def glLightiv(cls, *args, **kwargs): ...
    @classmethod
    def glLineStipple(cls, *args, **kwargs): ...
    @classmethod
    def glLineWidth(cls, *args, **kwargs): ...
    @classmethod
    def glListBase(cls, *args, **kwargs): ...
    @classmethod
    def glLoadIdentity(cls, *args, **kwargs): ...
    @classmethod
    def glLoadMatrixd(cls, *args, **kwargs): ...
    @classmethod
    def glLoadMatrixf(cls, *args, **kwargs): ...
    @classmethod
    def glLoadName(cls, *args, **kwargs): ...
    @classmethod
    def glLogicOp(cls, *args, **kwargs): ...
    @classmethod
    def glMap1d(cls, *args, **kwargs): ...
    @classmethod
    def glMap1f(cls, *args, **kwargs): ...
    @classmethod
    def glMap2d(cls, *args, **kwargs): ...
    @classmethod
    def glMap2f(cls, *args, **kwargs): ...
    @classmethod
    def glMapGrid1d(cls, *args, **kwargs): ...
    @classmethod
    def glMapGrid1f(cls, *args, **kwargs): ...
    @classmethod
    def glMapGrid2d(cls, *args, **kwargs): ...
    @classmethod
    def glMapGrid2f(cls, *args, **kwargs): ...
    @classmethod
    def glMaterialf(cls, *args, **kwargs): ...
    @classmethod
    def glMaterialfv(cls, *args, **kwargs): ...
    @classmethod
    def glMateriali(cls, *args, **kwargs): ...
    @classmethod
    def glMaterialiv(cls, *args, **kwargs): ...
    @classmethod
    def glMatrixMode(cls, *args, **kwargs): ...
    @classmethod
    def glMultMatrixd(cls, *args, **kwargs): ...
    @classmethod
    def glMultMatrixf(cls, *args, **kwargs): ...
    @classmethod
    def glNewList(cls, *args, **kwargs): ...
    @classmethod
    def glNormal3b(cls, *args, **kwargs): ...
    @classmethod
    def glNormal3bv(cls, *args, **kwargs): ...
    @classmethod
    def glNormal3d(cls, *args, **kwargs): ...
    @classmethod
    def glNormal3dv(cls, *args, **kwargs): ...
    @classmethod
    def glNormal3f(cls, *args, **kwargs): ...
    @classmethod
    def glNormal3fv(cls, *args, **kwargs): ...
    @classmethod
    def glNormal3i(cls, *args, **kwargs): ...
    @classmethod
    def glNormal3iv(cls, *args, **kwargs): ...
    @classmethod
    def glNormal3s(cls, *args, **kwargs): ...
    @classmethod
    def glNormal3sv(cls, *args, **kwargs): ...
    @classmethod
    def glNormalPointer(cls, *args, **kwargs): ...
    @classmethod
    def glOrtho(cls, *args, **kwargs): ...
    @classmethod
    def glPassThrough(cls, *args, **kwargs): ...
    @classmethod
    def glPixelMapfv(cls, *args, **kwargs): ...
    @classmethod
    def glPixelMapuiv(cls, *args, **kwargs): ...
    @classmethod
    def glPixelMapusv(cls, *args, **kwargs): ...
    @classmethod
    def glPixelStoref(cls, *args, **kwargs): ...
    @classmethod
    def glPixelStorei(cls, *args, **kwargs): ...
    @classmethod
    def glPixelTransferf(cls, *args, **kwargs): ...
    @classmethod
    def glPixelTransferi(cls, *args, **kwargs): ...
    @classmethod
    def glPixelZoom(cls, *args, **kwargs): ...
    @classmethod
    def glPointSize(cls, *args, **kwargs): ...
    @classmethod
    def glPolygonMode(cls, *args, **kwargs): ...
    @classmethod
    def glPolygonOffset(cls, *args, **kwargs): ...
    @classmethod
    def glPolygonStipple(cls, *args, **kwargs): ...
    @classmethod
    def glPopAttrib(cls, *args, **kwargs): ...
    @classmethod
    def glPopClientAttrib(cls, *args, **kwargs): ...
    @classmethod
    def glPopMatrix(cls, *args, **kwargs): ...
    @classmethod
    def glPopName(cls, *args, **kwargs): ...
    @classmethod
    def glPrioritizeTextures(cls, *args, **kwargs): ...
    @classmethod
    def glPushAttrib(cls, *args, **kwargs): ...
    @classmethod
    def glPushClientAttrib(cls, *args, **kwargs): ...
    @classmethod
    def glPushMatrix(cls, *args, **kwargs): ...
    @classmethod
    def glPushName(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos2d(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos2dv(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos2f(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos2fv(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos2i(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos2iv(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos2s(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos2sv(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos3d(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos3dv(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos3f(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos3fv(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos3i(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos3iv(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos3s(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos3sv(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos4d(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos4dv(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos4f(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos4fv(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos4i(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos4iv(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos4s(cls, *args, **kwargs): ...
    @classmethod
    def glRasterPos4sv(cls, *args, **kwargs): ...
    @classmethod
    def glReadBuffer(cls, *args, **kwargs): ...
    @classmethod
    def glReadPixels(cls, *args, **kwargs): ...
    @classmethod
    def glRectd(cls, *args, **kwargs): ...
    @classmethod
    def glRectdv(cls, *args, **kwargs): ...
    @classmethod
    def glRectf(cls, *args, **kwargs): ...
    @classmethod
    def glRectfv(cls, *args, **kwargs): ...
    @classmethod
    def glRecti(cls, *args, **kwargs): ...
    @classmethod
    def glRectiv(cls, *args, **kwargs): ...
    @classmethod
    def glRects(cls, *args, **kwargs): ...
    @classmethod
    def glRectsv(cls, *args, **kwargs): ...
    @classmethod
    def glRenderMode(cls, *args, **kwargs): ...
    @classmethod
    def glRotated(cls, *args, **kwargs): ...
    @classmethod
    def glRotatef(cls, *args, **kwargs): ...
    @classmethod
    def glScaled(cls, *args, **kwargs): ...
    @classmethod
    def glScalef(cls, *args, **kwargs): ...
    @classmethod
    def glScissor(cls, *args, **kwargs): ...
    @classmethod
    def glSelectBuffer(cls, *args, **kwargs): ...
    @classmethod
    def glShadeModel(cls, *args, **kwargs): ...
    @classmethod
    def glStencilFunc(cls, *args, **kwargs): ...
    @classmethod
    def glStencilMask(cls, *args, **kwargs): ...
    @classmethod
    def glStencilOp(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord1d(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord1dv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord1f(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord1fv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord1i(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord1iv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord1s(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord1sv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord2d(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord2dv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord2f(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord2fv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord2i(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord2iv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord2s(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord2sv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord3d(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord3dv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord3f(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord3fv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord3i(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord3iv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord3s(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord3sv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord4d(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord4dv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord4f(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord4fv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord4i(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord4iv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord4s(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoord4sv(cls, *args, **kwargs): ...
    @classmethod
    def glTexCoordPointer(cls, *args, **kwargs): ...
    @classmethod
    def glTexEnvf(cls, *args, **kwargs): ...
    @classmethod
    def glTexEnvfv(cls, *args, **kwargs): ...
    @classmethod
    def glTexEnvi(cls, *args, **kwargs): ...
    @classmethod
    def glTexEnviv(cls, *args, **kwargs): ...
    @classmethod
    def glTexGend(cls, *args, **kwargs): ...
    @classmethod
    def glTexGendv(cls, *args, **kwargs): ...
    @classmethod
    def glTexGenf(cls, *args, **kwargs): ...
    @classmethod
    def glTexGenfv(cls, *args, **kwargs): ...
    @classmethod
    def glTexGeni(cls, *args, **kwargs): ...
    @classmethod
    def glTexGeniv(cls, *args, **kwargs): ...
    @classmethod
    def glTexImage1D(cls, *args, **kwargs): ...
    @classmethod
    def glTexImage2D(cls, *args, **kwargs): ...
    @classmethod
    def glTexParameterf(cls, *args, **kwargs): ...
    @classmethod
    def glTexParameterfv(cls, *args, **kwargs): ...
    @classmethod
    def glTexParameteri(cls, *args, **kwargs): ...
    @classmethod
    def glTexParameteriv(cls, *args, **kwargs): ...
    @classmethod
    def glTexSubImage1D(cls, *args, **kwargs): ...
    @classmethod
    def glTexSubImage2D(cls, *args, **kwargs): ...
    @classmethod
    def glTranslated(cls, *args, **kwargs): ...
    @classmethod
    def glTranslatef(cls, *args, **kwargs): ...
    @classmethod
    def glVertex2d(cls, *args, **kwargs): ...
    @classmethod
    def glVertex2dv(cls, *args, **kwargs): ...
    @classmethod
    def glVertex2f(cls, *args, **kwargs): ...
    @classmethod
    def glVertex2fv(cls, *args, **kwargs): ...
    @classmethod
    def glVertex2i(cls, *args, **kwargs): ...
    @classmethod
    def glVertex2iv(cls, *args, **kwargs): ...
    @classmethod
    def glVertex2s(cls, *args, **kwargs): ...
    @classmethod
    def glVertex2sv(cls, *args, **kwargs): ...
    @classmethod
    def glVertex3d(cls, *args, **kwargs): ...
    @classmethod
    def glVertex3dv(cls, *args, **kwargs): ...
    @classmethod
    def glVertex3f(cls, *args, **kwargs): ...
    @classmethod
    def glVertex3fv(cls, *args, **kwargs): ...
    @classmethod
    def glVertex3i(cls, *args, **kwargs): ...
    @classmethod
    def glVertex3iv(cls, *args, **kwargs): ...
    @classmethod
    def glVertex3s(cls, *args, **kwargs): ...
    @classmethod
    def glVertex3sv(cls, *args, **kwargs): ...
    @classmethod
    def glVertex4d(cls, *args, **kwargs): ...
    @classmethod
    def glVertex4dv(cls, *args, **kwargs): ...
    @classmethod
    def glVertex4f(cls, *args, **kwargs): ...
    @classmethod
    def glVertex4fv(cls, *args, **kwargs): ...
    @classmethod
    def glVertex4i(cls, *args, **kwargs): ...
    @classmethod
    def glVertex4iv(cls, *args, **kwargs): ...
    @classmethod
    def glVertex4s(cls, *args, **kwargs): ...
    @classmethod
    def glVertex4sv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexPointer(cls, *args, **kwargs): ...
    @classmethod
    def glViewport(cls, *args, **kwargs): ...
    @classmethod
    def glDrawRangeElements(cls, *args, **kwargs): ...
    @classmethod
    def glTexImage3D(cls, *args, **kwargs): ...
    @classmethod
    def glTexSubImage3D(cls, *args, **kwargs): ...
    @classmethod
    def glCopyTexSubImage3D(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord1d(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord1dv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord1f(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord1fv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord1i(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord1iv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord1s(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord1sv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord2d(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord2dv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord2f(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord2fv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord2i(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord2iv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord2s(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord2sv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord3d(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord3dv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord3f(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord3fv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord3i(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord3iv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord3s(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord3sv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord4d(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord4dv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord4f(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord4fv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord4i(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord4iv(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord4s(cls, *args, **kwargs): ...
    @classmethod
    def glMultiTexCoord4sv(cls, *args, **kwargs): ...
    @classmethod
    def glActiveTexture(cls, *args, **kwargs): ...
    @classmethod
    def glClientActiveTexture(cls, *args, **kwargs): ...
    @classmethod
    def glCompressedTexImage1D(cls, *args, **kwargs): ...
    @classmethod
    def glCompressedTexImage2D(cls, *args, **kwargs): ...
    @classmethod
    def glCompressedTexImage3D(cls, *args, **kwargs): ...
    @classmethod
    def glCompressedTexSubImage1D(cls, *args, **kwargs): ...
    @classmethod
    def glCompressedTexSubImage2D(cls, *args, **kwargs): ...
    @classmethod
    def glCompressedTexSubImage3D(cls, *args, **kwargs): ...
    @classmethod
    def glGetCompressedTexImage(cls, *args, **kwargs): ...
    @classmethod
    def glLoadTransposeMatrixf(cls, *args, **kwargs): ...
    @classmethod
    def glLoadTransposeMatrixd(cls, *args, **kwargs): ...
    @classmethod
    def glMultTransposeMatrixf(cls, *args, **kwargs): ...
    @classmethod
    def glMultTransposeMatrixd(cls, *args, **kwargs): ...
    @classmethod
    def glMultiDrawArrays(cls, *args, **kwargs): ...
    @classmethod
    def glMultiDrawElements(cls, *args, **kwargs): ...
    @classmethod
    def glBlendEquationEXT(cls, *args, **kwargs): ...
    @classmethod
    def glPointParameterf(cls, *args, **kwargs): ...
    @classmethod
    def glPointParameterfv(cls, *args, **kwargs): ...
    @classmethod
    def glLoadTransposeMatrixfARB(cls, *args, **kwargs): ...
    @classmethod
    def glLoadTransposeMatrixdARB(cls, *args, **kwargs): ...
    @classmethod
    def glMultTransposeMatrixfARB(cls, *args, **kwargs): ...
    @classmethod
    def glMultTransposeMatrixdARB(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1s(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1f(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1d(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2s(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2f(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2d(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3s(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3f(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3d(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4s(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4f(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4d(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4Nub(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1sv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1fv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1dv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2sv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2fv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2dv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3sv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3fv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3dv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4bv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4sv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4iv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4ubv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4usv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4uiv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4fv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4dv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4Nbv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4Nsv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4Niv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4Nubv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4Nusv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4Nuiv(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribPointer(cls, *args, **kwargs): ...
    @classmethod
    def glEnableVertexAttribArray(cls, *args, **kwargs): ...
    @classmethod
    def glDisableVertexAttribArray(cls, *args, **kwargs): ...
    @classmethod
    def glProgramString(cls, *args, **kwargs): ...
    @classmethod
    def glBindProgram(cls, *args, **kwargs): ...
    @classmethod
    def glDeletePrograms(cls, *args, **kwargs): ...
    @classmethod
    def glGenPrograms(cls, *args, **kwargs): ...
    @classmethod
    def glProgramEnvParameter4d(cls, *args, **kwargs): ...
    @classmethod
    def glProgramEnvParameter4dv(cls, *args, **kwargs): ...
    @classmethod
    def glProgramEnvParameter4f(cls, *args, **kwargs): ...
    @classmethod
    def glProgramEnvParameter4fv(cls, *args, **kwargs): ...
    @classmethod
    def glProgramLocalParameter4d(cls, *args, **kwargs): ...
    @classmethod
    def glProgramLocalParameter4dv(cls, *args, **kwargs): ...
    @classmethod
    def glProgramLocalParameter4f(cls, *args, **kwargs): ...
    @classmethod
    def glProgramLocalParameter4fv(cls, *args, **kwargs): ...
    @classmethod
    def glGetProgramEnvParameterdv(cls, *args, **kwargs): ...
    @classmethod
    def glGetProgramEnvParameterfv(cls, *args, **kwargs): ...
    @classmethod
    def glGetProgramLocalParameterdv(cls, *args, **kwargs): ...
    @classmethod
    def glGetProgramLocalParameterfv(cls, *args, **kwargs): ...
    @classmethod
    def glGetProgramiv(cls, *args, **kwargs): ...
    @classmethod
    def glGetProgramString(cls, *args, **kwargs): ...
    @classmethod
    def glGetVertexAttribdv(cls, *args, **kwargs): ...
    @classmethod
    def glGetVertexAttribfv(cls, *args, **kwargs): ...
    @classmethod
    def glGetVertexAttribiv(cls, *args, **kwargs): ...
    @classmethod
    def glGetVertexAttribPointerv(cls, *args, **kwargs): ...
    @classmethod
    def glIsProgram(cls, *args, **kwargs): ...
    @classmethod
    def glGenFragmentShadersATI(cls, *args, **kwargs): ...
    @classmethod
    def glBindFragmentShaderATI(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteFragmentShaderATI(cls, *args, **kwargs): ...
    @classmethod
    def glBeginFragmentShaderATI(cls, *args, **kwargs): ...
    @classmethod
    def glEndFragmentShaderATI(cls, *args, **kwargs): ...
    @classmethod
    def glPassTexCoordATI(cls, *args, **kwargs): ...
    @classmethod
    def glSampleMapATI(cls, *args, **kwargs): ...
    @classmethod
    def glColorFragmentOp1ATI(cls, *args, **kwargs): ...
    @classmethod
    def glColorFragmentOp2ATI(cls, *args, **kwargs): ...
    @classmethod
    def glColorFragmentOp3ATI(cls, *args, **kwargs): ...
    @classmethod
    def glAlphaFragmentOp1ATI(cls, *args, **kwargs): ...
    @classmethod
    def glAlphaFragmentOp2ATI(cls, *args, **kwargs): ...
    @classmethod
    def glAlphaFragmentOp3ATI(cls, *args, **kwargs): ...
    @classmethod
    def glSetFragmentShaderConstantATI(cls, *args, **kwargs): ...
    @classmethod
    def glPNTrianglesiATI(cls, *args, **kwargs): ...
    @classmethod
    def glPNTrianglesfATI(cls, *args, **kwargs): ...
    @classmethod
    def glLockArraysEXT(cls, *args, **kwargs): ...
    @classmethod
    def glUnlockArraysEXT(cls, *args, **kwargs): ...
    @classmethod
    def glCullParameterdvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glCullParameterfvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3bEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3bvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3dEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3dvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3fEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3fvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3iEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3ivEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3sEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3svEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3ubEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3ubvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3uiEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3uivEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3usEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColor3usvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSecondaryColorPointerEXT(cls, *args, **kwargs): ...
    @classmethod
    def glFogCoordfEXT(cls, *args, **kwargs): ...
    @classmethod
    def glFogCoordfvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glFogCoorddEXT(cls, *args, **kwargs): ...
    @classmethod
    def glFogCoorddvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glFogCoordPointerEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBeginVertexShaderEXT(cls, *args, **kwargs): ...
    @classmethod
    def glEndVertexShaderEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBindVertexShaderEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGenVertexShadersEXT(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteVertexShaderEXT(cls, *args, **kwargs): ...
    @classmethod
    def glShaderOp1EXT(cls, *args, **kwargs): ...
    @classmethod
    def glShaderOp2EXT(cls, *args, **kwargs): ...
    @classmethod
    def glShaderOp3EXT(cls, *args, **kwargs): ...
    @classmethod
    def glSwizzleEXT(cls, *args, **kwargs): ...
    @classmethod
    def glWriteMaskEXT(cls, *args, **kwargs): ...
    @classmethod
    def glInsertComponentEXT(cls, *args, **kwargs): ...
    @classmethod
    def glExtractComponentEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGenSymbolsEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSetInvariantEXT(cls, *args, **kwargs): ...
    @classmethod
    def glSetLocalConstantEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVariantbvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVariantsvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVariantivEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVariantfvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVariantdvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVariantubvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVariantusvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVariantuivEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVariantPointerEXT(cls, *args, **kwargs): ...
    @classmethod
    def glEnableVariantClientStateEXT(cls, *args, **kwargs): ...
    @classmethod
    def glDisableVariantClientStateEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBindLightParameterEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBindMaterialParameterEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBindTexGenParameterEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBindTextureUnitParameterEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBindParameterEXT(cls, *args, **kwargs): ...
    @classmethod
    def glIsVariantEnabledEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetVariantBooleanvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetVariantIntegervEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetVariantFloatvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetVariantPointervEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetInvariantBooleanvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetInvariantIntegervEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetInvariantFloatvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetLocalConstantBooleanvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetLocalConstantIntegervEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetLocalConstantFloatvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVertexWeightfEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVertexWeightfvEXT(cls, *args, **kwargs): ...
    @classmethod
    def glVertexWeightPointerEXT(cls, *args, **kwargs): ...
    @classmethod
    def glFlushVertexArrayRangeNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexArrayRangeNV(cls, *args, **kwargs): ...
    @classmethod
    def glBindProgramNV(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteProgramsNV(cls, *args, **kwargs): ...
    @classmethod
    def glExecuteProgramNV(cls, *args, **kwargs): ...
    @classmethod
    def glGenProgramsNV(cls, *args, **kwargs): ...
    @classmethod
    def glAreProgramsResidentNV(cls, *args, **kwargs): ...
    @classmethod
    def glRequestResidentProgramsNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetProgramParameterfvNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetProgramParameterdvNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetProgramivNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetProgramStringNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetTrackMatrixivNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetVertexAttribdvNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetVertexAttribfvNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetVertexAttribivNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetVertexAttribPointervNV(cls, *args, **kwargs): ...
    @classmethod
    def glIsProgramNV(cls, *args, **kwargs): ...
    @classmethod
    def glLoadProgramNV(cls, *args, **kwargs): ...
    @classmethod
    def glProgramParameter4fNV(cls, *args, **kwargs): ...
    @classmethod
    def glProgramParameter4dNV(cls, *args, **kwargs): ...
    @classmethod
    def glProgramParameter4dvNV(cls, *args, **kwargs): ...
    @classmethod
    def glProgramParameter4fvNV(cls, *args, **kwargs): ...
    @classmethod
    def glProgramParameters4dvNV(cls, *args, **kwargs): ...
    @classmethod
    def glProgramParameters4fvNV(cls, *args, **kwargs): ...
    @classmethod
    def glTrackMatrixNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribPointerNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1sNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1fNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1dNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2sNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2fNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2dNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3sNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3fNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3dNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4sNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4fNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4dNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4ubNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1svNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1fvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib1dvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2svNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2fvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib2dvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3svNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3fvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib3dvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4svNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4fvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4dvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttrib4ubvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs1svNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs1fvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs1dvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs2svNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs2fvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs2dvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs3svNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs3fvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs3dvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs4svNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs4fvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs4dvNV(cls, *args, **kwargs): ...
    @classmethod
    def glVertexAttribs4ubvNV(cls, *args, **kwargs): ...
    @classmethod
    def glGenFencesNV(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteFencesNV(cls, *args, **kwargs): ...
    @classmethod
    def glSetFenceNV(cls, *args, **kwargs): ...
    @classmethod
    def glTestFenceNV(cls, *args, **kwargs): ...
    @classmethod
    def glFinishFenceNV(cls, *args, **kwargs): ...
    @classmethod
    def glIsFenceNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetFenceivNV(cls, *args, **kwargs): ...
    @classmethod
    def glCombinerParameterfvNV(cls, *args, **kwargs): ...
    @classmethod
    def glCombinerParameterfNV(cls, *args, **kwargs): ...
    @classmethod
    def glCombinerParameterivNV(cls, *args, **kwargs): ...
    @classmethod
    def glCombinerParameteriNV(cls, *args, **kwargs): ...
    @classmethod
    def glCombinerInputNV(cls, *args, **kwargs): ...
    @classmethod
    def glCombinerOutputNV(cls, *args, **kwargs): ...
    @classmethod
    def glFinalCombinerInputNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetCombinerInputParameterfvNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetCombinerInputParameterivNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetCombinerOutputParameterfvNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetCombinerOutputParameterivNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetFinalCombinerInputParameterfvNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetFinalCombinerInputParameterivNV(cls, *args, **kwargs): ...
    @classmethod
    def glGenOcclusionQueriesNV(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteOcclusionQueriesNV(cls, *args, **kwargs): ...
    @classmethod
    def glIsOcclusionQueryNV(cls, *args, **kwargs): ...
    @classmethod
    def glBeginOcclusionQueryNV(cls, *args, **kwargs): ...
    @classmethod
    def glEndOcclusionQueryNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetOcclusionQueryivNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetOcclusionQueryuivNV(cls, *args, **kwargs): ...
    @classmethod
    def glPrimitiveRestartNV(cls, *args, **kwargs): ...
    @classmethod
    def glPrimitiveRestartIndexNV(cls, *args, **kwargs): ...
    @classmethod
    def glGenQueriesARB(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteQueriesARB(cls, *args, **kwargs): ...
    @classmethod
    def glIsQueryARB(cls, *args, **kwargs): ...
    @classmethod
    def glBeginQueryARB(cls, *args, **kwargs): ...
    @classmethod
    def glEndQueryARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetQueryivARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetQueryObjectivARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetQueryObjectuivARB(cls, *args, **kwargs): ...
    @classmethod
    def glBindBufferARB(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteBuffersARB(cls, *args, **kwargs): ...
    @classmethod
    def glGenBuffersARB(cls, *args, **kwargs): ...
    @classmethod
    def glIsBufferARB(cls, *args, **kwargs): ...
    @classmethod
    def glBufferDataARB(cls, *args, **kwargs): ...
    @classmethod
    def glBufferSubDataARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetBufferSubDataARB(cls, *args, **kwargs): ...
    @classmethod
    def glMapBufferARB(cls, *args, **kwargs): ...
    @classmethod
    def glUnmapBufferARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetBufferParameterivARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetBufferPointervARB(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteObjectARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetHandleARB(cls, *args, **kwargs): ...
    @classmethod
    def glDetachObjectARB(cls, *args, **kwargs): ...
    @classmethod
    def glCreateShaderObjectARB(cls, *args, **kwargs): ...
    @classmethod
    def glShaderSourceARB(cls, *args, **kwargs): ...
    @classmethod
    def glCompileShaderARB(cls, *args, **kwargs): ...
    @classmethod
    def glCreateProgramObjectARB(cls, *args, **kwargs): ...
    @classmethod
    def glAttachObjectARB(cls, *args, **kwargs): ...
    @classmethod
    def glLinkProgramARB(cls, *args, **kwargs): ...
    @classmethod
    def glUseProgramObjectARB(cls, *args, **kwargs): ...
    @classmethod
    def glValidateProgramARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform1fARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform2fARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform3fARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform4fARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform1iARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform2iARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform3iARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform4iARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform1fvARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform2fvARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform3fvARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform4fvARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform1ivARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform2ivARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform3ivARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniform4ivARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniformMatrix2fvARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniformMatrix3fvARB(cls, *args, **kwargs): ...
    @classmethod
    def glUniformMatrix4fvARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetObjectParameterfvARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetObjectParameterivARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetInfoLogARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetAttachedObjectsARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetUniformLocationARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetActiveUniformARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetUniformfvARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetUniformivARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetShaderSourceARB(cls, *args, **kwargs): ...
    @classmethod
    def glBindAttribLocationARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetActiveAttribARB(cls, *args, **kwargs): ...
    @classmethod
    def glGetAttribLocationARB(cls, *args, **kwargs): ...
    @classmethod
    def glIsRenderbufferEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBindRenderbufferEXT(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteRenderbuffersEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGenRenderbuffersEXT(cls, *args, **kwargs): ...
    @classmethod
    def glRenderbufferStorageEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetRenderbufferParameterivEXT(cls, *args, **kwargs): ...
    @classmethod
    def glIsFramebufferEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBindFramebufferEXT(cls, *args, **kwargs): ...
    @classmethod
    def glDeleteFramebuffersEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGenFramebuffersEXT(cls, *args, **kwargs): ...
    @classmethod
    def glCheckFramebufferStatusEXT(cls, *args, **kwargs): ...
    @classmethod
    def glFramebufferTexture1DEXT(cls, *args, **kwargs): ...
    @classmethod
    def glFramebufferTexture2DEXT(cls, *args, **kwargs): ...
    @classmethod
    def glFramebufferTexture3DEXT(cls, *args, **kwargs): ...
    @classmethod
    def glFramebufferRenderbufferEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetFramebufferAttachmentParameterivEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGenerateMipmapEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBlitFramebufferEXT(cls, *args, **kwargs): ...
    @classmethod
    def glActiveVaryingNV(cls, *args, **kwargs): ...
    @classmethod
    def glBeginTransformFeedbackNV(cls, *args, **kwargs): ...
    @classmethod
    def glBindBufferBaseNV(cls, *args, **kwargs): ...
    @classmethod
    def glBindBufferOffsetNV(cls, *args, **kwargs): ...
    @classmethod
    def glBindBufferRangeNV(cls, *args, **kwargs): ...
    @classmethod
    def glEndTransformFeedbackNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetActiveVaryingNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetTransformFeedbackVaryingNV(cls, *args, **kwargs): ...
    @classmethod
    def glGetVaryingLocationNV(cls, *args, **kwargs): ...
    @classmethod
    def glTransformFeedbackAttribsNV(cls, *args, **kwargs): ...
    @classmethod
    def glTransformFeedbackVaryingsNV(cls, *args, **kwargs): ...
    @classmethod
    def glBeginTransformFeedbackEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBindBufferBaseEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBindBufferOffsetEXT(cls, *args, **kwargs): ...
    @classmethod
    def glBindBufferRangeEXT(cls, *args, **kwargs): ...
    @classmethod
    def glEndTransformFeedbackEXT(cls, *args, **kwargs): ...
    @classmethod
    def glGetTransformFeedbackVaryingEXT(cls, *args, **kwargs): ...
    @classmethod
    def glTransformFeedbackVaryingsEXT(cls, *args, **kwargs): ...

class MHardwareRenderer:
    __init__: ClassVar[Callable] = ...
    kSuccess: ClassVar[int] = ...
    kFailure: ClassVar[int] = ...
    kItemExists: ClassVar[int] = ...
    kItemNotFound: ClassVar[int] = ...
    kLocationNotFound: ClassVar[int] = ...
    kRGBA_Fix8: ClassVar[int] = ...
    kRGBA_Float16: ClassVar[int] = ...
    kDepth_Float32: ClassVar[int] = ...
    kPreRendering: ClassVar[int] = ...
    kPreExposure: ClassVar[int] = ...
    kPostExposure: ClassVar[int] = ...
    kPostRendering: ClassVar[int] = ...
    kDefaultSphere: ClassVar[int] = ...
    kDefaultPlane: ClassVar[int] = ...
    kDefaultCube: ClassVar[int] = ...
    thisown: Incomplete
    @staticmethod
    def theRenderer(*args, **kwargs): ...
    @classmethod
    def backEndString(cls, *args, **kwargs): ...
    @classmethod
    def addDrawProcedure(cls, *args, **kwargs): ...
    @classmethod
    def removeDrawProcedure(cls, *args, **kwargs): ...
    @classmethod
    def insertDrawProcedure(cls, *args, **kwargs): ...
    @classmethod
    def getDrawProcedureCount(cls, *args, **kwargs): ...
    @classmethod
    def getDrawProcedureListNames(cls, *args, **kwargs): ...
    @classmethod
    def findDrawProcedure(cls, *args, **kwargs): ...
    @classmethod
    def makeResourceContextCurrent(cls, *args, **kwargs): ...
    @classmethod
    def getBufferSize(cls, *args, **kwargs): ...
    @classmethod
    def getColorBufferPixelFormat(cls, *args, **kwargs): ...
    @classmethod
    def getDepthBufferPixelFormat(cls, *args, **kwargs): ...
    @classmethod
    def getCurrentExposureNumber(cls, *args, **kwargs): ...
    @classmethod
    def getTotalExposureCount(cls, *args, **kwargs): ...
    @classmethod
    def restoreCurrent(cls, *args, **kwargs): ...
    @classmethod
    def makeSwatchContextCurrent(cls, *args, **kwargs): ...
    @classmethod
    def readSwatchContextPixels(cls, *args, **kwargs): ...
    @classmethod
    def referenceDefaultGeometry(cls, *args, **kwargs): ...
    @classmethod
    def dereferenceGeometry(cls, *args, **kwargs): ...
    @classmethod
    def getSwatchOrthoCameraSetting(cls, *args, **kwargs): ...
    @classmethod
    def getSwatchPerspectiveCameraSetting(cls, *args, **kwargs): ...
    @classmethod
    def getSwatchPerspectiveCameraTranslation(cls, *args, **kwargs): ...
    @classmethod
    def getSwatchLightDirection(cls, *args, **kwargs): ...
    @classmethod
    def drawSwatchBackGroundQuads(cls, *args, **kwargs): ...
    @classmethod
    def glFunctionTable(cls, *args, **kwargs): ...

class MHwrCallback:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def deviceNew(cls, *args, **kwargs): ...
    @classmethod
    def deviceLost(cls, *args, **kwargs): ...
    @classmethod
    def deviceReset(cls, *args, **kwargs): ...
    @classmethod
    def deviceDeleted(cls, *args, **kwargs): ...
    @staticmethod
    def addCallback(*args, **kwargs): ...
    @staticmethod
    def removeCallback(*args, **kwargs): ...

class MHwTextureManager:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @staticmethod
    def registerTextureFile(*args, **kwargs): ...
    @staticmethod
    def deregisterTextureFile(*args, **kwargs): ...
    @staticmethod
    def textureFile(*args, **kwargs): ...
    @staticmethod
    def glBind(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...

class MLightLinks:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def parseLinks(cls, *args, **kwargs): ...
    @classmethod
    def getLinkedLights(cls, *args, **kwargs): ...
    @classmethod
    def getLinkedObjects(cls, *args, **kwargs): ...
    @classmethod
    def getIgnoredLights(cls, *args, **kwargs): ...
    @classmethod
    def getIgnoredObjects(cls, *args, **kwargs): ...
    @classmethod
    def getShadowLinkedLights(cls, *args, **kwargs): ...
    @classmethod
    def getShadowLinkedObjects(cls, *args, **kwargs): ...
    @classmethod
    def getShadowIgnoredLights(cls, *args, **kwargs): ...
    @classmethod
    def getShadowIgnoredObjects(cls, *args, **kwargs): ...

class MRenderData:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    perspective: Incomplete
    resX: Incomplete
    resY: Incomplete
    left: Incomplete
    bottom: Incomplete
    right: Incomplete
    top: Incomplete
    bytesPerChannel: Incomplete
    xsize: Incomplete
    ysize: Incomplete
    fieldOfView: Incomplete
    aspectRatio: Incomplete
    viewDirection: Incomplete
    eyePoint: Incomplete
    worldToEyeMatrix: Incomplete
    rgbaArr: Incomplete
    depthArr: Incomplete
    internalData: Incomplete
    @classmethod
    def worldToScreen(cls, *args, **kwargs): ...
    @classmethod
    def screenToWorld(cls, *args, **kwargs): ...
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...

class MRenderingInfo:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def originX(cls, *args, **kwargs): ...
    @classmethod
    def originY(cls, *args, **kwargs): ...
    @classmethod
    def width(cls, *args, **kwargs): ...
    @classmethod
    def height(cls, *args, **kwargs): ...
    @classmethod
    def renderingAPI(cls, *args, **kwargs): ...
    @classmethod
    def renderingVersion(cls, *args, **kwargs): ...
    @classmethod
    def cameraPath(cls, *args, **kwargs): ...
    @classmethod
    def renderTarget(cls, *args, **kwargs): ...
    @classmethod
    def viewMatrix(cls, *args, **kwargs): ...
    @classmethod
    def projectionMatrix(cls, *args, **kwargs): ...

class MRenderProfile:
    __init__: ClassVar[Callable] = ...
    kMayaSoftware: ClassVar[int] = ...
    kMayaOpenGL: ClassVar[int] = ...
    kMayaD3D: ClassVar[int] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def numberOfRenderers(cls, *args, **kwargs): ...
    @classmethod
    def addRenderer(cls, *args, **kwargs): ...
    @classmethod
    def hasRenderer(cls, *args, **kwargs): ...

class MRenderSetup:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def getEnabledSelectedNodeNames(*args, **kwargs): ...

class MRenderSetupPrivate:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @staticmethod
    def className(*args, **kwargs): ...

class MRenderShadowData:
    __init__: ClassVar[Callable] = ...
    kInvalid: ClassVar[int] = ...
    kPoint: ClassVar[int] = ...
    kDirectional: ClassVar[int] = ...
    kSpot: ClassVar[int] = ...
    thisown: Incomplete
    perspective: Incomplete
    useMidDistMap: Incomplete
    lightType: Incomplete
    shadowResX: Incomplete
    shadowResY: Incomplete
    lightPosition: Incomplete
    projectionMatrix: Incomplete
    perspectiveMatrix: Incomplete
    depthMaps: Incomplete
    midDistMaps: Incomplete
    internalData: Incomplete
    @classmethod
    def worldToZbuffer(cls, *args, **kwargs): ...
    @classmethod
    def zbufferToWorld(cls, *args, **kwargs): ...
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...

class MRenderTargetLegacy:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def width(cls, *args, **kwargs): ...
    @classmethod
    def height(cls, *args, **kwargs): ...
    @classmethod
    def makeTargetCurrent(cls, *args, **kwargs): ...
    @classmethod
    def writeColorBuffer(cls, *args, **kwargs): ...

class MRenderUtil:
    kNotRendering: ClassVar[int] = ...
    kBatchRender: ClassVar[int] = ...
    kInteractiveRender: ClassVar[int] = ...
    kIprRender: ClassVar[int] = ...
    kHardwareRender: ClassVar[int] = ...
    kAll: ClassVar[int] = ...
    kColorOnly: ClassVar[int] = ...
    kShadowOnly: ClassVar[int] = ...
    kAmbientOnly: ClassVar[int] = ...
    kDiffuseOnly: ClassVar[int] = ...
    kSpecularOnly: ClassVar[int] = ...
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @staticmethod
    def mayaRenderState(*args, **kwargs): ...
    @staticmethod
    def raytrace(*args, **kwargs): ...
    @staticmethod
    def raytraceFirstGeometryIntersections(*args, **kwargs): ...
    @staticmethod
    def sampleShadingNetwork(*args, **kwargs): ...
    @staticmethod
    def generatingIprFile(*args, **kwargs): ...
    @staticmethod
    def relativeFileName(*args, **kwargs): ...
    @staticmethod
    def exactFileTextureName(*args, **kwargs): ...
    @staticmethod
    def convertPsdFile(*args, **kwargs): ...
    @staticmethod
    def exactImagePlaneFileName(*args, **kwargs): ...
    @staticmethod
    def inCurrentRenderLayer(*args, **kwargs): ...
    @staticmethod
    def renderPass(*args, **kwargs): ...
    @staticmethod
    def mainBeautyPassCustomTokenString(*args, **kwargs): ...
    @staticmethod
    def mainBeautyPassName(*args, **kwargs): ...
    @staticmethod
    def diffuseReflectance(*args, **kwargs): ...
    @staticmethod
    def maximumSpecularReflection(*args, **kwargs): ...
    @staticmethod
    def lightAttenuation(*args, **kwargs): ...
    @staticmethod
    def hemisphereCoverage(*args, **kwargs): ...
    @staticmethod
    def sendRenderProgressInfo(*args, **kwargs): ...
    @staticmethod
    def getCommonRenderSettings(*args, **kwargs): ...
    @staticmethod
    def renderObjectItem(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def eval2dTexture(*args, **kwargs): ...
    @staticmethod
    def noiseTableSize(*args, **kwargs): ...
    @staticmethod
    def noiseTableCubeSide(*args, **kwargs): ...
    @staticmethod
    def valueInNoiseTable(*args, **kwargs): ...
    @staticmethod
    def noise1(*args, **kwargs): ...
    @staticmethod
    def noise2(*args, **kwargs): ...
    @staticmethod
    def noise3(*args, **kwargs): ...
    @staticmethod
    def noise4(*args, **kwargs): ...

class RV_PIXEL:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    r: Incomplete
    g: Incomplete
    b: Incomplete
    a: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...

class RV_AOV:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    numberOfChannels: Incomplete
    name: Incomplete
    pPixels: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...

class MRenderView:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @staticmethod
    def doesRenderEditorExist(*args, **kwargs): ...
    @staticmethod
    def setCurrentCamera(*args, **kwargs): ...
    @staticmethod
    def getRenderRegion(*args, **kwargs): ...
    @staticmethod
    def startRender(*args, **kwargs): ...
    @staticmethod
    def startRegionRender(*args, **kwargs): ...
    @staticmethod
    def updatePixels(*args, **kwargs): ...
    @staticmethod
    def refresh(*args, **kwargs): ...
    @staticmethod
    def endRender(*args, **kwargs): ...
    @staticmethod
    def setDrawTileBoundary(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...

class MSwatchRenderBase:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def doIteration(cls, *args, **kwargs): ...
    @classmethod
    def renderParallel(cls, *args, **kwargs): ...
    @classmethod
    def cancelParallelRendering(cls, *args, **kwargs): ...
    @classmethod
    def swatchNode(cls, *args, **kwargs): ...
    @classmethod
    def node(cls, *args, **kwargs): ...
    @classmethod
    def resolution(cls, *args, **kwargs): ...
    @classmethod
    def image(cls, *args, **kwargs): ...
    @classmethod
    def setRenderQuality(cls, *args, **kwargs): ...
    @classmethod
    def renderQuality(cls, *args, **kwargs): ...
    @staticmethod
    def cancelCurrentSwatchRender(*args, **kwargs): ...
    @staticmethod
    def enableSwatchRender(*args, **kwargs): ...

class MSwatchRenderRegister:
    __init__: ClassVar[Callable] = ...
    thisown: Incomplete
    @staticmethod
    def registerSwatchRender(*args, **kwargs): ...
    @staticmethod
    def unregisterSwatchRender(*args, **kwargs): ...
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...

class MViewportRenderer:
    __init__: ClassVar[Callable] = ...
    kOpenGL: ClassVar[int] = ...
    kDirect3D: ClassVar[int] = ...
    kSoftware: ClassVar[int] = ...
    kNoOverride: ClassVar[int] = ...
    kOverrideAllDrawing: ClassVar[int] = ...
    kOverrideThenStandard: ClassVar[int] = ...
    kOverrideThenUI: ClassVar[int] = ...
    kExcludeNone: ClassVar[int] = ...
    kExcludeNurbsCurves: ClassVar[int] = ...
    kExcludeNurbsSurfaces: ClassVar[int] = ...
    kExcludeMeshes: ClassVar[int] = ...
    kExcludePlanes: ClassVar[int] = ...
    kExcludeLights: ClassVar[int] = ...
    kExcludeCameras: ClassVar[int] = ...
    kExcludeJoints: ClassVar[int] = ...
    kExcludeIkHandles: ClassVar[int] = ...
    kExcludeDeformers: ClassVar[int] = ...
    kExcludeDynamics: ClassVar[int] = ...
    kExcludeParticleInstancers: ClassVar[int] = ...
    kExcludeLocators: ClassVar[int] = ...
    kExcludeDimensions: ClassVar[int] = ...
    kExcludeSelectHandles: ClassVar[int] = ...
    kExcludePivots: ClassVar[int] = ...
    kExcludeTextures: ClassVar[int] = ...
    kExcludeGrid: ClassVar[int] = ...
    kExcludeCVs: ClassVar[int] = ...
    kExcludeHulls: ClassVar[int] = ...
    kExcludeStrokes: ClassVar[int] = ...
    kExcludeSubdivSurfaces: ClassVar[int] = ...
    kExcludeFluids: ClassVar[int] = ...
    kExcludeFollicles: ClassVar[int] = ...
    kExcludeHairSystems: ClassVar[int] = ...
    kExcludeImagePlane: ClassVar[int] = ...
    kExcludeNCloths: ClassVar[int] = ...
    kExcludeNRigids: ClassVar[int] = ...
    kExcludeDynamicConstraints: ClassVar[int] = ...
    kExcludeManipulators: ClassVar[int] = ...
    kExcludeNParticles: ClassVar[int] = ...
    kExcludeMotionTrails: ClassVar[int] = ...
    kExcludePluginShapes: ClassVar[int] = ...
    kExcludeAll: ClassVar[int] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def initialize(cls, *args, **kwargs): ...
    @classmethod
    def uninitialize(cls, *args, **kwargs): ...
    @classmethod
    def render(cls, *args, **kwargs): ...
    @classmethod
    def nativelySupports(cls, *args, **kwargs): ...
    @classmethod
    def override(cls, *args, **kwargs): ...
    @classmethod
    def overrideThenStandardExclusion(cls, *args, **kwargs): ...
    @classmethod
    def registerRenderer(cls, *args, **kwargs): ...
    @classmethod
    def deregisterRenderer(cls, *args, **kwargs): ...
    @classmethod
    def name(cls, *args, **kwargs): ...
    @classmethod
    def UIname(cls, *args, **kwargs): ...
    @classmethod
    def setUIName(cls, *args, **kwargs): ...
    @classmethod
    def renderingOverride(cls, *args, **kwargs): ...
    @classmethod
    def setRenderingOverride(cls, *args, **kwargs): ...

class MRenderCallback:
    __init__: ClassVar[Callable] = ...
    __disown__: ClassVar[Callable] = ...
    thisown: Incomplete
    @classmethod
    def __swig_destroy__(cls, *args, **kwargs): ...
    @classmethod
    def shadowCastCallback(cls, *args, **kwargs): ...
    @classmethod
    def renderCallback(cls, *args, **kwargs): ...
    @classmethod
    def postProcessCallback(cls, *args, **kwargs): ...
    @staticmethod
    def addCallback(*args, **kwargs): ...
    @staticmethod
    def removeCallback(*args, **kwargs): ...
    @staticmethod
    def addRenderTileCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
