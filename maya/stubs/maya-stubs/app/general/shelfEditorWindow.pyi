from _typeshed import Incomplete

def doIt(windowName: str = 'shelfEditor', selectedShelfButton: Incomplete | None = None, selectedTabIndex: int = 2) -> None: ...

class shelfEditorWindow:
    winName: Incomplete
    verbose: bool
    col1width: int
    defaultRGB: Incomplete
    moveUpStr: Incomplete
    moveDownStr: Incomplete
    mainShelfLayout: Incomplete
    def __init__(self, windowName: str = 'shelfEditor') -> None: ...
    def info(self, msg) -> None: ...
    def selectedIndex(self, list): ...
    def uiLabel(self, key): ...
    def internalName(self, name): ...
    def fromNativePath(self, strFile): ...
    def setStyle(self, style, data) -> None: ...
    def setSaveMode(self, mode, data) -> None: ...
    def getAlignment(self, indx): ...
    def flexibleWidthChange(self, data) -> None: ...
    def moveShelf(self, direction, data) -> None: ...
    def newShelf(self, data) -> None: ...
    def deleteShelf(self, data) -> None: ...
    def selectShelf(self) -> None: ...
    def nbItems(self): ...
    def moveItem(self, direction, data) -> None: ...
    def newItem(self, data) -> None: ...
    def deleteItem(self, data) -> None: ...
    def selectItem(self) -> None: ...
    def shelfName(self, data) -> None: ...
    def shelfAlignment(self, data) -> None: ...
    def itemIcon(self, internalIcon, data) -> None: ...
    def itemName(self, data) -> None: ...
    def itemData(self, data) -> None: ...
    def saveAllShelves(self, data) -> None: ...
    def close(self, data) -> None: ...
    def currentShelf(self, short: bool = False): ...
    def currentShelfName(self): ...
    def currentItem(self, short: bool = False): ...
    def currentItemName(self): ...
    def updateShelfList(self, at: int = 1) -> None: ...
    def updateItemList(self, at: int = 1, atItem: Incomplete | None = None) -> None: ...
    def updateItemData(self) -> None: ...
    def helpOnShelf(self, data) -> None: ...
    def createMenus(self) -> None: ...
    def makeTwoColumns(self, form, child1, child2) -> None: ...
    def makeResizableColumn(self, form, children, left: Incomplete | None = None, right: Incomplete | None = None) -> None: ...
    wShelfName: Incomplete
    wShelfAlign: Incomplete
    wShelfList: Incomplete
    wItemName: Incomplete
    wItemList: Incomplete
    def createShelfLists(self): ...
    wItemPreviewLabel: Incomplete
    wItemImage: Incomplete
    def createShelfPreview(self): ...
    wIconNameLabel: Incomplete
    wIconName: Incomplete
    wItemButton: Incomplete
    wItemResButton: Incomplete
    def createIconNameControls(self) -> None: ...
    wIconWidthOptionMenu: Incomplete
    wIconWidthValue: Incomplete
    wItemTip: Incomplete
    wItemLabel: Incomplete
    wItemLabelColor: Incomplete
    wItemLabelBckColor: Incomplete
    wItemLabelBckTransp: Incomplete
    wItemUserColor: Incomplete
    wItemBckColor: Incomplete
    wItemRepeatable: Incomplete
    def createShelfData(self): ...
    wLanguage: Incomplete
    wCommand: Incomplete
    wLanguageDbl: Incomplete
    wDblClkCommand: Incomplete
    def createCommandTabs(self): ...
    def createButtons(self): ...
    def moveMenuItem(self, direction, data) -> None: ...
    def currentPopup(self, short: bool = False): ...
    def newMenuItem(self, data) -> None: ...
    def deleteMenuItem(self, data) -> None: ...
    def selectMenuItem(self) -> None: ...
    def renameMenuItem(self, data) -> None: ...
    def changeMenuItemData(self, data) -> None: ...
    def currentMenuItem(self, short: bool = False, currentList: Incomplete | None = None): ...
    def currentMenuItemName(self, menuItem: Incomplete | None = None): ...
    def currentMenuItemCommand(self, menuItem: Incomplete | None = None): ...
    def currentMenuItemList(self, at: int = 1): ...
    def updateMenuItemList(self, at: int = 1): ...
    def updateMenuItemData(self, menuItem: Incomplete | None = None, doClear: bool = False) -> None: ...
    def clearMenuItemData(self) -> None: ...
    wMenuItemName: Incomplete
    wMenuItemList: Incomplete
    wMenuItemLanguage: Incomplete
    wMenuItemCommand: Incomplete
    def createMenuItemsTab(self): ...
    def create(self, selectedShelfButton: Incomplete | None = None, selectedTabIndex: int = 2) -> None: ...
