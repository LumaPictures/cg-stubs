from PySide2.QtGui import *
from PySide2.QtWidgets import *
from PySide6.QtWidgets import QDockWidget
from _typeshed import Incomplete
from maya import cmds as cmds, mel as mel

mixinWorkspaceControls: Incomplete

def workspaceControlDeleted(controlName) -> None: ...
def workspaceControlClosed(controlName) -> None: ...
def workspaceControlReparented(controlName, isFloating) -> None: ...

class MayaQWidgetBaseMixin:
    def __init__(self, parent: Incomplete | None = None, *args, **kwargs) -> None: ...
    def show(self) -> None: ...
    def setVisible(self, makeVisible) -> None: ...

class MayaQDockWidget(MayaQWidgetBaseMixin, QDockWidget):
    closeEventTriggered: Incomplete
    windowStateChanged: Incomplete
    def __init__(self, parent: Incomplete | None = None, *args, **kwargs) -> None: ...
    def setArea(self, area) -> None: ...
    def resizeEvent(self, event) -> None: ...
    def moveEvent(self, event) -> None: ...
    def closeEvent(self, evt) -> None: ...

class MayaQWidgetDockableMixin(MayaQWidgetBaseMixin):
    closeEventTriggered: Incomplete
    windowStateChanged: Incomplete
    def __init__(self, parent: Incomplete | None = None, *args, **kwargs) -> None: ...
    def setDockableParameters(self, dockable: Incomplete | None = None, floating: Incomplete | None = None, area: Incomplete | None = None, allowedArea: Incomplete | None = None, width: Incomplete | None = None, widthSizingProperty: Incomplete | None = None, minWidth: Incomplete | None = None, height: Incomplete | None = None, heightSizingProperty: Incomplete | None = None, x: Incomplete | None = None, y: Incomplete | None = None, retain: bool = True, plugins: Incomplete | None = None, controls: Incomplete | None = None, uiScript: Incomplete | None = None, closeCallback: Incomplete | None = None, *args, **kwargs) -> None: ...
    def setSizeHint(self, size) -> None: ...
    def show(self, *args, **kwargs) -> None: ...
    def hide(self, *args, **kwargs) -> None: ...
    def close(self) -> None: ...
    def isVisible(self): ...
    def setVisible(self, makeVisible, *args, **kwargs): ...
    def raise_(self) -> None: ...
    def isDockable(self): ...
    def isFloating(self): ...
    def floatingChanged(self, isFloating) -> None: ...
    def dockCloseEventTriggered(self) -> None: ...
    def dockArea(self): ...
    def setWindowTitle(self, val) -> None: ...
    def showRepr(self): ...
