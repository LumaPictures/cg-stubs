from PySide2.QtCore import *
from PySide2.QtGui import *
from PySide2.QtWidgets import *
from PySide6.QtCore import *
from PySide6.QtGui import *
from PySide6.QtWidgets import *
from _typeshed import Incomplete
from maya import OpenMaya as om

logger: Incomplete
formatter: Incomplete
ch: Incomplete

def getDependNode(nodeName): ...

class MayaUndoChunk:
    name: Incomplete
    def __init__(self, name: str = 'unnamedChunk') -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

class MayaSkipUndoChunk:
    undoState: Incomplete
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

def getSelectedMeshComponents(items: Incomplete | None = None, verts: bool = False, edges: bool = False, meshShapes: bool = False, expand: bool = False): ...
def filterComponentsBySelectedItems(components): ...
def getCreaseSetPartition(): ...
def newCreaseSet(name: str = 'creaseSet#', elements: Incomplete | None = None, creaseLevel: int = 2): ...
def getCreaseSetsContainingItems(items: Incomplete | None = None, asDict: bool = False): ...
def bakeOutCreaseSetValues(meshes) -> None: ...
def unbakeValuesIntoCreaseSets(meshes, name: str = 'creaseSet#') -> None: ...
def subdivideBaseMesh(meshes, level: int = 1, adjustSmoothLevelDisplay: bool = False): ...
def lookupColorValue(v, minvalue: float = 0.0, maxvalue: float = 1.0, colors: Incomplete | None = None): ...
def convertCreasesToVertValues(meshT): ...
def calcCreaseValueColorSet(meshTs: Incomplete | None = None, minvalue: float = 0.0, maxvalue: float = 4.0, colorSetName: str = 'creaseValues') -> None: ...

class HashableMObjectHandle(om.MObjectHandle):
    def __hash__(self): ...

class MCallbackIdWrapper:
    callbackId: Incomplete
    def __init__(self, callbackId) -> None: ...
    def __del__(self) -> None: ...

class CreaseSetTreeWidget(QTreeWidget):
    COLUMN_SETCOLOR: int
    COLUMN_SETNAME: int
    COLUMN_CREASEVALUE: int
    COLUMN_NUMMEMBERS: int
    COLUMN_SELMEMBERS: int
    COLUMN_COUNT: int
    NUMBER_MEMBER_WIREFRAME_COLORS: int
    NUMBER_DORMANT_COLOR: int
    NUMBER_USER_DEFINED_COLORS: int
    creaseLevelInc: float
    defaultCreaseSetName: str
    memberForegroundBrush: Incomplete
    highlightBackgroundBrush: Incomplete
    normalBackgroundBrush: Incomplete
    rgbColorIcons: Incomplete
    def __init__(self, parent: Incomplete | None = None, name: Incomplete | None = None) -> None: ...
    def showEvent(self, *args): ...
    def hideEvent(self, *args): ...
    def cleanup(self) -> None: ...
    def removePerNodeMayaCallbacks(self, nodeObjs) -> None: ...
    def sizeHint(self): ...
    def minimumSizeHint(self): ...
    def mousePressEvent(self, event): ...
    def mouseReleaseEvent(self, event): ...
    def mouseMoveEvent(self, event): ...
    def setItemValues(self, item: Incomplete | None = None, name: Incomplete | None = None, colorIndex: Incomplete | None = None, creaseLevel: Incomplete | None = None, members: Incomplete | None = None, numSelectedMembers: Incomplete | None = None, showSetMembers: bool = False): ...
    def addPerNodeMayaCallbacks(self, nodeObj) -> None: ...
    def repopulate(self) -> None: ...
    def getCurrentSetNames(self): ...
    def getSelectedMeshes(self): ...
    def setCurrentItemsFromSetNames(self, setNames) -> None: ...
    def itemDoubleClickedCB(self, item, column) -> None: ...
    def commitData(self, *args) -> None: ...
    def commitDataCB(self, item, column, oldValue, newValue) -> None: ...
    contextMenuActions: Incomplete
    def contextMenuEvent(self, event): ...
    def selectMembersCB(self) -> None: ...
    def addMembersCB(self) -> None: ...
    def removeMembersCB(self) -> None: ...
    def newCreaseSetCB(self) -> None: ...
    def deleteCreaseSetCB(self) -> None: ...
    def mergeCreaseSetsCB(self): ...
    def splitCreaseSetCB(self): ...
    def selectSelectedSetNodesCB(self) -> None: ...
    def selectSetsWithSelectedMembersCB(self) -> None: ...
    def hardenCreaseEdgesCB(self) -> None: ...
    def optimizeSubdLevelCB(self) -> None: ...
    def unoptimizeSubdLevelCB(self) -> None: ...
    def bakeOutCreaseSetValuesCB(self) -> None: ...
    def unbakeValuesIntoCreaseSetsCB(self) -> None: ...
    def subdivideBaseMeshCB(self) -> None: ...
    def calcCreaseValueColorSetCB(self) -> None: ...
    def hideCreaseValueColorSetCB(self) -> None: ...
    def showCreaseValueColorSetCB(self) -> None: ...
    def toggleCreaseValueColorSetCB(self) -> None: ...
    def setCreaseLevelIncrementCB(self) -> None: ...
    def setDefaultCreaseSetNameCB(self) -> None: ...
    def setComponentColor(self, colorIndex) -> None: ...
    def objectSetNodeAddedCB(self, nodeObj, clientData) -> None: ...
    def objectSetNodeRemovedCB(self, nodeObj, clientData) -> None: ...
    def objectSetNodeNameChangedCB(self, nodeObj, prevName, clientData) -> None: ...
    def beforeSceneUpdatedCB(self, clientData) -> None: ...
    def sceneUpdatedCB(self, clientData) -> None: ...
    def objectSetAttrChangedCB(self, msg, plg, otherPlg, clientData) -> None: ...
    def objectSetMembersChangedCB(self, nodeObj, clientData) -> None: ...
    def updateUI_objectSetMembersChanged(self) -> None: ...
    def mayaSelectionChangedCB(self, clientData) -> None: ...
    def requestUpdateHighlightedItems(self) -> None: ...
    def updateHighlightedItems_execute(self) -> None: ...

class PushValueOntoStack:
    stackItem: Incomplete
    value: Incomplete
    def __init__(self, stackItem, value) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

class CreaseSetTreeWidgetItem(QTreeWidgetItem):
    NUMERIC_COLUMNS: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def __lt__(self, other): ...

class CreaseSetEditor(QWidget):
    tree: Incomplete
    menubar: Incomplete
    def __init__(self, parent: Incomplete | None = None, name: Incomplete | None = None, title: Incomplete | None = None) -> None: ...
    def closeEvent(self, evt) -> None: ...

def getDefaultCreaseSetEditor(): ...
def setDefaultCreaseSetEditor(cls=...) -> None: ...
def showCreaseSetEditor(dockControl: bool = False, creaseSetEditorCls: Incomplete | None = None): ...
