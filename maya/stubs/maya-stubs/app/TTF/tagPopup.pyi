from maya.app.flux.imports import *
from _typeshed import Incomplete
from maya.app.flux.core import pix as pix
from os.path import commonprefix as commonprefix

dm: Incomplete

class TagPopup(qt.QDialog):
    model: Incomplete
    activeTags: Incomplete
    tagBtn: Incomplete
    fieldGroup: Incomplete
    tagList: Incomplete
    lineEdit: Incomplete
    listWidget: Incomplete
    def __init__(self, parent, pos, activeTags) -> None: ...
    def rowClicked(self, row) -> None: ...
    def populateList(self, items) -> None: ...
    results: Incomplete
    def textChanged(self): ...
    def fixUI(self) -> None: ...
    def focusOutEvent(self, event) -> None: ...
    def leaveEvent(self, e): ...
    def clearSelection(self) -> None: ...
    def getCurrentIndex(self): ...
    def setSelection(self, nav) -> None: ...
    def deleteTag(self, specificTag: Incomplete | None = None) -> None: ...
    def addTag(self, tag: Incomplete | None = None) -> None: ...
    def eventFilter(self, widget, event): ...
    @staticmethod
    def getChoice(parent, pos, activeTags): ...

class MainTagListWidget(qt.QListWidget):
    clicked: Incomplete
    def __init__(self, parent: Incomplete | None = None) -> None: ...
    def mouseMoveEvent(self, e) -> None: ...
    def mousePressEvent(self, e) -> None: ...

class MainTagPopup(qt.QDialog):
    addTag: Incomplete
    tagBtn: Incomplete
    lineEdit: Incomplete
    listWidget: Incomplete
    allTags: Incomplete
    def __init__(self, tags) -> None: ...
    def clearSelection(self) -> None: ...
    def getCurrentIndex(self): ...
    def setSelection(self, nav) -> None: ...
    def eventFilter(self, widget, event): ...
    def textChanged(self, *args): ...
    def populateList(self, items) -> None: ...
    def rowClicked(self, row) -> None: ...
