from _typeshed import Incomplete

kNameToNodeTypeMismatch: Incomplete
kAmbiguousName: Incomplete

def echoSelect(*args, **kwargs) -> None: ...
def nodeToLongName(node): ...
def nodeToShortName(node): ...
def nameToNode(name): ...
def nameToDagPath(name): ...
def nameToPlug(name): ...
def findPlug(node, attr): ...
def removeDuplicates(seq): ...
def getSubClasses(classType): ...
def isNodeInstance(node, nodeType): ...

class ReportableException(Exception):
    def __init__(self, text) -> None: ...
    @property
    def text(self): ...

def findRecursivelyInEncodedProperties(d, searched): ...

class SettingContextManager:
    classOfSetting: Incomplete
    envVarCache: Incomplete
    optionVarCache: Incomplete
    def __init__(self, classOfSetting) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, exc_type: type[BaseException] | None, exc_val: BaseException | None, exc_tb: types.TracebackType | None) -> None: ...

def settingDecorator(classOfSetting): ...

class SingletonMetaClass(type):
    classInstances: Incomplete
    def __call__(cls, *args, **kwargs): ...
