from _typeshed import Incomplete

CALLBACKS_TYPE_RENDER_SETTINGS: int
CALLBACKS_TYPE_AOVS: int
kDefaultNodeMissing: Incomplete
kDefaultNodeAttrMissing: Incomplete
kUnableToSet: Incomplete
kAttributesNotExportable: Incomplete

class RenderSettingsCallbacks:
    def encode(self): ...
    def decode(self, rendererData) -> None: ...
    def getNodes(self): ...
    def createDefaultNodes(self) -> None: ...

class AOVCallbacks:
    DECODE_TYPE_OVERWRITE: Incomplete
    DECODE_TYPE_MERGE: Incomplete
    @staticmethod
    def aovNodeTypes(): ...
    def encode(self): ...
    def decode(self, aovsData, decodeType) -> None: ...
    def displayMenu(self) -> None: ...
    def getAOVName(self, aovNode): ...
    def getCollectionSelector(self, selectorName) -> None: ...
    def getChildCollectionSelector(self, selectorName, aovName) -> None: ...
    def getChildCollectionSelectorAOVNodeFromDict(self, d) -> None: ...

class NodeExporter:
    def __init__(self) -> None: ...
    def encode(self): ...
    def decode(self, encodedData) -> None: ...
    def setPlugsToIgnore(self, plugsToIgnore) -> None: ...
    def warnPlugsToIgnore(self, value) -> None: ...

class BasicNodeExporter(NodeExporter):
    def setNodes(self, nodes) -> None: ...
    def getNodes(self): ...

rendererCallbacks: Incomplete

def registerCallbacks(renderer, callbacksType, callbacks) -> None: ...
def unregisterCallbacks(renderer, callbacksType: Incomplete | None = None) -> None: ...
def getCallbacks(*args): ...
