import maya.api.OpenMaya as OpenMaya
import maya.app.renderSetup.model.nodeList as nodeList
from _typeshed import Incomplete
from maya.app.renderSetup.model.labelColor import LabelColor as LabelColor
from maya.app.renderSetup.model.nodeNotes import NodeNotes as NodeNotes
from maya.app.renderSetup.model.observable import Observable as Observable
from maya.app.renderSetup.model.serializableNode import SerializableNode as SerializableNode

kCmdPrivate: Incomplete
kOrderingFailure: str
kRename: Incomplete

class ChildNode(Observable, NodeNotes, SerializableNode, LabelColor, nodeList.ListItem):
    kTypeId: Incomplete
    kTypeName: str
    @staticmethod
    def creator(): ...
    @staticmethod
    def initializer() -> None: ...
    def __init__(self) -> None: ...
    def setName(self, newName) -> None: ...
    def addOpaqueData(self, key, data) -> None: ...
    def removeOpaqueData(self, key) -> None: ...
    def getOpaqueData(self, key): ...
    def hasOpaqueData(self, key): ...
    def getImportedStatus(self): ...
    def setImportedStatus(self, value) -> None: ...
    def acceptImport(self) -> None: ...
    def isCopyable(self): ...

class TreeOrderedItem:
    def __gt__(self, b): ...

class EditImportedStatusCmd(OpenMaya.MPxCommand):
    kCmdName: str
    node: Incomplete
    imported: Incomplete
    def isUndoable(self): ...
    def doIt(self, args) -> None: ...
    @staticmethod
    def execute(node, imported) -> None: ...
    @staticmethod
    def creator(): ...
    def __init__(self, node, imported) -> None: ...
    def redoIt(self) -> None: ...
    def undoIt(self) -> None: ...
