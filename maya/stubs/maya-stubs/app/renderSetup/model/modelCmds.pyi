import maya.api.OpenMaya as OpenMaya
from _typeshed import Incomplete
from collections.abc import Generator

kNotInNeedAListToFilter: Incomplete
kInvalidNodeName: Incomplete

def getCollections(renderLayers) -> Generator[Incomplete]: ...
def getMembersAsLongNames(renderLayers) -> Generator[Incomplete]: ...
def longNamesToNamesDict(names): ...
def renderLayerMembers(objectNodeNames, renderLayerNames, notInRenderLayers: bool = False): ...
def getLongName(name): ...
def isCollectionMember(objectNodeName, collections): ...
def notInRenderLayers(*args, **kwargs): ...
def inRenderLayers(*args, **kwargs): ...

class RenderLayerMembersCmd(OpenMaya.MPxCommand):
    kCmdName: str
    kNotInFlag: str
    kNotInFlagLong: str
    kNotInFlags: Incomplete
    kRenderLayersFlag: str
    kRenderLayersFlagLong: str
    kRenderLayersFlags: Incomplete
    @staticmethod
    def creator(): ...
    def isUndoable(self): ...
    def doIt(self, args) -> None: ...

def renderSetupFind(objectNodeNames, renderLayerNames, includeLayers): ...

class RenderSetupFindCmd(OpenMaya.MPxCommand):
    kCmdName: str
    kInRenderLayersFlag: str
    kInRenderLayersFlagLong: str
    kInRenderLayersFlags: Incomplete
    kIncludeLayersFlag: str
    kIncludeLayersFlagLong: str
    kIncludeLayersFlags: Incomplete
    @staticmethod
    def creator(): ...
    def isUndoable(self): ...
    def doIt(self, args) -> None: ...

class RenderSetupCmd(OpenMaya.MPxCommand):
    kCmdName: str
    kRenderLayersFlag: str
    kRenderLayersFlagLong: str
    @staticmethod
    def creator(): ...
    @staticmethod
    def createSyntax(): ...
    def isUndoable(self): ...
    def doIt(self, args) -> None: ...

class RenderSetupLegacyLayerCmd(OpenMaya.MPxCommand):
    kCmdName: str
    @staticmethod
    def creator(): ...
    @staticmethod
    def createSyntax(): ...
    def isUndoable(self): ...
    def doIt(self, args) -> None: ...
