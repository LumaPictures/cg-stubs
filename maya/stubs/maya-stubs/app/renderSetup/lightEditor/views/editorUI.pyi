from PySide6.QtWidgets import QTreeView, QWidget
from _typeshed import Incomplete
from maya.app.general.mayaMixin import MayaQWidgetDockableMixin as MayaQWidgetDockableMixin
from maya.app.renderSetup.lightEditor.views.delegate import LightEditorDelegate as LightEditorDelegate
from maya.app.renderSetup.views.renderSetupButton import RenderSetupButton as RenderSetupButton
from maya.app.renderSetup.views.renderSetupStyle import RenderSetupStyle as RenderSetupStyle

kLightEditorTitle: Incomplete
kHelp: Incomplete
kMayaHelp: Incomplete
kLightEditorHelp: Incomplete
kLayerText: Incomplete
kDefaultLayerText: Incomplete
kFile: Incomplete
kExport: Incomplete
kImport: Incomplete
kMerge: Incomplete
kMergeExplanation: Incomplete
kGeneralOptions: Incomplete
kLookThroughLightsToolTip: Incomplete
kSnapToSelectedToolTip: Incomplete
kPropertyEditorToolTip: Incomplete
kAcceptImport: Incomplete
kOverwrite: Incomplete
kOverwriteExplanation: Incomplete

class ParentGuard:
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

DEFAULT_UI_INDENTATION: int

class LightEditorView(QTreeView):
    PLACEHOLDER_TEXT_PEN: Incomplete
    HALF_FONT_HEIGHT: Incomplete
    NO_LIGHTS_IMAGE_SIZE: Incomplete
    importType: Incomplete
    @staticmethod
    def addImportOptions(parent) -> None: ...
    @staticmethod
    def setOverwriteImportType(data) -> None: ...
    @staticmethod
    def setMergeImportType(data) -> None: ...
    actionButtonPressed: bool
    localModelRef: Incomplete
    trackSelection: bool
    contextMenu: Incomplete
    expandCollapseAction: Incomplete
    setEnabledAction: Incomplete
    isolateSelectAction: Incomplete
    renameAction: Incomplete
    deleteAction: Incomplete
    staticActions: Incomplete
    def __init__(self, parent) -> None: ...
    def rowsInserted(self, parent, start, end) -> None: ...
    def setExpanded(self, index, state) -> None: ...
    def aboutToDelete(self) -> None: ...
    def refreshView(self) -> None: ...
    def mousePressEvent(self, event) -> None: ...
    def mouseReleaseEvent(self, event) -> None: ...
    def leaveEvent(self, *args, **kwargs) -> None: ...
    def mouseMoveEvent(self, event) -> None: ...
    def mouseDoubleClickEvent(self, event) -> None: ...
    def eventFilter(self, object, event): ...
    def paintEvent(self, e) -> None: ...
    def showContextMenu(self, point): ...

class LookThroughWindow(MayaQWidgetDockableMixin, QWidget):
    STARTING_SIZE: Incomplete
    PREFERRED_SIZE = STARTING_SIZE
    MINIMUM_SIZE: Incomplete
    preferredSize: Incomplete
    panel: Incomplete
    def __init__(self) -> None: ...
    def aboutToDelete(self) -> None: ...
    def setSizeHint(self, size) -> None: ...
    def sizeHint(self): ...
    def minimumSizeHint(self): ...
    def lookThroughLight(self, light) -> None: ...

class LightEditorCentralWidget(QWidget):
    PREFERRED_SIZE: Incomplete
    MINIMUM_SIZE: Incomplete
    BUTTON_SIZE: Incomplete
    scriptJobs: Incomplete
    sceneIsLoading: int
    selectedParent: Incomplete
    menuBar: Incomplete
    fileMenu: Incomplete
    exportGroup: Incomplete
    importGroup: Incomplete
    helpMenu: Incomplete
    mayaHelp: Incomplete
    lightEditorHelp: Incomplete
    lightEditorView: Incomplete
    renderLayerNameChangeCbId: Incomplete
    def __init__(self, parent) -> None: ...
    def aboutToDelete(self) -> None: ...
    def renderSetupAdded(self) -> None: ...
    def updateLayerList(self) -> None: ...
    def updateSelectedLayerText(self) -> None: ...
    def renderSetupPreDelete(self) -> None: ...
    def switchRenderLayer(self, value) -> None: ...
    def sizeHint(self): ...
    def minimumSizeHint(self): ...
    def getLightCreator(self, lightType): ...
    def newGroup(self) -> None: ...
    def newLight(self, lightType) -> None: ...
    def selectionChanged(self) -> None: ...

class LightEditorWindow(MayaQWidgetDockableMixin, QWidget):
    width: int
    STARTING_SIZE: Incomplete
    PREFERRED_SIZE: Incomplete
    MINIMUM_SIZE: Incomplete
    preferredSize: Incomplete
    dockingFrame: Incomplete
    centralWidget: Incomplete
    def __init__(self) -> None: ...
    def setSizeHint(self, size) -> None: ...
    def sizeHint(self): ...
    def minimumSizeHint(self): ...
    def aboutToDelete(self) -> None: ...
    def show(self, *args, **kwargs) -> None: ...

def saveWindowState(editor, optionVar) -> None: ...
def lightEditorWindowClosed() -> None: ...
def lightEditorWindowChanged() -> None: ...
def createLightEditorWindow(restore: bool = False): ...
def propertyEditorWindowClosed() -> None: ...
def propertyEditorWindowChanged() -> None: ...
def createPropertyEditorWindow(restore: bool = False) -> None: ...
def lookThroughWindowClosed() -> None: ...
def lookThroughWindowChanged() -> None: ...
def createLookThroughWindow(restore: bool = False) -> None: ...
def lookThroughSelectedLight() -> None: ...
