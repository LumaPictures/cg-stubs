from maya.app.renderSetup.views.lightEditor.node import *
from PySide6.QtCore import QAbstractItemModel
from _typeshed import Incomplete
from maya.app.renderSetup.views.lightEditor.group import Group as Group, GroupAttributes as GroupAttributes
from maya.app.renderSetup.views.lightEditor.lightSource import LightAttributes as LightAttributes, LightSource as LightSource

MODEL_ROOT_NODE_NAME: str

class ItemModel(QAbstractItemModel):
    valueEditedByUser: Incomplete
    disposed: bool
    numMayaCallback: int
    numLightEditorCallback: int
    lights: Incomplete
    groups: Incomplete
    lightAttributes: Incomplete
    groupAttributes: Incomplete
    canOverride: bool
    renderLayer: Incomplete
    rootNode: Incomplete
    def __init__(self) -> None: ...
    def __del__(self) -> None: ...
    def dispose(self) -> None: ...
    def index(self, row, column, parentIndex=...): ...
    def parent(self, index): ...
    def rowCount(self, parentIndex=...): ...
    def columnCount(self, parent=...): ...
    def data(self, index, role): ...
    def headerData(self, section, orientation, role=...): ...
    def setData(self, index, value, role=...): ...
    def addLightSource(self, transformObj, shapeObj, parentIndex=...): ...
    def addGroup(self, mayaObj, parentIndex=...): ...
    def findNode(self, mayaObj): ...
    def flags(self, index): ...
    def supportedDropActions(self): ...
    def mimeData(self, indexes): ...
    def mimeTypes(self): ...
    def dropMimeData(self, data, action, row, column, parentIndex): ...
    def nodeFromIndex(self, index): ...
    def indexFromNode(self, node): ...
    def startReset(self) -> None: ...
    def isResetting(self): ...
    def setModelContext(self, layer, canOverride) -> None: ...
    def getRenderLayer(self): ...
    def allowOverride(self): ...
    def loadScene(self) -> None: ...
    def emitDataChanged(self, idx1, idx2) -> None: ...
