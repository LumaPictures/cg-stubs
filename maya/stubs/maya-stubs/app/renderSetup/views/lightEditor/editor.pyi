from maya.app.renderSetup.views.lightEditor.itemModel import *
from maya.app.renderSetup.views.lightEditor.itemDelegate import *
from maya.app.renderSetup.views.lightEditor.itemStyle import *
from maya.app.renderSetup.views.lightEditor.node import *
from maya.app.renderSetup.views.renderSetupButton import *
from PySide6.QtWidgets import QTreeView, QWidget
from _typeshed import Incomplete
from maya.app.general.mayaMixin import MayaQWidgetDockableMixin as MayaQWidgetDockableMixin

LAYER_TEXT: Incomplete
DEFAULT_LAYER_TEXT: Incomplete
LIGHT_EDITOR_TEXT_GLOBAL_MODE: Incomplete
LIGHT_EDITOR_TEXT_LAYER_MODE: Incomplete
NAME_COLUMN_WIDTH: Incomplete
PREF_CATEGORY: str
LIGHT_EDITOR_COLUMN_ORDER_OPTION_VAR: str

class EditorTreeView(QTreeView):
    selectionChangeInstigator: Incomplete
    model: Incomplete
    contextMenu: Incomplete
    createActions: Incomplete
    renameAction: Incomplete
    deleteAction: Incomplete
    def __init__(self, parent) -> None: ...
    def dispose(self) -> None: ...
    def loadColumnOrder(self) -> None: ...
    def getIndent(self, index): ...
    def setExpanded(self, index, state) -> None: ...
    def mousePressEvent(self, event) -> None: ...
    def mouseReleaseEvent(self, event) -> None: ...
    def mouseDoubleClickEvent(self, event) -> None: ...
    def showContextMenu(self, point) -> None: ...
    def focus(self, item) -> None: ...

class LookThroughWindow(MayaQWidgetDockableMixin, QWidget):
    STARTING_SIZE: Incomplete
    PREFERRED_SIZE = STARTING_SIZE
    MINIMUM_SIZE: Incomplete
    WINDOW_STATE_PREFERENCE: str
    editor: Incomplete
    preferredSize: Incomplete
    panel: Incomplete
    def __init__(self, parent) -> None: ...
    def __del__(self) -> None: ...
    def setSizeHint(self, size) -> None: ...
    def sizeHint(self): ...
    def minimumSizeHint(self): ...
    def closeEvent(self, event) -> None: ...
    def lookThroughLight(self, light) -> None: ...

class EditorCentralWidget(QWidget):
    STARTING_SIZE: Incomplete
    BUTTON_SIZE: Incomplete
    TAB_LAYOUT_RIGHT_MARGIN: Incomplete
    TAB_LAYOUT_BOTTOM_MARGIN: Incomplete
    PREFERRED_SIZE = STARTING_SIZE
    MINIMUM_SIZE: Incomplete
    disposed: bool
    lookThroughWindow: Incomplete
    model: Incomplete
    tabWidget: Incomplete
    tabButtons: Incomplete
    lightButtons: Incomplete
    groupButton: Incomplete
    layerText: Incomplete
    treeView: Incomplete
    mayaPreFileNewOrOpenedID: Incomplete
    mayaSelectionChangedID: Incomplete
    mayaNewSceneOpenedID: Incomplete
    mayaSceneOpenedID: Incomplete
    mayaSceneImportedID: Incomplete
    mayaNodeAddedID: Incomplete
    mayaColorMgtIDs: Incomplete
    def __init__(self, parent: Incomplete | None = None) -> None: ...
    def sizeHint(self): ...
    def minimumSizeHint(self): ...
    def scheduleRefresh(self) -> None: ...
    def refresh(self) -> None: ...
    def __del__(self) -> None: ...
    def dispose(self) -> None: ...
    def setEditorMode(self, mode, layer) -> None: ...
    def selectionChanged(self) -> None: ...
    def newGroup(self) -> None: ...
    def newLight(self, lightType) -> None: ...
    def setAttributeByLabel(self, nodeName, attrLabel, value) -> None: ...
    def getLightCreator(self, lightType): ...
    def saveLookThroughWindowState(self) -> None: ...
    def lookThroughWindowDestroyed(self) -> None: ...

def createLookThroughWindow(restore: bool = False, shouldBringToFront: bool = True) -> None: ...
def editorClosed() -> None: ...
def editorRefresh() -> None: ...
def editorChanged() -> None: ...
def editorDestroyed(object: Incomplete | None = None) -> None: ...

class Editor(MayaQWidgetDockableMixin, QWidget):
    STARTING_SIZE: Incomplete
    PREFERRED_SIZE = STARTING_SIZE
    MINIMUM_SIZE: Incomplete
    WINDOW_STATE_PREFERENCE: str
    EDITOR_GLOBAL_MODE: int
    EDITOR_LAYER_MODE: int
    visibilityChanged: Incomplete
    preferredSize: Incomplete
    dockingFrame: Incomplete
    centralWidget: Incomplete
    editorMode: Incomplete
    def __init__(self) -> None: ...
    def __del__(self) -> None: ...
    def dispose(self) -> None: ...
    def renderSetupAdded(self) -> None: ...
    def renderSetupPreDelete(self) -> None: ...
    def setSizeHint(self, size) -> None: ...
    def sizeHint(self): ...
    def minimumSizeHint(self): ...
    def closeEvent(self, event) -> None: ...
    def setEditorMode(self, mode, layer) -> None: ...

def openEditorUI(layer: Incomplete | None = None, restore: bool = False): ...

class LightEditorUI(QObject):
    visibilityChanged: Incomplete
    def isVisible(self): ...
    def currentRenderLayer(self): ...
    def openEditor(self, layer: Incomplete | None = None): ...
    def visibilityUpdate(self) -> None: ...

theLightEditorUI: Incomplete
