from PySide6.QtWidgets import QAbstractButton
from _typeshed import Incomplete

class RenderSetupButton(QAbstractButton):
    DEFAULT_BUTTON_SIZE: Incomplete
    HIGH_LIMIT: int
    LOW_LIMIT: int
    MAX_VALUE: int
    ADJUSTMENT: Incomplete
    HIGHLIGHTED: int
    DISABLED: int
    size: Incomplete
    enter: bool
    brighterPixmap: Incomplete
    disabledPixmap: Incomplete
    enabled: Incomplete
    def __init__(self, parent, icon, size=..., isEnabled: bool = True) -> None: ...
    def setEnabled(self, enabled) -> None: ...
    def isEnabled(self): ...
    def enterEvent(self, event) -> None: ...
    def leaveEvent(self, event) -> None: ...
    def event(self, event): ...
    def createOption(self): ...
    def paintEvent(self, e) -> None: ...
    def createPixmap(self, option): ...
    def drawControl(self, element, option, painter, widget: Incomplete | None = None) -> None: ...
    def generatePixmapActiveIcon(self, iconMode, pixmap, option): ...
    def getGeneratedIconPixmap(self, iconMode, pixmap, option): ...
    def generateHighlightedIconPixmap(self, pixmap): ...
    def generateDisabledIconPixmap(self, pixmap): ...
    def generateIconPixmap(self, pixmap, type): ...
    def sizeHint(self): ...
