from PySide6.QtWidgets import QFrame, QLineEdit
from _typeshed import Incomplete
from maya.app.renderSetup.views.baseDelegate import BaseDelegate as BaseDelegate

class Frame(QFrame):
    item: Incomplete
    def __init__(self, item, parent) -> None: ...

class CollapsibleArrowAndTitle(Frame):
    WIDTH: Incomplete
    HEIGHT: Incomplete
    ARROW_COLOR: Incomplete
    COLOR_BAR_WIDTH: Incomplete
    COLOR_BAR_HEIGHT: Incomplete
    EXPANDED_ARROW_OFFSET: Incomplete
    COLLAPSED_ARROW_OFFSET: Incomplete
    NODE_TYPE_TEXT_RECT: Incomplete
    isCollapsed: bool
    arrowPoints: Incomplete
    def __init__(self, item, parent) -> None: ...
    def setArrow(self, isCollapsed) -> None: ...
    def paintEvent(self, e) -> None: ...

class NameLineEdit(QLineEdit):
    item: Incomplete
    hasFocus: bool
    def __init__(self, item, parent) -> None: ...
    def nameChanged(self) -> None: ...
    def focusInEvent(self, event) -> None: ...
    def focusOutEvent(self, event) -> None: ...
    def keyPressEvent(self, event) -> None: ...
    def paintEvent(self, event) -> None: ...

class TitleFrame(Frame):
    FRAME_HEIGHT: Incomplete
    clicked: Incomplete
    layout: Incomplete
    arrowAndTitle: Incomplete
    name: Incomplete
    def __init__(self, item, parent) -> None: ...
    def paintEvent(self, e) -> None: ...
    def mousePressEvent(self, event): ...

class FrameLayout(QFrame):
    item: Incomplete
    isCollapsed: bool
    mainLayout: Incomplete
    titleFrame: Incomplete
    contentFrame: Incomplete
    contentLayout: Incomplete
    def __init__(self, item, parent) -> None: ...
    def addWidget(self, widget) -> None: ...
    def getWidget(self, index): ...
    def initMainLayout(self) -> None: ...
    def initTitleFrame(self) -> None: ...
    def initContentFrame(self) -> None: ...
    def toggleCollapsed(self) -> None: ...
    def initFrameLayout(self) -> None: ...
