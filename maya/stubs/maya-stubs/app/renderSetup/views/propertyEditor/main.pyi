from PySide6.QtWidgets import QScrollArea, QWidget
from _typeshed import Incomplete
from maya.app.general.mayaMixin import MayaQWidgetDockableMixin as MayaQWidgetDockableMixin
from maya.app.renderSetup.lightEditor.views.properties import GroupProperties as GroupProperties, LightProperties as LightProperties
from maya.app.renderSetup.views.frameLayout import FrameLayout as FrameLayout
from maya.app.renderSetup.views.propertyEditor.override import Override as Override
from maya.app.renderSetup.views.propertyEditor.renderLayer import RenderLayer as RenderLayer

kWarningPropagateLightValueChange: Incomplete

class PropertyEditorScrollArea(QScrollArea):
    STARTING_SIZE: Incomplete
    def sizeHint(self): ...

class PropertyEditor(MayaQWidgetDockableMixin, QWidget):
    width: Incomplete
    PREFERRED_SIZE: Incomplete
    MINIMUM_SIZE: Incomplete
    MAX_INCREMENTAL_LOAD_ITEMS: int
    MINIMUM_DISTANCE_TO_START_DYNAMIC_SCROLL: int
    pinnedItemsLightEditor: Incomplete
    @staticmethod
    def pinListChanged(boolVal, groupName) -> None: ...
    observeRenderSetup: Incomplete
    needsRebuild: Incomplete
    itemsToRepopulate: Incomplete
    rebuildInProgress: Incomplete
    preferredSize: Incomplete
    treeView: Incomplete
    model: Incomplete
    scrollArea: Incomplete
    scrollAreaLayout: Incomplete
    scrollWidget: Incomplete
    scrollWidgetLayout: Incomplete
    frameLayouts: Incomplete
    appendItemsInProgress: bool
    def __init__(self, treeView, parent, observeRenderSetup: bool = True) -> None: ...
    def __del__(self) -> None: ...
    def setSizeHint(self, size) -> None: ...
    def sizeHint(self): ...
    def minimumSizeHint(self): ...
    def aboutToDelete(self) -> None: ...
    dispose = aboutToDelete
    def renderSetupAdded(self) -> None: ...
    def renderSetupPreDelete(self) -> None: ...
    def itemChanged(self, item) -> None: ...
    def selectionChanged(self, selected, deselected) -> None: ...
    def triggerRebuild(self): ...
    def rebuild(self) -> None: ...
    def triggerRepopulate(self, item) -> None: ...
    def populateFields(self, item): ...
    def highlight(self, names) -> None: ...
    def lightAttrChanged(self, attrName) -> None: ...
    def createScrollConnector(self) -> None: ...
    def destroyScrollConnector(self) -> None: ...
    def displayMoreItems(self, e) -> None: ...
    def hasMoreItemsToDisplay(self): ...
    def appendMoreItems(self) -> None: ...
