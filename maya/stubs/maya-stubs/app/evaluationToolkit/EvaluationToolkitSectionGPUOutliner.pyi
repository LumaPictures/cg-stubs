from PySide6 import QtCore, QtWidgets
from PySide6.QtGui import QAction
from _typeshed import Incomplete

COLOR_GPU: Incomplete
COLOR_CPU: Incomplete
REFRESH_ICON: Incomplete
LABEL_GPU: Incomplete
LABEL_CPU: Incomplete
LABEL_UPLOAD: Incomplete
LABEL_DOWNLOAD: Incomplete

class eFilterFlags:
    kMeshes: int
    kDeformers: int
    kPassthroughs: int
    kCPU: int
    kGPU: int
    kDownload: int
    kUpload: int
    kBlockingOff: int
    kLAST: int

FILTER_ICON: Incomplete
FILTER_ACTIVE_ICON: Incomplete
kOptVarFilterText: str
kOptVarFilterMeshes: str
kOptVarFilterDeformers: str
kOptVarFilterPassthroughs: str
kOptVarFilterCPU: str
kOptVarFilterGPU: str
kOptVarFilterDownload: str
kOptVarFilterUpload: str
kOptVarFilterBlockingOff: str
filterOptVarLookup: Incomplete

class FilterAction(QAction):
    filterType: Incomplete
    def __init__(self, name, parent, filterType) -> None: ...

class BlockingAction(QAction):
    policy: Incomplete
    def __init__(self, name, parent) -> None: ...

def makeBlockingMenu(parent): ...

class EvalNodeStyledItemDelegate(QtWidgets.QItemDelegate):
    def initStyleOption(self, option, index) -> None: ...

class EvalNodeItem:
    parent: Incomplete
    children: Incomplete
    groupId: int
    groupNode: bool
    name: str
    plug: str
    nodeType: str
    category: str
    evaluatesOnGPU: bool
    dataConversion: str
    statusText: str
    blockingPolicy: str
    depth: int
    childIndex: Incomplete
    def __init__(self, parent: Incomplete | None = None, itemDict: Incomplete | None = None, groupName: Incomplete | None = None) -> None: ...
    def isGroup(self): ...
    def hasBlockingPolicy(self): ...
    def downloadsToCPU(self): ...
    def uploadsToGPU(self): ...
    def decodeDict(self, itemDict) -> None: ...
    def filterMatch(self, filterFlags): ...
    def numChildren(self): ...

class EvalNodeItemModel(QtCore.QAbstractItemModel):
    kColName: int
    kColPlug: int
    kColType: int
    kColEval: int
    kColDepth: int
    kColBlock: int
    kColStatus: int
    kColLAST: int
    header: Incomplete
    headerTips: Incomplete
    outlinerHash: Incomplete
    outlinerActive: bool
    def __init__(self, parent, *args) -> None: ...
    def headerData(self, col, orientation, role): ...
    def columnCount(self, parent): ...
    def rowCount(self, parent=...): ...
    def data(self, index, role): ...
    def setData(self, index, value, role): ...
    def flags(self, index): ...
    def indexValid(self, index): ...
    def nodeFromIndex(self, index): ...
    def indexFromNode(self, node): ...
    def index(self, row, column, parent=...): ...
    def parent(self, child): ...
    def invalidateContents(self) -> None: ...
    def setOutlinerActive(self, active) -> None: ...
    def requestDumpOutlinerInfo(self) -> None: ...
    def outlinerData(self): ...

class EvalNodeSortFilterProxyModel(QtCore.QSortFilterProxyModel):
    filterFlagsChangedSignal: Incomplete
    filterText: Incomplete
    filterFlags: Incomplete
    def __init__(self, ui) -> None: ...
    def filterAcceptsRow(self, row, parent): ...
    def getNameFilter(self): ...
    def setNameFilter(self, filterText) -> None: ...
    def setFilterFlags(self, filterFlags) -> None: ...
    def lessThan(self, left, right): ...

class EvalNodeTreeView(QtWidgets.QTreeView):
    visualizeGraphSignal: Incomplete
    requestRefreshSignal: Incomplete
    expandedMap: Incomplete
    def __init__(self) -> None: ...
    def itemSourceModel(self): ...
    def clickedOnItem(self, index) -> None: ...
    def itemExpandedSlot(self, index) -> None: ...
    def itemCollapsedSlot(self, index) -> None: ...
    def postInitialize(self) -> None: ...
    def sizeHint(self): ...
    def restoreExpandedState(self) -> None: ...
    def nodeFromIndex(self, index): ...
    def indexFromNode(self, node): ...
    def getSelectedItems(self): ...
    blockingMenu: Incomplete
    def contextMenuEvent(self, event) -> None: ...

class OutlinerWidget(QtWidgets.QWidget):
    mainLayout: Incomplete
    topBarLayout: Incomplete
    filterNameLineEdit: Incomplete
    filterButton: Incomplete
    refreshButton: Incomplete
    proxyModel: Incomplete
    sourceModel: Incomplete
    treeView: Incomplete
    def __init__(self, uiParent: Incomplete | None = None) -> None: ...
    def sceneMessage(self, *args) -> None: ...
    def removeSceneChangedCallbacks(self) -> None: ...
    def hookupDeformerEvaluator(self): ...
    def tearDown(self) -> None: ...
    def clear(self) -> None: ...
    def refresh(self) -> None: ...
    def updateTopBar(self) -> None: ...
    def forceRefresh(self) -> None: ...
    def filterTextChanged(self) -> None: ...
    def nodeListSelectionChangedSlot(self, selected, deselected) -> None: ...
    def filterMenuChanged(self, action) -> None: ...
    def setFilterFlagsOnMenu(self) -> None: ...
    def updateFilterButton(self) -> None: ...
    def sizeHint(self): ...
