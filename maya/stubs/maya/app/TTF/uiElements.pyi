from maya.app.flux.imports import *
from _typeshed import Incomplete
from maya.app.flux.core import dpi as dpi, pix as pix

dm: Incomplete

class DropDownPopup(qt.QWidget):
    choice: int
    ignoreButtonPressFromsearchDropDown: bool
    def __init__(self, parent, pos, icons) -> None: ...
    def setChoice(self, choice) -> None: ...
    def showEvent(self, event) -> None: ...
    def timedOut(self) -> None: ...
    def ignoreDropDownButtonPress(self): ...
    def mousePressEvent(self, event) -> None: ...
    def hideEvent(self, event) -> None: ...

class TagListWidget(qt.QListWidget):
    clicked: Incomplete
    def __init__(self, parent: Incomplete | None = None) -> None: ...
    def mouseMoveEvent(self, e) -> None: ...
    def mousePressEvent(self, e) -> None: ...

class ClickableWidget(qt.QWidget):
    clicked: Incomplete
    def __init__(self, parent: Incomplete | None = None) -> None: ...
    def mousePressEvent(self, e) -> None: ...

class TTFListDelegate(qt.QItemDelegate):
    ACTION_ICON_WIDTH: int
    ACTION_ICON_MARGIN: int
    window: Incomplete
    def __init__(self, window, parent: Incomplete | None = None) -> None: ...
    def getBackgroundColor(self, option, selected): ...
    def setPainterFont(self) -> None: ...
    def updateHotkeyForSelectMode(self, item) -> None: ...
    def getPixmapForSelectMode(self, node): ...
    def getSubtitle(self, cmd, w, textWidth): ...
    def paint(self, painter, option, index) -> None: ...
    @staticmethod
    def getCurrentRowHeight(): ...
    def sizeHint(self, option, index): ...

class TTFListWidget(qt.QListWidget):
    transition: Incomplete
    optionBoxClicked: Incomplete
    rightClicked: Incomplete
    rowClicked: Incomplete
    favClicked: Incomplete
    def __init__(self, window, parent: Incomplete | None = None) -> None: ...
    def mouseMoveEvent(self, e) -> None: ...
    def mousePressEvent(self, e) -> None: ...
    def mouseReleaseEvent(self, e) -> None: ...
    def rowUnderMouse(self): ...

class TTFCompleterDelegate(qt.QItemDelegate):
    def __init__(self, parent: Incomplete | None = None) -> None: ...
    def paint(self, painter, option, index) -> None: ...
    def sizeHint(self, option, index): ...

def createCompleter(model): ...

class TTFField(qt.QLineEdit):
    openPreferences: Incomplete
    shortcut: Incomplete
    def __init__(self, model) -> None: ...
    def keyPressEvent(self, event) -> None: ...
    def contextMenuEvent(self, event) -> None: ...
    def openSearchPrefs(self) -> None: ...
    def openPrefs(self) -> None: ...
    def paintEvent(self, e) -> None: ...

class TTFTag(qt.QWidget):
    clicked: Incomplete
    circle: Incomplete
    xshape: Incomplete
    deletable: bool
    dot: Incomplete
    label: Incomplete
    def __init__(self, text: Incomplete | None = None, parent: Incomplete | None = None, color=[75, 153, 165]) -> None: ...
    def eventFilter(self, widget, event): ...
    def paintEvent(self, e) -> None: ...

class DropDownImageButton(qt.QWidget):
    clicked: Incomplete
    rightClicked: Incomplete
    hover: Incomplete
    buttonPixmap: Incomplete
    hoverPixmap: Incomplete
    button: Incomplete
    label: Incomplete
    def __init__(self, imageName, text: str = '', hover: bool = False, parent: Incomplete | None = None) -> None: ...
    def highLight(self, highlight) -> None: ...
    def getLabel(self): ...
    def enterEvent(self, e): ...
    def leaveEvent(self, e): ...
    def mouseReleaseEvent(self, e) -> None: ...
