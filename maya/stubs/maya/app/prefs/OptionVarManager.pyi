from _typeshed import Incomplete

__all__ = ['OptionVarManager']

class OptionVarManager:
    option_vars: Incomplete
    @classmethod
    def as_str(cls): ...
    @classmethod
    def manages(cls, var_name): ...
    @classmethod
    def manage(cls, option_var) -> None: ...
    @classmethod
    def option_var(cls, option_var_name): ...
    @classmethod
    def remember_states(cls, category: Incomplete | None = None) -> None: ...
    @classmethod
    def restore_states(cls, category: Incomplete | None = None) -> None: ...
    @classmethod
    def revert_to_defaults(cls, category: Incomplete | None = None) -> None: ...
    @classmethod
    def read_preferences_from_state(cls, category: Incomplete | None = None) -> None: ...
    @classmethod
    def set_state_from_preferences(cls, category: Incomplete | None = None) -> None: ...
    @classmethod
    def clear_all(cls) -> None: ...
