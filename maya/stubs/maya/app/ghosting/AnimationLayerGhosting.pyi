from collections.abc import Generator

def ghost_objects(dag_objects: Set[str]) -> None: ...
def unghost_objects(dag_objects: Set[str]) -> None: ...
def layer_ghosted(layer: str) -> bool: ...
def set_layer_ghosted(layer: str, ghosted: bool) -> None: ...
def root_layer() -> str: ...
def nodes_in_layer(layer: str) -> Set[str]: ...
def child_layers(layer: str) -> List[str]: ...
def descendant_layers(layer: str) -> Generator[str]: ...
def ghosted_layers() -> Generator[str]: ...
def nodes_in_layers(layers: str) -> Set[str]: ...
def affected_nodes(layer: str) -> Set[str]: ...
def ghost_animation_layer(layer, check_selection: bool = False) -> None: ...
def unghost_animation_layer(layer: str) -> None: ...
def refresh_animation_layer_ghost_color(layer: str) -> None: ...
