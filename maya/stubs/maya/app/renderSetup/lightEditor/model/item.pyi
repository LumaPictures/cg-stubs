import maya.app.renderSetup.model.childNode as childNode
from _typeshed import Incomplete

kSet: Incomplete

class LightItemBase(childNode.TreeOrderedItem, childNode.ChildNode):
    kTypeId: Incomplete
    kTypeName: str
    kWarningMessage: str
    ATTRIBUTE_INTENSITY: int
    ATTRIBUTE_EXPOSURE: int
    ATTRIBUTE_COLOR: int
    enabled: Incomplete
    selfEnabled: Incomplete
    parentEnabled: Incomplete
    isolateSelected: Incomplete
    numIsolatedChildren: Incomplete
    numIsolatedAncestors: Incomplete
    @classmethod
    def creator(cls): ...
    @staticmethod
    def initializer() -> None: ...
    def __init__(self) -> None: ...
    def postConstructor(self) -> None: ...
    def activate(self) -> None: ...
    def deactivate(self) -> None: ...
    def dispose(self, deleteLight) -> None: ...
    def isAbstractClass(self): ...
    def typeId(self): ...
    def typeName(self): ...
    def getSelfEnabledPlug(self): ...
    def getIsolatePlug(self): ...
    def hasIsolatedAncestors(self, dataBlock: Incomplete | None = None): ...
    def hasIsolatedChildren(self, dataBlock: Incomplete | None = None): ...
    def enabledChanged(self) -> None: ...
    def isEnabled(self): ...
    def isSelfEnabled(self, dataBlock: Incomplete | None = None): ...
    def setSelfEnabled(self, value) -> None: ...
    def isIsolateSelected(self, dataBlock: Incomplete | None = None): ...
    def setIsolateSelected(self, value) -> None: ...
    def getLayerNumIsolatedChildren(self): ...
    def getNumIsolatedChildren(self, includeSelf: bool = False): ...
    def getNumIsolatedAncestors(self): ...
    def updateIsolateState(self, numIsolatedAncestors: int = 0): ...
    def detachFromParent(self) -> None: ...
    def getChildren(self, cls=...): ...
    def isAcceptableChild(self, model): ...
    def compute(self, plug, dataBlock): ...
    def getWarning(self): ...
    def setWarning(self, enabled: bool = True) -> None: ...

def getLightItemName(lightShapeObj): ...
def createItem(name, nodeType): ...
def deleteItem(item, deleteLight: bool = True) -> None: ...
