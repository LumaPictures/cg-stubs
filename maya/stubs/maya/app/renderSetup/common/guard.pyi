from _typeshed import Incomplete

class MemberGuardCtx:
    objDict: Incomplete
    member: Incomplete
    singleMember: Incomplete
    newVal: Incomplete
    oldVal: Incomplete
    def __init__(self, obj, member, newVal: Incomplete | None = None) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

def member(objectMember, newValue: bool = True): ...

class StateGuardCtx:
    getFunc: Incomplete
    setFunc: Incomplete
    newVal: Incomplete
    oldVal: Incomplete
    def __init__(self, getFunc, setFunc, newVal: Incomplete | None = None) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

def state(getFunc, setFunc, newValue: bool = True): ...

class EnvironGuardCtx:
    unsetenv: Incomplete
    key: Incomplete
    value: Incomplete
    oldValue: Incomplete
    def __init__(self, key, value) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

def environ(key, value): ...
