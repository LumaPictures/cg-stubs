import maya.app.renderSetup.views.pySide.standardItem as standardItem
from PySide6.QtGui import QStandardItemModel
from _typeshed import Incomplete

SCENE_TYPE_IDX: int
SCENE_CATEGORY_TYPE_IDX: int
SCENE_CATEGORY_RENDER_SETTINGS_TYPE_IDX: int
SCENE_CATEGORY_CAMERAS_TYPE_IDX: int
SCENE_CATEGORY_LIGHTS_TYPE_IDX: int
SCENE_CATEGORY_AOVS_TYPE_IDX: int
SCENE_CATEGORY_SELECTION_SETS_TYPE_IDX: int
MAX_TYPE_IDX: int
SCENE_TYPE: Incomplete
SCENE_CATEGORY_TYPE: Incomplete
SCENE_CATEGORY_RENDER_SETTINGS_TYPE: Incomplete
SCENE_CATEGORY_CAMERAS_TYPE: Incomplete
SCENE_CATEGORY_LIGHTS_TYPE: Incomplete
SCENE_CATEGORY_AOVS_TYPE: Incomplete
SCENE_CATEGORY_SELECTION_SETS_TYPE: Incomplete
NODE_ACCEPTS_DRAG: Incomplete
NODE_VISIBLE: Incomplete
NODE_START_FRAME: Incomplete
NODE_END_FRAME: Incomplete
NODE_FRAME_ANIMATION: Incomplete
NODE_RENDERABLE: Incomplete
NODE_ACTIVE_FRAME: Incomplete
SCENE_STR: Incomplete
RENDER_SETTINGS_STR: Incomplete
CAMERAS_STR: Incomplete
LIGHTS_STR: Incomplete
AOVS_STR: Incomplete
SELECTION_SETS_STR: Incomplete
ROW_HEIGHT: int
EXPAND_COLLAPSE_ACTION: Incomplete
SET_VISIBILITY_ACTION: Incomplete
SET_RENDERABLE_ACTION: Incomplete
PRESET_MENU: Incomplete
AOVS_MENU: Incomplete
LIGHTS_MENU: Incomplete
EXPORT_CURRENT_ACTION: Incomplete
EXPORT_LIGHTGROUPS_ACTION: Incomplete
DEFAULT_PRESET_ACTION: Incomplete
GLOBAL_PRESETS_ACTION: Incomplete
USER_PRESETS_ACTION: Incomplete
USER_LIGHTGROUPS_ACTION: Incomplete
IMPORT_LIGHTGROUPS_ACTION: Incomplete
RS_DEFAULT_RENDER_GLOBALS: str
RS_START_FRAME: str
RS_END_FRAME: str
RS_ANIMATION: str
RS_INVALID_NODE_NAME: Incomplete

class ModelProxyItem(standardItem.StandardItem):
    name: Incomplete
    def __init__(self, name) -> None: ...
    def data(self, role): ...
    def setData(self, value, role) -> None: ...
    def onClick(self, sceneView) -> None: ...
    def onDoubleClick(self, sceneView) -> None: ...
    def isActive(self): ...
    def getActionButton(self, column) -> None: ...
    def getActionButtonCount(self): ...
    def addActiveLayerObserver(self) -> None: ...
    def removeActiveLayerObserver(self) -> None: ...

class SceneProxyItem(ModelProxyItem):
    def __init__(self, name) -> None: ...
    def type(self): ...
    def typeIdx(self): ...
    def data(self, role): ...
    def setData(self, value, role) -> None: ...
    def getActionButton(self, column): ...
    def getActionButtonCount(self): ...

class SceneItemProxyItem(ModelProxyItem):
    def __init__(self, name) -> None: ...
    def data(self, role): ...

class SceneRenderSettingsProxyItem(SceneItemProxyItem):
    endFrame: Incomplete
    animation: Incomplete
    startFrame: Incomplete
    callback: int
    def __init__(self, name) -> None: ...
    def dispose(self) -> None: ...
    def defaultRenderGlobalsChanged(self, msg, mplug, otherMplug, clientData) -> None: ...
    def type(self): ...
    def typeIdx(self): ...
    def data(self, role): ...
    def getActionButton(self, column): ...
    def getActionButtonCount(self): ...
    def onDoubleClick(self, sceneView) -> None: ...
    def isActive(self): ...
    def refresh(self, imposeRefresh) -> None: ...
    def reset(self) -> None: ...

class SceneCamerasProxyItem(SceneItemProxyItem):
    def __init__(self, name) -> None: ...
    def type(self): ...
    def typeIdx(self): ...
    def data(self, role): ...

class SceneLightProxyItem(SceneItemProxyItem):
    def __init__(self, name) -> None: ...
    def type(self): ...
    def typeIdx(self): ...
    def data(self, role): ...
    def getActionButton(self, column): ...
    def getActionButtonCount(self): ...
    def onDoubleClick(self, sceneView) -> None: ...

class SceneAovsProxyItem(SceneItemProxyItem):
    def __init__(self, name) -> None: ...
    def type(self): ...
    def typeIdx(self): ...
    def data(self, role): ...
    def getActionButton(self, column): ...
    def getActionButtonCount(self): ...
    def onDoubleClick(self, sceneView) -> None: ...

class SceneSelectionSetsProxyItem(SceneItemProxyItem):
    def __init__(self, name) -> None: ...
    def type(self): ...
    def typeIdx(self): ...
    def data(self, role): ...

class SceneProxy(QStandardItemModel):
    renderLayerManagerChangeCallback: int
    def __init__(self, parent: Incomplete | None = None) -> None: ...
    def dispose(self) -> None: ...
    def type(self): ...
    def typeIdx(self): ...
    def flags(self, index): ...
    def refreshModel(self) -> None: ...
    def resetModel(self) -> None: ...
