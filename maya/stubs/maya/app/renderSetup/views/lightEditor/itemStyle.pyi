from PySide2.QtCore import *
from PySide2.QtGui import *
from PySide2.QtWidgets import *
from PySide6.QtCore import *
from PySide6.QtGui import *
from PySide6.QtWidgets import *
from _typeshed import Incomplete

class ItemStyle(QCommonStyle):
    DROP_INDICATOR_COLOR: Incomplete
    DROP_INDICATOR_WIDTH: Incomplete
    DROP_INDICATOR_LEFT_OFFSET: Incomplete
    def __init__(self) -> None: ...
    def drawComplexControl(self, control, option, painter, widget: Incomplete | None = None): ...
    def drawControl(self, element, option, painter, widget: Incomplete | None = None): ...
    def drawItemPixmap(self, painter, rectangle, alignment, pixmap): ...
    def drawItemText(self, painter, rectangle, alignment, palette, enabled, text, textRole=...): ...
    def drawPrimitive(self, element, option, painter, widget: Incomplete | None = None) -> None: ...
    def generatedIconPixmap(self, iconMode, pixmap, option): ...
    def hitTestComplexControl(self, control, option, position, widget: Incomplete | None = None): ...
    def itemPixmapRect(self, rectangle, alignment, pixmap): ...
    def itemTextRect(self, metrics, rectangle, alignment, enabled, text): ...
    def pixelMetric(self, metric, option: Incomplete | None = None, widget: Incomplete | None = None): ...
    def polish(self, *args, **kwargs): ...
    def styleHint(self, hint, option: Incomplete | None = None, widget: Incomplete | None = None, returnData: Incomplete | None = None): ...
    def subControlRect(self, control, option, subControl, widget: Incomplete | None = None): ...
    def subElementRect(self, element, option, widget: Incomplete | None = None): ...
    def unpolish(self, *args, **kwargs): ...
    def sizeFromContents(self, ct, opt, contentsSize, widget: Incomplete | None = None): ...
