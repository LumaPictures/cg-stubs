from maya.app.renderSetup.model.utilsModelStrings import *
from _typeshed import Incomplete
from collections.abc import Generator

kWrongArgTypeCtxMgr: Incomplete
kSupportedSimpleTypes: Incomplete
kSupportedVectorTypes: Incomplete

def nameToUserNode(name): ...
def nameToExistingUserNode(name): ...
def canOverrideNode(node): ...
def createSrcMsgAttr(longName, shortName): ...
def createDstMsgAttr(longName, shortName): ...
def createGenericAttr(longName, shortName): ...
def plugSrc(dstPlug): ...
def plugDst(srcPlug): ...
def connect(src, dst) -> None: ...
def disconnect(src, dst) -> None: ...
def disconnectSrc(src) -> None: ...
def disconnectDst(dst) -> None: ...
def connectMsgToDst(userNode, dst) -> None: ...
def getSrcUserNode(dst): ...
def getDstUserNodes(src): ...
def getSrcNode(dst): ...
def getSrcNodeName(dst): ...
def findPlug(userNode, attr): ...
def transferPlug(src, dst) -> None: ...
def deleteNode(node) -> None: ...
def getCollectionsRecursive(parent) -> Generator[Incomplete]: ...
def getGroupsRecursive(parent) -> Generator[Incomplete]: ...
def getContainersRecursive(parent) -> Generator[Incomplete]: ...
def getOverridesRecursive(parent) -> Generator[Incomplete]: ...
def findSurfaceShader(shadingEngine, search: bool = False): ...
def findDisplacementShader(shadingEngine, search: bool = False): ...
def findVolumeShader(shadingEngine, search: bool = False): ...
def isShadingType(typeName): ...
def isShadingNode(obj): ...
def isSurfaceShaderType(typeName): ...
def isSurfaceShaderNode(obj): ...
def isExistingType(t): ...
def isInheritedType(parentTypeName, childTypeName): ...
def isExistingClassification(t): ...
def notUndoRedoing(f): ...

class EncodeMasterValuesCtxMgr:
    getAllNodesFunction: Incomplete
    def __init__(self, getAllNodesFunction) -> None: ...
    def unapplyCorrespondingOverrideAndAddToCache(self, applyOvr) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

def encodeMasterValues(getAllNodesFunction): ...
def sceneHasApplyOverridesOnAGivenNodeType(getAllNodesFunction): ...
def getRenderSetupNodeTypes(): ...
def getRenderSetupNodeTypesNames(): ...
def getLegacyRenderLayerNodeTypesNames(): ...
def findSetMembersNamesRecursively(members) -> Generator[Incomplete]: ...
def findSetMembersDagPathsRecursively(members) -> Generator[Incomplete]: ...
def findValidNestedSetsRecursively(setName) -> Generator[Incomplete]: ...
