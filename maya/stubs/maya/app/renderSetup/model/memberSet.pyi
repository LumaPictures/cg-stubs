from _typeshed import Incomplete

EXCLUDE: int
NEUTRAL: int
INCLUDE: int

class AlreadyHasStatus(Exception): ...

class Node:
    status: Incomplete
    path: Incomplete
    children: Incomplete
    parent: Incomplete
    def __init__(self, path=..., status=...) -> None: ...
    def __hash__(self): ...
    def __eq__(self, other): ...
    def get(self, child): ...
    def add(self, child) -> None: ...
    def remove(self, child) -> None: ...
    def __contains__(self, child) -> bool: ...

class MemberSet:
    root: Incomplete
    def __init__(self, paths=()) -> None: ...
    def include(self, path): ...
    def exclude(self, path): ...
    def paths(self): ...
