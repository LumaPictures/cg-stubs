import maya.api.OpenMaya as OpenMaya
from _typeshed import Incomplete
from collections.abc import Generator

kListCmdPrivate: Incomplete

def forwardListGenerator(list) -> Generator[Incomplete]: ...
def remove(list, x) -> None: ...
def insertBefore(list, nextItem, x) -> None: ...
def append(list, x) -> None: ...
def prepend(list, x) -> None: ...
def insert(list, ndx, x) -> None: ...
def pop(list): ...

class ListCmdBase(OpenMaya.MPxCommand):
    nodeList: Incomplete
    def isUndoable(self): ...
    def doIt(self, args) -> None: ...

class RemoveCmd(ListCmdBase):
    kCmdName: str
    listItem: Incomplete
    @staticmethod
    def execute(nodeList, listItem) -> None: ...
    @staticmethod
    def creator(): ...
    nodeList: Incomplete
    nextItem: Incomplete
    def __init__(self, nodeList, listItem) -> None: ...
    def redoIt(self) -> None: ...
    def undoIt(self) -> None: ...

class InsertCmd(ListCmdBase):
    kCmdName: str
    ndx: Incomplete
    listItem: Incomplete
    @staticmethod
    def execute(nodeList, ndx, listItem) -> None: ...
    @staticmethod
    def creator(): ...
    nodeList: Incomplete
    def __init__(self, nodeList, ndx, listItem) -> None: ...
    def redoIt(self) -> None: ...
    def undoIt(self) -> None: ...

class InsertBeforeCmd(ListCmdBase):
    kCmdName: str
    nextItem: Incomplete
    listItem: Incomplete
    @staticmethod
    def execute(nodeList, nextItem, listItem) -> None: ...
    @staticmethod
    def creator(): ...
    nodeList: Incomplete
    def __init__(self, nodeList, nextItem, listItem) -> None: ...
    def redoIt(self) -> None: ...
    def undoIt(self) -> None: ...

class AppendCmd(ListCmdBase):
    kCmdName: str
    listItem: Incomplete
    @staticmethod
    def execute(nodeList, listItem) -> None: ...
    @staticmethod
    def creator(): ...
    nodeList: Incomplete
    def __init__(self, nodeList, listItem) -> None: ...
    def redoIt(self) -> None: ...
    def undoIt(self) -> None: ...

class PrependCmd(ListCmdBase):
    kCmdName: str
    listItem: Incomplete
    @staticmethod
    def execute(nodeList, listItem) -> None: ...
    @staticmethod
    def creator(): ...
    nodeList: Incomplete
    def __init__(self, nodeList, listItem) -> None: ...
    def redoIt(self) -> None: ...
    def undoIt(self) -> None: ...

class PopCmd(ListCmdBase):
    kCmdName: str
    listItem: Incomplete
    @staticmethod
    def execute(nodeList): ...
    @staticmethod
    def creator(): ...
    nodeList: Incomplete
    def __init__(self, nodeList) -> None: ...
    def doIt(self, args) -> None: ...
    def redoIt(self) -> None: ...
    def undoIt(self) -> None: ...
