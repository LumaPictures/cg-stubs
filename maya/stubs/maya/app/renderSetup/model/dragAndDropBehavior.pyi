from maya.app.renderSetup.model.connectionOverride import *
import maya.api.OpenMayaUI as OpenMayaUI
from _typeshed import Incomplete

class DragAndDropBehavior(OpenMayaUI.MPxDragAndDropBehavior):
    kAttributeCandidates: Incomplete
    kErrorMsg_NoAttributeFound: Incomplete
    kErrorMsg_NoSurfaceShader: Incomplete
    kErrorMsg_NoShadingGroup: Incomplete
    kErrorMsg_NoSurfaceShaderFound: Incomplete
    kErrorMsg_NoShadingGroupFound: Incomplete
    kErrorMsg_IncompatibleTypes: Incomplete
    @staticmethod
    def raiseError(msg) -> None: ...
    @staticmethod
    def connect(sourcePlug, destinationPlug) -> None: ...
    @staticmethod
    def isMatchingClass(node, classificationString): ...
    @staticmethod
    def findNode(node, typeId=..., acceptor: Incomplete | None = None): ...
    @staticmethod
    def findCandidatePlug(sourceNode, destinationPlug): ...

class ConnectionOverrideDragAndDrop(DragAndDropBehavior):
    kTypeName: str
    kNodeSearchIgnoreList: Incomplete
    @staticmethod
    def creator(): ...
    def __init__(self) -> None: ...
    def shouldBeUsedFor(self, sourceNode, destinationNode, sourcePlug, destinationPlug): ...
    def connectAttrToAttr(self, sourcePlug, destinationPlug, force): ...
    def connectAttrToNode(self, sourcePlug, destinationNode, force) -> None: ...
    def connectNodeToAttr(self, sourceNode, destinationPlug, force): ...
    def connectNodeToNode(self, sourceNode, destinationNode, force) -> None: ...
