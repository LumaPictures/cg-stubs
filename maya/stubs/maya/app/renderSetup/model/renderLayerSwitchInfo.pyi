from _typeshed import Incomplete

kApplyLayer: Incomplete
kUnapplyLayer: Incomplete
kApplyOverride: Incomplete
kUnapplyOverride: Incomplete
kReadResolveConflicts: Incomplete
kImporting: Incomplete
kReferencing: Incomplete
IMPORT: int
REFERENCE: int

class RenderLayerSwitchInfo(Incomplete):
    applying: bool
    layer: Incomplete
    ovr: Incomplete
    textImportRef: Incomplete
    def __init__(self) -> None: ...
    def progress(self): ...
    def info(self): ...
    def update(self) -> None: ...

class _Context:
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

class SwitchLayerContext(_Context):
    def __init__(self, oldLayer, newLayer) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

class ApplyOverrideContext(_Context):
    ovr: Incomplete
    def __init__(self, ovr) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

class ApplyApplyOverrideContext(_Context):
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

class UnapplyOverrideContext(_Context):
    ovr: Incomplete
    def __init__(self, ovr) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

class UnapplyApplyOverrideContext(_Context):
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

class UnapplyLayerImportRefContext(_Context):
    oldLayer: Incomplete
    inProgress: bool
    currentOpInfo: Incomplete
    def __init__(self, oldLayer, data: Incomplete | None = None) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...
