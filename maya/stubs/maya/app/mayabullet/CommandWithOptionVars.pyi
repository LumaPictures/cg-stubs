from _typeshed import Incomplete
from maya.app.mayabullet import logger as logger
from maya.app.mayabullet.Trace import Trace as Trace

class CommandWithOptionVars:
    optionVarCategory: str
    optionVarPrefix: str
    optionVarDefaults: Incomplete
    commandName: str
    commandHelpTag: Incomplete
    optionVarToWidgetDict: Incomplete
    optionMenuGrp_labelToEnum: Incomplete
    optionMenuGrp_enumToLabel: Incomplete
    optionBox: str
    def __init__(self) -> None: ...
    @staticmethod
    def command(**kwargs) -> None: ...
    def addOptionDialogWidgets(self): ...
    def updateOptionBox(self) -> None: ...
    def optionBoxClosing(self) -> None: ...
    def getOptionVars(self): ...
    def setOptionVars(self, optionVarDict) -> None: ...
    def executeCommandCB(self, miscBool: Incomplete | None = None): ...
    def executeCommandAndSaveCB(self, miscBool: Incomplete | None = None): ...
    def executeCommandAndHideOptionBoxCB(self, miscBool: Incomplete | None = None): ...
    def hideOptionBoxCB(self, miscBool: Incomplete | None = None) -> None: ...
    def visibilityChangedCB(self, miscBool: Incomplete | None = None) -> None: ...
    def saveOptionBoxPreferencesCB(self, miscBool: Incomplete | None = None) -> None: ...
    def resetOptionBoxToDefaultsCB(self, miscBool: Incomplete | None = None) -> None: ...
    def getWidgetValues(self): ...
    def setWidgetValues(self, optionVarDict) -> None: ...
    def createOptionDialog(self, optionVarOverrideDict: Incomplete | None = None, saveOptionVars: bool = True) -> None: ...

def retrieveOptionVars(prefix: str = '', stripPrefix: bool = False): ...
