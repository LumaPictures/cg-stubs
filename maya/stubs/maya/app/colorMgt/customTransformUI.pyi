from _typeshed import Incomplete

def dialogFactory(type): ...
def addCustomTransformDialog(type): ...

class Dialog:
    path: Incomplete
    name: Incomplete
    transformConnection: Incomplete
    def __init__(self, path: str = '', name: str = '', transformConnection: str = '') -> None: ...
    def show(self): ...
    def build(self) -> None: ...
    def onPathBrowse(self, data) -> None: ...
    def onDismissButton(self, data, msg) -> None: ...
    def add(self) -> None: ...
    def remove(self) -> None: ...

class RenderingSpaceDialog(Dialog):
    def __init__(self, path: str = '', name: str = '', transformConnection: str = '') -> None: ...
    def type(self): ...
    def direction(self): ...
    def title(self): ...
    def apply(self) -> None: ...

class ViewTransformDialog(Dialog):
    def __init__(self, path: str = '', name: str = '', transformConnection: str = '') -> None: ...
    def type(self): ...
    def direction(self): ...
    def title(self): ...
    def apply(self) -> None: ...

class InputTransformDialog(Dialog):
    def __init__(self, path: str = '', name: str = '', transformConnection: str = '') -> None: ...
    def type(self): ...
    def direction(self): ...
    def title(self): ...
    def apply(self) -> None: ...

class OutputTransformDialog(Dialog):
    connectionType: Incomplete
    outputTarget: Incomplete
    dialogTitle: Incomplete
    def __init__(self, path: str = '', name: str = '', transformConnection: str = '', connectionType: str = '', outputTarget: str = '', dialogTitle: str = '') -> None: ...
    def type(self): ...
    def direction(self): ...
    def title(self): ...
    def apply(self) -> None: ...
