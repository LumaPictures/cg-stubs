from _typeshed import Incomplete
from maya.maya_to_py_itr import PyEditItr as PyEditItr

def makeDependNode(name): ...
def getEdits(owner, target): ...
def getEditsThatAffect(target): ...
def canActiveRepApplyEdits(assembly): ...
def printDivider(title, textScrollList, index): ...
def displayEditsWithIter(it, textScrollList, filterWidget, index, unappliedEdits, failedEditsMenuItem, unappliedEditsMenuItem, nonRemovableEditsMenuItem): ...
def displayUnappliedEdits(unappliedEdits, textScrollList, index): ...
def displayEditsOn(owner, textScrollList, filterWidget, failedEditsMenuItem, unappliedEditsMenuItem, nonRemovableEditsMenuItem) -> None: ...
def displayEditsThatAffect(target, textScrollList, filterWidget, failedEditsMenuItem, unappliedEditsMenuItem, nonRemovableEditsMenuItem) -> None: ...

class SelectionModel:
    def __init__(self, text_scroll_list: Incomplete | None = None, indexes: Incomplete | None = None, edit_strings: Incomplete | None = None, edit_count: Incomplete | None = None) -> None: ...
    def has_index(self, index): ...
    def has_edit(self, edit_string): ...
    def edit_count(self): ...

def doRemoveSelectedEdits(assemblyName, selection_model, listEditsOnSelectedAssembly): ...
def removeSelectedEdits(assembly, textScrollList, listEditsOnSelectedAssemblyMenuItem): ...
