from maya.app.commands import TanimLayer as TanimLayer, TrenderSetupStates as TrenderSetupStates, artAttrSkinPaintCmd as artAttrSkinPaintCmd, caddyManip as caddyManip, canCreateCaddyManip as canCreateCaddyManip, changeSubdivComponentDisplayLevel as changeSubdivComponentDisplayLevel, changeSubdivRegion as changeSubdivRegion, coarsenSubdivSelectionList as coarsenSubdivSelectionList, crashInfoCmd as crashInfoCmd, createLayeredPsdFile as createLayeredPsdFile, createSubdivRegion as createSubdivRegion, debug as debug, debugNamespace as debugNamespace, debugVar as debugVar, dgControl as dgControl, dgPerformance as dgPerformance, dgdebug as dgdebug, dgfilter as dgfilter, dgstats as dgstats, eval as eval, headsUpMessage as headsUpMessage, hotkeyEditor as hotkeyEditor, hotkeyMapSet as hotkeyMapSet, iterOnNurbs as iterOnNurbs, manipComponentPivot as manipComponentPivot, mateCtx as mateCtx, meshIntersectTest as meshIntersectTest, mimicMnipulation as mimicMnipulation, multiTouch as multiTouch, myTestCmd as myTestCmd, nodeGrapher as nodeGrapher, nop as nop, polyIterOnPoly as polyIterOnPoly, polyPrimitiveMisc as polyPrimitiveMisc, polySelectEditCtxDataCmd as polySelectEditCtxDataCmd, polyTestPop as polyTestPop, polyUVStackSimilarShellsCmd as polyUVStackSimilarShellsCmd, psdChannelOutliner as psdChannelOutliner, psdConvSolidTxOptions as psdConvSolidTxOptions, psdEditTextureFile as psdEditTextureFile, psdExport as psdExport, psdTextureFile as psdTextureFile, querySubdiv as querySubdiv, rampWidget as rampWidget, rampWidgetAttrless as rampWidgetAttrless, refineSubdivSelectionList as refineSubdivSelectionList, sceneLint as sceneLint, setXformManip as setXformManip, snapshotBeadContext as snapshotBeadContext, softModContext as softModContext, subdDisplayMode as subdDisplayMode, subdListComponentConversion as subdListComponentConversion, subdToBlind as subdToBlind, subdiv as subdiv, subdivCrease as subdivCrease, subdivDisplaySmoothness as subdivDisplaySmoothness, subgraph as subgraph, textManip as textManip, timeEditor as timeEditor, timeEditorAnimSource as timeEditorAnimSource, timeEditorBakeClips as timeEditorBakeClips, timeEditorClip as timeEditorClip, timeEditorClipLayer as timeEditorClipLayer, timeEditorClipOffset as timeEditorClipOffset, timeEditorComposition as timeEditorComposition, timeEditorPanel as timeEditorPanel, timeEditorTracks as timeEditorTracks, viewManip as viewManip
from typing import Any, Callable

ATOMTemplate: Callable
AbortCurrentTool: Callable
ActivateGlobalScreenSlider: Callable
ActivateGlobalScreenSliderModeMarkingMenu: Callable
ActivateViewport20: Callable
AddAnimationOffset: Callable
AddAnimationOffsetOptions: Callable
AddAttribute: Callable
AddBlendShape: Callable
AddBlendShapeOptions: Callable
AddBoatLocator: Callable
AddBoatLocatorOptions: Callable
AddCombinationTarget: Callable
AddCombinationTargetOptions: Callable
AddCurvesToHairSystem: Callable
AddDivisions: Callable
AddDivisionsOptions: Callable
AddDynamicBuoy: Callable
AddDynamicBuoyOptions: Callable
AddEdgeDivisions: Callable
AddEdgeDivisionsOptions: Callable
AddFaceDivisions: Callable
AddFaceDivisionsOptions: Callable
AddFloorContactPlane: Callable
AddHolder: Callable
AddHolderOptions: Callable
AddInBetweenTargetShape: Callable
AddInBetweenTargetShapeOptions: Callable
AddInbetween: Callable
AddInfluence: Callable
AddInfluenceOptions: Callable
AddKeyToolActivate: Callable
AddKeyToolDeactivate: Callable
AddKeysTool: Callable
AddKeysToolOptions: Callable
AddOceanDynamicLocator: Callable
AddOceanDynamicLocatorOptions: Callable
AddOceanPreviewPlane: Callable
AddOceanSurfaceLocator: Callable
AddPfxToHairSystem: Callable
AddPointsTool: Callable
AddPondBoatLocator: Callable
AddPondBoatLocatorOptions: Callable
AddPondDynamicBuoy: Callable
AddPondDynamicBuoyOptions: Callable
AddPondDynamicLocator: Callable
AddPondDynamicLocatorOptions: Callable
AddPondSurfaceLocator: Callable
AddSelectionAsCombinationTarget: Callable
AddSelectionAsCombinationTargetOptions: Callable
AddSelectionAsInBetweenTargetShape: Callable
AddSelectionAsInBetweenTargetShapeOptions: Callable
AddSelectionAsTargetShape: Callable
AddSelectionAsTargetShapeOptions: Callable
AddShrinkWrapSurfaces: Callable
AddTargetShape: Callable
AddTargetShapeOptions: Callable
AddTimeWarp: Callable
AddToCharacterSet: Callable
AddToContainer: Callable
AddToContainerOptions: Callable
AddToCurrentScene3dsMax: Callable
AddToCurrentSceneFlame: Callable
AddToCurrentSceneFlare: Callable
AddToCurrentSceneMotionBuilder: Callable
AddToCurrentSceneMudbox: Callable
AddTweak: Callable
AddWire: Callable
AddWireOptions: Callable
AddWrapInfluence: Callable
AffectSelectedObject: Callable
AimConstraint: Callable
AimConstraintOptions: Callable
Air: Callable
AirOptions: Callable
AlignCameraToPolygon: Callable
AlignCurve: Callable
AlignCurveOptions: Callable
AlignObjects: Callable
AlignSurfaces: Callable
AlignSurfacesOptions: Callable
AlignUV: Callable
AlignUVOptions: Callable
AnimLayerRelationshipEditor: Callable
AnimationSnapshot: Callable
AnimationSnapshotOptions: Callable
AnimationSweep: Callable
AnimationSweepOptions: Callable
AnimationTurntable: Callable
AnimationTurntableOptions: Callable
AppHome: Callable
AppendToHairCache: Callable
AppendToHairCacheOptions: Callable
AppendToPolygonTool: Callable
AppendToPolygonToolOptions: Callable
ApplySettingsToLastStroke: Callable
ApplySettingsToSelectedStroke: Callable
ArcLengthTool: Callable
ArchiveScene: Callable
ArchiveSceneOptions: Callable
Art3dPaintTool: Callable
Art3dPaintToolOptions: Callable
ArtPaintAttrTool: Callable
ArtPaintAttrToolOptions: Callable
ArtPaintBlendShapeWeightsTool: Callable
ArtPaintBlendShapeWeightsToolOptions: Callable
ArtPaintSelectTool: Callable
ArtPaintSelectToolOptions: Callable
ArtPaintSkinWeightsTool: Callable
ArtPaintSkinWeightsToolOptions: Callable
AssetEditor: Callable
AssignBrushToHairSystem: Callable
AssignBrushToPfxToon: Callable
AssignHairConstraint: Callable
AssignHairConstraintOptions: Callable
AssignNewMaterial: Callable
AssignNewPfxToon: Callable
AssignNewSet: Callable
AssignOfflineFile: Callable
AssignOfflineFileFromRefEd: Callable
AssignOfflineFileFromRefEdOptions: Callable
AssignOfflineFileOptions: Callable
AssignTemplate: Callable
AssignTemplateOptions: Callable
AssignToonShaderCircleHighlight: Callable
AssignToonShaderDarkProfile: Callable
AssignToonShaderLightAngle: Callable
AssignToonShaderRimLight: Callable
AssignToonShaderShadedBrightness: Callable
AssignToonShaderSolid: Callable
AssignToonShaderThreeToneBrightness: Callable
AssumePreferredAngle: Callable
AssumePreferredAngleOptions: Callable
AttachBrushToCurves: Callable
AttachCurve: Callable
AttachCurveOptions: Callable
AttachSelectedAsSourceField: Callable
AttachSubdivSurface: Callable
AttachSubdivSurfaceOptions: Callable
AttachSurfaceWithoutMoving: Callable
AttachSurfaces: Callable
AttachSurfacesOptions: Callable
AttachToPath: Callable
AttachToPathOptions: Callable
AttributeEditor: Callable
AutoPaintMarkingMenu: Callable
AutoPaintMarkingMenuPopDown: Callable
AutoProjection: Callable
AutoProjectionOptions: Callable
AutoSeamUVs: Callable
AutoSeamUVsOptions: Callable
AutobindContainer: Callable
AutobindContainerOptions: Callable
AveragePolygonNormals: Callable
AveragePolygonNormalsOptions: Callable
AverageVertex: Callable
BakeAllNonDefHistory: Callable
BakeChannel: Callable
BakeChannelOptions: Callable
BakeCustomPivot: Callable
BakeCustomPivotOptions: Callable
BakeDeformerTool: Callable
BakeNonDefHistory: Callable
BakeNonDefHistoryOptions: Callable
BakeSimulation: Callable
BakeSimulationOptions: Callable
BakeSpringAnimation: Callable
BakeSpringAnimationOptions: Callable
BakeSurfaceToTexture: Callable
BakeTopologyToTargets: Callable
BaseLevelComponentDisplay: Callable
BatchBake: Callable
BatchBakeOptions: Callable
BatchRender: Callable
BatchRenderOptions: Callable
Bend: Callable
BendCurves: Callable
BendCurvesOptions: Callable
BendOptions: Callable
BestPlaneTexturingTool: Callable
Bevel: Callable
BevelOptions: Callable
BevelPlus: Callable
BevelPlusOptions: Callable
BevelPolygon: Callable
BevelPolygonOptions: Callable
BezierCurveToNurbs: Callable
BezierPresetBezier: Callable
BezierPresetBezierCorner: Callable
BezierPresetCorner: Callable
BezierSetAnchorBroken: Callable
BezierSetAnchorEven: Callable
BezierSetAnchorSmooth: Callable
BezierSetAnchorUneven: Callable
Birail1: Callable
Birail1Options: Callable
Birail2: Callable
Birail2Options: Callable
Birail3: Callable
Birail3Options: Callable
BlendShapeEditor: Callable
BlindDataEditor: Callable
BluePencilActivateBrushSize: Callable
BluePencilActivateGhostNext: Callable
BluePencilActivateGhostPrevious: Callable
BluePencilActivateOpacity: Callable
BluePencilArrowTool: Callable
BluePencilBrushTool: Callable
BluePencilDeactivateBrushSize: Callable
BluePencilDeactivateGhostNext: Callable
BluePencilDeactivateGhostPrevious: Callable
BluePencilDeactivateOpacity: Callable
BluePencilEllipseTool: Callable
BluePencilEraserTool: Callable
BluePencilLineTool: Callable
BluePencilPencilTool: Callable
BluePencilRectangleTool: Callable
BluePencilRetimeBackward: Callable
BluePencilRetimeForward: Callable
BluePencilTextTool: Callable
BluePencilTransform: Callable
BookmarkManager: Callable
BooleanAddSelectedObjects: Callable
BothProxySubdivDisplay: Callable
Boundary: Callable
BoundaryOptions: Callable
BreakLightLinks: Callable
BreakRigidBodyConnection: Callable
BreakShadowLinks: Callable
BreakTangent: Callable
BreakTangents: Callable
BridgeEdge: Callable
BridgeEdgeOptions: Callable
BridgeOrFill: Callable
BrushAnimationMarkingMenu: Callable
BrushAnimationMarkingMenuPopDown: Callable
BrushPresetBlend: Callable
BrushPresetBlendOff: Callable
BrushPresetBlendShading: Callable
BrushPresetBlendShadingOff: Callable
BrushPresetBlendShape: Callable
BrushPresetBlendShapeOff: Callable
BrushPresetReplaceShading: Callable
BrushPresetReplaceShadingOff: Callable
BufferCurveSnapshot: Callable
CVCurveTool: Callable
CVCurveToolOptions: Callable
CVHardness: Callable
CVHardnessOptions: Callable
CameraModeOrthographic: Callable
CameraModePerspective: Callable
CameraModeToggle: Callable
CameraRemoveAll: Callable
CameraRemoveAllForAll: Callable
CameraRemoveFromExclusive: Callable
CameraRemoveFromHidden: Callable
CameraSetEditor: Callable
CancelBatchRender: Callable
CenterPivot: Callable
CenterViewOfSelection: Callable
ChamferVertex: Callable
ChamferVertexOptions: Callable
ChangeAnimPrefs: Callable
ChangeColorPrefs: Callable
ChangeEdgeWidth: Callable
ChangeNormalSize: Callable
ChangeUIPrefs: Callable
ChangeUVSize: Callable
ChangeVertexSize: Callable
ChannelControlEditor: Callable
CharacterAnimationEditor: Callable
CharacterMapper: Callable
CharacterSetEditor: Callable
CircularFillet: Callable
CircularFilletOptions: Callable
CleanupPolygon: Callable
CleanupPolygonOptions: Callable
ClearBluePencilFrame: Callable
ClearCurrentCharacterList: Callable
ClearCurrentContainer: Callable
ClearInitialState: Callable
ClearPaintEffectsView: Callable
CloseFrontWindow: Callable
ClosestPointOn: Callable
ClosestPointOnOptions: Callable
ClusterCurve: Callable
CoarseLevelComponentDisplay: Callable
CoarsenSelectedComponents: Callable
CoarserSubdivLevel: Callable
CollapseSubdivSurfaceHierarchy: Callable
CollapseSubdivSurfaceHierarchyOptions: Callable
ColorPreferencesWindow: Callable
CombinePolygons: Callable
CombinePolygonsOptions: Callable
CommandShell: Callable
CommandWindow: Callable
CompleteCurrentTool: Callable
ComponentEditor: Callable
ConformPolygon: Callable
ConformPolygonNormals: Callable
ConformPolygonOptions: Callable
ConnectComponents: Callable
ConnectComponentsOptions: Callable
ConnectJoint: Callable
ConnectJointOptions: Callable
ConnectNodeToIKFK: Callable
ConnectToTime: Callable
ConnectionEditor: Callable
ContentBrowserLayout: Callable
ContentBrowserWindow: Callable
ConvertHairSelectionToConstraints: Callable
ConvertHairSelectionToCurrentPositions: Callable
ConvertHairSelectionToFollicles: Callable
ConvertHairSelectionToHairSystems: Callable
ConvertHairSelectionToRestCurveEndCVs: Callable
ConvertHairSelectionToRestCurves: Callable
ConvertHairSelectionToStartAndRestCurveEndCVs: Callable
ConvertHairSelectionToStartCurveEndCVs: Callable
ConvertHairSelectionToStartCurves: Callable
ConvertInstanceToObject: Callable
ConvertPaintEffectsToPoly: Callable
ConvertPaintEffectsToPolyOptions: Callable
ConvertSelectionToContainedEdges: Callable
ConvertSelectionToContainedFaces: Callable
ConvertSelectionToEdgePerimeter: Callable
ConvertSelectionToEdges: Callable
ConvertSelectionToFacePerimeter: Callable
ConvertSelectionToFaces: Callable
ConvertSelectionToShell: Callable
ConvertSelectionToShellBorder: Callable
ConvertSelectionToUVBorder: Callable
ConvertSelectionToUVEdgeLoop: Callable
ConvertSelectionToUVPerimeter: Callable
ConvertSelectionToUVShell: Callable
ConvertSelectionToUVShellBorder: Callable
ConvertSelectionToUVs: Callable
ConvertSelectionToVertexFaces: Callable
ConvertSelectionToVertexPerimeter: Callable
ConvertSelectionToVertices: Callable
ConvertToBreakdown: Callable
ConvertToFrozen: Callable
ConvertToKey: Callable
ConvertTypeCapsToCurves: Callable
CopyBluePencilFrame: Callable
CopyFlexor: Callable
CopyKeys: Callable
CopyKeysOptions: Callable
CopyMeshAttributes: Callable
CopySelected: Callable
CopySkinWeights: Callable
CopySkinWeightsOptions: Callable
CopyUVs: Callable
CopyUVsToUVSet: Callable
CopyUVsToUVSetOptions: Callable
CopyVertexSkinWeights: Callable
CopyVertexWeights: Callable
CopyVertexWeightsOptions: Callable
CreaseProxyEdgeTool: Callable
CreaseProxyEdgeToolOptions: Callable
Create2DContainer: Callable
Create2DContainerEmitter: Callable
Create2DContainerEmitterOptions: Callable
Create2DContainerOptions: Callable
Create3DContainer: Callable
Create3DContainerEmitter: Callable
Create3DContainerEmitterOptions: Callable
Create3DContainerOptions: Callable
CreateActiveRigidBody: Callable
CreateActiveRigidBodyOptions: Callable
CreateAmbientLight: Callable
CreateAmbientLightOptions: Callable
CreateAnnotateNode: Callable
CreateAreaLight: Callable
CreateAreaLightOptions: Callable
CreateBarrierConstraint: Callable
CreateBarrierConstraintOptions: Callable
CreateBezierCurveTool: Callable
CreateBezierCurveToolOptions: Callable
CreateBindingSet: Callable
CreateBlendShape: Callable
CreateBlendShapeOptions: Callable
CreateCameraAim: Callable
CreateCameraAimOptions: Callable
CreateCameraAimUp: Callable
CreateCameraAimUpOptions: Callable
CreateCameraFromView: Callable
CreateCameraOnly: Callable
CreateCameraOnlyOptions: Callable
CreateCharacter: Callable
CreateCharacterOptions: Callable
CreateClip: Callable
CreateClipOptions: Callable
CreateCluster: Callable
CreateClusterOptions: Callable
CreateConstraint: Callable
CreateConstraintClip: Callable
CreateConstraintClipOptions: Callable
CreateConstraintOptions: Callable
CreateConstructionPlane: Callable
CreateConstructionPlaneOptions: Callable
CreateContainer: Callable
CreateContainerOptions: Callable
CreateControlRig: Callable
CreateCreaseSet: Callable
CreateCreaseSetOptions: Callable
CreateCurveField: Callable
CreateCurveFromPoly: Callable
CreateCurveFromPolyOptions: Callable
CreateCustomSet: Callable
CreateDagContainer: Callable
CreateDagContainerOptions: Callable
CreateDirectionalLight: Callable
CreateDirectionalLightOptions: Callable
CreateDiskCache: Callable
CreateDiskCacheOptions: Callable
CreateEmitter: Callable
CreateEmitterOptions: Callable
CreateEmptyGroup: Callable
CreateEmptySet: Callable
CreateEmptySetOptions: Callable
CreateEmptyUVSet: Callable
CreateEmptyUVSetOptions: Callable
CreateExpressionClip: Callable
CreateExpressionClipOptions: Callable
CreateFlexorWindow: Callable
CreateFluidCache: Callable
CreateFluidCacheOptions: Callable
CreateHair: Callable
CreateHairCache: Callable
CreateHairCacheOptions: Callable
CreateHairOptions: Callable
CreateHingeConstraint: Callable
CreateHingeConstraintOptions: Callable
CreateIllustratorCurves: Callable
CreateIllustratorCurvesOptions: Callable
CreateImagePlane: Callable
CreateImagePlaneOptions: Callable
CreateJiggleDeformer: Callable
CreateJiggleOptions: Callable
CreateLattice: Callable
CreateLatticeOptions: Callable
CreateLineModifier: Callable
CreateLocator: Callable
CreateMotionTrail: Callable
CreateMotionTrailOptions: Callable
CreateNSoftBody: Callable
CreateNSoftBodyOptions: Callable
CreateNURBSCircle: Callable
CreateNURBSCircleOptions: Callable
CreateNURBSCone: Callable
CreateNURBSConeOptions: Callable
CreateNURBSCube: Callable
CreateNURBSCubeOptions: Callable
CreateNURBSCylinder: Callable
CreateNURBSCylinderOptions: Callable
CreateNURBSPlane: Callable
CreateNURBSPlaneOptions: Callable
CreateNURBSSphere: Callable
CreateNURBSSphereOptions: Callable
CreateNURBSSquare: Callable
CreateNURBSSquareOptions: Callable
CreateNURBSTorus: Callable
CreateNURBSTorusOptions: Callable
CreateNailConstraint: Callable
CreateNailConstraintOptions: Callable
CreateNodeWindow: Callable
CreateOcean: Callable
CreateOceanOptions: Callable
CreateOceanWake: Callable
CreateOceanWakeOptions: Callable
CreatePSDTextureItem: Callable
CreateParticleDiskCache: Callable
CreateParticleDiskCacheOptions: Callable
CreatePartition: Callable
CreatePartitionOptions: Callable
CreatePassiveRigidBody: Callable
CreatePassiveRigidBodyOptions: Callable
CreatePinConstraint: Callable
CreatePinConstraintOptions: Callable
CreatePlatonicSolid: Callable
CreatePlatonicSolidOptions: Callable
CreatePointLight: Callable
CreatePointLightOptions: Callable
CreatePolyFromPreview: Callable
CreatePolygonAxis: Callable
CreatePolygonAxisOptions: Callable
CreatePolygonCone: Callable
CreatePolygonConeOptions: Callable
CreatePolygonCube: Callable
CreatePolygonCubeOptions: Callable
CreatePolygonCylinder: Callable
CreatePolygonCylinderOptions: Callable
CreatePolygonDisc: Callable
CreatePolygonDiscOptions: Callable
CreatePolygonGear: Callable
CreatePolygonGearOptions: Callable
CreatePolygonHelix: Callable
CreatePolygonHelixOptions: Callable
CreatePolygonPipe: Callable
CreatePolygonPipeOptions: Callable
CreatePolygonPlane: Callable
CreatePolygonPlaneOptions: Callable
CreatePolygonPlatonic: Callable
CreatePolygonPlatonicOptions: Callable
CreatePolygonPrism: Callable
CreatePolygonPrismOptions: Callable
CreatePolygonPyramid: Callable
CreatePolygonPyramidOptions: Callable
CreatePolygonSVG: Callable
CreatePolygonSoccerBall: Callable
CreatePolygonSoccerBallOptions: Callable
CreatePolygonSphere: Callable
CreatePolygonSphereOptions: Callable
CreatePolygonSphericalHarmonics: Callable
CreatePolygonSphericalHarmonicsOptions: Callable
CreatePolygonSuperEllipse: Callable
CreatePolygonSuperEllipseOptions: Callable
CreatePolygonTool: Callable
CreatePolygonToolOptions: Callable
CreatePolygonTorus: Callable
CreatePolygonTorusOptions: Callable
CreatePolygonType: Callable
CreatePolygonUltraShape: Callable
CreatePolygonUltraShapeOptions: Callable
CreatePond: Callable
CreatePondOptions: Callable
CreatePose: Callable
CreatePoseInterpolator: Callable
CreatePoseInterpolatorOptions: Callable
CreatePoseOptions: Callable
CreateQuickSelectSet: Callable
CreateReference: Callable
CreateReferenceOptions: Callable
CreateRigidBodySolver: Callable
CreateSculptDeformer: Callable
CreateSculptDeformerOptions: Callable
CreateSet: Callable
CreateSetOptions: Callable
CreateShot: Callable
CreateShotOptions: Callable
CreateShrinkWrap: Callable
CreateShrinkWrapOptions: Callable
CreateSoftBody: Callable
CreateSoftBodyOptions: Callable
CreateSpotLight: Callable
CreateSpotLightOptions: Callable
CreateSpring: Callable
CreateSpringConstraint: Callable
CreateSpringConstraintOptions: Callable
CreateSpringOptions: Callable
CreateSubCharacter: Callable
CreateSubCharacterOptions: Callable
CreateSubdivCone: Callable
CreateSubdivCube: Callable
CreateSubdivCylinder: Callable
CreateSubdivPlane: Callable
CreateSubdivRegion: Callable
CreateSubdivSphere: Callable
CreateSubdivSurface: Callable
CreateSubdivSurfaceOptions: Callable
CreateSubdivSurfacePoly: Callable
CreateSubdivSurfacePolyOptions: Callable
CreateSubdivTorus: Callable
CreateSweepMesh: Callable
CreateSweepMeshOptions: Callable
CreateText: Callable
CreateTextOptions: Callable
CreateTextureDeformer: Callable
CreateTextureDeformerOptions: Callable
CreateTextureReferenceObject: Callable
CreateTimeSliderBookmark: Callable
CreateUVShellAlongBorder: Callable
CreateUVsBasedOnCamera: Callable
CreateUVsBasedOnCameraOptions: Callable
CreateVolumeCone: Callable
CreateVolumeCube: Callable
CreateVolumeLight: Callable
CreateVolumeLightOptions: Callable
CreateVolumeSphere: Callable
CreateWake: Callable
CreateWakeOptions: Callable
CreateWrap: Callable
CreateWrapOptions: Callable
CurlCurves: Callable
CurlCurvesOptions: Callable
CurveEditTool: Callable
CurveFillet: Callable
CurveFilletOptions: Callable
CurveFlow: Callable
CurveFlowOptions: Callable
CurveSmoothnessCoarse: Callable
CurveSmoothnessFine: Callable
CurveSmoothnessMedium: Callable
CurveSmoothnessRough: Callable
CurveUtilitiesMarkingMenu: Callable
CurveUtilitiesMarkingMenuPopDown: Callable
CurveWarp: Callable
CustomNURBSComponentsOptions: Callable
CustomNURBSSmoothness: Callable
CustomNURBSSmoothnessOptions: Callable
CustomPolygonDisplay: Callable
CustomPolygonDisplayOptions: Callable
CutBluePencilFrame: Callable
CutCurve: Callable
CutCurveOptions: Callable
CutKeys: Callable
CutKeysOptions: Callable
CutPolygon: Callable
CutPolygonOptions: Callable
CutSelected: Callable
CutUVs: Callable
CutUVs3D: Callable
CutUVsWithoutHotkey: Callable
CycleBackgroundColor: Callable
CycleDisplayMode: Callable
CycleIKHandleStickyState: Callable
CycleThroughCameras: Callable
DeactivateGlobalScreenSlider: Callable
DeactivateGlobalScreenSliderModeMarkingMenu: Callable
DecreaseCheckerDensity: Callable
DecreaseExposureCoarse: Callable
DecreaseExposureFine: Callable
DecreaseGammaCoarse: Callable
DecreaseGammaFine: Callable
DecreaseManipulatorSize: Callable
DecrementFluidCenter: Callable
DefaultQualityDisplay: Callable
DeformerSetEditor: Callable
Delete: Callable
DeleteAllBookmarks: Callable
DeleteAllCameras: Callable
DeleteAllChannels: Callable
DeleteAllClips: Callable
DeleteAllClusters: Callable
DeleteAllConstraints: Callable
DeleteAllContainers: Callable
DeleteAllControllers: Callable
DeleteAllDynamicConstraints: Callable
DeleteAllExpressions: Callable
DeleteAllFluids: Callable
DeleteAllFurs: Callable
DeleteAllHistory: Callable
DeleteAllIKHandles: Callable
DeleteAllImagePlanes: Callable
DeleteAllJoints: Callable
DeleteAllLattices: Callable
DeleteAllLights: Callable
DeleteAllMotionPaths: Callable
DeleteAllNCloths: Callable
DeleteAllNParticles: Callable
DeleteAllNRigids: Callable
DeleteAllNonLinearDeformers: Callable
DeleteAllParticles: Callable
DeleteAllPoses: Callable
DeleteAllRigidBodies: Callable
DeleteAllRigidConstraints: Callable
DeleteAllSculptObjects: Callable
DeleteAllShadingGroupsAndMaterials: Callable
DeleteAllSounds: Callable
DeleteAllStaticChannels: Callable
DeleteAllStrokes: Callable
DeleteAllWires: Callable
DeleteAttribute: Callable
DeleteBluePencilFrame: Callable
DeleteChannels: Callable
DeleteChannelsOptions: Callable
DeleteConstraints: Callable
DeleteCurrentBookmark: Callable
DeleteCurrentColorSet: Callable
DeleteCurrentSet: Callable
DeleteCurrentUVSet: Callable
DeleteCurrentWorkspace: Callable
DeleteCustomSet: Callable
DeleteEdge: Callable
DeleteEntireHairSystem: Callable
DeleteExpressions: Callable
DeleteExpressionsOptions: Callable
DeleteHair: Callable
DeleteHairCache: Callable
DeleteHistory: Callable
DeleteKeys: Callable
DeleteKeysOptions: Callable
DeleteMemoryCaching: Callable
DeleteMotionPaths: Callable
DeletePolyElements: Callable
DeleteRigidBodies: Callable
DeleteSelectedContainers: Callable
DeleteStaticChannels: Callable
DeleteStaticChannelsOptions: Callable
DeleteSurfaceFlow: Callable
DeleteSurfaceFlowOptions: Callable
DeleteTextureReferenceObject: Callable
DeleteTimeWarp: Callable
DeleteUVs: Callable
DeleteUVsWithoutHotkey: Callable
DeleteUnknownNodes: Callable
DeleteVertex: Callable
DeltaMush: Callable
DeltaMushOptions: Callable
DetachComponent: Callable
DetachCurve: Callable
DetachCurveOptions: Callable
DetachEdgeComponent: Callable
DetachSkeleton: Callable
DetachSkeletonJoints: Callable
DetachSkin: Callable
DetachSkinOptions: Callable
DetachSurfaces: Callable
DetachSurfacesOptions: Callable
DetachVertexComponent: Callable
DeviceEditor: Callable
DisableAll: Callable
DisableAllCaches: Callable
DisableAllGeometryCache: Callable
DisableConstraints: Callable
DisableExpressions: Callable
DisableFluids: Callable
DisableGlobalStitch: Callable
DisableIKSolvers: Callable
DisableMemoryCaching: Callable
DisableParticles: Callable
DisableRigidBodies: Callable
DisableSelectedIKHandles: Callable
DisableSnapshots: Callable
DisableTimeChangeUndoConsolidation: Callable
DisableWeightNrm: Callable
DisableWeightNrmOptions: Callable
DisconnectJoint: Callable
DisplacementToPolygon: Callable
DisplayCurrentHairCurves: Callable
DisplayHairCurves: Callable
DisplayHairCurvesCurrentAndRest: Callable
DisplayHairCurvesCurrentAndStart: Callable
DisplayHairCurvesRestPosition: Callable
DisplayHairCurvesStart: Callable
DisplayIntermediateObjects: Callable
DisplayLayerEditorWindow: Callable
DisplayLight: Callable
DisplayShaded: Callable
DisplayShadedAndTextured: Callable
DisplayShadingMarkingMenu: Callable
DisplayShadingMarkingMenuPopDown: Callable
DisplaySmoothShaded: Callable
DisplayUVShaded: Callable
DisplayUVWireframe: Callable
DisplayViewport: Callable
DisplayWireframe: Callable
DistanceTool: Callable
DistributeShells: Callable
DistributeShellsOptions: Callable
DistributeUVs: Callable
DistributeUVsOptions: Callable
DollyTool: Callable
DopeSheetBakeChannel: Callable
DopeSheetBakeChannelOptions: Callable
DopeSheetCenterCurrentTime: Callable
DopeSheetEditor: Callable
DopeSheetFrameAll: Callable
DopeSheetFramePlaybackRange: Callable
DopeSheetFrameSelected: Callable
DopeSheetInsertKeysTool: Callable
DopeSheetInsertKeysToolOptions: Callable
DopeSheetLockChannel: Callable
DopeSheetMoveNearestPickedKey: Callable
DopeSheetMoveNearestPickedKeyOptions: Callable
DopeSheetSelectKeys: Callable
DopeSheetUnlockChannel: Callable
Drag: Callable
DragOptions: Callable
Duplicate: Callable
DuplicateBluePencilFrame: Callable
DuplicateCurve: Callable
DuplicateCurveOptions: Callable
DuplicateEdges: Callable
DuplicateEdgesOptions: Callable
DuplicateFace: Callable
DuplicateFaceOptions: Callable
DuplicateNURBSPatches: Callable
DuplicateNURBSPatchesOptions: Callable
DuplicateSpecial: Callable
DuplicateSpecialOptions: Callable
DuplicateWithTransform: Callable
DynamicRelationshipEditor: Callable
EPCurveTool: Callable
EPCurveToolOptions: Callable
EditAssignedSet: Callable
EditBookmark: Callable
EditCharacterAttributes: Callable
EditFluidResolution: Callable
EditFluidResolutionOptions: Callable
EditMembershipTool: Callable
EditNormalizationGroups: Callable
EditOversamplingForCacheSettings: Callable
EditPSDTextureItem: Callable
EditPolygonType: Callable
EditTexture: Callable
EmitFluidFromObject: Callable
EmitFluidFromObjectOptions: Callable
EmitFromObject: Callable
EmitFromObjectOptions: Callable
EnableAll: Callable
EnableAllCaches: Callable
EnableAllGeometryCache: Callable
EnableConstraints: Callable
EnableDynamicConstraints: Callable
EnableExpressions: Callable
EnableFluids: Callable
EnableGlobalStitch: Callable
EnableIKSolvers: Callable
EnableMemoryCaching: Callable
EnableNCloths: Callable
EnableNParticles: Callable
EnableNRigids: Callable
EnableNucleuses: Callable
EnableParticles: Callable
EnableRigidBodies: Callable
EnableSelectTool: Callable
EnableSelectedIKHandles: Callable
EnableSnapshots: Callable
EnableTimeChangeUndoConsolidation: Callable
EnableTimeWarp: Callable
EnableWeightNrm: Callable
EnableWeightNrmOptions: Callable
EnableWeightPostNrm: Callable
EnableWeightPostNrmOptions: Callable
EnterConnectTool: Callable
EnterEditMode: Callable
EnterEditModePress: Callable
EnterEditModeRelease: Callable
EvaluationToolkit: Callable
ExpandSelectedComponents: Callable
Export: Callable
ExportAllChannelSets: Callable
ExportAnim: Callable
ExportBluePencilFrames: Callable
ExportChannelSets: Callable
ExportDeformerWeights: Callable
ExportDeformerWeightsOptions: Callable
ExportOfflineFile: Callable
ExportOfflineFileFromRefEd: Callable
ExportOfflineFileFromRefEdOptions: Callable
ExportOfflineFileOptions: Callable
ExportOptions: Callable
ExportProxyContainer: Callable
ExportProxyContainerOptions: Callable
ExportSelection: Callable
ExportSelectionOptions: Callable
ExportSkinWeightMaps: Callable
ExportSkinWeightMapsOptions: Callable
ExpressionEditor: Callable
ExtendCurve: Callable
ExtendCurveOnSurface: Callable
ExtendCurveOnSurfaceOptions: Callable
ExtendCurveOptions: Callable
ExtendFluid: Callable
ExtendFluidOptions: Callable
ExtendSurfaces: Callable
ExtendSurfacesOptions: Callable
ExtractFace: Callable
ExtractFaceOptions: Callable
ExtractSubdivSurfaceVertices: Callable
ExtractSubdivSurfaceVerticesOptions: Callable
Extrude: Callable
ExtrudeEdge: Callable
ExtrudeEdgeOptions: Callable
ExtrudeFace: Callable
ExtrudeFaceOptions: Callable
ExtrudeOptions: Callable
ExtrudeVertex: Callable
ExtrudeVertexOptions: Callable
FBIKLabelArm: Callable
FBIKLabelBigToe: Callable
FBIKLabelCenter: Callable
FBIKLabelCollar: Callable
FBIKLabelElbow: Callable
FBIKLabelExtraFinger: Callable
FBIKLabelFingerBase: Callable
FBIKLabelFoot: Callable
FBIKLabelFootThumb: Callable
FBIKLabelHand: Callable
FBIKLabelHead: Callable
FBIKLabelHip: Callable
FBIKLabelIndex: Callable
FBIKLabelIndexToe: Callable
FBIKLabelKnee: Callable
FBIKLabelLeft: Callable
FBIKLabelLeg: Callable
FBIKLabelMiddleFinger: Callable
FBIKLabelMiddleToe: Callable
FBIKLabelNeck: Callable
FBIKLabelNone: Callable
FBIKLabelPinky: Callable
FBIKLabelPinkyToe: Callable
FBIKLabelRight: Callable
FBIKLabelRingFinger: Callable
FBIKLabelRingToe: Callable
FBIKLabelRoot: Callable
FBIKLabelShoulder: Callable
FBIKLabelSpine: Callable
FBIKLabelThumb: Callable
FBIKLabelToeBase: Callable
FilePathEditor: Callable
FillHole: Callable
FilletBlendTool: Callable
FilletBlendToolOptions: Callable
FineLevelComponentDisplay: Callable
Fire: Callable
FireOptions: Callable
Fireworks: Callable
FireworksOptions: Callable
FitBSpline: Callable
FitBSplineOptions: Callable
Flare: Callable
FlareOptions: Callable
FlipMesh: Callable
FlipTriangleEdge: Callable
FlipTubeDirection: Callable
FlipUVs: Callable
FlipUVsOptions: Callable
FloatSelectedObjects: Callable
FloatSelectedObjectsOptions: Callable
FloatSelectedPondObjects: Callable
FloatSelectedPondObjectsOptions: Callable
FloodSurfaces: Callable
FlowPathObject: Callable
FlowPathObjectOptions: Callable
FluidEmitter: Callable
FluidEmitterOptions: Callable
FluidGradients: Callable
FluidGradientsOptions: Callable
FluidsToPolygons: Callable
FourViewArrangement: Callable
FourViewLayout: Callable
FrameAll: Callable
FrameAllInAllViews: Callable
FrameNextTimeSliderBookmark: Callable
FramePreviousTimeSliderBookmark: Callable
FrameSelected: Callable
FrameSelected2: Callable
FrameSelectedInAllViews: Callable
FrameSelectedWithoutChildren: Callable
FrameSelectedWithoutChildrenInAllViews: Callable
FrameTimeSliderBookmark: Callable
FreeTangentWeight: Callable
FreeformFillet: Callable
FreeformFilletOptions: Callable
FreezeTransformations: Callable
FreezeTransformationsOptions: Callable
FrontPerspViewLayout: Callable
FullCreaseSubdivSurface: Callable
FullHotboxDisplay: Callable
GameExporterWnd: Callable
GeometryConstraint: Callable
GeometryConstraintOptions: Callable
GeometryToBoundingBox: Callable
GeometryToBoundingBoxOptions: Callable
GetCartoonExample: Callable
GetFluidExample: Callable
GetHairExample: Callable
GetOceanPondExample: Callable
GetSettingsFromSelectedStroke: Callable
GetToonExample: Callable
GlobalDiskCacheControl: Callable
GlobalStitch: Callable
GlobalStitchOptions: Callable
GoToBindPose: Callable
GoToBindPoseOptions: Callable
GoToDefaultView: Callable
GoToMaxFrame: Callable
GoToMinFrame: Callable
GoToNextDrivenKey: Callable
GoToPreviousDrivenKey: Callable
GoToWorkingFrame: Callable
Goal: Callable
GoalOptions: Callable
GraphCopy: Callable
GraphCopyOptions: Callable
GraphCut: Callable
GraphCutOptions: Callable
GraphDelete: Callable
GraphDeleteOptions: Callable
GraphEditor: Callable
GraphEditorAbsoluteView: Callable
GraphEditorAlwaysDisplayTangents: Callable
GraphEditorDisableCurveSelection: Callable
GraphEditorDisplayTangentActive: Callable
GraphEditorDisplayValues: Callable
GraphEditorEnableCurveSelection: Callable
GraphEditorFrameAll: Callable
GraphEditorFrameCenterView: Callable
GraphEditorFramePlaybackRange: Callable
GraphEditorFrameSelected: Callable
GraphEditorLockChannel: Callable
GraphEditorNeverDisplayTangents: Callable
GraphEditorNormalizedView: Callable
GraphEditorStackedView: Callable
GraphEditorUnlockChannel: Callable
GraphEditorValueLinesToggle: Callable
GraphPaste: Callable
GraphPasteOptions: Callable
GraphSnap: Callable
GraphSnapOptions: Callable
Gravity: Callable
GravityOptions: Callable
GridOptions: Callable
GridUV: Callable
GridUVOptions: Callable
Group: Callable
GroupOptions: Callable
GrowLoopPolygonSelectionRegion: Callable
GrowPolygonSelectionRegion: Callable
HIKBodyPartMode: Callable
HIKCharacterControlsTool: Callable
HIKCycleMode: Callable
HIKFullBodyMode: Callable
HIKLiveConnectionTool: Callable
HIKPinRotate: Callable
HIKPinTranslate: Callable
HIKSelectedMode: Callable
HIKSetBodyPartKey: Callable
HIKSetFullBodyKey: Callable
HIKSetSelectionKey: Callable
HIKToggleReleasePinning: Callable
HairScaleTool: Callable
HairUVSetLinkingEditor: Callable
HardwareRenderBuffer: Callable
Help: Callable
HideAll: Callable
HideAllLabels: Callable
HideBoundingBox: Callable
HideCameraManipulators: Callable
HideCameras: Callable
HideClusters: Callable
HideControllers: Callable
HideDeformers: Callable
HideDeformingGeometry: Callable
HideDynamicConstraints: Callable
HideFluids: Callable
HideFollicles: Callable
HideFur: Callable
HideGeometry: Callable
HideHairSystems: Callable
HideHotbox: Callable
HideIKHandles: Callable
HideIntermediateObjects: Callable
HideJoints: Callable
HideKinematics: Callable
HideLattices: Callable
HideLightManipulators: Callable
HideLights: Callable
HideManipulators: Callable
HideMarkers: Callable
HideNCloths: Callable
HideNParticles: Callable
HideNRigids: Callable
HideNURBSCurves: Callable
HideNURBSSurfaces: Callable
HideNonlinears: Callable
HideObjectGeometry: Callable
HidePlanes: Callable
HidePolygonSurfaces: Callable
HideSculptObjects: Callable
HideSelectedObjects: Callable
HideSmoothSkinInfluences: Callable
HideStrokeControlCurves: Callable
HideStrokePathCurves: Callable
HideStrokes: Callable
HideSubdivSurfaces: Callable
HideTexturePlacements: Callable
HideUIElements: Callable
HideUnselectedCVs: Callable
HideUnselectedObjects: Callable
HideWrapInfluences: Callable
HighQualityDisplay: Callable
HighlightWhatsNew: Callable
HoldCurrentKeys: Callable
HotkeyPreferencesWindow: Callable
HyperGraphPanelRedoViewChange: Callable
HyperGraphPanelUndoViewChange: Callable
HypergraphDGWindow: Callable
HypergraphDecreaseDepth: Callable
HypergraphHierarchyWindow: Callable
HypergraphIncreaseDepth: Callable
HypergraphWindow: Callable
HypershadeCloseActiveTab: Callable
HypershadeCloseAllTabs: Callable
HypershadeCollapseAsset: Callable
HypershadeConnectSelected: Callable
HypershadeConvertPSDToFileTexture: Callable
HypershadeConvertPSDToLayeredTexture: Callable
HypershadeConvertToFileTexture: Callable
HypershadeConvertToFileTextureOptionBox: Callable
HypershadeCreateAsset: Callable
HypershadeCreateContainerOptions: Callable
HypershadeCreateNewTab: Callable
HypershadeCreatePSDFile: Callable
HypershadeCreateTab: Callable
HypershadeDeleteAllBakeSets: Callable
HypershadeDeleteAllCamerasAndImagePlanes: Callable
HypershadeDeleteAllLights: Callable
HypershadeDeleteAllShadingGroupsAndMaterials: Callable
HypershadeDeleteAllTextures: Callable
HypershadeDeleteAllUtilities: Callable
HypershadeDeleteDuplicateShadingNetworks: Callable
HypershadeDeleteNodes: Callable
HypershadeDeleteSelected: Callable
HypershadeDeleteUnusedNodes: Callable
HypershadeDisplayAllShapes: Callable
HypershadeDisplayAsExtraLargeSwatches: Callable
HypershadeDisplayAsIcons: Callable
HypershadeDisplayAsLargeSwatches: Callable
HypershadeDisplayAsList: Callable
HypershadeDisplayAsMediumSwatches: Callable
HypershadeDisplayAsSmallSwatches: Callable
HypershadeDisplayInterestingShapes: Callable
HypershadeDisplayNoShapes: Callable
HypershadeDuplicateShadingNetwork: Callable
HypershadeDuplicateWithConnections: Callable
HypershadeDuplicateWithoutNetwork: Callable
HypershadeEditPSDFile: Callable
HypershadeEditTexture: Callable
HypershadeExpandAsset: Callable
HypershadeExportSelectedNetwork: Callable
HypershadeFrameAll: Callable
HypershadeFrameSelected: Callable
HypershadeGraphAddSelected: Callable
HypershadeGraphClearGraph: Callable
HypershadeGraphDownstream: Callable
HypershadeGraphMaterialsOnSelectedObjects: Callable
HypershadeGraphRearrange: Callable
HypershadeGraphRemoveDownstream: Callable
HypershadeGraphRemoveSelected: Callable
HypershadeGraphRemoveUnselected: Callable
HypershadeGraphRemoveUpstream: Callable
HypershadeGraphUpDownstream: Callable
HypershadeGraphUpstream: Callable
HypershadeGridToggleSnap: Callable
HypershadeGridToggleVisibility: Callable
HypershadeHideAttributes: Callable
HypershadeImport: Callable
HypershadeIncreaseTraversalDepth: Callable
HypershadeMoveTabDown: Callable
HypershadeMoveTabLeft: Callable
HypershadeMoveTabRight: Callable
HypershadeMoveTabUp: Callable
HypershadeOpenBinsWindow: Callable
HypershadeOpenBrowserWindow: Callable
HypershadeOpenConnectWindow: Callable
HypershadeOpenCreateWindow: Callable
HypershadeOpenGraphEditorWindow: Callable
HypershadeOpenMaterialViewerWindow: Callable
HypershadeOpenModelEditorWindow: Callable
HypershadeOpenOutlinerWindow: Callable
HypershadeOpenPropertyEditorWindow: Callable
HypershadeOpenRenderViewWindow: Callable
HypershadeOpenSpreadSheetWindow: Callable
HypershadeOpenUVEditorWindow: Callable
HypershadeOutlinerPerspLayout: Callable
HypershadePerspLayout: Callable
HypershadePickWalkDown: Callable
HypershadePickWalkLeft: Callable
HypershadePickWalkRight: Callable
HypershadePickWalkUp: Callable
HypershadePinSelected: Callable
HypershadePublishConnections: Callable
HypershadeReduceTraversalDepth: Callable
HypershadeRefreshAllSwatchesOnDisk: Callable
HypershadeRefreshFileListing: Callable
HypershadeRefreshSelectedSwatches: Callable
HypershadeRefreshSelectedSwatchesOnDisk: Callable
HypershadeRemoveAsset: Callable
HypershadeRemoveTab: Callable
HypershadeRenameActiveTab: Callable
HypershadeRenameTab: Callable
HypershadeRenderPerspLayout: Callable
HypershadeRenderTextureRange: Callable
HypershadeRenderTextureRangeOptions: Callable
HypershadeRestoreLastClosedTab: Callable
HypershadeRevertSelectedSwatches: Callable
HypershadeRevertToDefaultTabs: Callable
HypershadeSaveSwatchesToDisk: Callable
HypershadeSelectBakeSets: Callable
HypershadeSelectCamerasAndImagePlanes: Callable
HypershadeSelectConnected: Callable
HypershadeSelectDownStream: Callable
HypershadeSelectLights: Callable
HypershadeSelectMaterialsFromObjects: Callable
HypershadeSelectObjectsWithMaterials: Callable
HypershadeSelectShadingGroupsAndMaterials: Callable
HypershadeSelectTextures: Callable
HypershadeSelectUpStream: Callable
HypershadeSelectUtilities: Callable
HypershadeSetLargeNodeSwatchSize: Callable
HypershadeSetSmallNodeSwatchSize: Callable
HypershadeSetTraversalDepthUnlim: Callable
HypershadeSetTraversalDepthZero: Callable
HypershadeShapeMenuStateAll: Callable
HypershadeShapeMenuStateAllExceptShadingGroupMembers: Callable
HypershadeShapeMenuStateNoShapes: Callable
HypershadeShowAllAttrs: Callable
HypershadeShowConnectedAttrs: Callable
HypershadeShowCustomAttrs: Callable
HypershadeShowDirectoriesAndFiles: Callable
HypershadeShowDirectoriesOnly: Callable
HypershadeSortByName: Callable
HypershadeSortByTime: Callable
HypershadeSortByType: Callable
HypershadeSortReverseOrder: Callable
HypershadeTestTexture: Callable
HypershadeTestTextureOptions: Callable
HypershadeToggleAttrFilter: Callable
HypershadeToggleCrosshairOnEdgeDragging: Callable
HypershadeToggleNodeSwatchSize: Callable
HypershadeToggleNodeTitleMode: Callable
HypershadeToggleShowNamespace: Callable
HypershadeToggleTransformDisplay: Callable
HypershadeToggleUseAssetsAndPublishedAttributes: Callable
HypershadeToggleZoomIn: Callable
HypershadeToggleZoomOut: Callable
HypershadeTransferAttributeValues: Callable
HypershadeTransferAttributeValuesOptions: Callable
HypershadeUnpinSelected: Callable
HypershadeUpdatePSDNetworks: Callable
HypershadeWindow: Callable
IKHandleTool: Callable
IKHandleToolOptions: Callable
IKSplineHandleTool: Callable
IKSplineHandleToolOptions: Callable
IPROptions: Callable
IPRRenderIntoNewWindow: Callable
IgnoreHardwareShader: Callable
IkHdsWin: Callable
IkfkjdsWin: Callable
Import: Callable
ImportAnim: Callable
ImportBluePencilFrames: Callable
ImportChannelSets: Callable
ImportDeformerWeights: Callable
ImportDeformerWeightsOptions: Callable
ImportOptions: Callable
ImportSkinWeightMaps: Callable
ImportSkinWeightMapsOptions: Callable
ImportWorkspaceFiles: Callable
InTangentAuto: Callable
InTangentAutoCustom: Callable
InTangentAutoCustomOptions: Callable
InTangentAutoEase: Callable
InTangentAutoMix: Callable
InTangentClamped: Callable
InTangentFixed: Callable
InTangentFlat: Callable
InTangentLinear: Callable
InTangentPlateau: Callable
InTangentSpline: Callable
InTangentStepNext: Callable
InTangentStepped: Callable
IncreaseCheckerDensity: Callable
IncreaseExposureCoarse: Callable
IncreaseExposureFine: Callable
IncreaseGammaCoarse: Callable
IncreaseGammaFine: Callable
IncreaseManipulatorSize: Callable
IncrementAndSave: Callable
IncrementFluidCenter: Callable
InitialFluidStates: Callable
InitialFluidStatesOptions: Callable
InsertBluePencilFrame: Callable
InsertEdgeLoopTool: Callable
InsertEdgeLoopToolOptions: Callable
InsertIsoparms: Callable
InsertIsoparmsOptions: Callable
InsertJointTool: Callable
InsertKey: Callable
InsertKeyRotate: Callable
InsertKeyScale: Callable
InsertKeyToolActivate: Callable
InsertKeyToolDeactivate: Callable
InsertKeyTranslate: Callable
InsertKeysTool: Callable
InsertKeysToolOptions: Callable
InsertKnot: Callable
InsertKnotOptions: Callable
InteractiveBindSkin: Callable
InteractiveBindSkinOptions: Callable
InteractivePlayback: Callable
InteractiveSplitTool: Callable
InteractiveSplitToolOptions: Callable
IntersectCurve: Callable
IntersectCurveOptions: Callable
IntersectSurfaces: Callable
IntersectSurfacesOptions: Callable
InvertSelection: Callable
JdsWin: Callable
JointTool: Callable
JointToolOptions: Callable
KeyBlendShapeTargetsWeight: Callable
KeyframeTangentMarkingMenu: Callable
KeyframeTangentMarkingMenuPopDown: Callable
LODGenerateMeshes: Callable
LODGenerateMeshesOptions: Callable
LabelBasedOnJointNames: Callable
LassoTool: Callable
LastActionTool: Callable
LatticeDeformKeysTool: Callable
LatticeDeformKeysToolOptions: Callable
LatticeUVTool: Callable
LatticeUVToolOptions: Callable
LayerRelationshipEditor: Callable
LayoutUV: Callable
LayoutUVAlong: Callable
LayoutUVAlongOptions: Callable
LayoutUVOptions: Callable
LayoutUVRectangle: Callable
LevelOfDetailGroup: Callable
LevelOfDetailGroupOptions: Callable
LevelOfDetailUngroup: Callable
LightCentricLightLinkingEditor: Callable
Lightning: Callable
LightningOptions: Callable
LockCamera: Callable
LockContainer: Callable
LockCurveLength: Callable
LockNormals: Callable
LockTangentWeight: Callable
Loft: Callable
LoftOptions: Callable
LongPolygonNormals: Callable
LookAtSelection: Callable
LoopBrushAnimation: Callable
LoopBrushAnimationOptions: Callable
LowQualityDisplay: Callable
MLDeformer: Callable
MLDeformerOptions: Callable
MakeBoats: Callable
MakeBoatsOptions: Callable
MakeBrushSpring: Callable
MakeBrushSpringOptions: Callable
MakeCollide: Callable
MakeCollideHair: Callable
MakeCollideOptions: Callable
MakeCurvesDynamic: Callable
MakeCurvesDynamicOptions: Callable
MakeFluidCollide: Callable
MakeFluidCollideOptions: Callable
MakeHoleTool: Callable
MakeHoleToolOptions: Callable
MakeLightLinks: Callable
MakeLive: Callable
MakeMotionField: Callable
MakeMotorBoats: Callable
MakeMotorBoatsOptions: Callable
MakePaintable: Callable
MakePondBoats: Callable
MakePondBoatsOptions: Callable
MakePondMotorBoats: Callable
MakePondMotorBoatsOptions: Callable
MakePressureCurve: Callable
MakePressureCurveOptions: Callable
MakeShadowLinks: Callable
MakeUVInstanceCurrent: Callable
MapUVBorder: Callable
MapUVBorderOptions: Callable
MarkingMenuPopDown: Callable
MarkingMenuPreferencesWindow: Callable
MatchPivots: Callable
MatchPivotsOptions: Callable
MatchRotation: Callable
MatchRotationOptions: Callable
MatchScaling: Callable
MatchScalingOptions: Callable
MatchTransform: Callable
MatchTransformOptions: Callable
MatchTranslation: Callable
MatchTranslationOptions: Callable
MatchUVs: Callable
MatchUVsOptions: Callable
MediumPolygonNormals: Callable
MediumQualityDisplay: Callable
MergeCharacterSet: Callable
MergeEdgeTool: Callable
MergeEdgeToolOptions: Callable
MergeMultipleEdges: Callable
MergeMultipleEdgesOptions: Callable
MergeToCenter: Callable
MergeUV: Callable
MergeUVOptions: Callable
MergeVertexTool: Callable
MergeVertexToolOptions: Callable
MergeVertices: Callable
MergeVerticesOptions: Callable
MirrorCutPolygonGeometry: Callable
MirrorCutPolygonGeometryOptions: Callable
MirrorDeformerWeights: Callable
MirrorDeformerWeightsOptions: Callable
MirrorJoint: Callable
MirrorJointOptions: Callable
MirrorPolygonGeometry: Callable
MirrorPolygonGeometryOptions: Callable
MirrorSkinWeights: Callable
MirrorSkinWeightsOptions: Callable
MirrorSubdivSurface: Callable
MirrorSubdivSurfaceOptions: Callable
ModelingPanelRedoViewChange: Callable
ModelingPanelUndoViewChange: Callable
ModifyConstraintAxis: Callable
ModifyConstraintAxisOptions: Callable
ModifyCurrentSet: Callable
ModifyDisplacementPress: Callable
ModifyDisplacementRelease: Callable
ModifyLowerRadiusPress: Callable
ModifyLowerRadiusRelease: Callable
ModifyOpacityPress: Callable
ModifyOpacityRelease: Callable
ModifyPaintValuePress: Callable
ModifyPaintValueRelease: Callable
ModifyStampDepthPress: Callable
ModifyStampDepthRelease: Callable
ModifyUVVectorPress: Callable
ModifyUVVectorRelease: Callable
ModifyUpperRadiusPress: Callable
ModifyUpperRadiusRelease: Callable
Morph: Callable
MorphOptions: Callable
MoveCacheToInput: Callable
MoveCurveSeam: Callable
MoveDown: Callable
MoveIKtoFK: Callable
MoveInfluence: Callable
MoveLeft: Callable
MoveNearestPickedKeyToolActivate: Callable
MoveNearestPickedKeyToolDeactivate: Callable
MoveNormalTool: Callable
MoveNormalToolOptions: Callable
MovePolygonComponent: Callable
MovePolygonComponentOptions: Callable
MoveRight: Callable
MoveRotateScaleTool: Callable
MoveRotateScaleToolToggleSnapMode: Callable
MoveRotateScaleToolToggleSnapRelativeMode: Callable
MoveSewUVs: Callable
MoveSkinJointsTool: Callable
MoveSkinJointsToolOptions: Callable
MoveSurfaceSeam: Callable
MoveTool: Callable
MoveToolOptions: Callable
MoveUVTool: Callable
MoveUp: Callable
MultiCutTool: Callable
NCreateEmitter: Callable
NCreateEmitterOptions: Callable
NEmitFromObject: Callable
NEmitFromObjectOptions: Callable
NParticleStyleBalls: Callable
NParticleStyleCloud: Callable
NParticleStylePoints: Callable
NParticleStyleThickCloud: Callable
NParticleStyleWater: Callable
NParticleToPolygons: Callable
NParticleTool: Callable
NParticleToolOptions: Callable
NURBSSmoothnessFine: Callable
NURBSSmoothnessFineOptions: Callable
NURBSSmoothnessHull: Callable
NURBSSmoothnessHullOptions: Callable
NURBSSmoothnessMedium: Callable
NURBSSmoothnessMediumOptions: Callable
NURBSSmoothnessRough: Callable
NURBSSmoothnessRoughOptions: Callable
NURBSTexturePlacementTool: Callable
NURBSTexturePlacementToolOptions: Callable
NURBSToPolygons: Callable
NURBSToPolygonsOptions: Callable
NamespaceEditor: Callable
NewScene: Callable
NewSceneOptions: Callable
Newton: Callable
NewtonOptions: Callable
NextBluePencilFrame: Callable
NextFrame: Callable
NextKey: Callable
NextManipulatorHandle: Callable
NextSkinPaintMode: Callable
NextTimeSliderBookmark: Callable
NextViewArrangement: Callable
NodeEditorAddOnNodeCreate: Callable
NodeEditorAdditiveGraphingMode: Callable
NodeEditorAutoSizeNodes: Callable
NodeEditorCloseActiveTab: Callable
NodeEditorCloseAllTabs: Callable
NodeEditorConnectNodeOnCreation: Callable
NodeEditorConnectOnDrop: Callable
NodeEditorConnectSelectedNodes: Callable
NodeEditorConnectedGraphingMode: Callable
NodeEditorConnectionStyleBezier: Callable
NodeEditorConnectionStyleCorner: Callable
NodeEditorConnectionStyleSShape: Callable
NodeEditorConnectionStyleStraight: Callable
NodeEditorCopy: Callable
NodeEditorCopyConnectionsOnPaste: Callable
NodeEditorCreateNodePopup: Callable
NodeEditorCreateTab: Callable
NodeEditorCut: Callable
NodeEditorDeleteNodes: Callable
NodeEditorExtendToShapes: Callable
NodeEditorGraphAddSelected: Callable
NodeEditorGraphAllShapes: Callable
NodeEditorGraphAllShapesExceptShading: Callable
NodeEditorGraphClearGraph: Callable
NodeEditorGraphDownstream: Callable
NodeEditorGraphNoShapes: Callable
NodeEditorGraphRearrange: Callable
NodeEditorGraphRemoveDownstream: Callable
NodeEditorGraphRemoveSelected: Callable
NodeEditorGraphRemoveUnselected: Callable
NodeEditorGraphRemoveUpstream: Callable
NodeEditorGraphUpDownstream: Callable
NodeEditorGraphUpstream: Callable
NodeEditorGridToggleCrosshairOnEdgeDragging: Callable
NodeEditorGridToggleSnap: Callable
NodeEditorGridToggleVisibility: Callable
NodeEditorHideAttributes: Callable
NodeEditorHighlightConnectionsOnNodeSelection: Callable
NodeEditorIncreaseTraversalDepth: Callable
NodeEditorLayout: Callable
NodeEditorPaste: Callable
NodeEditorPickWalkDown: Callable
NodeEditorPickWalkLeft: Callable
NodeEditorPickWalkRight: Callable
NodeEditorPickWalkUp: Callable
NodeEditorPinByDefault: Callable
NodeEditorPinSelected: Callable
NodeEditorRedockTornOffTab: Callable
NodeEditorReduceTraversalDepth: Callable
NodeEditorRenameActiveTab: Callable
NodeEditorRenderSwatches: Callable
NodeEditorRestoreLastClosedTab: Callable
NodeEditorSelectConnected: Callable
NodeEditorSelectDownStream: Callable
NodeEditorSelectUpStream: Callable
NodeEditorSetLargeNodeSwatchSize: Callable
NodeEditorSetSmallNodeSwatchSize: Callable
NodeEditorSetTraversalDepthUnlim: Callable
NodeEditorSetTraversalDepthZero: Callable
NodeEditorShapeMenuStateAll: Callable
NodeEditorShapeMenuStateAllExceptShadingGroupMembers: Callable
NodeEditorShapeMenuStateNoShapes: Callable
NodeEditorShowAllAttrs: Callable
NodeEditorShowAllCustomAttrs: Callable
NodeEditorShowConnectedAttrs: Callable
NodeEditorShowCustomAttrs: Callable
NodeEditorToggleAttrFilter: Callable
NodeEditorToggleConsistentNodeNameSize: Callable
NodeEditorToggleCreateNodePane: Callable
NodeEditorToggleLockUnlock: Callable
NodeEditorToggleNodeSelectedPins: Callable
NodeEditorToggleNodeSwatchSize: Callable
NodeEditorToggleNodeTitleMode: Callable
NodeEditorToggleShowNamespace: Callable
NodeEditorToggleSyncedSelection: Callable
NodeEditorToggleUseAssetsAndPublishedAttributes: Callable
NodeEditorToggleZoomIn: Callable
NodeEditorToggleZoomOut: Callable
NodeEditorTransforms: Callable
NodeEditorUnitConversions: Callable
NodeEditorUnpinSelected: Callable
NodeEditorWindow: Callable
NonSacredTool: Callable
NonWeightedTangents: Callable
NormalConstraint: Callable
NormalConstraintOptions: Callable
NormalizeUVs: Callable
NormalizeUVsOptions: Callable
NormalizeWeights: Callable
NormalizeWeightsOptions: Callable
NudgeSelectedKeysBackward: Callable
NudgeSelectedKeysForward: Callable
NurbsCurveToBezier: Callable
ObjectCentricLightLinkingEditor: Callable
OffsetCurve: Callable
OffsetCurveOnSurface: Callable
OffsetCurveOnSurfaceOptions: Callable
OffsetCurveOptions: Callable
OffsetEdgeLoopTool: Callable
OffsetEdgeLoopToolOptions: Callable
OffsetSurfaces: Callable
OffsetSurfacesOptions: Callable
OpenAELiveLink: Callable
OpenAREACommunity: Callable
OpenAREAForums: Callable
OpenAnimTutorial: Callable
OpenAutodeskAccount: Callable
OpenAutodeskExchange: Callable
OpenAutodeskStore: Callable
OpenBasicsTutorial: Callable
OpenBifContentBrowser: Callable
OpenBluePencil: Callable
OpenBrowserSetupAssistant: Callable
OpenBugReport: Callable
OpenChannelBox: Callable
OpenChannelsLayers: Callable
OpenCharacterGenerator: Callable
OpenCloseCurve: Callable
OpenCloseCurveOptions: Callable
OpenCloseSurfaces: Callable
OpenCloseSurfacesOptions: Callable
OpenColorSetEditor: Callable
OpenContentBrowser: Callable
OpenCreaseEditor: Callable
OpenDGProfiler: Callable
OpenDesktopAnalytics: Callable
OpenFBXReview: Callable
OpenFacebook: Callable
OpenFeatureRequest: Callable
OpenHomePage: Callable
OpenLSTutorial: Callable
OpenLayerEditor: Callable
OpenLearningChannel: Callable
OpenLearningPath: Callable
OpenLightEditor: Callable
OpenMASHContentBrowser: Callable
OpenMelCmdRef: Callable
OpenMenuFinder: Callable
OpenModTutorial: Callable
OpenModelingToolkit: Callable
OpenMotionTrailEditor: Callable
OpenNodeAttrRef: Callable
OpenProductResearch: Callable
OpenPyCmdRef: Callable
OpenReleaseNotes: Callable
OpenScene: Callable
OpenSceneOptions: Callable
OpenStartupMovies: Callable
OpenSupportCenter: Callable
OpenTimeSliderPrefs: Callable
OpenTinkercad: Callable
OpenTrialTutorials: Callable
OpenTutorials: Callable
OpenViewportPrefs: Callable
OpenVisorForMeshes: Callable
OpenXGenEditor: Callable
OptimizeScene: Callable
OptimizeSceneOptions: Callable
OptimzeUVs: Callable
OptimzeUVsOptions: Callable
OrientConstraint: Callable
OrientConstraintOptions: Callable
OrientJoint: Callable
OrientJointOptions: Callable
OutTangentAuto: Callable
OutTangentAutoCustom: Callable
OutTangentAutoCustomOptions: Callable
OutTangentAutoEase: Callable
OutTangentAutoMix: Callable
OutTangentClamped: Callable
OutTangentFixed: Callable
OutTangentFlat: Callable
OutTangentLinear: Callable
OutTangentPlateau: Callable
OutTangentSpline: Callable
OutTangentStepNext: Callable
OutTangentStepped: Callable
OutlinerCollapseAllItems: Callable
OutlinerCollapseAllSelectedItems: Callable
OutlinerDoHide: Callable
OutlinerExpandAllItems: Callable
OutlinerExpandAllSelectedItems: Callable
OutlinerRenameSelectedItem: Callable
OutlinerRevealSelected: Callable
OutlinerToggleAssignedMaterials: Callable
OutlinerToggleAttributes: Callable
OutlinerToggleAutoExpandLayers: Callable
OutlinerToggleConnected: Callable
OutlinerToggleDAGOnly: Callable
OutlinerToggleIgnoreHidden: Callable
OutlinerToggleIgnoreUseColor: Callable
OutlinerToggleNamespace: Callable
OutlinerToggleOrganizeByClip: Callable
OutlinerToggleOrganizeByLayer: Callable
OutlinerToggleReferenceMembers: Callable
OutlinerToggleReferenceNodes: Callable
OutlinerToggleSetMembers: Callable
OutlinerToggleShapes: Callable
OutlinerToggleShowMuteInformation: Callable
OutlinerToggleTimeEditor: Callable
OutlinerUnhide: Callable
OutlinerWindow: Callable
PFXUVSetLinkingEditor: Callable
PaintCacheTool: Callable
PaintCacheToolOptions: Callable
PaintClusterWeightsTool: Callable
PaintClusterWeightsToolOptions: Callable
PaintDeltaMushWeightsTool: Callable
PaintDeltaMushWeightsToolOptions: Callable
PaintEffectPanelActivate: Callable
PaintEffectPanelDeactivate: Callable
PaintEffectsGlobalSettings: Callable
PaintEffectsMeshQuality: Callable
PaintEffectsPanel: Callable
PaintEffectsToCurve: Callable
PaintEffectsToCurveOptions: Callable
PaintEffectsToNurbs: Callable
PaintEffectsToNurbsOptions: Callable
PaintEffectsToPoly: Callable
PaintEffectsToPolyOptions: Callable
PaintEffectsTool: Callable
PaintEffectsToolOptions: Callable
PaintEffectsWindow: Callable
PaintFluidsTool: Callable
PaintFluidsToolOptions: Callable
PaintGeomCacheTool: Callable
PaintGeomCacheToolOptions: Callable
PaintGrid: Callable
PaintGridOptions: Callable
PaintHairBaldness: Callable
PaintHairColor: Callable
PaintHairFollicles: Callable
PaintHairFolliclesOptions: Callable
PaintHairSpecularColor: Callable
PaintJiggleWeightsTool: Callable
PaintJiggleWeightsToolOptions: Callable
PaintLatticeWeightsTool: Callable
PaintLatticeWeightsToolOptions: Callable
PaintNonlinearWeightsTool: Callable
PaintNonlinearWeightsToolOptions: Callable
PaintOnPaintableObjects: Callable
PaintOnViewPlane: Callable
PaintOperationMarkingMenuPress: Callable
PaintOperationMarkingMenuRelease: Callable
PaintProximityWrapWeightsTool: Callable
PaintProximityWrapWeightsToolOptions: Callable
PaintRandom: Callable
PaintRandomOptions: Callable
PaintReduceWeightsTool: Callable
PaintReduceWeightsToolOptions: Callable
PaintSetMembershipTool: Callable
PaintSetMembershipToolOptions: Callable
PaintShrinkWrapWeightsTool: Callable
PaintShrinkWrapWeightsToolOptions: Callable
PaintSoftWeights: Callable
PaintSoftWeightsOptions: Callable
PaintTensionWeightsTool: Callable
PaintTensionWeightsToolOptions: Callable
PaintTextureDeformerWeightsTool: Callable
PaintTextureDeformerWeightsToolOptions: Callable
PaintToonBorderColor: Callable
PaintToonCreaseColor: Callable
PaintToonLineOffset: Callable
PaintToonLineOpacity: Callable
PaintToonLineWidth: Callable
PaintToonProfileColor: Callable
PaintTransferAttributes: Callable
PaintVertexColorTool: Callable
PaintVertexColorToolOptions: Callable
PaintWireWeightsTool: Callable
PaintWireWeightsToolOptions: Callable
PanZoomTool: Callable
PanePop: Callable
PanelPreferencesWindow: Callable
ParameterTool: Callable
Parent: Callable
ParentBaseWire: Callable
ParentBaseWireOptions: Callable
ParentConstraint: Callable
ParentConstraintOptions: Callable
ParentOptions: Callable
PartSpriteWizard: Callable
PartialCreaseSubdivSurface: Callable
ParticleCollisionEvents: Callable
ParticleFill: Callable
ParticleFillOptions: Callable
ParticleInstancer: Callable
ParticleInstancerOptions: Callable
ParticleTool: Callable
ParticleToolOptions: Callable
PartitionEditor: Callable
PasteBluePencilFrame: Callable
PasteKeys: Callable
PasteKeysOptions: Callable
PasteSelected: Callable
PasteUVs: Callable
PasteVertexSkinWeights: Callable
PasteVertexWeights: Callable
PasteVertexWeightsOptions: Callable
PauseViewportEval: Callable
PencilCurveTool: Callable
PencilCurveToolOptions: Callable
PerPointEmissionRates: Callable
PerformExportToBackburner: Callable
PerformPrecompExport: Callable
PerformPrecompExportOptions: Callable
PerformTessellationSetup: Callable
PerformTessellationSetupOptions: Callable
PerformanceSettingsWindow: Callable
PerspGraphHypergraphLayout: Callable
PerspGraphLayout: Callable
PerspGraphOutlinerLayout: Callable
PerspRelationshipEditorLayout: Callable
PerspTextureLayout: Callable
PfxBrushTransfer: Callable
PfxFlipTubeDir: Callable
PfxGetBrush: Callable
PfxMakeCollide: Callable
PfxPresetBlend: Callable
PfxSetLineModifierObject: Callable
PickColorActivate: Callable
PickColorDeactivate: Callable
PickWalkDown: Callable
PickWalkDownSelect: Callable
PickWalkIn: Callable
PickWalkLeft: Callable
PickWalkLeftSelect: Callable
PickWalkOut: Callable
PickWalkRight: Callable
PickWalkRightSelect: Callable
PickWalkStopAtTransform: Callable
PickWalkUp: Callable
PickWalkUpSelect: Callable
PickWalkUseController: Callable
PinSelection: Callable
PinSelectionOptions: Callable
PixelMoveDown: Callable
PixelMoveLeft: Callable
PixelMoveRight: Callable
PixelMoveUp: Callable
Planar: Callable
PlanarOptions: Callable
PlaybackBackward: Callable
PlaybackForward: Callable
PlaybackFree: Callable
PlaybackLoopContinuous: Callable
PlaybackLoopOnce: Callable
PlaybackLoopOscillate: Callable
PlaybackPefRealtime: Callable
PlaybackRangeAnimStartEnd: Callable
PlaybackRangeEnabledClips: Callable
PlaybackRangeHighlight: Callable
PlaybackRangeMinMax: Callable
PlaybackRangePrefs: Callable
PlaybackRangeSound: Callable
PlaybackRangeStartEnd: Callable
PlaybackRealtime: Callable
PlaybackSteppedPreview: Callable
PlaybackStop: Callable
PlaybackToggle: Callable
PlayblastOptions: Callable
PlayblastWindow: Callable
PlayblastWindowOptions: Callable
PluginManager: Callable
PointConstraint: Callable
PointConstraintOptions: Callable
PointOnCurve: Callable
PointOnCurveOptions: Callable
PointOnPolyConstraint: Callable
PointOnPolyConstraintOptions: Callable
PokePolygon: Callable
PokePolygonOptions: Callable
PoleVectorConstraint: Callable
PoleVectorConstraintOptions: Callable
PolyAssignSubdivHole: Callable
PolyAssignSubdivHoleOptions: Callable
PolyBevelCutback: Callable
PolyBevelCutbackOptions: Callable
PolyBrushMarkingMenu: Callable
PolyBrushMarkingMenuPopDown: Callable
PolyCircularize: Callable
PolyCircularizeOptions: Callable
PolyConvertToLoopAndDelete: Callable
PolyConvertToLoopAndDuplicate: Callable
PolyConvertToRingAndCollapse: Callable
PolyConvertToRingAndSplit: Callable
PolyCreaseTool: Callable
PolyCreaseToolOptions: Callable
PolyDisplayReset: Callable
PolyEditEdgeFlow: Callable
PolyEditEdgeFlowOptions: Callable
PolyExtrude: Callable
PolyExtrudeEdges: Callable
PolyExtrudeEdgesOptions: Callable
PolyExtrudeFaces: Callable
PolyExtrudeFacesOptions: Callable
PolyExtrudeOptions: Callable
PolyExtrudeVertices: Callable
PolyExtrudeVerticesOptions: Callable
PolyMerge: Callable
PolyMergeEdges: Callable
PolyMergeEdgesOptions: Callable
PolyMergeOptions: Callable
PolyMergeVertices: Callable
PolyMergeVerticesOptions: Callable
PolyRemesh: Callable
PolyRemeshOptions: Callable
PolyRemoveAllCrease: Callable
PolyRemoveCrease: Callable
PolyRetopo: Callable
PolyRetopoOptions: Callable
PolySelectTool: Callable
PolySelectToolOptions: Callable
PolySpinEdgeBackward: Callable
PolySpinEdgeForward: Callable
PolygonApplyColor: Callable
PolygonApplyColorOptions: Callable
PolygonBooleanCutOut: Callable
PolygonBooleanCutOutOptions: Callable
PolygonBooleanDifference: Callable
PolygonBooleanDifferenceBA: Callable
PolygonBooleanDifferenceBAOptions: Callable
PolygonBooleanDifferenceOptions: Callable
PolygonBooleanHolePunch: Callable
PolygonBooleanHolePunchOptions: Callable
PolygonBooleanIntersection: Callable
PolygonBooleanIntersectionOptions: Callable
PolygonBooleanSlice: Callable
PolygonBooleanSliceOptions: Callable
PolygonBooleanSplitEdges: Callable
PolygonBooleanSplitEdgesOptions: Callable
PolygonBooleanUnion: Callable
PolygonBooleanUnionOptions: Callable
PolygonClearClipboard: Callable
PolygonClearClipboardOptions: Callable
PolygonCollapse: Callable
PolygonCollapseEdges: Callable
PolygonCollapseFaces: Callable
PolygonCopy: Callable
PolygonCopyOptions: Callable
PolygonHardenEdge: Callable
PolygonNormalEditTool: Callable
PolygonPaste: Callable
PolygonPasteOptions: Callable
PolygonSelectionConstraints: Callable
PolygonSoftenEdge: Callable
PolygonSoftenHarden: Callable
PolygonSoftenHardenOptions: Callable
PoseEditor: Callable
PoseInterpolatorNewGroup: Callable
PositionAlongCurve: Callable
PostInfinityConstant: Callable
PostInfinityCycle: Callable
PostInfinityCycleOffset: Callable
PostInfinityLinear: Callable
PostInfinityOscillate: Callable
PreInfinityConstant: Callable
PreInfinityCycle: Callable
PreInfinityCycleOffset: Callable
PreInfinityLinear: Callable
PreInfinityOscillate: Callable
PreferencesWindow: Callable
PrefixHierarchyNames: Callable
PreflightPolygon: Callable
PreflightPolygonOptions: Callable
PrelightPolygon: Callable
PrelightPolygonOptions: Callable
PreloadReferenceEditor: Callable
PresetBlendingWindow: Callable
PrevSkinPaintMode: Callable
PreviousBluePencilFrame: Callable
PreviousFrame: Callable
PreviousKey: Callable
PreviousManipulatorHandle: Callable
PreviousTimeSliderBookmark: Callable
PreviousViewArrangement: Callable
ProductInformation: Callable
ProfilerTool: Callable
ProfilerToolCategoryView: Callable
ProfilerToolCpuView: Callable
ProfilerToolHideSelected: Callable
ProfilerToolHideSelectedRepetition: Callable
ProfilerToolReset: Callable
ProfilerToolShowAll: Callable
ProfilerToolShowSelected: Callable
ProfilerToolShowSelectedRepetition: Callable
ProfilerToolThreadView: Callable
ProfilerToolToggleRecording: Callable
ProjectCurveOnMesh: Callable
ProjectCurveOnMeshOptions: Callable
ProjectCurveOnSurface: Callable
ProjectCurveOnSurfaceOptions: Callable
ProjectTangent: Callable
ProjectTangentOptions: Callable
ProjectWindow: Callable
ProportionalModificationTool: Callable
ProximityPin: Callable
ProximityPinOptions: Callable
ProximityWrap: Callable
ProximityWrapOptions: Callable
PruneCluster: Callable
PruneLattice: Callable
PruneSculpt: Callable
PruneSmallWeights: Callable
PruneSmallWeightsOptions: Callable
PruneWire: Callable
PublishAttributes: Callable
PublishAttributesOptions: Callable
PublishChildAnchor: Callable
PublishChildAnchorOptions: Callable
PublishConnections: Callable
PublishConnectionsOptions: Callable
PublishNode: Callable
PublishParentAnchor: Callable
PublishParentAnchorOptions: Callable
PublishRootTransform: Callable
PublishRootTransformOptions: Callable
QuadDrawTool: Callable
Quadrangulate: Callable
QuadrangulateOptions: Callable
QualityDisplayMarkingMenu: Callable
QualityDisplayMarkingMenuPopDown: Callable
QuickCreateTimeSliderBookmark: Callable
QuickRigEditor: Callable
QuickTour: Callable
Quit: Callable
Radial: Callable
RadialOptions: Callable
RaiseApplicationWindows: Callable
RaiseMainWindow: Callable
RandomizeFollicles: Callable
RandomizeFolliclesOptions: Callable
RandomizeShells: Callable
RandomizeShellsOptions: Callable
ReassignBoneLatticeJoint: Callable
ReattachSkeleton: Callable
ReattachSkeletonJoints: Callable
RebuildCurve: Callable
RebuildCurveOptions: Callable
RebuildSurfaces: Callable
RebuildSurfacesOptions: Callable
RecentCommandsWindow: Callable
Redo: Callable
RedoPreviousIPRRender: Callable
RedoPreviousRender: Callable
RedoViewChange: Callable
ReducePolygon: Callable
ReducePolygonOptions: Callable
ReferenceEditor: Callable
RefineSelectedComponents: Callable
RegionKeysTool: Callable
RelaxInitialState: Callable
RelaxInitialStateOptions: Callable
RelaxUVShell: Callable
RelaxUVShellOptions: Callable
RemoveBindingSet: Callable
RemoveBlendShape: Callable
RemoveBlendShapeOptions: Callable
RemoveBrushSharing: Callable
RemoveConstraintTarget: Callable
RemoveConstraintTargetOptions: Callable
RemoveFromCharacterSet: Callable
RemoveFromContainer: Callable
RemoveFromContainerOptions: Callable
RemoveInbetween: Callable
RemoveInfluence: Callable
RemoveInfluenceOptions: Callable
RemoveJoint: Callable
RemoveLatticeTweaks: Callable
RemoveMaterialSoloing: Callable
RemoveNewPfxToon: Callable
RemoveShrinkWrapInnerObject: Callable
RemoveShrinkWrapSurfaces: Callable
RemoveShrinkWrapTarget: Callable
RemoveSubdivProxyMirror: Callable
RemoveSubdivProxyMirrorOptions: Callable
RemoveUnusedInfluences: Callable
RemoveUnusedInfluencesOptions: Callable
RemoveWire: Callable
RemoveWireOptions: Callable
RemoveWrapInfluence: Callable
RenameAttribute: Callable
RenameCurrentColorSet: Callable
RenameCurrentSet: Callable
RenameCurrentUVSet: Callable
RenameJointsFromLabels: Callable
RenderDiagnostics: Callable
RenderFlagsWindow: Callable
RenderGlobalsWindow: Callable
RenderIntoNewWindow: Callable
RenderLayerEditorWindow: Callable
RenderLayerRelationshipEditor: Callable
RenderOptions: Callable
RenderPassSetEditor: Callable
RenderSequence: Callable
RenderSequenceOptions: Callable
RenderSetupWindow: Callable
RenderTextureRange: Callable
RenderTextureRangeOptions: Callable
RenderViewNextImage: Callable
RenderViewPrevImage: Callable
RenderViewWindow: Callable
ReorderRotationDialog: Callable
ReorderVertex: Callable
RepeatLast: Callable
RepeatLastActionAtMousePosition: Callable
ReplaceObjects: Callable
ReplaceObjectsOptions: Callable
RerootSkeleton: Callable
ResampleCurve: Callable
ResampleCurveOptions: Callable
ResetChannelSetColors: Callable
ResetCurrentWorkspace: Callable
ResetDisplay: Callable
ResetLattice: Callable
ResetReflectionOptions: Callable
ResetSoftSelectOptions: Callable
ResetTemplateBrush: Callable
ResetTransformations: Callable
ResetTransformationsOptions: Callable
ResetViewport: Callable
ResetWeightsToDefault: Callable
ResetWeightsToDefaultOptions: Callable
ResetWire: Callable
ResetWireOptions: Callable
ResolveInterpenetration: Callable
ResolveInterpenetrationOptions: Callable
RestoreUIElements: Callable
RetimeKeysTool: Callable
RetimeKeysToolOptions: Callable
ReverseCurve: Callable
ReverseCurveOptions: Callable
ReversePolygonNormals: Callable
ReversePolygonNormalsOptions: Callable
ReverseSurfaceDirection: Callable
ReverseSurfaceDirectionOptions: Callable
ReverseToonObjects: Callable
Revolve: Callable
RevolveOptions: Callable
RigidBindSkin: Callable
RigidBindSkinOptions: Callable
RigidBodySolver: Callable
Rivet: Callable
RotateTool: Callable
RotateToolMarkingMenu: Callable
RotateToolMarkingMenuPopDown: Callable
RotateToolOptions: Callable
RotateToolWithSnapMarkingMenu: Callable
RotateToolWithSnapMarkingMenuPopDown: Callable
RotateUVTool: Callable
RotateUVs: Callable
RotateUVsOptions: Callable
RoundTool: Callable
RoundToolOptions: Callable
STRSTweakModeOff: Callable
STRSTweakModeOn: Callable
STRSTweakModeToggle: Callable
SaveBrushPreset: Callable
SaveCurrentLayout: Callable
SaveCurrentWorkspace: Callable
SaveFluidStateAs: Callable
SaveInitialStateAll: Callable
SavePreferences: Callable
SaveScene: Callable
SaveSceneAs: Callable
SaveSceneAsOptions: Callable
SaveSceneOptions: Callable
SaveScriptEditorTabs: Callable
ScaleConstraint: Callable
ScaleConstraintOptions: Callable
ScaleCurvature: Callable
ScaleCurvatureOptions: Callable
ScaleKeys: Callable
ScaleKeysOptions: Callable
ScaleTool: Callable
ScaleToolMarkingMenu: Callable
ScaleToolMarkingMenuPopDown: Callable
ScaleToolOptions: Callable
ScaleToolWithSnapMarkingMenu: Callable
ScaleToolWithSnapMarkingMenuPopDown: Callable
ScaleUVTool: Callable
ScriptEditor: Callable
ScriptPaintTool: Callable
ScriptPaintToolOptions: Callable
SculptGeometryTool: Callable
SculptGeometryToolOptions: Callable
SculptKeysActivateEditRadius: Callable
SculptKeysActivateEditStrength: Callable
SculptKeysDeactivateEditRadius: Callable
SculptKeysDeactivateEditStrength: Callable
SculptKeysGrabTool: Callable
SculptKeysGrabToolOptions: Callable
SculptKeysReduceTool: Callable
SculptKeysReduceToolOptions: Callable
SculptKeysSmearTool: Callable
SculptKeysSmearToolOptions: Callable
SculptKeysSmoothTool: Callable
SculptKeysSmoothToolOptions: Callable
SculptMeshActivateBrushSize: Callable
SculptMeshActivateBrushStrength: Callable
SculptMeshDeactivateBrushSize: Callable
SculptMeshDeactivateBrushStrength: Callable
SculptMeshFrame: Callable
SculptMeshInvertFreeze: Callable
SculptMeshUnfreezeAll: Callable
SculptPolygonsTool: Callable
SculptPolygonsToolOptions: Callable
SculptReferenceVectorMarkingMenuPress: Callable
SculptReferenceVectorMarkingMenuRelease: Callable
SculptSubdivsTool: Callable
SculptSubdivsToolOptions: Callable
SculptSurfacesTool: Callable
SculptSurfacesToolOptions: Callable
SearchAndReplaceNames: Callable
SearchEngine: Callable
SelectAll: Callable
SelectAllAssets: Callable
SelectAllBrushes: Callable
SelectAllCameras: Callable
SelectAllClusters: Callable
SelectAllDynamicConstraints: Callable
SelectAllFluids: Callable
SelectAllFollicles: Callable
SelectAllFurs: Callable
SelectAllGeometry: Callable
SelectAllHairSystem: Callable
SelectAllIKHandles: Callable
SelectAllImagePlanes: Callable
SelectAllInput: Callable
SelectAllJoints: Callable
SelectAllLattices: Callable
SelectAllLights: Callable
SelectAllMarkingMenu: Callable
SelectAllMarkingMenuPopDown: Callable
SelectAllNCloths: Callable
SelectAllNParticles: Callable
SelectAllNRigids: Callable
SelectAllNURBSCurves: Callable
SelectAllNURBSSurfaces: Callable
SelectAllOutput: Callable
SelectAllParticles: Callable
SelectAllPolygonGeometry: Callable
SelectAllRigidBodies: Callable
SelectAllRigidConstraints: Callable
SelectAllSculptObjects: Callable
SelectAllStrokes: Callable
SelectAllSubdivGeometry: Callable
SelectAllTransforms: Callable
SelectAllWires: Callable
SelectBorderEdgeTool: Callable
SelectBrushNames: Callable
SelectCVSelectionBoundary: Callable
SelectCVsMask: Callable
SelectComponentToolMarkingMenu: Callable
SelectComponentToolMarkingMenuPopDown: Callable
SelectContainerContents: Callable
SelectContiguousEdges: Callable
SelectContiguousEdgesOptions: Callable
SelectCurveCVsAll: Callable
SelectCurveCVsFirst: Callable
SelectCurveCVsLast: Callable
SelectCurvePointsMask: Callable
SelectEdgeLoop: Callable
SelectEdgeLoopSp: Callable
SelectEdgeMask: Callable
SelectEdgeRing: Callable
SelectEdgeRingSp: Callable
SelectFacePath: Callable
SelectFacetMask: Callable
SelectHierarchy: Callable
SelectHullsMask: Callable
SelectIsolate: Callable
SelectLightsIlluminatingObject: Callable
SelectLightsShadowingObject: Callable
SelectLinesMask: Callable
SelectMaskToolMarkingMenu: Callable
SelectMaskToolMarkingMenuPopDown: Callable
SelectMeshUVShell: Callable
SelectMultiComponentMask: Callable
SelectNextIntermediatObject: Callable
SelectNextKey: Callable
SelectNone: Callable
SelectObjectsIlluminatedByLight: Callable
SelectObjectsShadowedByLight: Callable
SelectPointsMask: Callable
SelectPolygonSelectionBoundary: Callable
SelectPolygonToolMarkingMenu: Callable
SelectPolygonToolMarkingMenuPopDown: Callable
SelectPreviousKey: Callable
SelectPreviousObjects3dsMax: Callable
SelectPreviousObjectsFlame: Callable
SelectPreviousObjectsFlare: Callable
SelectPreviousObjectsMotionBuilder: Callable
SelectPreviousObjectsMudbox: Callable
SelectSharedColorInstances: Callable
SelectSharedUVInstances: Callable
SelectShortestEdgePathTool: Callable
SelectSimilar: Callable
SelectSimilarOptions: Callable
SelectSurfaceBorder: Callable
SelectSurfaceBorderOptions: Callable
SelectSurfacePointsMask: Callable
SelectTextureReferenceObject: Callable
SelectTimeWarp: Callable
SelectToggleMode: Callable
SelectTool: Callable
SelectToolMarkingMenu: Callable
SelectToolMarkingMenuPopDown: Callable
SelectToolOptionsMarkingMenu: Callable
SelectToolOptionsMarkingMenuPopDown: Callable
SelectUVBackFacingComponents: Callable
SelectUVBorder: Callable
SelectUVBorderComponents: Callable
SelectUVFrontFacingComponents: Callable
SelectUVMask: Callable
SelectUVNonOverlappingComponents: Callable
SelectUVNonOverlappingComponentsPerObject: Callable
SelectUVOverlappingComponents: Callable
SelectUVOverlappingComponentsPerObject: Callable
SelectUVShell: Callable
SelectUVTool: Callable
SelectUnmappedFaces: Callable
SelectVertexFaceMask: Callable
SelectVertexMask: Callable
SendAsNewScene3dsMax: Callable
SendAsNewSceneFlame: Callable
SendAsNewSceneFlare: Callable
SendAsNewSceneMotionBuilder: Callable
SendAsNewSceneMudbox: Callable
SeparatePolygon: Callable
SequenceEditor: Callable
SetActiveKey: Callable
SetAlignTool: Callable
SetAsCombinationTarget: Callable
SetAsCombinationTargetOptions: Callable
SetBreakdownKey: Callable
SetBreakdownKeyOptions: Callable
SetCMCAmbient: Callable
SetCMCAmbientDiffuse: Callable
SetCMCDiffuse: Callable
SetCMCEmission: Callable
SetCMCNone: Callable
SetCMCSpecular: Callable
SetCurrentColorSet: Callable
SetCurrentUVSet: Callable
SetCutSewUVTool: Callable
SetDefaultManipMove: Callable
SetDefaultManipNone: Callable
SetDefaultManipRotate: Callable
SetDefaultManipScale: Callable
SetDefaultManipTransform: Callable
SetDrivenKey: Callable
SetEditor: Callable
SetExclusiveToCamera: Callable
SetFluidAttrFromCurve: Callable
SetFluidAttrFromCurveOptions: Callable
SetFocusToCommandLine: Callable
SetFocusToNumericInputLine: Callable
SetFullBodyIKKeys: Callable
SetFullBodyIKKeysAll: Callable
SetFullBodyIKKeysBodyPart: Callable
SetFullBodyIKKeysKeyToPin: Callable
SetFullBodyIKKeysOptions: Callable
SetFullBodyIKKeysSelected: Callable
SetHairRestPositionFromCurrent: Callable
SetHairRestPositionFromStart: Callable
SetHairStartPositionFromCurrent: Callable
SetHairStartPositionFromRest: Callable
SetHiddenFromCamera: Callable
SetIKFKKeyframe: Callable
SetInitialState: Callable
SetInitialStateOptions: Callable
SetKey: Callable
SetKeyAnimated: Callable
SetKeyOptions: Callable
SetKeyPath: Callable
SetKeyRotate: Callable
SetKeyScale: Callable
SetKeyTranslate: Callable
SetKeyVertexColor: Callable
SetKeyframeForVertexColor: Callable
SetMBSAdd: Callable
SetMBSAverage: Callable
SetMBSDivide: Callable
SetMBSModulate2: Callable
SetMBSMultiply: Callable
SetMBSOverwrite: Callable
SetMBSSubtract: Callable
SetMaxInfluences: Callable
SetMeshAmplifyTool: Callable
SetMeshBulgeTool: Callable
SetMeshCloneTargetTool: Callable
SetMeshEraseTool: Callable
SetMeshFillTool: Callable
SetMeshFlattenTool: Callable
SetMeshFoamyTool: Callable
SetMeshFreezeTool: Callable
SetMeshGrabTool: Callable
SetMeshGrabUVTool: Callable
SetMeshImprintTool: Callable
SetMeshKnifeTool: Callable
SetMeshMaskTool: Callable
SetMeshPinchTool: Callable
SetMeshRelaxTool: Callable
SetMeshRepeatTool: Callable
SetMeshScrapeTool: Callable
SetMeshSculptTool: Callable
SetMeshSmearTool: Callable
SetMeshSmoothTargetTool: Callable
SetMeshSmoothTool: Callable
SetMeshSprayTool: Callable
SetMeshWaxTool: Callable
SetNClothStartFromMesh: Callable
SetNormalAngle: Callable
SetPassiveKey: Callable
SetPreferredAngle: Callable
SetPreferredAngleOptions: Callable
SetProject: Callable
SetReFormTool: Callable
SetRestPosition: Callable
SetRigidBodyCollision: Callable
SetRigidBodyInterpenetration: Callable
SetShrinkWrapInnerObject: Callable
SetShrinkWrapTarget: Callable
SetSnapTogetherTool: Callable
SetSnapTogetherToolOptions: Callable
SetStrokeControlCurves: Callable
SetTimecode: Callable
SetToFaceNormals: Callable
SetToFaceNormalsOptions: Callable
SetVertexNormal: Callable
SetVertexNormalOptions: Callable
SetWireframeColor: Callable
SetWorkingFrame: Callable
SetupAnimatedDisplacement: Callable
SewUVs: Callable
SewUVs3D: Callable
SewUVsWithoutHotkey: Callable
ShadingGroupAttributeEditor: Callable
ShapeEditor: Callable
ShapeEditorDuplicateTarget: Callable
ShapeEditorNewGroup: Callable
ShapeEditorSelectNone: Callable
ShareColorInstances: Callable
ShareOneBrush: Callable
ShareUVInstances: Callable
Shatter: Callable
ShatterOptions: Callable
ShelfPreferencesWindow: Callable
ShortPolygonNormals: Callable
ShotPlaylistEditor: Callable
ShowAll: Callable
ShowAllComponents: Callable
ShowAllEditedComponents: Callable
ShowAllLabels: Callable
ShowAllPolyComponents: Callable
ShowAllUI: Callable
ShowAnimationUI: Callable
ShowAttributeEditorOrChannelBox: Callable
ShowBaseWire: Callable
ShowBatchRender: Callable
ShowBoundingBox: Callable
ShowCameraManipulators: Callable
ShowCameras: Callable
ShowClusters: Callable
ShowControllers: Callable
ShowDeformers: Callable
ShowDeformingGeometry: Callable
ShowDynamicConstraints: Callable
ShowDynamicsUI: Callable
ShowFluids: Callable
ShowFollicles: Callable
ShowFur: Callable
ShowGeometry: Callable
ShowHairSystems: Callable
ShowHotbox: Callable
ShowIKHandles: Callable
ShowJoints: Callable
ShowKinematics: Callable
ShowLastHidden: Callable
ShowLattices: Callable
ShowLightManipulators: Callable
ShowLights: Callable
ShowManipulatorTool: Callable
ShowManipulators: Callable
ShowMarkers: Callable
ShowMeshAmplifyToolOptions: Callable
ShowMeshBulgeToolOptions: Callable
ShowMeshCloneTargetToolOptions: Callable
ShowMeshEraseToolOptions: Callable
ShowMeshFillToolOptions: Callable
ShowMeshFlattenToolOptions: Callable
ShowMeshFoamyToolOptions: Callable
ShowMeshFreezeToolOptions: Callable
ShowMeshGrabToolOptions: Callable
ShowMeshGrabUVToolOptions: Callable
ShowMeshImprintToolOptions: Callable
ShowMeshKnifeToolOptions: Callable
ShowMeshMaskToolOptions: Callable
ShowMeshPinchToolOptions: Callable
ShowMeshRelaxToolOptions: Callable
ShowMeshRepeatToolOptions: Callable
ShowMeshScrapeToolOptions: Callable
ShowMeshSculptToolOptions: Callable
ShowMeshSmearToolOptions: Callable
ShowMeshSmoothTargetToolOptions: Callable
ShowMeshSmoothToolOptions: Callable
ShowMeshSprayToolOptions: Callable
ShowMeshWaxToolOptions: Callable
ShowModelingUI: Callable
ShowNCloths: Callable
ShowNParticles: Callable
ShowNRigids: Callable
ShowNURBSCurves: Callable
ShowNURBSSurfaces: Callable
ShowNonlinears: Callable
ShowObjectGeometry: Callable
ShowPlanes: Callable
ShowPolygonSurfaces: Callable
ShowRenderingUI: Callable
ShowResultsOptions: Callable
ShowRiggingUI: Callable
ShowSculptObjects: Callable
ShowSelectedObjects: Callable
ShowShadingGroupAttributeEditor: Callable
ShowSmoothSkinInfluences: Callable
ShowStrokeControlCurves: Callable
ShowStrokePathCurves: Callable
ShowStrokes: Callable
ShowSubdivSurfaces: Callable
ShowSurfaceCVs: Callable
ShowTexturePlacements: Callable
ShowUIElements: Callable
ShowWhatsNew: Callable
ShowWrapInfluences: Callable
ShrinkLoopPolygonSelectionRegion: Callable
ShrinkPolygonSelectionRegion: Callable
SimplifyCurve: Callable
SimplifyCurveOptions: Callable
SimplifyStrokePathCurves: Callable
Sine: Callable
SineOptions: Callable
SinglePerspectiveViewLayout: Callable
SingleViewArrangement: Callable
SlideEdgeTool: Callable
SlideEdgeToolOptions: Callable
SmartExtrude: Callable
Smoke: Callable
SmokeOptions: Callable
SmoothBindSkin: Callable
SmoothBindSkinOptions: Callable
SmoothCurve: Callable
SmoothCurveOptions: Callable
SmoothHairCurves: Callable
SmoothHairCurvesOptions: Callable
SmoothPolygon: Callable
SmoothPolygonOptions: Callable
SmoothProxy: Callable
SmoothProxyOptions: Callable
SmoothSkinWeights: Callable
SmoothSkinWeightsOptions: Callable
SmoothTangent: Callable
SmoothingDisplayShowBoth: Callable
SmoothingDisplayToggle: Callable
SmoothingLevelDecrease: Callable
SmoothingLevelIncrease: Callable
Snap2PointsTo2Points: Callable
Snap2PointsTo2PointsOptions: Callable
Snap3PointsTo3Points: Callable
Snap3PointsTo3PointsOptions: Callable
SnapKeys: Callable
SnapKeysOptions: Callable
SnapPointToPoint: Callable
SnapPointToPointOptions: Callable
SnapRotation: Callable
SnapTimeToSelection: Callable
SnapToCurve: Callable
SnapToCurvePress: Callable
SnapToCurveRelease: Callable
SnapToGrid: Callable
SnapToGridPress: Callable
SnapToGridRelease: Callable
SnapToMeshCenter: Callable
SnapToMeshCenterPress: Callable
SnapToMeshCenterRelease: Callable
SnapToPixel: Callable
SnapToPoint: Callable
SnapToPointPress: Callable
SnapToPointRelease: Callable
SoftModDeformer: Callable
SoftModDeformerOptions: Callable
SoftModTool: Callable
SoftModToolOptions: Callable
Solidify: Callable
SolidifyOptions: Callable
SoloLastOutput: Callable
SoloMaterial: Callable
SplitEdge: Callable
SplitEdgeRingTool: Callable
SplitEdgeRingToolOptions: Callable
SplitMeshWithProjectedCurve: Callable
SplitMeshWithProjectedCurveOptions: Callable
SplitPolygonTool: Callable
SplitPolygonToolOptions: Callable
SplitUV: Callable
SplitVertex: Callable
SpreadSheetEditor: Callable
SquareSurface: Callable
SquareSurfaceOptions: Callable
Squash: Callable
SquashOptions: Callable
StitchEdgesTool: Callable
StitchEdgesToolOptions: Callable
StitchSurfacePoints: Callable
StitchSurfacePointsOptions: Callable
StitchTogether: Callable
StitchTogetherOptions: Callable
StraightenCurves: Callable
StraightenCurvesOptions: Callable
StraightenUVBorder: Callable
StraightenUVBorderOptions: Callable
SubdCutUVs: Callable
SubdivProxy: Callable
SubdivProxyOptions: Callable
SubdivSmoothnessFine: Callable
SubdivSmoothnessFineOptions: Callable
SubdivSmoothnessHull: Callable
SubdivSmoothnessHullOptions: Callable
SubdivSmoothnessMedium: Callable
SubdivSmoothnessMediumOptions: Callable
SubdivSmoothnessRough: Callable
SubdivSmoothnessRoughOptions: Callable
SubdivSurfaceCleanTopology: Callable
SubdivSurfaceHierarchyMode: Callable
SubdivSurfaceMatchTopology: Callable
SubdivSurfacePolygonProxyMode: Callable
SubdivToNURBS: Callable
SubdivToNURBSOptions: Callable
SubdividePolygon: Callable
SubdividePolygonOptions: Callable
SubstituteGeometry: Callable
SubstituteGeometryOptions: Callable
SurfaceBooleanIntersectTool: Callable
SurfaceBooleanIntersectToolOptions: Callable
SurfaceBooleanSubtractTool: Callable
SurfaceBooleanSubtractToolOptions: Callable
SurfaceBooleanUnionTool: Callable
SurfaceBooleanUnionToolOptions: Callable
SurfaceEditingTool: Callable
SurfaceEditingToolOptions: Callable
SurfaceFlow: Callable
SurfaceFlowOptions: Callable
SwapBlendShape: Callable
SwapBlendShapeOptions: Callable
SwapBufferCurve: Callable
Symmetrize: Callable
SymmetrizeSelection: Callable
SymmetrizeUV: Callable
SymmetrizeUVBrushSizeOff: Callable
SymmetrizeUVBrushSizeOn: Callable
SymmetrizeUVOptions: Callable
TagAsController: Callable
TagAsControllerParent: Callable
TangentAuto: Callable
TangentAutoCustom: Callable
TangentAutoCustomOptions: Callable
TangentAutoEase: Callable
TangentAutoMix: Callable
TangentClamped: Callable
TangentConstraint: Callable
TangentConstraintOptions: Callable
TangentFixed: Callable
TangentFlat: Callable
TangentLinear: Callable
TangentPlateau: Callable
TangentSpline: Callable
TangentStepNext: Callable
TangentStepped: Callable
TemplateBrushSettings: Callable
TemplateObject: Callable
Tension: Callable
TensionOptions: Callable
TesselateSubdivSurface: Callable
TesselateSubdivSurfaceOptions: Callable
TestTexture: Callable
TestTextureOptions: Callable
TexSculptActivateBrushSize: Callable
TexSculptActivateBrushStrength: Callable
TexSculptDeactivateBrushSize: Callable
TexSculptDeactivateBrushStrength: Callable
TexSculptInvertPin: Callable
TexSculptUnpinAll: Callable
TexSewActivateBrushSize: Callable
TexSewDeactivateBrushSize: Callable
TextureCentricUVLinkingEditor: Callable
TextureToGeometry: Callable
TextureToGeometryOptions: Callable
TextureViewWindow: Callable
ThreeBottomSplitViewArrangement: Callable
ThreeLeftSplitViewArrangement: Callable
ThreePointArcTool: Callable
ThreePointArcToolOptions: Callable
ThreeRightSplitViewArrangement: Callable
ThreeTopSplitViewArrangement: Callable
TimeDraggerToolActivate: Callable
TimeDraggerToolDeactivate: Callable
TimeEditorAddToSoloSelectedTracks: Callable
TimeEditorClipHoldToggle: Callable
TimeEditorClipLoopToggle: Callable
TimeEditorClipRazor: Callable
TimeEditorClipResetTiming: Callable
TimeEditorClipScaleEnd: Callable
TimeEditorClipScaleStart: Callable
TimeEditorClipScaleToggle: Callable
TimeEditorClipTrimEnd: Callable
TimeEditorClipTrimStart: Callable
TimeEditorClipTrimToggle: Callable
TimeEditorCopyClips: Callable
TimeEditorCreateAdditiveLayer: Callable
TimeEditorCreateAnimTracksAtEnd: Callable
TimeEditorCreateAudioClip: Callable
TimeEditorCreateAudioTracksAtEnd: Callable
TimeEditorCreateClip: Callable
TimeEditorCreateClipOptions: Callable
TimeEditorCreateGroupFromSelection: Callable
TimeEditorCreateOverrideLayer: Callable
TimeEditorCreatePoseClip: Callable
TimeEditorCreatePoseClipOptions: Callable
TimeEditorCutClips: Callable
TimeEditorDeleteClips: Callable
TimeEditorDeleteSelectedTracks: Callable
TimeEditorExplodeGroup: Callable
TimeEditorExportSelection: Callable
TimeEditorExportSelectionOpt: Callable
TimeEditorFbxExportAll: Callable
TimeEditorFrameAll: Callable
TimeEditorFrameCenterView: Callable
TimeEditorFramePlaybackRange: Callable
TimeEditorFrameSelected: Callable
TimeEditorGhostTrackToggle: Callable
TimeEditorImportAnimation: Callable
TimeEditorKeepTransitionsTogglePress: Callable
TimeEditorKeepTransitionsToggleRelease: Callable
TimeEditorMuteSelectedTracks: Callable
TimeEditorOpenContentBrowser: Callable
TimeEditorPasteClips: Callable
TimeEditorRealTimeRefreshToggle: Callable
TimeEditorRippleEditTogglePress: Callable
TimeEditorRippleEditToggleRelease: Callable
TimeEditorSceneAuthoringToggle: Callable
TimeEditorSetKey: Callable
TimeEditorSetZeroKey: Callable
TimeEditorSoloSelectedTracks: Callable
TimeEditorToggleMuteSelectedTracks: Callable
TimeEditorToggleSnapToClipPress: Callable
TimeEditorToggleSnapToClipRelease: Callable
TimeEditorToggleSoloSelectedTracks: Callable
TimeEditorToggleTimeCursorPress: Callable
TimeEditorToggleTimeCursorRelease: Callable
TimeEditorUnmuteAllTracks: Callable
TimeEditorUnmuteSelectedTracks: Callable
TimeEditorUnsoloAllTracks: Callable
TimeEditorWindow: Callable
ToggleAnimationDetails: Callable
ToggleAttributeEditor: Callable
ToggleAutoActivateBodyPart: Callable
ToggleAutoFrame: Callable
ToggleAutoFrameTime: Callable
ToggleAutoSmooth: Callable
ToggleBackfaceCulling: Callable
ToggleBackfaceGeometry: Callable
ToggleBluePencilToolBar: Callable
ToggleBookmarkVisibility: Callable
ToggleBorderEdges: Callable
ToggleCVs: Callable
ToggleCameraNames: Callable
ToggleCapsLockDisplay: Callable
ToggleChannelBox: Callable
ToggleChannelsLayers: Callable
ToggleCharacterControls: Callable
ToggleColorFeedback: Callable
ToggleCommandLine: Callable
ToggleCompIDs: Callable
ToggleContainerCentric: Callable
ToggleCreaseEdges: Callable
ToggleCreaseVertices: Callable
ToggleCreateNurbsPrimitivesAsTool: Callable
ToggleCreatePolyPrimitivesAsTool: Callable
ToggleCullingVertices: Callable
ToggleCurrentContainerHud: Callable
ToggleCurrentFrame: Callable
ToggleCustomNURBSComponents: Callable
ToggleCutView: Callable
ToggleDisplacement: Callable
ToggleDisplayColorsAttr: Callable
ToggleDisplayGradient: Callable
ToggleEdgeIDs: Callable
ToggleEdgeMetadata: Callable
ToggleEditPivot: Callable
ToggleEditPoints: Callable
ToggleEffectsMeshDisplay: Callable
ToggleEvaluationManagerVisibility: Callable
ToggleFaceIDs: Callable
ToggleFaceMetadata: Callable
ToggleFaceNormalDisplay: Callable
ToggleFaceNormals: Callable
ToggleFastInteraction: Callable
ToggleFkIk: Callable
ToggleFocalLength: Callable
ToggleFrameRate: Callable
ToggleFullScreenMode: Callable
ToggleGrid: Callable
ToggleHelpLine: Callable
ToggleHikDetails: Callable
ToggleHoleFaces: Callable
ToggleHulls: Callable
ToggleIKAllowRotation: Callable
ToggleIKHandleSnap: Callable
ToggleIKSolvers: Callable
ToggleImagePlaneOptionCmd: Callable
ToggleInViewEditor: Callable
ToggleInViewMessage: Callable
ToggleIsolateSelect: Callable
ToggleJointLabels: Callable
ToggleKeepHardEdgeCulling: Callable
ToggleKeepWireCulling: Callable
ToggleLatticePoints: Callable
ToggleLatticeShape: Callable
ToggleLayerBar: Callable
ToggleLocalRotationAxes: Callable
ToggleMainMenubar: Callable
ToggleMaterialLoadingDetailsVisibility: Callable
ToggleMeshEdges: Callable
ToggleMeshFaces: Callable
ToggleMeshMaps: Callable
ToggleMeshPoints: Callable
ToggleMeshUVBorders: Callable
ToggleMetadata: Callable
ToggleModelEditorBars: Callable
ToggleModelingToolkit: Callable
ToggleMultiColorFeedback: Callable
ToggleNormals: Callable
ToggleNurbsCurvesOptionCmd: Callable
ToggleNurbsPrimitivesAsToolExitOnComplete: Callable
ToggleObjectDetails: Callable
ToggleOppositeFlagOfSelectedShapes: Callable
ToggleOriginAxis: Callable
ToggleOutliner: Callable
TogglePaintAtDepth: Callable
TogglePaintOnPaintableObjects: Callable
TogglePanZoomPress: Callable
TogglePanZoomRelease: Callable
TogglePanelMenubar: Callable
ToggleParticleCount: Callable
TogglePolyCount: Callable
TogglePolyDisplayEdges: Callable
TogglePolyDisplayHardEdges: Callable
TogglePolyDisplayHardEdgesColor: Callable
TogglePolyDisplayLimitToSelected: Callable
TogglePolyDisplaySoftEdges: Callable
TogglePolyNonPlanarFaceDisplay: Callable
TogglePolyPrimitivesAsToolExitOnComplete: Callable
TogglePolyUVsCreateShader: Callable
TogglePolygonFaceCenters: Callable
TogglePolygonFaceTriangles: Callable
TogglePolygonFaceTrianglesDisplay: Callable
TogglePolygonsOptionCmd: Callable
ToggleProxyDisplay: Callable
ToggleRangeSlider: Callable
ToggleReflection: Callable
ToggleRotationPivots: Callable
ToggleScalePivots: Callable
ToggleSceneTimecode: Callable
ToggleSelectDetails: Callable
ToggleSelectedLabels: Callable
ToggleSelectionHandles: Callable
ToggleShelf: Callable
ToggleShowBufferCurves: Callable
ToggleShowResults: Callable
ToggleSoftEdges: Callable
ToggleStatusLine: Callable
ToggleSubdDetails: Callable
ToggleSurfaceFaceCenters: Callable
ToggleSurfaceOrigin: Callable
ToggleSymmetryDisplay: Callable
ToggleTangentDisplay: Callable
ToggleTextureBorder: Callable
ToggleTextureBorderEdges: Callable
ToggleTimeSlider: Callable
ToggleToolSettings: Callable
ToggleToolbox: Callable
ToggleUIElements: Callable
ToggleUVDistortion: Callable
ToggleUVEditorIsolateSelectHUD: Callable
ToggleUVEditorUVPositionHUD: Callable
ToggleUVEditorUVStatisticsHUD: Callable
ToggleUVEditorUVStatisticsHUDOptions: Callable
ToggleUVIsolateViewSelected: Callable
ToggleUVShellBorder: Callable
ToggleUVTextureImage: Callable
ToggleUVs: Callable
ToggleUnsharedUVs: Callable
ToggleUseDefaultMaterial: Callable
ToggleVertIDs: Callable
ToggleVertMetadata: Callable
ToggleVertexNormalDisplay: Callable
ToggleVertices: Callable
ToggleViewAxis: Callable
ToggleViewCube: Callable
ToggleViewportRenderer: Callable
ToggleVisibilityAndKeepSelection: Callable
ToggleVisibilityAndKeepSelectionOptions: Callable
ToggleWireframeInArtisan: Callable
ToggleWireframeOnShadedCmd: Callable
ToggleZoomInMode: Callable
ToolSettingsWindow: Callable
TrackTool: Callable
TransferAttributeValues: Callable
TransferAttributeValuesOptions: Callable
TransferAttributes: Callable
TransferShadingSets: Callable
TransferVertexOrder: Callable
TransformNoSelectOffTool: Callable
TransformNoSelectOnTool: Callable
TransformPolygonComponent: Callable
TransformPolygonComponentOptions: Callable
TranslateToolMarkingMenu: Callable
TranslateToolMarkingMenuPopDown: Callable
TranslateToolWithSnapMarkingMenu: Callable
TranslateToolWithSnapMarkingMenuPopDown: Callable
TransplantHair: Callable
TransplantHairOptions: Callable
Triangulate: Callable
TrimTool: Callable
TrimToolOptions: Callable
TruncateHairCache: Callable
TumbleTool: Callable
Turbulence: Callable
TurbulenceOptions: Callable
Twist: Callable
TwistOptions: Callable
TwoPointArcTool: Callable
TwoPointArcToolOptions: Callable
TwoSideBySideViewArrangement: Callable
TwoStackedViewArrangement: Callable
U3DBrushPressureOff: Callable
U3DBrushPressureOn: Callable
U3DBrushSizeOff: Callable
U3DBrushSizeOn: Callable
UIModeMarkingMenu: Callable
UIModeMarkingMenuPopDown: Callable
UVAutomaticProjection: Callable
UVAutomaticProjectionOptions: Callable
UVCameraBasedProjection: Callable
UVCameraBasedProjectionOptions: Callable
UVCentricUVLinkingEditor: Callable
UVContourStretchProjection: Callable
UVContourStretchProjectionOptions: Callable
UVCreateSnapshot: Callable
UVCylindricProjection: Callable
UVCylindricProjectionOptions: Callable
UVEditorFrameAll: Callable
UVEditorFrameSelected: Callable
UVEditorInvertPin: Callable
UVEditorResetAllToDefault: Callable
UVEditorToggleTextureBorderDisplay: Callable
UVEditorUnpinAll: Callable
UVGatherShells: Callable
UVIsolateLoadSet: Callable
UVNormalBasedProjection: Callable
UVNormalBasedProjectionOptions: Callable
UVOrientShells: Callable
UVPin: Callable
UVPinOptions: Callable
UVPlanarProjection: Callable
UVPlanarProjectionOptions: Callable
UVSetEditor: Callable
UVSnapTogether: Callable
UVSnapTogetherOptions: Callable
UVSphericalProjection: Callable
UVSphericalProjectionOptions: Callable
UVStackSimilarShells: Callable
UVStackSimilarShellsOptions: Callable
UVStraighten: Callable
UVStraightenOptions: Callable
UVUnstackShells: Callable
UVUnstackShellsOptions: Callable
def UfeCommandObject(*args, **kwargs): ...

UncreaseSubdivSurface: Callable
Undo: Callable
UndoCanvas: Callable
UndoViewChange: Callable
UnfoldPackUVs3DInCurrentTile: Callable
UnfoldPackUVs3DInEmptyTile: Callable
UnfoldUV: Callable
UnfoldUVOptions: Callable
Ungroup: Callable
UngroupOptions: Callable
Uniform: Callable
UniformOptions: Callable
UnifyTangents: Callable
UnitizeUVs: Callable
UnitizeUVsOptions: Callable
UniversalManip: Callable
UniversalManipOptions: Callable
UnlockContainer: Callable
UnlockCurveLength: Callable
UnlockNormals: Callable
UnmirrorSmoothProxy: Callable
UnmirrorSmoothProxyOptions: Callable
Unparent: Callable
UnparentOptions: Callable
UnpinSelection: Callable
UnpublishAttributes: Callable
UnpublishChildAnchor: Callable
UnpublishNode: Callable
UnpublishParentAnchor: Callable
UnpublishRootTransform: Callable
UnsmoothPolygon: Callable
UnsmoothPolygonOptions: Callable
UntemplateObject: Callable
UntrimSurfaces: Callable
UntrimSurfacesOptions: Callable
UpdateBindingSet: Callable
UpdateBindingSetOptions: Callable
UpdateBookmarkWithSelection: Callable
UpdateCurrentScene3dsMax: Callable
UpdateCurrentSceneFlame: Callable
UpdateCurrentSceneFlare: Callable
UpdateCurrentSceneMotionBuilder: Callable
UpdateCurrentSceneMudbox: Callable
UpdateEraseSurface: Callable
UpdatePSDTextureItem: Callable
UpdateReferenceSurface: Callable
UpdateSnapshot: Callable
UseHardwareShader: Callable
UseSelectedEmitter: Callable
VertexNormalEditTool: Callable
ViewAllTutorials: Callable
ViewAlongAxisNegativeX: Callable
ViewAlongAxisNegativeY: Callable
ViewAlongAxisNegativeZ: Callable
ViewAlongAxisX: Callable
ViewAlongAxisY: Callable
ViewAlongAxisZ: Callable
ViewImage: Callable
ViewSequence: Callable
ViewportEnableSmoothing: Callable
VisorWindow: Callable
VisualizeMetadataOptions: Callable
VolumeAxis: Callable
VolumeAxisOptions: Callable
VolumeSkinBinding: Callable
VolumeSkinBindingOptions: Callable
Vortex: Callable
VortexOptions: Callable
WalkTool: Callable
WarpImage: Callable
WarpImageOptions: Callable
Wave: Callable
WaveOptions: Callable
WedgePolygon: Callable
WedgePolygonOptions: Callable
WeightHammer: Callable
WeightHammerOptions: Callable
WeightedTangents: Callable
WhatsNewHighlightingOff: Callable
WhatsNewHighlightingOn: Callable
WireDropoffLocator: Callable
WireDropoffLocatorOptions: Callable
WireTool: Callable
WireToolOptions: Callable
WrinkleTool: Callable
WrinkleToolOptions: Callable
XgCreateIgSplineEditor: Callable
XgmCreateInteractiveGroomSplines: Callable
XgmCreateInteractiveGroomSplinesOption: Callable
XgmSetClumpBrushTool: Callable
XgmSetClumpBrushToolOption: Callable
XgmSetCombBrushTool: Callable
XgmSetCombBrushToolOption: Callable
XgmSetCutBrushTool: Callable
XgmSetCutBrushToolOption: Callable
XgmSetDensityBrushTool: Callable
XgmSetDensityBrushToolOption: Callable
XgmSetDirectionBrushTool: Callable
XgmSetDirectionBrushToolOption: Callable
XgmSetFreezeBrushTool: Callable
XgmSetFreezeBrushToolOption: Callable
XgmSetGrabBrushTool: Callable
XgmSetGrabBrushToolOption: Callable
XgmSetLengthBrushTool: Callable
XgmSetLengthBrushToolOption: Callable
XgmSetNoiseBrushTool: Callable
XgmSetNoiseBrushToolOption: Callable
XgmSetPartBrushTool: Callable
XgmSetPartBrushToolOption: Callable
XgmSetPlaceBrushTool: Callable
XgmSetPlaceBrushToolOption: Callable
XgmSetSelectBrushTool: Callable
XgmSetSelectBrushToolOption: Callable
XgmSetSmoothBrushTool: Callable
XgmSetSmoothBrushToolOption: Callable
XgmSetWidthBrushTool: Callable
XgmSetWidthBrushToolOption: Callable
XgmSplineCacheCreate: Callable
XgmSplineCacheCreateOptions: Callable
XgmSplineCacheDelete: Callable
XgmSplineCacheDeleteNodesAhead: Callable
XgmSplineCacheDeleteOptions: Callable
XgmSplineCacheDisableSelectedCache: Callable
XgmSplineCacheEnableSelectedCache: Callable
XgmSplineCacheExport: Callable
XgmSplineCacheExportOptions: Callable
XgmSplineCacheImport: Callable
XgmSplineCacheImportOptions: Callable
XgmSplineCacheReplace: Callable
XgmSplineCacheReplaceOptions: Callable
XgmSplineGeometryConvert: Callable
XgmSplinePresetExport: Callable
XgmSplinePresetImport: Callable
XgmSplineSelectConvertToFreeze: Callable
XgmSplineSelectReplaceBySelectedFaces: Callable
ZeroPivot: Callable
ZoomTool: Callable
def aaf2fcp(*args, deleteFile: bool | int = ..., df: bool | int = ..., dstPath: str = ..., dst: str = ..., getFileName: int = ..., gfn: int = ..., progress: int = ..., pr: int = ..., srcFile: str = ..., src: str = ..., terminate: int = ..., t: int = ..., waitCompletion: int = ..., wc: int = ...) -> Any: ...
def about(*args, apiVersion: bool | int = ..., api: bool | int = ..., application: bool | int = ..., a: bool | int = ..., batch: bool | int = ..., b: bool | int = ..., buildDirectory: bool | int = ..., bd: bool | int = ..., buildVariant: bool | int = ..., bv: bool | int = ..., codeset: bool | int = ..., cs: bool | int = ..., compositingManager: bool | int = ..., cm: bool | int = ..., connected: bool | int = ..., cnt: bool | int = ..., ctime: bool | int = ..., cti: bool | int = ..., currentDate: bool | int = ..., cd: bool | int = ..., currentTime: bool | int = ..., ct: bool | int = ..., customVersion: bool | int = ..., cv: bool | int = ..., customVersionClient: bool | int = ..., cvc: bool | int = ..., customVersionMajor: bool | int = ..., cvm: bool | int = ..., customVersionMinor: bool | int = ..., cvn: bool | int = ..., customVersionString: bool | int = ..., cvs: bool | int = ..., cutIdentifier: bool | int = ..., c: bool | int = ..., date: bool | int = ..., d: bool | int = ..., environmentFile: bool | int = ..., env: bool | int = ..., evalVersion: bool | int = ..., ev: bool | int = ..., file: bool | int = ..., f: bool | int = ..., fontInfo: bool | int = ..., foi: bool | int = ..., helpDataDirectory: bool | int = ..., hdd: bool | int = ..., installedVersion: bool | int = ..., iv: bool | int = ..., ioVersion: bool | int = ..., io: bool | int = ..., irix: bool | int = ..., ir: bool | int = ..., is64: bool | int = ..., x64: bool | int = ..., languageResources: bool | int = ..., lr: bool | int = ..., linux: bool | int = ..., li: bool | int = ..., linux64: bool | int = ..., l64: bool | int = ..., liveUpdate: bool | int = ..., lu: bool | int = ..., localizedResourceLocation: bool | int = ..., lrl: bool | int = ..., ltVersion: bool | int = ..., lt: bool | int = ..., macOS: bool | int = ..., mac: bool | int = ..., macOSppc: bool | int = ..., ppc: bool | int = ..., macOSx86: bool | int = ..., x86: bool | int = ..., majorVersion: bool | int = ..., mjv: bool | int = ..., minorVersion: bool | int = ..., mnv: bool | int = ..., ntOS: bool | int = ..., nt: bool | int = ..., operatingSystem: bool | int = ..., os: bool | int = ..., operatingSystemVersion: bool | int = ..., osv: bool | int = ..., patchVersion: bool | int = ..., pv: bool | int = ..., preferences: bool | int = ..., pd: bool | int = ..., product: bool | int = ..., p: bool | int = ..., qtVersion: bool | int = ..., qt: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tablet: bool | int = ..., tab: bool | int = ..., tabletMode: bool | int = ..., tm: bool | int = ..., uiLanguage: bool | int = ..., uil: bool | int = ..., uiLanguageForStartup: bool | int = ..., uis: bool | int = ..., uiLanguageIsLocalized: bool | int = ..., uii: bool | int = ..., uiLocaleLanguage: bool | int = ..., ull: bool | int = ..., version: bool | int = ..., v: bool | int = ..., win64: bool | int = ..., w64: bool | int = ..., windowManager: bool | int = ..., wm: bool | int = ..., windows: bool | int = ..., win: bool | int = ...) -> Any: ...
def addAttr(*args, attributeType: bool | int | str = ..., at: bool | int | str = ..., binaryTag: bool | int | str = ..., bt: bool | int | str = ..., cachedInternally: bool | int = ..., ci: bool | int = ..., category: bool | int | str | list[str] = ..., ct: bool | int | str | list[str] = ..., dataType: bool | int | str | list[str] = ..., dt: bool | int | str | list[str] = ..., defaultValue: bool | int | float = ..., dv: bool | int | float = ..., disconnectBehaviour: bool | int | int = ..., dcb: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., enumName: bool | int | str = ..., en: bool | int | str = ..., exists: bool | int = ..., ex: bool | int = ..., fromPlugin: bool | int = ..., fp: bool | int = ..., hasMaxValue: bool | int = ..., hxv: bool | int = ..., hasMinValue: bool | int = ..., hnv: bool | int = ..., hasSoftMaxValue: bool | int = ..., hsx: bool | int = ..., hasSoftMinValue: bool | int = ..., hsn: bool | int = ..., hidden: bool | int = ..., h: bool | int = ..., indexMatters: bool | int = ..., im: bool | int = ..., internalSet: bool | int = ..., keyable: bool | int = ..., k: bool | int = ..., longName: bool | int | str = ..., ln: bool | int | str = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., multi: bool | int = ..., m: bool | int = ..., niceName: bool | int | str = ..., nn: bool | int | str = ..., numberOfChildren: bool | int | int = ..., nc: bool | int | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., proxy: bool | int | str = ..., pxy: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., readable: bool | int = ..., r: bool | int = ..., shortName: bool | int | str = ..., sn: bool | int | str = ..., softMaxValue: bool | int | float = ..., smx: bool | int | float = ..., softMinValue: bool | int | float = ..., smn: bool | int | float = ..., storable: bool | int = ..., s: bool | int = ..., usedAsColor: bool | int = ..., uac: bool | int = ..., usedAsFilename: bool | int = ..., uaf: bool | int = ..., usedAsProxy: bool | int = ..., uap: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ..., writable: bool | int = ..., w: bool | int = ...) -> Any: ...
def addDynamic(*args) -> Any: ...

addDynamicAttribute: Callable
def addExtension(*args, attributeType: bool | int | str = ..., at: bool | int | str = ..., binaryTag: bool | int | str = ..., bt: bool | int | str = ..., cachedInternally: bool | int = ..., ci: bool | int = ..., category: bool | int | str | list[str] = ..., ct: bool | int | str | list[str] = ..., dataType: bool | int | str | list[str] = ..., dt: bool | int | str | list[str] = ..., defaultValue: bool | int | float = ..., dv: bool | int | float = ..., disconnectBehaviour: bool | int | int = ..., dcb: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., enumName: bool | int | str = ..., en: bool | int | str = ..., exists: bool | int = ..., ex: bool | int = ..., fromPlugin: bool | int = ..., fp: bool | int = ..., hasMaxValue: bool | int = ..., hxv: bool | int = ..., hasMinValue: bool | int = ..., hnv: bool | int = ..., hasSoftMaxValue: bool | int = ..., hsx: bool | int = ..., hasSoftMinValue: bool | int = ..., hsn: bool | int = ..., hidden: bool | int = ..., h: bool | int = ..., indexMatters: bool | int = ..., im: bool | int = ..., internalSet: bool | int = ..., keyable: bool | int = ..., k: bool | int = ..., longName: bool | int | str = ..., ln: bool | int | str = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., multi: bool | int = ..., m: bool | int = ..., niceName: bool | int | str = ..., nn: bool | int | str = ..., nodeType: bool | int | str = ..., nt: bool | int | str = ..., numberOfChildren: bool | int | int = ..., nc: bool | int | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., proxy: bool | int | str = ..., pxy: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., readable: bool | int = ..., r: bool | int = ..., shortName: bool | int | str = ..., sn: bool | int | str = ..., softMaxValue: bool | int | float = ..., smx: bool | int | float = ..., softMinValue: bool | int | float = ..., smn: bool | int | float = ..., storable: bool | int = ..., s: bool | int = ..., usedAsColor: bool | int = ..., uac: bool | int = ..., usedAsFilename: bool | int = ..., uaf: bool | int = ..., usedAsProxy: bool | int = ..., uap: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ..., writable: bool | int = ..., w: bool | int = ...) -> Any: ...
def addMetadata(*args, channelName: bool | int | str = ..., cn: bool | int | str = ..., channelType: bool | int | str = ..., cht: bool | int | str = ..., indexType: bool | int | str = ..., idt: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., scene: bool | int = ..., scn: bool | int = ..., streamName: bool | int | str = ..., stn: bool | int | str = ..., structure: bool | int | str = ..., str: bool | int | str = ...) -> Any: ...
def addPP(*args, attribute: str = ..., atr: str = ...) -> Any: ...
def adpAnalyticsDialog(*args, activeNotification: bool | int = ..., an: bool | int = ..., desktopAnalytics: bool | int = ..., da: bool | int = ...) -> Any: ...
def adpWaypoint(*args, **kwargs): ...
def adskAsset(*args, assetID: str = ..., a: str = ..., library: str = ..., l: str = ..., query: bool | int = ..., q: bool | int = ..., resolved: bool | int = ..., r: bool | int = ...) -> Any: ...
def adskAssetLibrary(*args, unload: bool | int = ..., ul: bool | int = ..., unloadAll: bool | int = ..., ua: bool | int = ...) -> Any: ...
def adskAssetList(*args, infoType: str = ..., it: str = ...) -> Any: ...
def adskAssetListUI(*args, commandSuffix: str = ..., cms: str = ..., materialLoaded: bool | int = ..., mld: bool | int = ..., query: bool | int = ..., q: bool | int = ..., uiCommand: str = ..., uiC: str = ...) -> Any: ...
def affectedNet(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., type: str = ..., t: str = ...) -> Any: ...
def affects(*args, by: Any = ..., boolean: Any = ..., type: str = ..., t: str = ...) -> Any: ...
def agFormatIn(*args, file: str = ..., f: str = ..., name: str = ..., n: str = ...) -> Any: ...
def agFormatOut(*args, file: str = ..., f: str = ...) -> Any: ...
def aimConstraint(*args, aimVector: bool | int | tuple[float, float, float] = ..., aim: bool | int | tuple[float, float, float] = ..., edit: bool | int = ..., e: bool | int = ..., layer: str = ..., l: str = ..., maintainOffset: bool | int = ..., mo: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., offset: bool | int | tuple[float, float, float] = ..., o: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., skip: str | list[str] = ..., sk: str | list[str] = ..., targetList: bool | int = ..., tl: bool | int = ..., upVector: bool | int | tuple[float, float, float] = ..., u: bool | int | tuple[float, float, float] = ..., weight: bool | int | float = ..., w: bool | int | float = ..., weightAliasList: bool | int = ..., wal: bool | int = ..., worldUpObject: bool | int | str = ..., wuo: bool | int | str = ..., worldUpType: bool | int | str = ..., wut: bool | int | str = ..., worldUpVector: bool | int | tuple[float, float, float] = ..., wu: bool | int | tuple[float, float, float] = ...) -> Any: ...
def air(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., enableSpread: bool | int = ..., es: bool | int = ..., fanSetup: bool | int = ..., fs: bool | int = ..., inheritRotation: bool | int = ..., iro: bool | int = ..., inheritVelocity: bool | int | float = ..., iv: bool | int | float = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., speed: bool | int | float = ..., s: bool | int | float = ..., spread: bool | int | float = ..., sp: bool | int | float = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., velocityComponentOnly: bool | int = ..., vco: bool | int = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | tuple[float, float, float] = ..., vof: bool | int | tuple[float, float, float] = ..., volumeShape: bool | int | str = ..., vsh: bool | int | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ..., wakeSetup: bool | int = ..., wks: bool | int = ..., windSetup: bool | int = ..., wns: bool | int = ...) -> Any: ...
def aliasAttr(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ...) -> Any: ...
def align(*args, alignToLead: bool | int = ..., atl: bool | int = ..., coordinateSystem: str = ..., cs: str = ..., xAxis: str = ..., x: str = ..., yAxis: str = ..., y: str = ..., zAxis: str = ..., z: str = ...) -> Any: ...
def alignCtx(*args, align: bool | int = ..., a: bool | int = ..., anchorFirstObject: bool | int = ..., afo: bool | int = ..., distribute: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., showAlignTouch: bool | int = ..., sat: bool | int = ...) -> Any: ...
def alignCurve(*args, attach: bool | int = ..., at: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvatureContinuity: bool | int = ..., cc: bool | int = ..., curvatureScale1: bool | int | float = ..., cs1: bool | int | float = ..., curvatureScale2: bool | int | float = ..., cs2: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., joinParameter: bool | int | float = ..., jnp: bool | int | float = ..., keepMultipleKnots: bool | int = ..., kmk: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., positionalContinuity: bool | int = ..., pc: bool | int = ..., positionalContinuityType: bool | int | int = ..., pct: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reverse1: bool | int = ..., rv1: bool | int = ..., reverse2: bool | int = ..., rv2: bool | int = ..., tangentContinuity: bool | int = ..., tc: bool | int = ..., tangentContinuityType: bool | int | int = ..., tct: bool | int | int = ..., tangentScale1: bool | int | float = ..., ts1: bool | int | float = ..., tangentScale2: bool | int | float = ..., ts2: bool | int | float = ...) -> Any: ...
def alignSurface(*args, attach: bool | int = ..., at: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvatureContinuity: bool | int = ..., cc: bool | int = ..., curvatureScale1: bool | int | float = ..., cs1: bool | int | float = ..., curvatureScale2: bool | int | float = ..., cs2: bool | int | float = ..., directionU: bool | int = ..., du: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., joinParameter: bool | int | float = ..., jnp: bool | int | float = ..., keepMultipleKnots: bool | int = ..., kmk: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., positionalContinuity: bool | int = ..., pc: bool | int = ..., positionalContinuityType: bool | int | int = ..., pct: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reverse1: bool | int = ..., rv1: bool | int = ..., reverse2: bool | int = ..., rv2: bool | int = ..., swap1: bool | int = ..., sw1: bool | int = ..., swap2: bool | int = ..., sw2: bool | int = ..., tangentContinuity: bool | int = ..., tc: bool | int = ..., tangentContinuityType: bool | int | int = ..., tct: bool | int | int = ..., tangentScale1: bool | int | float = ..., ts1: bool | int | float = ..., tangentScale2: bool | int | float = ..., ts2: bool | int | float = ..., twist: bool | int = ..., tw: bool | int = ...) -> Any: ...
def allNodeTypes(*args, includeAbstract: bool | int = ..., ia: bool | int = ...) -> Any: ...
def ambientLight(*args, ambientShade: bool | int | float = ..., discRadius: bool | int | float = ..., drs: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int = ..., exc: bool | int = ..., intensity: bool | int | float = ..., i: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., position: bool | int | tuple[float, float, float] = ..., pos: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., rgb: bool | int | tuple[float, float, float] = ..., rotation: bool | int | tuple[float, float, float] = ..., rot: bool | int | tuple[float, float, float] = ..., shadowColor: bool | int | tuple[float, float, float] = ..., sc: bool | int | tuple[float, float, float] = ..., shadowDither: bool | int | float = ..., sd: bool | int | float = ..., shadowSamples: bool | int | int = ..., sh: bool | int | int = ..., softShadow: bool | int = ..., ss: bool | int = ..., useRayTraceShadows: bool | int = ..., rs: bool | int = ...) -> Any: ...
def angleBetween(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., euler: bool | int = ..., er: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., vector1: tuple[float, float, float] = ..., v1: tuple[float, float, float] = ..., vector1X: float = ..., v1x: float = ..., vector1Y: float = ..., v1y: float = ..., vector1Z: float = ..., v1z: float = ..., vector2: tuple[float, float, float] = ..., v2: tuple[float, float, float] = ..., vector2X: float = ..., v2x: float = ..., vector2Y: float = ..., v2y: float = ..., vector2Z: float = ..., v2z: float = ...) -> Any: ...
def animContextManager(*args, **kwargs): ...
def animCurveEditor(*args, areCurvesSelected: bool | int = ..., acs: bool | int = ..., autoFit: bool | int | str = ..., af: bool | int | str = ..., autoFitTime: bool | int | str = ..., aft: bool | int | str = ..., classicMode: bool | int = ..., cm: bool | int = ..., clipTime: bool | int | str = ..., ct: bool | int | str = ..., constrainDrag: bool | int | int = ..., cd: bool | int | int = ..., control: bool | int = ..., ctl: bool | int = ..., curvesShown: bool | int = ..., cs: bool | int = ..., curvesShownForceUpdate: bool | int = ..., csf: bool | int = ..., defineTemplate: str = ..., dt: str = ..., denormalizeCurvesCommand: str = ..., dcc: str = ..., displayActiveKeyTangents: str = ..., dat: str = ..., displayActiveKeys: str = ..., dak: str = ..., displayInfinities: str = ..., di: str = ..., displayKeys: str = ..., dk: str = ..., displayNormalized: bool | int = ..., dn: bool | int = ..., displayTangents: str = ..., dtn: str = ..., displayValues: str = ..., dv: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightAffectedCurves: bool | int = ..., hac: bool | int = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., keyMinScale: bool | int | float = ..., kms: bool | int | float = ..., keyScale: bool | int | float = ..., ksc: bool | int | float = ..., keyingTime: bool | int | str = ..., kt: bool | int | str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., lockPlayRangeShades: bool | int | str = ..., lpr: bool | int | str = ..., lookAt: str = ..., la: str = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., menu: str | Callable = ..., m: str | Callable = ..., normalizeCurvesCommand: str = ..., ncc: str = ..., outliner: bool | int | str = ..., o: bool | int | str = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., preSelectionHighlight: bool | int = ..., psh: bool | int = ..., query: bool | int = ..., q: bool | int = ..., renormalizeCurves: bool | int = ..., rnc: bool | int = ..., resultSamples: bool | int | int | float = ..., rs: bool | int | int | float = ..., resultScreenSamples: bool | int | int = ..., rss: bool | int | int = ..., resultUpdate: bool | int | str = ..., ru: bool | int | str = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., showActiveCurveNames: bool | int = ..., acn: bool | int = ..., showBufferCurves: bool | int | str = ..., sb: bool | int | str = ..., showCurveNames: bool | int = ..., scn: bool | int = ..., showPlayRangeShades: bool | int | str = ..., spr: bool | int | str = ..., showResults: bool | int | str = ..., sr: bool | int | str = ..., showUpstreamCurves: bool | int = ..., suc: bool | int = ..., simpleKeyView: bool | int = ..., skv: bool | int = ..., smoothness: bool | int | str = ..., s: bool | int | str = ..., snapTime: bool | int | str = ..., st: bool | int | str = ..., snapValue: bool | int | str = ..., sv: bool | int | str = ..., stackedCurves: bool | int = ..., sc: bool | int = ..., stackedCurvesMax: bool | int | float = ..., scx: bool | int | float = ..., stackedCurvesMin: bool | int | float = ..., scm: bool | int | float = ..., stackedCurvesSpace: bool | int | float = ..., scs: bool | int | float = ..., stateString: bool | int = ..., sts: bool | int = ..., timelinePositionTop: bool | int = ..., tlp: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ..., valueLinesToggle: str = ..., vlt: str = ..., viewLeft: float = ..., vl: float = ..., viewRight: float = ..., vr: float = ...) -> Any: ...
def animDisplay(*args, edit: bool | int = ..., e: bool | int = ..., modelUpdate: bool | int | str = ..., upd: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., refAnimCurvesEditable: bool | int = ..., rae: bool | int = ..., timeCode: bool | int | str = ..., tc: bool | int | str = ..., timeCodeOffset: bool | int | str = ..., tco: bool | int | str = ...) -> Any: ...
def animLayer(*args, addRelatedKG: bool | int = ..., akg: bool | int = ..., addSelectedObjects: bool | int = ..., aso: bool | int = ..., affectedLayers: bool | int = ..., afl: bool | int = ..., animCurves: bool | int = ..., anc: bool | int = ..., attribute: bool | int | str | list[str] = ..., at: bool | int | str | list[str] = ..., baseAnimCurves: bool | int = ..., bac: bool | int = ..., bestAnimLayer: bool | int = ..., blr: bool | int = ..., bestLayer: bool | int = ..., bl: bool | int = ..., blendNodes: bool | int = ..., bld: bool | int = ..., children: bool | int | str = ..., c: bool | int | str = ..., collapse: bool | int = ..., col: bool | int = ..., copy: str = ..., cp: str = ..., copyAnimation: str = ..., ca: str = ..., copyNoAnimation: str = ..., cna: str = ..., edit: bool | int = ..., e: bool | int = ..., excludeBoolean: bool | int = ..., ebl: bool | int = ..., excludeDynamic: bool | int = ..., edn: bool | int = ..., excludeEnum: bool | int = ..., een: bool | int = ..., excludeRotate: bool | int = ..., ert: bool | int = ..., excludeScale: bool | int = ..., esc: bool | int = ..., excludeTranslate: bool | int = ..., etr: bool | int = ..., excludeVisibility: bool | int = ..., evs: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extractAnimation: str = ..., ea: str = ..., findCurveForPlug: bool | int | str = ..., fcv: bool | int | str = ..., forceUIRebuild: bool | int = ..., fur: bool | int = ..., forceUIRefresh: bool | int = ..., uir: bool | int = ..., layeredPlug: bool | int | str = ..., lp: bool | int | str = ..., lock: bool | int = ..., l: bool | int = ..., maxLayers: bool | int = ..., ml: bool | int = ..., moveLayerAfter: str = ..., mva: str = ..., moveLayerBefore: str = ..., mvb: str = ..., mute: bool | int = ..., m: bool | int = ..., override: bool | int = ..., o: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., passthrough: bool | int = ..., pth: bool | int = ..., preferred: bool | int = ..., prf: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeAllAttributes: bool | int = ..., raa: bool | int = ..., removeAttribute: str | list[str] = ..., ra: str | list[str] = ..., root: bool | int | str = ..., r: bool | int | str = ..., selected: bool | int = ..., sel: bool | int = ..., solo: bool | int = ..., s: bool | int = ..., weight: bool | int | float = ..., w: bool | int | float = ..., writeBlendnodeDestinations: bool | int = ..., wbd: bool | int = ...) -> Any: ...
def animView(*args, edit: bool | int = ..., e: bool | int = ..., endTime: int | float = ..., et: int | float = ..., maxValue: float = ..., max: float = ..., minValue: float = ..., min: float = ..., nextView: bool | int = ..., nv: bool | int = ..., previousView: bool | int = ..., pv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., startTime: int | float = ..., st: int | float = ...) -> Any: ...
def annotate(*args, point: tuple[float, float, float] = ..., p: tuple[float, float, float] = ..., text: str = ..., tx: str = ...) -> Any: ...
def appHome(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., visible: bool | int = ..., v: bool | int = ...) -> Any: ...

appendListItem: Callable
def applyAttrPattern(*args, nodeType: str = ..., nt: str = ..., patternName: str = ..., pn: str = ...) -> Any: ...
def applyMetadata(*args, format: str = ..., fmt: str = ..., scene: bool | int = ..., scn: bool | int = ..., value: str = ..., v: str = ...) -> Any: ...
def applyTake(*args, channel: str | list[str] = ..., c: str | list[str] = ..., device: str | list[str] = ..., d: str | list[str] = ..., filter: str | list[str] = ..., f: str | list[str] = ..., preview: bool | int = ..., p: bool | int = ..., recurseChannel: bool | int = ..., rc: bool | int = ..., reset: bool | int = ..., r: bool | int = ..., specifyChannel: bool | int = ..., sc: bool | int = ..., startTime: int | float = ..., st: int | float = ...) -> Any: ...
def arcLenDimContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def arcLengthDimension(*args) -> Any: ...
def arclen(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def arrayMapper(*args, destAttr: str = ..., da: str = ..., inputU: str = ..., iu: str = ..., inputV: str = ..., iv: str = ..., mapTo: str = ..., mt: str = ..., target: str | list[str] = ..., t: str | list[str] = ..., type: str = ..., ty: str = ...) -> Any: ...
def art3dPaintCtx(*args, accopacity: bool | int = ..., aco: bool | int = ..., afterStrokeCmd: bool | int | str = ..., asc: bool | int | str = ..., alphablendmode: bool | int | str = ..., abm: bool | int | str = ..., alwaysKeepFile: bool | int = ..., akf: bool | int = ..., assigntxt: bool | int = ..., ast: bool | int = ..., attrnames: bool | int | str = ..., atn: bool | int | str = ..., beforeStrokeCmd: bool | int | str = ..., bsc: bool | int | str = ..., brushalignment: bool | int = ..., bra: bool | int = ..., brushdepth: bool | int | float = ..., bd: bool | int | float = ..., brushfeedback: bool | int = ..., brf: bool | int = ..., brushtype: bool | int | str = ..., brt: bool | int | str = ..., clear: bool | int = ..., clr: bool | int = ..., commonattr: bool | int | str = ..., cat: bool | int | str = ..., dragSlider: str = ..., dsl: str = ..., dynclonemode: bool | int = ..., dcm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandfilename: bool | int = ..., eef: bool | int = ..., exportaspectratio: float = ..., ear: float = ..., exportfilemode: str = ..., efm: str = ..., exportfilesave: str = ..., esf: str = ..., exportfilesizex: int = ..., fsx: int = ..., exportfilesizey: int = ..., fsy: int = ..., exportfiletype: str = ..., eft: str = ..., extendFillColor: bool | int = ..., efc: bool | int = ..., fileformat: bool | int | str = ..., eff: bool | int | str = ..., filetxtaspectratio: bool | int | float = ..., far: bool | int | float = ..., filetxtsizex: bool | int | int = ..., ftx: bool | int | int = ..., filetxtsizey: bool | int | int = ..., fty: bool | int | int = ..., floodOpacity: bool | int | float = ..., fop: bool | int | float = ..., floodall: bool | int = ..., fal: bool | int = ..., floodselect: bool | int = ..., fsl: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., importfileload: str = ..., ifl: str = ..., importfilemode: str = ..., ifm: str = ..., importreassign: bool | int = ..., irm: bool | int = ..., keepaspectratio: bool | int = ..., kar: bool | int = ..., lastRecorderCmd: bool | int | str = ..., lrc: bool | int | str = ..., lastStampName: bool | int | str = ..., lsn: bool | int | str = ..., lowerradius: bool | int | float = ..., lr: bool | int | float = ..., makeStroke: bool | int | int | list[int] = ..., mst: bool | int | int | list[int] = ..., mappressure: bool | int | str = ..., mp: bool | int | str = ..., name: str = ..., n: str = ..., opacity: bool | int | float = ..., op: bool | int | float = ..., outline: bool | int = ..., o: bool | int = ..., outwhilepaint: bool | int = ..., owp: bool | int = ..., paintmode: bool | int | str = ..., pm: bool | int | str = ..., paintoperationtype: bool | int | str = ..., pot: bool | int | str = ..., painttxtattr: bool | int | str = ..., pta: bool | int | str = ..., painttxtattrname: bool | int | str = ..., ptn: bool | int | str = ..., pfxScale: bool | int | float = ..., psc: bool | int | float = ..., pfxWidth: bool | int | float = ..., pwd: bool | int | float = ..., pickColor: bool | int = ..., pcm: bool | int = ..., pickValue: bool | int = ..., pv: bool | int = ..., playbackCursor: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., plc: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., playbackPressure: bool | int | float | list[float] = ..., plp: bool | int | float | list[float] = ..., preserveclonesource: bool | int = ..., pcs: bool | int = ..., pressureMapping1: bool | int | int = ..., pm1: bool | int | int = ..., pressureMapping2: bool | int | int = ..., pm2: bool | int | int = ..., pressureMapping3: bool | int | int = ..., pm3: bool | int | int = ..., pressureMax1: bool | int | float = ..., px1: bool | int | float = ..., pressureMax2: bool | int | float = ..., px2: bool | int | float = ..., pressureMax3: bool | int | float = ..., px3: bool | int | float = ..., pressureMin1: bool | int | float = ..., ps1: bool | int | float = ..., pressureMin2: bool | int | float = ..., ps2: bool | int | float = ..., pressureMin3: bool | int | float = ..., ps3: bool | int | float = ..., profileShapeFile: bool | int | str = ..., psf: bool | int | str = ..., projective: bool | int = ..., prm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., record: bool | int = ..., rec: bool | int = ..., reflection: bool | int = ..., rn: bool | int = ..., reflectionaboutorigin: bool | int = ..., rno: bool | int = ..., reflectionaxis: bool | int | str = ..., ra: bool | int | str = ..., reloadtexfile: bool | int = ..., rtf: bool | int = ..., resizeratio: bool | int | float = ..., rr: bool | int | float = ..., resizetxt: bool | int = ..., rft: bool | int = ..., rgbcolor: bool | int | tuple[float, float, float] = ..., rgb: bool | int | tuple[float, float, float] = ..., rgbflood: bool | int | tuple[float, float, float] = ..., fc: bool | int | tuple[float, float, float] = ..., saveTextureOnStroke: bool | int = ..., sts: bool | int = ..., saveonstroke: bool | int = ..., sos: bool | int = ..., savetexture: bool | int = ..., stx: bool | int = ..., screenRadius: bool | int | float = ..., scR: bool | int | float = ..., selectclonesource: bool | int = ..., scs: bool | int = ..., shadernames: bool | int | str = ..., hnm: bool | int | str = ..., shapeattr: bool | int = ..., spa: bool | int = ..., shapenames: bool | int | str = ..., shn: bool | int | str = ..., showactive: bool | int = ..., sa: bool | int = ..., soloAsDiffuse: bool | int = ..., sod: bool | int = ..., stampDepth: bool | int | float = ..., stD: bool | int | float = ..., stampProfile: bool | int | str = ..., stP: bool | int | str = ..., stampSpacing: bool | int | float = ..., stS: bool | int | float = ..., strokesmooth: bool | int | str = ..., ssm: bool | int | str = ..., surfaceConformedBrushVertices: bool | int = ..., scv: bool | int = ..., tablet: bool | int = ..., tab: bool | int = ..., tangentOutline: bool | int = ..., to: bool | int = ..., textureFilenames: bool | int = ..., tfn: bool | int = ..., updateEraseTex: bool | int = ..., uet: bool | int = ..., usepressure: bool | int = ..., up: bool | int = ..., worldRadius: bool | int | float = ..., wlR: bool | int | float = ...) -> Any: ...
def artAttr(*args) -> Any: ...
def artAttrCtx(*args, accopacity: bool | int = ..., aco: bool | int = ..., activeListChangedProc: bool | int | str = ..., alp: bool | int | str = ..., afterStrokeCmd: bool | int | str = ..., asc: bool | int | str = ..., alphaclamp: bool | int | str = ..., alc: bool | int | str = ..., alphaclamplower: bool | int | float = ..., acl: bool | int | float = ..., alphaclampupper: bool | int | float = ..., acu: bool | int | float = ..., attrSelected: bool | int | str = ..., asl: bool | int | str = ..., beforeStrokeCmd: bool | int | str = ..., bsc: bool | int | str = ..., brushalignment: bool | int = ..., bra: bool | int = ..., brushfeedback: bool | int = ..., brf: bool | int = ..., clamp: bool | int | str = ..., cl: bool | int | str = ..., clamplower: bool | int | float = ..., cll: bool | int | float = ..., clampupper: bool | int | float = ..., clu: bool | int | float = ..., clear: bool | int = ..., clr: bool | int = ..., colorAlphaValue: bool | int | float = ..., cl1: bool | int | float = ..., colorRGBAValue: bool | int | tuple[float, float, float, float] = ..., cl4: bool | int | tuple[float, float, float, float] = ..., colorRGBValue: bool | int | tuple[float, float, float] = ..., cl3: bool | int | tuple[float, float, float] = ..., colorRamp: bool | int | str = ..., cr: bool | int | str = ..., colorfeedback: bool | int = ..., cf: bool | int = ..., colorfeedbackOverride: bool | int = ..., cfo: bool | int = ..., colorrangelower: bool | int | float = ..., crl: bool | int | float = ..., colorrangeupper: bool | int | float = ..., cru: bool | int | float = ..., dataTypeIndex: bool | int | int = ..., dti: bool | int | int = ..., disablelighting: bool | int = ..., dl: bool | int = ..., dragSlider: str = ..., dsl: str = ..., duringStrokeCmd: bool | int | str = ..., dsk: bool | int | str = ..., dynclonemode: bool | int = ..., dcm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandfilename: bool | int = ..., eef: bool | int = ..., exportaspectratio: bool | int | float = ..., ear: bool | int | float = ..., exportfilemode: bool | int | str = ..., efm: bool | int | str = ..., exportfilesave: str = ..., esf: str = ..., exportfilesizex: bool | int | int = ..., fsx: bool | int | int = ..., exportfilesizey: bool | int | int = ..., fsy: bool | int | int = ..., exportfiletype: bool | int | str = ..., eft: bool | int | str = ..., filterNodes: bool | int = ..., fon: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., importfileload: str = ..., ifl: str = ..., importfilemode: bool | int | str = ..., ifm: bool | int | str = ..., importreassign: bool | int = ..., irm: bool | int = ..., interactiveUpdate: bool | int = ..., iu: bool | int = ..., lastRecorderCmd: bool | int | str = ..., lrc: bool | int | str = ..., lastStampName: bool | int | str = ..., lsn: bool | int | str = ..., lowerradius: bool | int | float = ..., lr: bool | int | float = ..., makeStroke: bool | int | int | list[int] = ..., mst: bool | int | int | list[int] = ..., mappressure: bool | int | str = ..., mp: bool | int | str = ..., maxvalue: bool | int | float = ..., mxv: bool | int | float = ..., minvalue: bool | int | float = ..., miv: bool | int | float = ..., name: str = ..., n: str = ..., objattrArray: bool | int | str = ..., oaa: bool | int | str = ..., opacity: bool | int | float = ..., op: bool | int | float = ..., outline: bool | int = ..., o: bool | int = ..., outwhilepaint: bool | int = ..., owp: bool | int = ..., paintNodeArray: bool | int | str = ..., pna: bool | int | str = ..., paintattrselected: str = ..., pas: str = ..., paintmode: bool | int | str = ..., pm: bool | int | str = ..., paintoperationtype: bool | int | str = ..., pot: bool | int | str = ..., pickColor: bool | int = ..., pcm: bool | int = ..., pickValue: bool | int = ..., pv: bool | int = ..., playbackCursor: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., plc: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., playbackPressure: bool | int | float | list[float] = ..., plp: bool | int | float | list[float] = ..., preserveclonesource: bool | int = ..., pcs: bool | int = ..., profileShapeFile: bool | int | str = ..., psf: bool | int | str = ..., projective: bool | int = ..., prm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., rampMaxColor: bool | int | tuple[float, float, float] = ..., rxc: bool | int | tuple[float, float, float] = ..., rampMinColor: bool | int | tuple[float, float, float] = ..., rmc: bool | int | tuple[float, float, float] = ..., record: bool | int = ..., rec: bool | int = ..., reflection: bool | int = ..., rn: bool | int = ..., reflectionaboutorigin: bool | int = ..., rno: bool | int = ..., reflectionaxis: bool | int | str = ..., ra: bool | int | str = ..., screenRadius: bool | int | float = ..., scR: bool | int | float = ..., selectclonesource: bool | int = ..., scs: bool | int = ..., selectedattroper: bool | int | str = ..., sao: bool | int | str = ..., showactive: bool | int = ..., sa: bool | int = ..., stampDepth: bool | int | float = ..., stD: bool | int | float = ..., stampProfile: bool | int | str = ..., stP: bool | int | str = ..., stampSpacing: bool | int | float = ..., stS: bool | int | float = ..., strokesmooth: bool | int | str = ..., ssm: bool | int | str = ..., surfaceConformedBrushVertices: bool | int = ..., scv: bool | int = ..., tablet: bool | int = ..., tab: bool | int = ..., tangentOutline: bool | int = ..., to: bool | int = ..., toolOffProc: bool | int | str = ..., tfp: bool | int | str = ..., toolOnProc: bool | int | str = ..., top: bool | int | str = ..., useColorRamp: bool | int = ..., ucr: bool | int = ..., useMaxMinColor: bool | int = ..., umc: bool | int = ..., usepressure: bool | int = ..., up: bool | int = ..., value: bool | int | float = ..., val: bool | int | float = ..., whichTool: bool | int | str = ..., wst: bool | int | str = ..., worldRadius: bool | int | float = ..., wlR: bool | int | float = ...) -> Any: ...
def artAttrPaintVertexCtx(*args, accopacity: bool | int = ..., aco: bool | int = ..., activeListChangedProc: bool | int | str = ..., alp: bool | int | str = ..., afterStrokeCmd: bool | int | str = ..., asc: bool | int | str = ..., alphaclamp: bool | int | str = ..., alc: bool | int | str = ..., alphaclamplower: bool | int | float = ..., acl: bool | int | float = ..., alphaclampupper: bool | int | float = ..., acu: bool | int | float = ..., attrSelected: bool | int | str = ..., asl: bool | int | str = ..., beforeStrokeCmd: bool | int | str = ..., bsc: bool | int | str = ..., brushalignment: bool | int = ..., bra: bool | int = ..., brushfeedback: bool | int = ..., brf: bool | int = ..., clamp: bool | int | str = ..., cl: bool | int | str = ..., clamplower: bool | int | float = ..., cll: bool | int | float = ..., clampupper: bool | int | float = ..., clu: bool | int | float = ..., clear: bool | int = ..., clr: bool | int = ..., colorAlphaValue: bool | int | float = ..., cl1: bool | int | float = ..., colorRGBAValue: bool | int | tuple[float, float, float, float] = ..., cl4: bool | int | tuple[float, float, float, float] = ..., colorRGBValue: bool | int | tuple[float, float, float] = ..., cl3: bool | int | tuple[float, float, float] = ..., colorRamp: bool | int | str = ..., cr: bool | int | str = ..., colorfeedback: bool | int = ..., cf: bool | int = ..., colorfeedbackOverride: bool | int = ..., cfo: bool | int = ..., colorrangelower: bool | int | float = ..., crl: bool | int | float = ..., colorrangeupper: bool | int | float = ..., cru: bool | int | float = ..., dataTypeIndex: bool | int | int = ..., dti: bool | int | int = ..., disablelighting: bool | int = ..., dl: bool | int = ..., dragSlider: str = ..., dsl: str = ..., duringStrokeCmd: bool | int | str = ..., dsk: bool | int | str = ..., dynclonemode: bool | int = ..., dcm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandfilename: bool | int = ..., eef: bool | int = ..., exportaspectratio: bool | int | float = ..., ear: bool | int | float = ..., exportfilemode: bool | int | str = ..., efm: bool | int | str = ..., exportfilesave: str = ..., esf: str = ..., exportfilesizex: bool | int | int = ..., fsx: bool | int | int = ..., exportfilesizey: bool | int | int = ..., fsy: bool | int | int = ..., exportfiletype: bool | int | str = ..., eft: bool | int | str = ..., filterNodes: bool | int = ..., fon: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., importfileload: str = ..., ifl: str = ..., importfilemode: bool | int | str = ..., ifm: bool | int | str = ..., importreassign: bool | int = ..., irm: bool | int = ..., interactiveUpdate: bool | int = ..., iu: bool | int = ..., lastRecorderCmd: bool | int | str = ..., lrc: bool | int | str = ..., lastStampName: bool | int | str = ..., lsn: bool | int | str = ..., lowerradius: bool | int | float = ..., lr: bool | int | float = ..., makeStroke: bool | int | int | list[int] = ..., mst: bool | int | int | list[int] = ..., mappressure: bool | int | str = ..., mp: bool | int | str = ..., maxvalue: bool | int | float = ..., mxv: bool | int | float = ..., minvalue: bool | int | float = ..., miv: bool | int | float = ..., name: str = ..., n: str = ..., objattrArray: bool | int | str = ..., oaa: bool | int | str = ..., opacity: bool | int | float = ..., op: bool | int | float = ..., outline: bool | int = ..., o: bool | int = ..., outwhilepaint: bool | int = ..., owp: bool | int = ..., paintComponent: bool | int | int = ..., pc: bool | int | int = ..., paintNodeArray: bool | int | str = ..., pna: bool | int | str = ..., paintNumChannels: bool | int | int = ..., pnc: bool | int | int = ..., paintRGBA: bool | int = ..., pc4: bool | int = ..., paintVertexFace: bool | int = ..., pvf: bool | int = ..., paintattrselected: str = ..., pas: str = ..., paintmode: bool | int | str = ..., pm: bool | int | str = ..., paintoperationtype: bool | int | str = ..., pot: bool | int | str = ..., pickColor: bool | int = ..., pcm: bool | int = ..., pickValue: bool | int = ..., pv: bool | int = ..., playbackCursor: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., plc: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., playbackPressure: bool | int | float | list[float] = ..., plp: bool | int | float | list[float] = ..., preserveclonesource: bool | int = ..., pcs: bool | int = ..., profileShapeFile: bool | int | str = ..., psf: bool | int | str = ..., projective: bool | int = ..., prm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., rampMaxColor: bool | int | tuple[float, float, float] = ..., rxc: bool | int | tuple[float, float, float] = ..., rampMinColor: bool | int | tuple[float, float, float] = ..., rmc: bool | int | tuple[float, float, float] = ..., record: bool | int = ..., rec: bool | int = ..., reflection: bool | int = ..., rn: bool | int = ..., reflectionaboutorigin: bool | int = ..., rno: bool | int = ..., reflectionaxis: bool | int | str = ..., ra: bool | int | str = ..., screenRadius: bool | int | float = ..., scR: bool | int | float = ..., selectclonesource: bool | int = ..., scs: bool | int = ..., selectedattroper: bool | int | str = ..., sao: bool | int | str = ..., showactive: bool | int = ..., sa: bool | int = ..., stampDepth: bool | int | float = ..., stD: bool | int | float = ..., stampProfile: bool | int | str = ..., stP: bool | int | str = ..., stampSpacing: bool | int | float = ..., stS: bool | int | float = ..., strokesmooth: bool | int | str = ..., ssm: bool | int | str = ..., surfaceConformedBrushVertices: bool | int = ..., scv: bool | int = ..., tablet: bool | int = ..., tab: bool | int = ..., tangentOutline: bool | int = ..., to: bool | int = ..., toolOffProc: bool | int | str = ..., tfp: bool | int | str = ..., toolOnProc: bool | int | str = ..., top: bool | int | str = ..., useColorRamp: bool | int = ..., ucr: bool | int = ..., useMaxMinColor: bool | int = ..., umc: bool | int = ..., usepressure: bool | int = ..., up: bool | int = ..., value: bool | int | float = ..., val: bool | int | float = ..., vertexColorRange: bool | int = ..., vcr: bool | int = ..., vertexColorRangeLower: bool | int | float = ..., vcl: bool | int | float = ..., vertexColorRangeUpper: bool | int | float = ..., vcu: bool | int | float = ..., whichTool: bool | int | str = ..., wst: bool | int | str = ..., worldRadius: bool | int | float = ..., wlR: bool | int | float = ...) -> Any: ...
def artAttrSkinPaint(*args) -> Any: ...
def artAttrSkinPaintCtx(*args, accopacity: bool | int = ..., aco: bool | int = ..., activeListChangedProc: bool | int | str = ..., alp: bool | int | str = ..., afterStrokeCmd: bool | int | str = ..., asc: bool | int | str = ..., alphaclamp: bool | int | str = ..., alc: bool | int | str = ..., alphaclamplower: bool | int | float = ..., acl: bool | int | float = ..., alphaclampupper: bool | int | float = ..., acu: bool | int | float = ..., attrSelected: bool | int | str = ..., asl: bool | int | str = ..., beforeStrokeCmd: bool | int | str = ..., bsc: bool | int | str = ..., brushalignment: bool | int = ..., bra: bool | int = ..., brushfeedback: bool | int = ..., brf: bool | int = ..., clamp: bool | int | str = ..., cl: bool | int | str = ..., clamplower: bool | int | float = ..., cll: bool | int | float = ..., clampupper: bool | int | float = ..., clu: bool | int | float = ..., clear: bool | int = ..., clr: bool | int = ..., colorAlphaValue: bool | int | float = ..., cl1: bool | int | float = ..., colorRGBAValue: bool | int | tuple[float, float, float, float] = ..., cl4: bool | int | tuple[float, float, float, float] = ..., colorRGBValue: bool | int | tuple[float, float, float] = ..., cl3: bool | int | tuple[float, float, float] = ..., colorRamp: bool | int | str = ..., cr: bool | int | str = ..., colorfeedback: bool | int = ..., cf: bool | int = ..., colorfeedbackOverride: bool | int = ..., cfo: bool | int = ..., colorrangelower: bool | int | float = ..., crl: bool | int | float = ..., colorrangeupper: bool | int | float = ..., cru: bool | int | float = ..., dataTypeIndex: bool | int | int = ..., dti: bool | int | int = ..., disablelighting: bool | int = ..., dl: bool | int = ..., dragSlider: str = ..., dsl: str = ..., duringStrokeCmd: bool | int | str = ..., dsk: bool | int | str = ..., dynclonemode: bool | int = ..., dcm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandfilename: bool | int = ..., eef: bool | int = ..., exportaspectratio: bool | int | float = ..., ear: bool | int | float = ..., exportfilemode: bool | int | str = ..., efm: bool | int | str = ..., exportfilesave: str = ..., esf: str = ..., exportfilesizex: bool | int | int = ..., fsx: bool | int | int = ..., exportfilesizey: bool | int | int = ..., fsy: bool | int | int = ..., exportfiletype: bool | int | str = ..., eft: bool | int | str = ..., filterNodes: bool | int = ..., fon: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., importfileload: str = ..., ifl: str = ..., importfilemode: bool | int | str = ..., ifm: bool | int | str = ..., importreassign: bool | int = ..., irm: bool | int = ..., influence: bool | int | str = ..., inf: bool | int | str = ..., interactiveUpdate: bool | int = ..., iu: bool | int = ..., lastRecorderCmd: bool | int | str = ..., lrc: bool | int | str = ..., lastStampName: bool | int | str = ..., lsn: bool | int | str = ..., lowerradius: bool | int | float = ..., lr: bool | int | float = ..., makeStroke: bool | int | int | list[int] = ..., mst: bool | int | int | list[int] = ..., mappressure: bool | int | str = ..., mp: bool | int | str = ..., maxvalue: bool | int | float = ..., mxv: bool | int | float = ..., minvalue: bool | int | float = ..., miv: bool | int | float = ..., name: str = ..., n: str = ..., objattrArray: bool | int | str = ..., oaa: bool | int | str = ..., opacity: bool | int | float = ..., op: bool | int | float = ..., outline: bool | int = ..., o: bool | int = ..., outwhilepaint: bool | int = ..., owp: bool | int = ..., paintNodeArray: bool | int | str = ..., pna: bool | int | str = ..., paintSelectMode: bool | int | int = ..., psm: bool | int | int = ..., paintattrselected: str = ..., pas: str = ..., paintmode: bool | int | str = ..., pm: bool | int | str = ..., paintoperationtype: bool | int | str = ..., pot: bool | int | str = ..., pickColor: bool | int = ..., pcm: bool | int = ..., pickValue: bool | int = ..., pv: bool | int = ..., playbackCursor: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., plc: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., playbackPressure: bool | int | float | list[float] = ..., plp: bool | int | float | list[float] = ..., preserveclonesource: bool | int = ..., pcs: bool | int = ..., profileShapeFile: bool | int | str = ..., psf: bool | int | str = ..., projective: bool | int = ..., prm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., rampMaxColor: bool | int | tuple[float, float, float] = ..., rxc: bool | int | tuple[float, float, float] = ..., rampMinColor: bool | int | tuple[float, float, float] = ..., rmc: bool | int | tuple[float, float, float] = ..., record: bool | int = ..., rec: bool | int = ..., reflection: bool | int = ..., rn: bool | int = ..., reflectionaboutorigin: bool | int = ..., rno: bool | int = ..., reflectionaxis: bool | int | str = ..., ra: bool | int | str = ..., screenRadius: bool | int | float = ..., scR: bool | int | float = ..., selectclonesource: bool | int = ..., scs: bool | int = ..., selectedattroper: bool | int | str = ..., sao: bool | int | str = ..., showactive: bool | int = ..., sa: bool | int = ..., skinPaintMode: bool | int | int = ..., spm: bool | int | int = ..., stampDepth: bool | int | float = ..., stD: bool | int | float = ..., stampProfile: bool | int | str = ..., stP: bool | int | str = ..., stampSpacing: bool | int | float = ..., stS: bool | int | float = ..., strokesmooth: bool | int | str = ..., ssm: bool | int | str = ..., surfaceConformedBrushVertices: bool | int = ..., scv: bool | int = ..., tablet: bool | int = ..., tab: bool | int = ..., tangentOutline: bool | int = ..., to: bool | int = ..., toolOffProc: bool | int | str = ..., tfp: bool | int | str = ..., toolOnProc: bool | int | str = ..., top: bool | int | str = ..., useColorRamp: bool | int = ..., ucr: bool | int = ..., useMaxMinColor: bool | int = ..., umc: bool | int = ..., usepressure: bool | int = ..., up: bool | int = ..., value: bool | int | float = ..., val: bool | int | float = ..., whichTool: bool | int | str = ..., wst: bool | int | str = ..., worldRadius: bool | int | float = ..., wlR: bool | int | float = ..., xrayJoints: bool | int = ..., xry: bool | int = ...) -> Any: ...
def artAttrTool(*args, add: Any = ..., string: Any = ..., exists: bool | int | str = ..., ex: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., remove: str = ..., rm: str = ...) -> Any: ...
def artBaseCtx(*args, accopacity: bool | int = ..., aco: bool | int = ..., afterStrokeCmd: str = ..., asc: str = ..., beforeStrokeCmd: str = ..., bsc: str = ..., brushalignment: bool | int = ..., bra: bool | int = ..., brushfeedback: bool | int = ..., brf: bool | int = ..., clear: bool | int = ..., clr: bool | int = ..., dragSlider: str = ..., dsl: str = ..., dynclonemode: bool | int = ..., dcm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandfilename: bool | int = ..., eef: bool | int = ..., exportaspectratio: float = ..., ear: float = ..., exportfilemode: str = ..., efm: str = ..., exportfilesave: str = ..., esf: str = ..., exportfilesizex: int = ..., fsx: int = ..., exportfilesizey: int = ..., fsy: int = ..., exportfiletype: str = ..., eft: str = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., importfileload: str = ..., ifl: str = ..., importfilemode: str = ..., ifm: str = ..., importreassign: bool | int = ..., irm: bool | int = ..., lastRecorderCmd: str = ..., lrc: str = ..., lastStampName: str = ..., lsn: str = ..., lowerradius: float = ..., lr: float = ..., makeStroke: int | list[int] = ..., mst: int | list[int] = ..., mappressure: str = ..., mp: str = ..., name: str = ..., n: str = ..., opacity: float = ..., op: float = ..., outline: bool | int = ..., o: bool | int = ..., outwhilepaint: bool | int = ..., owp: bool | int = ..., paintmode: str = ..., pm: str = ..., paintoperationtype: str = ..., pot: str = ..., pickColor: bool | int = ..., pcm: bool | int = ..., pickValue: bool | int = ..., pv: bool | int = ..., playbackCursor: tuple[float, float] | list[tuple[float, float]] = ..., plc: tuple[float, float] | list[tuple[float, float]] = ..., playbackPressure: float | list[float] = ..., plp: float | list[float] = ..., preserveclonesource: bool | int = ..., pcs: bool | int = ..., profileShapeFile: str = ..., psf: str = ..., projective: bool | int = ..., prm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., record: bool | int = ..., rec: bool | int = ..., reflection: bool | int = ..., rn: bool | int = ..., reflectionaboutorigin: bool | int = ..., rno: bool | int = ..., reflectionaxis: str = ..., ra: str = ..., screenRadius: float = ..., scR: float = ..., selectclonesource: bool | int = ..., scs: bool | int = ..., showactive: bool | int = ..., sa: bool | int = ..., stampDepth: float = ..., stD: float = ..., stampProfile: str = ..., stP: str = ..., stampSpacing: float = ..., stS: float = ..., strokesmooth: str = ..., ssm: str = ..., surfaceConformedBrushVertices: bool | int = ..., scv: bool | int = ..., tablet: bool | int = ..., tab: bool | int = ..., tangentOutline: bool | int = ..., to: bool | int = ..., usepressure: bool | int = ..., up: bool | int = ..., worldRadius: float = ..., wlR: float = ...) -> Any: ...
def artBuildPaintMenu(*args) -> Any: ...
def artFluidAttr(*args) -> Any: ...
def artFluidAttrCtx(*args, accopacity: bool | int = ..., aco: bool | int = ..., activeListChangedProc: bool | int | str = ..., alp: bool | int | str = ..., afterStrokeCmd: bool | int | str = ..., asc: bool | int | str = ..., alphaclamp: bool | int | str = ..., alc: bool | int | str = ..., alphaclamplower: bool | int | float = ..., acl: bool | int | float = ..., alphaclampupper: bool | int | float = ..., acu: bool | int | float = ..., attrSelected: bool | int | str = ..., asl: bool | int | str = ..., autoSave: bool | int | str = ..., beforeStrokeCmd: bool | int | str = ..., bsc: bool | int | str = ..., brushalignment: bool | int = ..., bra: bool | int = ..., brushfeedback: bool | int = ..., brf: bool | int = ..., clamp: bool | int | str = ..., cl: bool | int | str = ..., clamplower: bool | int | float = ..., cll: bool | int | float = ..., clampupper: bool | int | float = ..., clu: bool | int | float = ..., clear: bool | int = ..., clr: bool | int = ..., colorAlphaValue: bool | int | float = ..., cl1: bool | int | float = ..., colorRGBAValue: bool | int | tuple[float, float, float, float] = ..., cl4: bool | int | tuple[float, float, float, float] = ..., colorRGBValue: bool | int | tuple[float, float, float] = ..., cl3: bool | int | tuple[float, float, float] = ..., colorRamp: bool | int | str = ..., cr: bool | int | str = ..., colorfeedback: bool | int = ..., cf: bool | int = ..., colorfeedbackOverride: bool | int = ..., cfo: bool | int = ..., colorrangelower: bool | int | float = ..., crl: bool | int | float = ..., colorrangeupper: bool | int | float = ..., cru: bool | int | float = ..., currentPaintableFluid: bool | int | str = ..., cpf: bool | int | str = ..., dataTypeIndex: bool | int | int = ..., dti: bool | int | int = ..., delaySelectionChanged: bool | int = ..., dsc: bool | int = ..., disablelighting: bool | int = ..., dl: bool | int = ..., displayAsRender: bool | int = ..., dar: bool | int = ..., displayVelocity: bool | int = ..., dv: bool | int = ..., doAutoSave: bool | int = ..., das: bool | int = ..., dragSlider: str = ..., dsl: str = ..., duringStrokeCmd: bool | int | str = ..., dsk: bool | int | str = ..., dynclonemode: bool | int = ..., dcm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandfilename: bool | int = ..., eef: bool | int = ..., exportaspectratio: bool | int | float = ..., ear: bool | int | float = ..., exportfilemode: bool | int | str = ..., efm: bool | int | str = ..., exportfilesave: str = ..., esf: str = ..., exportfilesizex: bool | int | int = ..., fsx: bool | int | int = ..., exportfilesizey: bool | int | int = ..., fsy: bool | int | int = ..., exportfiletype: bool | int | str = ..., eft: bool | int | str = ..., filterNodes: bool | int = ..., fon: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., importfileload: str = ..., ifl: str = ..., importfilemode: bool | int | str = ..., ifm: bool | int | str = ..., importreassign: bool | int = ..., irm: bool | int = ..., interactiveUpdate: bool | int = ..., iu: bool | int = ..., lastRecorderCmd: bool | int | str = ..., lrc: bool | int | str = ..., lastStampName: bool | int | str = ..., lsn: bool | int | str = ..., lowerradius: bool | int | float = ..., lr: bool | int | float = ..., makeStroke: bool | int | int | list[int] = ..., mst: bool | int | int | list[int] = ..., mappressure: bool | int | str = ..., mp: bool | int | str = ..., maxvalue: bool | int | float = ..., mxv: bool | int | float = ..., minvalue: bool | int | float = ..., miv: bool | int | float = ..., name: str = ..., n: str = ..., objattrArray: bool | int | str = ..., oaa: bool | int | str = ..., opacity: bool | int | float = ..., op: bool | int | float = ..., outline: bool | int = ..., o: bool | int = ..., outwhilepaint: bool | int = ..., owp: bool | int = ..., paintNodeArray: bool | int | str = ..., pna: bool | int | str = ..., paintattrselected: str = ..., pas: str = ..., paintmode: bool | int | str = ..., pm: bool | int | str = ..., paintoperationtype: bool | int | str = ..., pot: bool | int | str = ..., pickColor: bool | int = ..., pcm: bool | int = ..., pickValue: bool | int = ..., pv: bool | int = ..., playbackCursor: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., plc: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., playbackPressure: bool | int | float | list[float] = ..., plp: bool | int | float | list[float] = ..., preserveclonesource: bool | int = ..., pcs: bool | int = ..., profileShapeFile: bool | int | str = ..., psf: bool | int | str = ..., projective: bool | int = ..., prm: bool | int = ..., property: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., rampMaxColor: bool | int | tuple[float, float, float] = ..., rxc: bool | int | tuple[float, float, float] = ..., rampMinColor: bool | int | tuple[float, float, float] = ..., rmc: bool | int | tuple[float, float, float] = ..., record: bool | int = ..., rec: bool | int = ..., reflection: bool | int = ..., rn: bool | int = ..., reflectionaboutorigin: bool | int = ..., rno: bool | int = ..., reflectionaxis: bool | int | str = ..., ra: bool | int | str = ..., rgbValue: bool | int | tuple[float, float, float] = ..., rgb: bool | int | tuple[float, float, float] = ..., screenRadius: bool | int | float = ..., scR: bool | int | float = ..., selectclonesource: bool | int = ..., scs: bool | int = ..., selectedattroper: bool | int | str = ..., sao: bool | int | str = ..., showactive: bool | int = ..., sa: bool | int = ..., stampDepth: bool | int | float = ..., stD: bool | int | float = ..., stampProfile: bool | int | str = ..., stP: bool | int | str = ..., stampSpacing: bool | int | float = ..., stS: bool | int | float = ..., strokesmooth: bool | int | str = ..., ssm: bool | int | str = ..., surfaceConformedBrushVertices: bool | int = ..., scv: bool | int = ..., tablet: bool | int = ..., tab: bool | int = ..., tangentOutline: bool | int = ..., to: bool | int = ..., toolOffProc: bool | int | str = ..., tfp: bool | int | str = ..., toolOnProc: bool | int | str = ..., top: bool | int | str = ..., useColorRamp: bool | int = ..., ucr: bool | int = ..., useMaxMinColor: bool | int = ..., umc: bool | int = ..., useStrokeDirection: bool | int = ..., usd: bool | int = ..., usepressure: bool | int = ..., up: bool | int = ..., value: bool | int | float = ..., val: bool | int | float = ..., velocity: bool | int | tuple[float, float, float] = ..., v: bool | int | tuple[float, float, float] = ..., whichTool: bool | int | str = ..., wst: bool | int | str = ..., worldRadius: bool | int | float = ..., wlR: bool | int | float = ...) -> Any: ...
def artPuttyCtx(*args, accopacity: bool | int = ..., aco: bool | int = ..., activeListChangedProc: bool | int | str = ..., alp: bool | int | str = ..., afterStrokeCmd: bool | int | str = ..., asc: bool | int | str = ..., alphaclamp: bool | int | str = ..., alc: bool | int | str = ..., alphaclamplower: bool | int | float = ..., acl: bool | int | float = ..., alphaclampupper: bool | int | float = ..., acu: bool | int | float = ..., attrSelected: bool | int | str = ..., asl: bool | int | str = ..., autosmooth: bool | int = ..., asm: bool | int = ..., beforeStrokeCmd: bool | int | str = ..., bsc: bool | int | str = ..., brushStrength: bool | int | float = ..., bs: bool | int | float = ..., brushalignment: bool | int = ..., bra: bool | int = ..., brushfeedback: bool | int = ..., brf: bool | int = ..., clamp: bool | int | str = ..., cl: bool | int | str = ..., clamplower: bool | int | float = ..., cll: bool | int | float = ..., clampupper: bool | int | float = ..., clu: bool | int | float = ..., clear: bool | int = ..., clr: bool | int = ..., collapsecvtol: bool | int | float = ..., clc: bool | int | float = ..., colorAlphaValue: bool | int | float = ..., cl1: bool | int | float = ..., colorRGBAValue: bool | int | tuple[float, float, float, float] = ..., cl4: bool | int | tuple[float, float, float, float] = ..., colorRGBValue: bool | int | tuple[float, float, float] = ..., cl3: bool | int | tuple[float, float, float] = ..., colorRamp: bool | int | str = ..., cr: bool | int | str = ..., colorfeedback: bool | int = ..., cf: bool | int = ..., colorfeedbackOverride: bool | int = ..., cfo: bool | int = ..., colorrangelower: bool | int | float = ..., crl: bool | int | float = ..., colorrangeupper: bool | int | float = ..., cru: bool | int | float = ..., dataTypeIndex: bool | int | int = ..., dti: bool | int | int = ..., disablelighting: bool | int = ..., dl: bool | int = ..., dispdecr: bool | int = ..., dde: bool | int = ..., dispincr: bool | int = ..., din: bool | int = ..., dragSlider: str = ..., dsl: str = ..., duringStrokeCmd: bool | int | str = ..., dsk: bool | int | str = ..., dynclonemode: bool | int = ..., dcm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., erasesrfupd: bool | int = ..., eut: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandfilename: bool | int = ..., eef: bool | int = ..., exportaspectratio: bool | int | float = ..., ear: bool | int | float = ..., exportfilemode: bool | int | str = ..., efm: bool | int | str = ..., exportfilesave: str = ..., esf: str = ..., exportfilesizex: bool | int | int = ..., fsx: bool | int | int = ..., exportfilesizey: bool | int | int = ..., fsy: bool | int | int = ..., exportfiletype: bool | int | str = ..., eft: bool | int | str = ..., filterNodes: bool | int = ..., fon: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., importfileload: str = ..., ifl: str = ..., importfilemode: bool | int | str = ..., ifm: bool | int | str = ..., importreassign: bool | int = ..., irm: bool | int = ..., interactiveUpdate: bool | int = ..., iu: bool | int = ..., invertrefvector: bool | int = ..., irv: bool | int = ..., lastRecorderCmd: bool | int | str = ..., lrc: bool | int | str = ..., lastStampName: bool | int | str = ..., lsn: bool | int | str = ..., lowerradius: bool | int | float = ..., lr: bool | int | float = ..., makeStroke: bool | int | int | list[int] = ..., mst: bool | int | int | list[int] = ..., mappressure: bool | int | str = ..., mp: bool | int | str = ..., maxdisp: bool | int | float = ..., md: bool | int | float = ..., maxvalue: bool | int | float = ..., mxv: bool | int | float = ..., minvalue: bool | int | float = ..., miv: bool | int | float = ..., mouldtypehead: bool | int | str = ..., mth: bool | int | str = ..., mouldtypemouse: bool | int | str = ..., mtm: bool | int | str = ..., mouldtypetail: bool | int | str = ..., mtt: bool | int | str = ..., name: str = ..., n: str = ..., objattrArray: bool | int | str = ..., oaa: bool | int | str = ..., opacity: bool | int | float = ..., op: bool | int | float = ..., outline: bool | int = ..., o: bool | int = ..., outwhilepaint: bool | int = ..., owp: bool | int = ..., paintNodeArray: bool | int | str = ..., pna: bool | int | str = ..., paintattrselected: str = ..., pas: str = ..., paintmode: bool | int | str = ..., pm: bool | int | str = ..., paintoperationtype: bool | int | str = ..., pot: bool | int | str = ..., pickColor: bool | int = ..., pcm: bool | int = ..., pickValue: bool | int = ..., pv: bool | int = ..., playbackCursor: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., plc: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., playbackPressure: bool | int | float | list[float] = ..., plp: bool | int | float | list[float] = ..., polecv: bool | int = ..., pcv: bool | int = ..., preserveclonesource: bool | int = ..., pcs: bool | int = ..., profileShapeFile: bool | int | str = ..., psf: bool | int | str = ..., projective: bool | int = ..., prm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., rampMaxColor: bool | int | tuple[float, float, float] = ..., rxc: bool | int | tuple[float, float, float] = ..., rampMinColor: bool | int | tuple[float, float, float] = ..., rmc: bool | int | tuple[float, float, float] = ..., record: bool | int = ..., rec: bool | int = ..., reflection: bool | int = ..., rn: bool | int = ..., reflectionaboutorigin: bool | int = ..., rno: bool | int = ..., reflectionaxis: bool | int | str = ..., ra: bool | int | str = ..., refsurface: bool | int = ..., rs: bool | int = ..., refvector: bool | int | str = ..., rv: bool | int | str = ..., refvectoru: bool | int | float = ..., rvu: bool | int | float = ..., refvectorv: bool | int | float = ..., rvv: bool | int | float = ..., screenRadius: bool | int | float = ..., scR: bool | int | float = ..., selectclonesource: bool | int = ..., scs: bool | int = ..., selectedattroper: bool | int | str = ..., sao: bool | int | str = ..., showactive: bool | int = ..., sa: bool | int = ..., smoothiters: bool | int | int = ..., si: bool | int | int = ..., stampDepth: bool | int | float = ..., stD: bool | int | float = ..., stampProfile: bool | int | str = ..., stP: bool | int | str = ..., stampSpacing: bool | int | float = ..., stS: bool | int | float = ..., stitchcorner: bool | int = ..., stc: bool | int = ..., stitchedgeflood: bool | int = ..., sef: bool | int = ..., stitchtype: bool | int | str = ..., stt: bool | int | str = ..., strokesmooth: bool | int | str = ..., ssm: bool | int | str = ..., surfaceConformedBrushVertices: bool | int = ..., scv: bool | int = ..., tablet: bool | int = ..., tab: bool | int = ..., tangentOutline: bool | int = ..., to: bool | int = ..., toolOffProc: bool | int | str = ..., tfp: bool | int | str = ..., toolOnProc: bool | int | str = ..., top: bool | int | str = ..., updateerasesrf: bool | int = ..., ues: bool | int = ..., updaterefsrf: bool | int = ..., urs: bool | int = ..., useColorRamp: bool | int = ..., ucr: bool | int = ..., useMaxMinColor: bool | int = ..., umc: bool | int = ..., usepressure: bool | int = ..., up: bool | int = ..., value: bool | int | float = ..., val: bool | int | float = ..., whichTool: bool | int | str = ..., wst: bool | int | str = ..., worldRadius: bool | int | float = ..., wlR: bool | int | float = ...) -> Any: ...
def artSelect(*args) -> Any: ...
def artSelectCtx(*args, accopacity: bool | int = ..., aco: bool | int = ..., addselection: bool | int = ..., ads: bool | int = ..., afterStrokeCmd: bool | int | str = ..., asc: bool | int | str = ..., beforeStrokeCmd: bool | int | str = ..., bsc: bool | int | str = ..., brushalignment: bool | int = ..., bra: bool | int = ..., brushfeedback: bool | int = ..., brf: bool | int = ..., clear: bool | int = ..., clr: bool | int = ..., dragSlider: str = ..., dsl: str = ..., dynclonemode: bool | int = ..., dcm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandfilename: bool | int = ..., eef: bool | int = ..., exportaspectratio: bool | int | float = ..., ear: bool | int | float = ..., exportfilemode: bool | int | str = ..., efm: bool | int | str = ..., exportfilesave: str = ..., esf: str = ..., exportfilesizex: bool | int | int = ..., fsx: bool | int | int = ..., exportfilesizey: bool | int | int = ..., fsy: bool | int | int = ..., exportfiletype: bool | int | str = ..., eft: bool | int | str = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., importfileload: str = ..., ifl: str = ..., importfilemode: bool | int | str = ..., ifm: bool | int | str = ..., importreassign: bool | int = ..., irm: bool | int = ..., importthreshold: bool | int | float = ..., ift: bool | int | float = ..., lastRecorderCmd: bool | int | str = ..., lrc: bool | int | str = ..., lastStampName: bool | int | str = ..., lsn: bool | int | str = ..., lowerradius: bool | int | float = ..., lr: bool | int | float = ..., makeStroke: bool | int | int | list[int] = ..., mst: bool | int | int | list[int] = ..., mappressure: bool | int | str = ..., mp: bool | int | str = ..., name: str = ..., n: str = ..., opacity: bool | int | float = ..., op: bool | int | float = ..., outline: bool | int = ..., o: bool | int = ..., outwhilepaint: bool | int = ..., owp: bool | int = ..., paintmode: bool | int | str = ..., pm: bool | int | str = ..., paintoperationtype: bool | int | str = ..., pot: bool | int | str = ..., pickColor: bool | int = ..., pcm: bool | int = ..., pickValue: bool | int = ..., pv: bool | int = ..., playbackCursor: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., plc: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., playbackPressure: bool | int | float | list[float] = ..., plp: bool | int | float | list[float] = ..., preserveclonesource: bool | int = ..., pcs: bool | int = ..., profileShapeFile: bool | int | str = ..., psf: bool | int | str = ..., projective: bool | int = ..., prm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., record: bool | int = ..., rec: bool | int = ..., reflection: bool | int = ..., rn: bool | int = ..., reflectionaboutorigin: bool | int = ..., rno: bool | int = ..., reflectionaxis: bool | int | str = ..., ra: bool | int | str = ..., screenRadius: bool | int | float = ..., scR: bool | int | float = ..., selectall: bool | int = ..., sal: bool | int = ..., selectclonesource: bool | int = ..., scs: bool | int = ..., selectop: bool | int | str = ..., sop: bool | int | str = ..., showactive: bool | int = ..., sa: bool | int = ..., stampDepth: bool | int | float = ..., stD: bool | int | float = ..., stampProfile: bool | int | str = ..., stP: bool | int | str = ..., stampSpacing: bool | int | float = ..., stS: bool | int | float = ..., strokesmooth: bool | int | str = ..., ssm: bool | int | str = ..., surfaceConformedBrushVertices: bool | int = ..., scv: bool | int = ..., tablet: bool | int = ..., tab: bool | int = ..., tangentOutline: bool | int = ..., to: bool | int = ..., toggleall: bool | int = ..., tal: bool | int = ..., unselectall: bool | int = ..., ual: bool | int = ..., usepressure: bool | int = ..., up: bool | int = ..., worldRadius: bool | int | float = ..., wlR: bool | int | float = ...) -> Any: ...
def artSetPaint(*args) -> Any: ...
def artSetPaintCtx(*args, accopacity: bool | int = ..., aco: bool | int = ..., afterStrokeCmd: bool | int | str = ..., asc: bool | int | str = ..., beforeStrokeCmd: bool | int | str = ..., bsc: bool | int | str = ..., brushalignment: bool | int = ..., bra: bool | int = ..., brushfeedback: bool | int = ..., brf: bool | int = ..., clear: bool | int = ..., clr: bool | int = ..., dragSlider: str = ..., dsl: str = ..., dynclonemode: bool | int = ..., dcm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandfilename: bool | int = ..., eef: bool | int = ..., exportaspectratio: bool | int | float = ..., ear: bool | int | float = ..., exportfilemode: bool | int | str = ..., efm: bool | int | str = ..., exportfilesave: str = ..., esf: str = ..., exportfilesizex: bool | int | int = ..., fsx: bool | int | int = ..., exportfilesizey: bool | int | int = ..., fsy: bool | int | int = ..., exportfiletype: bool | int | str = ..., eft: bool | int | str = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., importfileload: str = ..., ifl: str = ..., importfilemode: bool | int | str = ..., ifm: bool | int | str = ..., importreassign: bool | int = ..., irm: bool | int = ..., lastRecorderCmd: bool | int | str = ..., lrc: bool | int | str = ..., lastStampName: bool | int | str = ..., lsn: bool | int | str = ..., lowerradius: bool | int | float = ..., lr: bool | int | float = ..., makeStroke: bool | int | int | list[int] = ..., mst: bool | int | int | list[int] = ..., mappressure: bool | int | str = ..., mp: bool | int | str = ..., name: str = ..., n: str = ..., objectsetnames: bool | int | str = ..., osn: bool | int | str = ..., opacity: bool | int | float = ..., op: bool | int | float = ..., outline: bool | int = ..., o: bool | int = ..., outwhilepaint: bool | int = ..., owp: bool | int = ..., paintmode: bool | int | str = ..., pm: bool | int | str = ..., paintoperationtype: bool | int | str = ..., pot: bool | int | str = ..., pickColor: bool | int = ..., pcm: bool | int = ..., pickValue: bool | int = ..., pv: bool | int = ..., playbackCursor: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., plc: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., playbackPressure: bool | int | float | list[float] = ..., plp: bool | int | float | list[float] = ..., preserveclonesource: bool | int = ..., pcs: bool | int = ..., profileShapeFile: bool | int | str = ..., psf: bool | int | str = ..., projective: bool | int = ..., prm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., record: bool | int = ..., rec: bool | int = ..., reflection: bool | int = ..., rn: bool | int = ..., reflectionaboutorigin: bool | int = ..., rno: bool | int = ..., reflectionaxis: bool | int | str = ..., ra: bool | int | str = ..., screenRadius: bool | int | float = ..., scR: bool | int | float = ..., selectclonesource: bool | int = ..., scs: bool | int = ..., setcolorfeedback: bool | int = ..., scf: bool | int = ..., setdisplaycvs: bool | int = ..., dcv: bool | int = ..., setopertype: bool | int | str = ..., sot: bool | int | str = ..., settomodify: bool | int | str = ..., stm: bool | int | str = ..., showactive: bool | int = ..., sa: bool | int = ..., stampDepth: bool | int | float = ..., stD: bool | int | float = ..., stampProfile: bool | int | str = ..., stP: bool | int | str = ..., stampSpacing: bool | int | float = ..., stS: bool | int | float = ..., strokesmooth: bool | int | str = ..., ssm: bool | int | str = ..., surfaceConformedBrushVertices: bool | int = ..., scv: bool | int = ..., tablet: bool | int = ..., tab: bool | int = ..., tangentOutline: bool | int = ..., to: bool | int = ..., usepressure: bool | int = ..., up: bool | int = ..., worldRadius: bool | int | float = ..., wlR: bool | int | float = ...) -> Any: ...
def artUserPaintCtx(*args, accopacity: bool | int = ..., aco: bool | int = ..., activeListChangedProc: bool | int | str = ..., alp: bool | int | str = ..., afterStrokeCmd: bool | int | str = ..., asc: bool | int | str = ..., alphaclamp: bool | int | str = ..., alc: bool | int | str = ..., alphaclamplower: bool | int | float = ..., acl: bool | int | float = ..., alphaclampupper: bool | int | float = ..., acu: bool | int | float = ..., attrSelected: bool | int | str = ..., asl: bool | int | str = ..., beforeStrokeCmd: bool | int | str = ..., bsc: bool | int | str = ..., brushalignment: bool | int = ..., bra: bool | int = ..., brushfeedback: bool | int = ..., brf: bool | int = ..., chunkCommand: bool | int | str = ..., cc: bool | int | str = ..., clamp: bool | int | str = ..., cl: bool | int | str = ..., clamplower: bool | int | float = ..., cll: bool | int | float = ..., clampupper: bool | int | float = ..., clu: bool | int | float = ..., clear: bool | int = ..., clr: bool | int = ..., colorAlphaValue: bool | int | float = ..., cl1: bool | int | float = ..., colorRGBAValue: bool | int | tuple[float, float, float, float] = ..., cl4: bool | int | tuple[float, float, float, float] = ..., colorRGBValue: bool | int | tuple[float, float, float] = ..., cl3: bool | int | tuple[float, float, float] = ..., colorRamp: bool | int | str = ..., cr: bool | int | str = ..., colorfeedback: bool | int = ..., cf: bool | int = ..., colorfeedbackOverride: bool | int = ..., cfo: bool | int = ..., colorrangelower: bool | int | float = ..., crl: bool | int | float = ..., colorrangeupper: bool | int | float = ..., cru: bool | int | float = ..., dataTypeIndex: bool | int | int = ..., dti: bool | int | int = ..., disablelighting: bool | int = ..., dl: bool | int = ..., dragSlider: str = ..., dsl: str = ..., duringStrokeCmd: bool | int | str = ..., dsk: bool | int | str = ..., dynclonemode: bool | int = ..., dcm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandfilename: bool | int = ..., eef: bool | int = ..., exportaspectratio: bool | int | float = ..., ear: bool | int | float = ..., exportfilemode: bool | int | str = ..., efm: bool | int | str = ..., exportfilesave: str = ..., esf: str = ..., exportfilesizex: bool | int | int = ..., fsx: bool | int | int = ..., exportfilesizey: bool | int | int = ..., fsy: bool | int | int = ..., exportfiletype: bool | int | str = ..., eft: bool | int | str = ..., filterNodes: bool | int = ..., fon: bool | int = ..., finalizeCmd: bool | int | str = ..., fc: bool | int | str = ..., fullpaths: bool | int = ..., fp: bool | int = ..., getArrayAttrCommand: bool | int | str = ..., gac: bool | int | str = ..., getSurfaceCommand: bool | int | str = ..., gsc: bool | int | str = ..., getValueCommand: bool | int | str = ..., gvc: bool | int | str = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., importfileload: str = ..., ifl: str = ..., importfilemode: bool | int | str = ..., ifm: bool | int | str = ..., importreassign: bool | int = ..., irm: bool | int = ..., initializeCmd: bool | int | str = ..., ic: bool | int | str = ..., interactiveUpdate: bool | int = ..., iu: bool | int = ..., lastRecorderCmd: bool | int | str = ..., lrc: bool | int | str = ..., lastStampName: bool | int | str = ..., lsn: bool | int | str = ..., lowerradius: bool | int | float = ..., lr: bool | int | float = ..., makeStroke: bool | int | int | list[int] = ..., mst: bool | int | int | list[int] = ..., mappressure: bool | int | str = ..., mp: bool | int | str = ..., maxvalue: bool | int | float = ..., mxv: bool | int | float = ..., minvalue: bool | int | float = ..., miv: bool | int | float = ..., name: str = ..., n: str = ..., objattrArray: bool | int | str = ..., oaa: bool | int | str = ..., opacity: bool | int | float = ..., op: bool | int | float = ..., outline: bool | int = ..., o: bool | int = ..., outwhilepaint: bool | int = ..., owp: bool | int = ..., paintNodeArray: bool | int | str = ..., pna: bool | int | str = ..., paintattrselected: str = ..., pas: str = ..., paintmode: bool | int | str = ..., pm: bool | int | str = ..., paintoperationtype: bool | int | str = ..., pot: bool | int | str = ..., pickColor: bool | int = ..., pcm: bool | int = ..., pickValue: bool | int = ..., pv: bool | int = ..., playbackCursor: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., plc: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., playbackPressure: bool | int | float | list[float] = ..., plp: bool | int | float | list[float] = ..., preserveclonesource: bool | int = ..., pcs: bool | int = ..., profileShapeFile: bool | int | str = ..., psf: bool | int | str = ..., projective: bool | int = ..., prm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., rampMaxColor: bool | int | tuple[float, float, float] = ..., rxc: bool | int | tuple[float, float, float] = ..., rampMinColor: bool | int | tuple[float, float, float] = ..., rmc: bool | int | tuple[float, float, float] = ..., record: bool | int = ..., rec: bool | int = ..., reflection: bool | int = ..., rn: bool | int = ..., reflectionaboutorigin: bool | int = ..., rno: bool | int = ..., reflectionaxis: bool | int | str = ..., ra: bool | int | str = ..., screenRadius: bool | int | float = ..., scR: bool | int | float = ..., selectclonesource: bool | int = ..., scs: bool | int = ..., selectedattroper: bool | int | str = ..., sao: bool | int | str = ..., setArrayValueCommand: bool | int | str = ..., sac: bool | int | str = ..., setValueCommand: bool | int | str = ..., svc: bool | int | str = ..., showactive: bool | int = ..., sa: bool | int = ..., stampDepth: bool | int | float = ..., stD: bool | int | float = ..., stampProfile: bool | int | str = ..., stP: bool | int | str = ..., stampSpacing: bool | int | float = ..., stS: bool | int | float = ..., strokesmooth: bool | int | str = ..., ssm: bool | int | str = ..., surfaceConformedBrushVertices: bool | int = ..., scv: bool | int = ..., tablet: bool | int = ..., tab: bool | int = ..., tangentOutline: bool | int = ..., to: bool | int = ..., toolCleanupCmd: bool | int | str = ..., tcc: bool | int | str = ..., toolOffProc: bool | int | str = ..., tfp: bool | int | str = ..., toolOnProc: bool | int | str = ..., top: bool | int | str = ..., toolSetupCmd: bool | int | str = ..., tsc: bool | int | str = ..., useColorRamp: bool | int = ..., ucr: bool | int = ..., useMaxMinColor: bool | int = ..., umc: bool | int = ..., usepressure: bool | int = ..., up: bool | int = ..., value: bool | int | float = ..., val: bool | int | float = ..., whichTool: bool | int | str = ..., wst: bool | int | str = ..., worldRadius: bool | int | float = ..., wlR: bool | int | float = ...) -> Any: ...
def arubaNurbsToPoly(*args, adaptive: bool | int = ..., adp: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., chordalDeviation: float = ..., cd: float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., localSpace: bool | int = ..., ls: bool | int = ..., maxChordLength: float = ..., mcl: float = ..., minChordLength: float = ..., icl: float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalTolerance: float = ..., ntl: float = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sampleType: int = ..., st: int = ..., samples: int = ..., smp: int = ..., tolerance: float = ..., tol: float = ..., useSurfaceShader: bool | int = ..., uss: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def assembly(*args, active: bool | int | str = ..., a: bool | int | str = ..., activeLabel: bool | int | str = ..., al: bool | int | str = ..., canCreate: bool | int | str = ..., cc: bool | int | str = ..., createOptionBoxProc: bool | int | str | Callable = ..., cob: bool | int | str | Callable = ..., createRepresentation: str = ..., cr: str = ..., defaultType: bool | int | str = ..., dt: bool | int | str = ..., deleteRepresentation: str = ..., dr: str = ..., deregister: str = ..., d: str = ..., edit: bool | int = ..., e: bool | int = ..., input: str = ..., isAType: bool | int | str = ..., isa: bool | int | str = ..., isTrackingMemberEdits: bool | int | str = ..., ite: bool | int | str = ..., label: bool | int | str = ..., lbl: bool | int | str = ..., listRepTypes: bool | int = ..., lrt: bool | int = ..., listRepTypesProc: bool | int | str | Callable = ..., lrp: bool | int | str | Callable = ..., listRepresentations: bool | int = ..., lr: bool | int = ..., listTypes: bool | int = ..., lt: bool | int = ..., name: str = ..., n: str = ..., newRepLabel: str = ..., nrl: str = ..., postCreateUIProc: bool | int | str | Callable = ..., aoc: bool | int | str | Callable = ..., proc: str | Callable = ..., prc: str | Callable = ..., query: bool | int = ..., q: bool | int = ..., renameRepresentation: str = ..., rnr: str = ..., repLabel: bool | int | str = ..., rl: bool | int | str = ..., repName: str = ..., rnm: str = ..., repNamespace: bool | int | str = ..., rns: bool | int | str = ..., repPostCreateUIProc: bool | int | str = ..., poc: bool | int | str = ..., repPreCreateUIProc: bool | int | str = ..., pec: bool | int | str = ..., repType: bool | int | str = ..., rt: bool | int | str = ..., repTypeLabel: bool | int | str = ..., rtl: bool | int | str = ..., repTypeLabelProc: bool | int | str | Callable = ..., rtp: bool | int | str | Callable = ..., type: bool | int | str = ..., typ: bool | int | str = ...) -> Any: ...
def assignCommand(*args, addDivider: str = ..., ad: str = ..., altModifier: bool | int = ..., alt: bool | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., command: bool | int | str | Callable = ..., c: bool | int | str | Callable = ..., commandModifier: bool | int = ..., cmd: bool | int = ..., ctrlModifier: bool | int = ..., ctl: bool | int = ..., data1: bool | int | str = ..., da1: bool | int | str = ..., data2: bool | int | str = ..., da2: bool | int | str = ..., data3: bool | int | str = ..., da3: bool | int | str = ..., delete: int = ..., d: int = ..., dividerString: bool | int | str = ..., ds: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., enableCommandRepeat: bool | int = ..., ecr: bool | int = ..., factorySettings: bool | int = ..., fs: bool | int = ..., index: int = ..., i: int = ..., keyArray: bool | int = ..., ka: bool | int = ..., keyString: bool | int | str = ..., k: bool | int | str = ..., keyUp: bool | int = ..., kup: bool | int = ..., name: bool | int = ..., n: bool | int = ..., numDividersPreceding: bool | int | int = ..., ndp: bool | int | int = ..., numElements: bool | int = ..., num: bool | int = ..., optionModifier: bool | int = ..., opt: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sortByKey: bool | int = ..., sbk: bool | int = ..., sourceUserCommands: bool | int = ..., suc: bool | int = ...) -> Any: ...
def assignInputDevice(*args, clutch: str = ..., c: str = ..., continuous: bool | int = ..., ct: bool | int = ..., device: str = ..., d: str = ..., immediate: bool | int = ..., im: bool | int = ..., multiple: bool | int = ..., m: bool | int = ...) -> Any: ...
def assignViewportFactories(*args, edit: bool | int = ..., e: bool | int = ..., materialFactory: bool | int | str = ..., mf: bool | int | str = ..., nodeType: bool | int | str = ..., nt: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., textureFactory: bool | int | str = ..., tf: bool | int | str = ...) -> Any: ...

attachCache: Callable
def attachCurve(*args, blendBias: bool | int | float = ..., bb: bool | int | float = ..., blendKnotInsertion: bool | int = ..., bki: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepMultipleKnots: bool | int = ..., kmk: bool | int = ..., method: bool | int | int = ..., m: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float = ..., p: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reverse1: bool | int = ..., rv1: bool | int = ..., reverse2: bool | int = ..., rv2: bool | int = ...) -> Any: ...
def attachDeviceAttr(*args, attribute: str | list[str] = ..., at: str | list[str] = ..., axis: str = ..., ax: str = ..., camera: bool | int = ..., cam: bool | int = ..., cameraRotate: bool | int = ..., cr: bool | int = ..., cameraTranslate: bool | int = ..., ct: bool | int = ..., clutch: str = ..., c: str = ..., device: str = ..., d: str = ..., selection: bool | int = ..., sl: bool | int = ...) -> Any: ...

attachFluidCache: Callable
attachGeometryCache: Callable
attachNclothCache: Callable
def attachSurface(*args, blendBias: bool | int | float = ..., bb: bool | int | float = ..., blendKnotInsertion: bool | int = ..., bki: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., directionU: bool | int = ..., du: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepMultipleKnots: bool | int = ..., kmk: bool | int = ..., method: bool | int | int = ..., m: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float = ..., p: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reverse1: bool | int = ..., rv1: bool | int = ..., reverse2: bool | int = ..., rv2: bool | int = ..., swap1: bool | int = ..., sw1: bool | int = ..., swap2: bool | int = ..., sw2: bool | int = ..., twist: bool | int = ..., tw: bool | int = ...) -> Any: ...
def attrColorSliderGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., attrNavDecision: bool | int | tuple[str, str] = ..., attribute: bool | int | str = ..., at: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., hsvValue: bool | int | tuple[float, float, float] = ..., hsv: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rgbValue: bool | int | tuple[float, float, float] = ..., rgb: bool | int | tuple[float, float, float] = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., showButton: bool | int = ..., sb: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def attrCompatibility(*args, addAttr: bool | int = ..., a: bool | int = ..., clear: bool | int = ..., clr: bool | int = ..., dumpTable: bool | int = ..., dmp: bool | int = ..., enable: bool | int = ..., e: bool | int = ..., nodeRename: str = ..., nr: str = ..., pluginNode: str = ..., pn: str = ..., removeAttr: bool | int = ..., rm: bool | int = ..., renameAttr: str = ..., r: str = ..., type: str = ..., typ: str = ..., version: str = ..., v: str = ...) -> Any: ...
def attrControlGrp(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., attribute: bool | int | str = ..., a: bool | int | str = ..., changeCommand: bool | int | str | Callable = ..., cc: bool | int | str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., handlesAttribute: bool | int | str = ..., ha: bool | int | str = ..., hideMapButton: bool | int = ..., hmb: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def attrEnumOptionMenu(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., attribute: str = ..., at: str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., enumeratedItem: tuple[int, str] | list[tuple[int, str]] = ..., ei: tuple[int, str] | list[tuple[int, str]] = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def attrEnumOptionMenuGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., attribute: str = ..., at: str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., enumeratedItem: tuple[int, str] | list[tuple[int, str]] = ..., ei: tuple[int, str] | list[tuple[int, str]] = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def attrFieldGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., attribute: bool | int | str = ..., at: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extraButton: bool | int = ..., eb: bool | int = ..., extraButtonCommand: str | Callable = ..., ebc: str | Callable = ..., extraButtonIcon: bool | int | str = ..., ebi: bool | int | str = ..., extraLabel: bool | int | str = ..., el: bool | int | str = ..., forceAddMapButton: bool | int = ..., fmb: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., hideMapButton: bool | int = ..., hmb: bool | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfFields: int = ..., nf: int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., precision: int = ..., pre: int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | float = ..., s: bool | int | float = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def attrFieldSliderGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., attribute: bool | int | str = ..., at: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extraButton: bool | int = ..., eb: bool | int = ..., extraButtonCommand: str | Callable = ..., ebc: str | Callable = ..., extraButtonIcon: bool | int | str = ..., ebi: bool | int | str = ..., fieldMaxValue: bool | int | float = ..., fmx: bool | int | float = ..., fieldMinValue: bool | int | float = ..., fmn: bool | int | float = ..., fieldStep: bool | int | float = ..., fs: bool | int | float = ..., forceAddMapButton: bool | int = ..., fmb: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., hideMapButton: bool | int = ..., hmb: bool | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., precision: int = ..., pre: int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., sliderMaxValue: bool | int | float = ..., smx: bool | int | float = ..., sliderMinValue: bool | int | float = ..., smn: bool | int | float = ..., sliderStep: bool | int | float = ..., ss: bool | int | float = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | float = ..., s: bool | int | float = ..., useTemplate: str = ..., ut: str = ..., vertical: bool | int = ..., vr: bool | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def attrNavigationControlGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., attrNavDecision: bool | int | tuple[str, str] = ..., attribute: bool | int | str = ..., at: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., connectAttrToDropped: bool | int | str | Callable = ..., cad: bool | int | str | Callable = ..., connectNodeToDropped: bool | int | str | Callable = ..., cnd: bool | int | str | Callable = ..., connectToExisting: bool | int | str | Callable = ..., ce: bool | int | str | Callable = ..., createNew: bool | int | str | Callable = ..., cn: bool | int | str | Callable = ..., defaultTraversal: bool | int | str | Callable = ..., dtv: bool | int | str | Callable = ..., defineTemplate: str = ..., dt: str = ..., delete: bool | int | str = ..., disconnect: bool | int | str | Callable = ..., d: bool | int | str | Callable = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extraButton: bool | int = ..., eb: bool | int = ..., extraButtonCommand: str | Callable = ..., ebc: str | Callable = ..., extraButtonIcon: bool | int | str = ..., ebi: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., ignore: bool | int | str | Callable = ..., i: bool | int | str | Callable = ..., ignoreNotSupported: bool | int = ..., ins: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., noIgnorableMenu: bool | int = ..., nim: bool | int = ..., noKeyableMenu: bool | int = ..., nkm: bool | int = ..., notIgnorableMenu: bool | int = ..., notKeyableMenu: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., relatedNodes: bool | int | str | Callable = ..., ren: bool | int | str | Callable = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., unignore: bool | int | str | Callable = ..., u: bool | int | str | Callable = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def attributeInfo(*args, allAttributes: bool | int = ..., all: bool | int = ..., bool: bool | int = ..., b: bool | int = ..., enumerated: bool | int = ..., e: bool | int = ..., hidden: bool | int = ..., h: bool | int = ..., inherited: bool | int = ..., internal: bool | int = ..., i: bool | int = ..., leaf: bool | int = ..., l: bool | int = ..., logicalAnd: bool | int = ..., multi: bool | int = ..., m: bool | int = ..., short: bool | int = ..., s: bool | int = ..., type: str = ..., t: str = ..., userInterface: bool | int = ..., ui: bool | int = ..., writable: bool | int = ..., w: bool | int = ...) -> Any: ...
def attributeMenu(*args, beginMenu: bool | int = ..., beg: bool | int = ..., editor: str = ..., edt: str = ..., finishMenu: bool | int = ..., fsh: bool | int = ..., inputs: bool | int = ..., inp: bool | int = ..., plug: str = ..., p: str = ..., regPulldownMenuCommand: str = ..., rpm: str = ..., unregPulldownMenuCommand: int = ..., upm: int = ...) -> Any: ...
def attributeName(*args, leaf: bool | int = ..., lf: bool | int = ..., long: bool | int = ..., l: bool | int = ..., nice: bool | int = ..., n: bool | int = ..., short: bool | int = ..., s: bool | int = ...) -> Any: ...
def attributeQuery(*args, affectsAppearance: bool | int = ..., aa: bool | int = ..., affectsWorldspace: bool | int = ..., aws: bool | int = ..., attributeType: bool | int = ..., at: bool | int = ..., cachedInternally: bool | int = ..., ci: bool | int = ..., categories: bool | int = ..., ct: bool | int = ..., channelBox: bool | int = ..., ch: bool | int = ..., connectable: bool | int = ..., c: bool | int = ..., enum: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., hidden: bool | int = ..., h: bool | int = ..., indeterminant: bool | int = ..., idt: bool | int = ..., indexMatters: bool | int = ..., im: bool | int = ..., internal: bool | int = ..., i: bool | int = ..., internalGet: bool | int = ..., ig: bool | int = ..., internalSet: bool | int = ..., keyable: bool | int = ..., k: bool | int = ..., listChildren: bool | int = ..., lc: bool | int = ..., listDefault: bool | int = ..., ld: bool | int = ..., listEnum: bool | int = ..., le: bool | int = ..., listParent: bool | int = ..., lp: bool | int = ..., listSiblings: bool | int = ..., ls: bool | int = ..., localizedListEnum: bool | int = ..., lz: bool | int = ..., longName: bool | int = ..., ln: bool | int = ..., maxExists: bool | int = ..., mxe: bool | int = ..., maximum: bool | int = ..., max: bool | int = ..., message: bool | int = ..., msg: bool | int = ..., minExists: bool | int = ..., mne: bool | int = ..., minimum: bool | int = ..., min: bool | int = ..., multi: bool | int = ..., m: bool | int = ..., niceName: bool | int = ..., nn: bool | int = ..., node: str = ..., n: str = ..., numberOfChildren: bool | int = ..., nc: bool | int = ..., range: bool | int = ..., r: bool | int = ..., rangeExists: bool | int = ..., re: bool | int = ..., readable: bool | int = ..., rd: bool | int = ..., renderSource: bool | int = ..., rs: bool | int = ..., shortName: bool | int = ..., sn: bool | int = ..., softMax: bool | int = ..., smx: bool | int = ..., softMaxExists: bool | int = ..., sxe: bool | int = ..., softMin: bool | int = ..., smn: bool | int = ..., softMinExists: bool | int = ..., sme: bool | int = ..., softRange: bool | int = ..., s: bool | int = ..., softRangeExists: bool | int = ..., se: bool | int = ..., storable: bool | int = ..., st: bool | int = ..., type: str = ..., typ: str = ..., typeExact: str = ..., tex: str = ..., usedAsColor: bool | int = ..., uac: bool | int = ..., usedAsFilename: bool | int = ..., uaf: bool | int = ..., usesMultiBuilder: bool | int = ..., umb: bool | int = ..., worldspace: bool | int = ..., ws: bool | int = ..., writable: bool | int = ..., w: bool | int = ...) -> Any: ...
def audioTrack(*args, edit: bool | int = ..., e: bool | int = ..., insertTrack: int = ..., it: int = ..., lock: bool | int = ..., l: bool | int = ..., mute: bool | int = ..., m: bool | int = ..., numTracks: bool | int | int = ..., nt: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., removeEmptyTracks: bool | int = ..., ret: bool | int = ..., removeTrack: int = ..., rt: int = ..., solo: bool | int = ..., so: bool | int = ..., swapTracks: tuple[int, int] = ..., st: tuple[int, int] = ..., title: bool | int | str = ..., t: bool | int | str = ..., track: bool | int | int = ..., tr: bool | int | int = ...) -> Any: ...
def autoKeyframe(*args, addAttr: str = ..., aa: str = ..., characterOption: bool | int | str = ..., co: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., listAttr: bool | int = ..., lsa: bool | int = ..., noReset: bool | int = ..., nr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., state: bool | int = ..., st: bool | int = ...) -> Any: ...
def autoPlace(*args, useMouse: bool | int = ..., um: bool | int = ...) -> Any: ...
def autoSave(*args, destination: bool | int | int = ..., dst: bool | int | int = ..., destinationFolder: bool | int = ..., df: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., folder: bool | int | str = ..., fol: bool | int | str = ..., interval: bool | int | float = ..., int: bool | int | float = ..., limitBackups: bool | int = ..., lim: bool | int = ..., maxBackups: bool | int | int = ..., max: bool | int | int = ..., perform: bool | int = ..., p: bool | int = ..., prompt: bool | int = ..., prm: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def backgroundEvaluationManager(*args, interrupt: bool | int = ..., i: bool | int = ..., mode: bool | int | str = ..., m: bool | int | str = ..., pause: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., resume: bool | int = ..., r: bool | int = ...) -> Any: ...
def bakeClip(*args, blend: tuple[int, int] = ..., b: tuple[int, int] = ..., clipIndex: int | list[int] = ..., ci: int | list[int] = ..., keepOriginals: bool | int = ..., k: bool | int = ..., name: str = ..., n: str = ...) -> Any: ...
def bakeDeformer(*args, colorizeSkeleton: bool | int = ..., cs: bool | int = ..., customRangeOfMotion: str | tuple[float, float] | tuple[float] = ..., rom: str | tuple[float, float] | tuple[float] = ..., dstMeshName: str = ..., dm: str = ..., dstSkeletonName: str = ..., ds: str = ..., hierarchy: bool | int = ..., hi: bool | int = ..., influences: str = ..., i: str = ..., maxInfluences: int = ..., mi: int = ..., pruneWeights: float = ..., pw: float = ..., smoothWeights: int = ..., sw: int = ..., srcMeshName: str = ..., sm: str = ..., srcSkeletonName: str = ..., ss: str = ...) -> Any: ...
def bakePartialHistory(*args, allShapes: bool | int = ..., all: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., postSmooth: bool | int = ..., nps: bool | int = ..., preCache: bool | int = ..., pc: bool | int = ..., preDeformers: bool | int = ..., pre: bool | int = ..., prePostDeformers: bool | int = ..., ppt: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def bakeResults(*args, animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., bakeOnOverrideLayer: bool | int = ..., bol: bool | int = ..., controlPoints: bool | int = ..., cp: bool | int = ..., destinationLayer: str = ..., dl: str = ..., disableImplicitControl: bool | int = ..., dic: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., hierarchy: str = ..., hi: str = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., minimizeRotation: bool | int = ..., mr: bool | int = ..., oversamplingRate: int = ..., osr: int = ..., preserveOutsideKeys: bool | int = ..., pok: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeBakedAnimFromLayer: bool | int = ..., rba: bool | int = ..., removeBakedAttributeFromLayer: bool | int = ..., ral: bool | int = ..., resolveWithoutLayer: str | list[str] = ..., rwl: str | list[str] = ..., sampleBy: int | float = ..., sb: int | float = ..., shape: bool | int = ..., s: bool | int = ..., simulation: bool | int = ..., sm: bool | int = ..., smart: tuple[bool | int, float] = ..., sr: tuple[bool | int, float] = ..., sparseAnimCurveBake: bool | int = ..., sac: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ...) -> Any: ...
def bakeSimulation(*args, animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., bakeOnOverrideLayer: bool | int = ..., bol: bool | int = ..., controlPoints: bool | int = ..., cp: bool | int = ..., destinationLayer: str = ..., dl: str = ..., disableImplicitControl: bool | int = ..., dic: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., hierarchy: str = ..., hi: str = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., minimizeRotation: bool | int = ..., mr: bool | int = ..., oversamplingRate: int = ..., osr: int = ..., preserveOutsideKeys: bool | int = ..., pok: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeBakedAnimFromLayer: bool | int = ..., rba: bool | int = ..., removeBakedAttributeFromLayer: bool | int = ..., ral: bool | int = ..., resolveWithoutLayer: str | list[str] = ..., rwl: str | list[str] = ..., sampleBy: int | float = ..., sb: int | float = ..., shape: bool | int = ..., s: bool | int = ..., simulation: bool | int = ..., sm: bool | int = ..., smart: tuple[bool | int, float] = ..., sr: tuple[bool | int, float] = ..., sparseAnimCurveBake: bool | int = ..., sac: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ...) -> Any: ...
def baseTemplate(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fileName: bool | int | str = ..., fn: bool | int | str = ..., force: bool | int = ..., f: bool | int = ..., load: bool | int = ..., l: bool | int = ..., matchFile: bool | int | str = ..., mf: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., silent: bool | int = ..., si: bool | int = ..., unload: bool | int = ..., u: bool | int = ..., viewList: bool | int | str = ..., vl: bool | int | str = ...) -> Any: ...
def baseView(*args, edit: bool | int = ..., e: bool | int = ..., itemInfo: bool | int | str = ..., ii: bool | int | str = ..., itemList: bool | int = ..., il: bool | int = ..., query: bool | int = ..., q: bool | int = ..., viewDescription: bool | int = ..., vd: bool | int = ..., viewLabel: bool | int = ..., vb: bool | int = ..., viewList: bool | int = ..., vl: bool | int = ..., viewName: bool | int | str = ..., vn: bool | int | str = ...) -> Any: ...
def batchRender(*args, filename: str = ..., f: str = ..., melCommand: str = ..., mc: str = ..., numProcs: int = ..., n: int = ..., preRenderCommand: str = ..., prc: str = ..., remoteRenderMachine: str = ..., rm: str = ..., renderCommandOptions: str = ..., rco: str = ..., showImage: bool | int = ..., si: bool | int = ..., status: str = ..., st: str = ..., useRemoteRender: bool | int = ..., um: bool | int = ..., useStandalone: bool | int = ..., us: bool | int = ..., verbosity: int = ..., v: int = ...) -> Any: ...
def bevel(*args, bevelShapeType: bool | int | int = ..., bst: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cornerType: bool | int | int = ..., ct: bool | int | int = ..., depth: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., extrudeDepth: bool | int | float = ..., ed: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., joinSurfaces: bool | int = ..., js: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfSides: bool | int | int = ..., ns: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., width: bool | int | float = ..., w: bool | int | float = ...) -> Any: ...
def bevelPlus(*args, bevelInside: bool | int = ..., bin: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., capSides: bool | int | int = ..., cap: bool | int | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., depth: float = ..., d: float = ..., edit: bool | int = ..., e: bool | int = ..., extrudeDepth: float = ..., ed: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., innerStyle: bool | int | int = ..., joinSurfaces: bool | int = ..., js: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., normalsOutwards: bool | int = ..., no: bool | int = ..., numberOfSides: bool | int | int = ..., ns: bool | int | int = ..., outerStyle: bool | int | int = ..., os: bool | int | int = ..., polyOutChordHeight: float = ..., cht: float = ..., polyOutChordHeightRatio: float = ..., chr: float = ..., polyOutCount: int = ..., poc: int = ..., polyOutCurveSamples: int = ..., pcs: int = ..., polyOutCurveType: int = ..., pct: int = ..., polyOutExtrusionSamples: int = ..., pes: int = ..., polyOutExtrusionType: int = ..., pet: int = ..., polyOutMethod: int = ..., pom: int = ..., polyOutUseChordHeight: bool | int = ..., uch: bool | int = ..., polyOutUseChordHeightRatio: bool | int = ..., ucr: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., tolerance: float = ..., tol: float = ..., width: float = ..., w: float = ...) -> Any: ...
def bezierAnchorPreset(*args, preset: int = ..., p: int = ...) -> Any: ...
def bezierAnchorState(*args, even: bool | int = ..., ev: bool | int = ..., smooth: bool | int = ..., sm: bool | int = ...) -> Any: ...
def bezierCurveToNurbs(*args) -> Any: ...
def bezierInfo(*args, anchorFromCV: int = ..., afc: int = ..., cvFromAnchor: int = ..., cfa: int = ..., isAnchorSelected: bool | int = ..., ias: bool | int = ..., isTangentSelected: bool | int = ..., its: bool | int = ..., onlyAnchorsSelected: bool | int = ..., oas: bool | int = ..., onlyTangentsSelected: bool | int = ..., ots: bool | int = ...) -> Any: ...
def binMembership(*args, addToBin: str = ..., add: str = ..., exists: str = ..., ex: str = ..., inheritBinsFromNodes: str = ..., ibn: str = ..., isValidBinName: str = ..., ivn: str = ..., listBins: bool | int = ..., lb: bool | int = ..., makeExclusive: str = ..., mke: str = ..., notifyChanged: bool | int = ..., nfc: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeFromBin: str = ..., rm: str = ...) -> Any: ...
def bindSkin(*args, byClosestPoint: bool | int = ..., bcp: bool | int = ..., byPartition: bool | int = ..., bp: bool | int = ..., colorJoints: bool | int = ..., cj: bool | int = ..., delete: bool | int = ..., d: bool | int = ..., doNotDescend: bool | int = ..., dnd: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., name: str = ..., n: str = ..., partition: str = ..., p: str = ..., query: bool | int = ..., q: bool | int = ..., toAll: bool | int = ..., ta: bool | int = ..., toSelectedBones: bool | int = ..., tsb: bool | int = ..., toSkeleton: bool | int = ..., ts: bool | int = ..., unbind: bool | int = ..., ub: bool | int = ..., unbindKeepHistory: bool | int = ..., ubk: bool | int = ..., unlock: bool | int = ..., ul: bool | int = ...) -> Any: ...
def blend(*args, autoDirection: bool | int = ..., ad: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., crvsInFirstRail: int = ..., cfr: int = ..., edit: bool | int = ..., e: bool | int = ..., flipLeft: bool | int = ..., fl: bool | int = ..., flipRight: bool | int = ..., fr: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., leftParameter: float = ..., lp: float = ..., multipleKnots: bool | int = ..., mk: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., positionTolerance: float = ..., pt: float = ..., query: bool | int = ..., q: bool | int = ..., rightParameter: float = ..., rp: float = ..., tangentTolerance: float = ..., tt: float = ...) -> Any: ...
def blend2(*args, autoAnchor: bool | int = ..., aa: bool | int = ..., autoNormal: bool | int = ..., an: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., crvsInFirstRail: bool | int | int = ..., cfr: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., flipLeftNormal: bool | int = ..., fln: bool | int = ..., flipRightNormal: bool | int = ..., frn: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., leftAnchor: bool | int | float = ..., la: bool | int | float = ..., leftEnd: bool | int | float = ..., le: bool | int | float = ..., leftStart: bool | int | float = ..., ls: bool | int | float = ..., multipleKnots: bool | int = ..., mk: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., positionTolerance: bool | int | float = ..., pt: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., reverseLeft: bool | int = ..., rvl: bool | int = ..., reverseRight: bool | int = ..., rvr: bool | int = ..., rightAnchor: bool | int | float = ..., ra: bool | int | float = ..., rightEnd: bool | int | float = ..., re: bool | int | float = ..., rightStart: bool | int | float = ..., rs: bool | int | float = ..., tangentTolerance: bool | int | float = ..., tt: bool | int | float = ...) -> Any: ...
def blendCtx(*args, activeNodes: bool | int = ..., anq: bool | int = ..., autoCreate: bool | int = ..., ac: bool | int = ..., autoDirection: bool | int = ..., ad: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., crvsInFirstRail: int = ..., cfr: int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., flipLeft: bool | int = ..., fl: bool | int = ..., flipRight: bool | int = ..., fr: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., immediate: bool | int = ..., im: bool | int = ..., leftParameter: float = ..., lp: float = ..., multipleKnots: bool | int = ..., mk: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., positionTolerance: float = ..., pt: float = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., rs: bool | int = ..., rightParameter: float = ..., rp: float = ..., tangentTolerance: float = ..., tt: float = ..., toolNode: bool | int = ..., tnq: bool | int = ..., useGlobalTol: bool | int = ..., ugt: bool | int = ...) -> Any: ...
def blendShape(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., automatic: bool | int = ..., at: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., copyDelta: tuple[int, int, int] = ..., cd: tuple[int, int, int] = ..., copyInBetweenDelta: tuple[int, int, int, int] = ..., cid: tuple[int, int, int, int] = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., envelope: bool | int | float = ..., en: bool | int | float = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., export: str = ..., ep: str = ..., exportTarget: tuple[int, int] | list[tuple[int, int]] = ..., et: tuple[int, int] | list[tuple[int, int]] = ..., flipTarget: tuple[int, int] | list[tuple[int, int]] = ..., ft: tuple[int, int] | list[tuple[int, int]] = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., inBetween: bool | int = ..., ib: bool | int = ..., inBetweenIndex: int = ..., ibi: int = ..., inBetweenType: str = ..., ibt: str = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., ip: str = ..., mergeSource: int | list[int] = ..., mgs: int | list[int] = ..., mergeTarget: int = ..., mgt: int = ..., mirrorDirection: int = ..., md: int = ..., mirrorTarget: tuple[int, int] | list[tuple[int, int]] = ..., mt: tuple[int, int] | list[tuple[int, int]] = ..., name: str = ..., n: str = ..., normalizationGroups: bool | int = ..., ng: bool | int = ..., origin: str = ..., o: str = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., resetTargetDelta: tuple[int, int] | list[tuple[int, int]] = ..., rtd: tuple[int, int] | list[tuple[int, int]] = ..., split: bool | int = ..., sp: bool | int = ..., suppressDialog: bool | int = ..., sd: bool | int = ..., symmetryAxis: bool | int | str = ..., sa: bool | int | str = ..., symmetryEdge: bool | int | str | list[str] = ..., se: bool | int | str | list[str] = ..., symmetrySpace: bool | int | int = ..., ss: bool | int | int = ..., tangentSpace: bool | int = ..., ts: bool | int = ..., target: bool | int | tuple[str, int, str, float] | list[tuple[str, int, str, float]] = ..., t: bool | int | tuple[str, int, str, float] | list[tuple[str, int, str, float]] = ..., topologyCheck: bool | int = ..., tc: bool | int = ..., transform: bool | int | str = ..., tr: bool | int | str = ..., useComponentTags: bool | int = ..., uct: bool | int = ..., weight: bool | int | tuple[int, float] | list[tuple[int, float]] = ..., w: bool | int | tuple[int, float] | list[tuple[int, float]] = ..., weightCount: bool | int | int = ..., wc: bool | int | int = ...) -> Any: ...
def blendShapeEditor(*args, control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., stateString: bool | int = ..., sts: bool | int = ..., targetControlList: bool | int = ..., tcl: bool | int = ..., targetList: bool | int = ..., tl: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ..., verticalSliders: bool | int = ..., vs: bool | int = ...) -> Any: ...
def blendShapePanel(*args, blendShapeEditor: bool | int = ..., be: bool | int = ..., control: bool | int = ..., ctl: bool | int = ..., copy: str = ..., cp: str = ..., createString: bool | int = ..., cs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., editString: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., init: bool | int = ..., isUnique: bool | int = ..., iu: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., menuBarRepeatLast: bool | int = ..., mrl: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., needsInit: bool | int = ..., ni: bool | int = ..., parent: str = ..., p: str = ..., popupMenuProcedure: bool | int | str | Callable = ..., pmp: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., replacePanel: str = ..., rp: str = ..., tearOff: bool | int = ..., to: bool | int = ..., tearOffCopy: str = ..., toc: str = ..., tearOffRestore: bool | int = ..., tor: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def blendTwoAttr(*args, attribute: str | list[str] = ..., at: str | list[str] = ..., attribute0: bool | int | str = ..., at0: bool | int | str = ..., attribute1: bool | int | str = ..., at1: bool | int | str = ..., blender: bool | int | str = ..., bl: bool | int | str = ..., controlPoints: bool | int = ..., cp: bool | int = ..., driver: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., time: str | tuple[float, float] | tuple[float] = ..., t: str | tuple[float, float] | tuple[float] = ...) -> Any: ...
def blindDataType(*args, dataType: str | list[str] = ..., dt: str | list[str] = ..., longDataName: str | list[str] = ..., ldn: str | list[str] = ..., longNames: bool | int = ..., ln: bool | int = ..., query: bool | int = ..., q: bool | int = ..., shortDataName: str | list[str] = ..., sdn: str | list[str] = ..., shortNames: bool | int = ..., sn: bool | int = ..., typeId: int = ..., id: int = ..., typeNames: bool | int = ..., tn: bool | int = ...) -> Any: ...
def boneLattice(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., bicep: bool | int | float = ..., bi: bool | int | float = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., joint: bool | int | str = ..., j: bool | int | str = ..., lengthIn: bool | int | float = ..., li: bool | int | float = ..., lengthOut: bool | int | float = ..., lo: bool | int | float = ..., name: str = ..., n: str = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., split: bool | int = ..., sp: bool | int = ..., transform: str = ..., t: str = ..., tricep: bool | int | float = ..., tr: bool | int | float = ..., useComponentTags: bool | int = ..., uct: bool | int = ..., widthLeft: bool | int | float = ..., wl: bool | int | float = ..., widthRight: bool | int | float = ..., wr: bool | int | float = ...) -> Any: ...
def boundary(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endPoint: bool | int = ..., ep: bool | int = ..., endPointTolerance: bool | int | float = ..., ept: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., order: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ...) -> Any: ...
def boxDollyCtx(*args, alternateContext: bool | int = ..., ac: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., toolName: bool | int | str = ..., tn: bool | int | str = ...) -> Any: ...
def boxZoomCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., zoomScale: bool | int | float = ..., zs: bool | int | float = ...) -> Any: ...
def bufferCurve(*args, animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., controlPoints: bool | int = ..., cp: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., hierarchy: str = ..., hi: str = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., overwrite: bool | int = ..., ov: bool | int = ..., query: bool | int = ..., q: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., swap: bool | int = ..., sw: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., useReferencedCurve: bool | int = ..., urc: bool | int = ...) -> Any: ...
def buildBookmarkMenu(*args, editor: str = ..., ed: str = ..., type: str = ..., typ: str = ...) -> Any: ...
def buildKeyframeMenu(*args) -> Any: ...

buildSendToBackburnerDialog: Callable
def button(*args, actOnPress: bool | int = ..., aop: bool | int = ..., actionIsSubstitute: bool | int = ..., ais: bool | int = ..., align: bool | int | str = ..., al: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., command: bool | int | str | Callable = ..., c: bool | int | str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., recomputeSize: bool | int = ..., rs: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def buttonManip(*args, icon: str = ..., i: str = ...) -> Any: ...

cacheAppend: Callable
cacheAppendOpt: Callable
def cacheEvaluator(*args, **kwargs): ...
def cacheFile(*args, appendFrame: bool | int = ..., apf: bool | int = ..., attachFile: bool | int = ..., af: bool | int = ..., cacheFileNode: str | list[str] = ..., cfn: str | list[str] = ..., cacheFormat: bool | int | str = ..., cf: bool | int | str = ..., cacheInfo: bool | int | str | list[str] = ..., ci: bool | int | str | list[str] = ..., cacheableAttrs: bool | int | str = ..., cat: bool | int | str = ..., cacheableNode: str | list[str] = ..., cnd: str | list[str] = ..., channelIndex: bool | int = ..., chi: bool | int = ..., channelName: bool | int | str | list[str] = ..., cnm: bool | int | str | list[str] = ..., convertPc2: bool | int = ..., pc2: bool | int = ..., createCacheNode: bool | int = ..., ccn: bool | int = ..., creationChannelName: str | list[str] = ..., cch: str | list[str] = ..., dataSize: bool | int = ..., dsz: bool | int = ..., deleteCachedFrame: bool | int = ..., dcf: bool | int = ..., descriptionFileName: bool | int = ..., dfn: bool | int = ..., directory: bool | int | str = ..., dir: bool | int | str = ..., doubleToFloat: bool | int = ..., dtf: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endTime: int | float = ..., et: int | float = ..., fileName: bool | int | str = ..., f: bool | int | str = ..., format: str = ..., fm: str = ..., geometry: bool | int = ..., gm: bool | int = ..., inAttr: str | list[str] = ..., ia: str | list[str] = ..., inTangent: str = ..., it: str = ..., interpEndTime: int | float = ..., iet: int | float = ..., interpStartTime: int | float = ..., ist: int | float = ..., noBackup: bool | int = ..., nb: bool | int = ..., outAttr: str | list[str] = ..., oa: str | list[str] = ..., outTangent: str = ..., ot: str = ..., pc2File: str = ..., pcf: str = ..., pointCount: bool | int = ..., pc: bool | int = ..., points: str | list[str] = ..., pts: str | list[str] = ..., pointsAndNormals: str | list[str] = ..., pan: str | list[str] = ..., prefix: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., refresh: bool | int = ..., r: bool | int = ..., replaceCachedFrame: bool | int = ..., rcf: bool | int = ..., replaceWithoutSimulating: bool | int = ..., rws: bool | int = ..., runupFrames: bool | int | int = ..., rf: bool | int | int = ..., sampleMultiplier: bool | int | int = ..., spm: bool | int | int = ..., simulationRate: bool | int | int | float = ..., smr: bool | int | int | float = ..., singleCache: bool | int = ..., sch: bool | int = ..., startTime: int | float = ..., st: int | float = ..., staticCache: bool | int = ..., sc: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def cacheFileCombine(*args, cacheIndex: bool | int = ..., ci: bool | int = ..., channelName: str | list[str] = ..., cnm: str | list[str] = ..., connectCache: bool | int | str = ..., cc: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., keepWeights: bool | int = ..., kw: bool | int = ..., layerNode: bool | int = ..., ln: bool | int = ..., nextAvailable: bool | int = ..., na: bool | int = ..., object: bool | int | str = ..., obj: bool | int | str = ..., objectIndex: bool | int | int = ..., oi: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def cacheFileMerge(*args, edit: bool | int = ..., e: bool | int = ..., endTime: int | float = ..., et: int | float = ..., geometry: bool | int = ..., g: bool | int = ..., query: bool | int = ..., q: bool | int = ..., startTime: int | float = ..., st: int | float = ...) -> Any: ...
def cacheFileTrack(*args, edit: bool | int = ..., e: bool | int = ..., insertTrack: int = ..., it: int = ..., lock: bool | int = ..., l: bool | int = ..., mute: bool | int = ..., m: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeEmptyTracks: bool | int = ..., ret: bool | int = ..., removeTrack: int = ..., rt: int = ..., solo: bool | int = ..., so: bool | int = ..., track: bool | int | int = ..., t: bool | int | int = ...) -> Any: ...
def callbacks(*args, addCallback: str | Callable = ..., ac: str | Callable = ..., clearAllCallbacks: bool | int = ..., cac: bool | int = ..., clearCallbacks: bool | int = ..., cc: bool | int = ..., describeHooks: bool | int = ..., dh: bool | int = ..., dumpCallbacks: bool | int = ..., dc: bool | int = ..., executeCallbacks: bool | int = ..., ec: bool | int = ..., hook: str = ..., h: str = ..., listCallbacks: bool | int = ..., lc: bool | int = ..., owner: str = ..., o: str = ..., removeCallback: str | Callable = ..., rc: str | Callable = ...) -> Any: ...
def camera(*args, aspectRatio: bool | int | float = ..., ar: bool | int | float = ..., cameraScale: bool | int | float = ..., cs: bool | int | float = ..., centerOfInterest: bool | int | float = ..., coi: bool | int | float = ..., clippingPlanes: bool | int = ..., cp: bool | int = ..., depthOfField: bool | int = ..., dof: bool | int = ..., displayFieldChart: bool | int = ..., dfc: bool | int = ..., displayFilmGate: bool | int = ..., dfg: bool | int = ..., displayFilmOrigin: bool | int = ..., dfo: bool | int = ..., displayFilmPivot: bool | int = ..., dfp: bool | int = ..., displayGateMask: bool | int = ..., dgm: bool | int = ..., displayResolution: bool | int = ..., dr: bool | int = ..., displaySafeAction: bool | int = ..., dsa: bool | int = ..., displaySafeTitle: bool | int = ..., dst: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., fStop: bool | int | float = ..., fs: bool | int | float = ..., farClipPlane: bool | int | float = ..., fcp: bool | int | float = ..., farFocusDistance: bool | int | float = ..., ffd: bool | int | float = ..., filmFit: bool | int | str = ..., ff: bool | int | str = ..., filmFitOffset: bool | int | float = ..., ffo: bool | int | float = ..., filmRollOrder: bool | int | str = ..., fro: bool | int | str = ..., filmRollValue: bool | int | float = ..., frv: bool | int | float = ..., filmTranslateH: bool | int | float = ..., fth: bool | int | float = ..., filmTranslateV: bool | int | float = ..., ftv: bool | int | float = ..., focalLength: bool | int | float = ..., fl: bool | int | float = ..., focusDistance: bool | int | float = ..., fd: bool | int | float = ..., homeCommand: bool | int | str = ..., hc: bool | int | str = ..., horizontalFieldOfView: bool | int | float = ..., hfv: bool | int | float = ..., horizontalFilmAperture: bool | int | float = ..., hfa: bool | int | float = ..., horizontalFilmOffset: bool | int | float = ..., hfo: bool | int | float = ..., horizontalPan: bool | int | float = ..., hpn: bool | int | float = ..., horizontalRollPivot: bool | int | float = ..., hrp: bool | int | float = ..., horizontalShake: bool | int | float = ..., hs: bool | int | float = ..., journalCommand: bool | int = ..., jc: bool | int = ..., lensSqueezeRatio: bool | int | float = ..., lsr: bool | int | float = ..., lockTransform: bool | int = ..., lt: bool | int = ..., motionBlur: bool | int = ..., mb: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., nearClipPlane: bool | int | float = ..., ncp: bool | int | float = ..., nearFocusDistance: bool | int | float = ..., nfd: bool | int | float = ..., orthographic: bool | int = ..., o: bool | int = ..., orthographicWidth: bool | int | float = ..., ow: bool | int | float = ..., overscan: bool | int | float = ..., ovr: bool | int | float = ..., panZoomEnabled: bool | int = ..., pze: bool | int = ..., position: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., postScale: bool | int | float = ..., pts: bool | int | float = ..., preScale: bool | int | float = ..., prs: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., renderPanZoom: bool | int = ..., rpz: bool | int = ..., rotation: bool | int | tuple[float, float, float] = ..., rot: bool | int | tuple[float, float, float] = ..., shakeEnabled: bool | int = ..., se: bool | int = ..., shakeOverscan: bool | int | float = ..., so: bool | int | float = ..., shakeOverscanEnabled: bool | int = ..., soe: bool | int = ..., shutterAngle: bool | int | float = ..., sa: bool | int | float = ..., startupCamera: bool | int = ..., sc: bool | int = ..., stereoHorizontalImageTranslate: bool | int | float = ..., hit: bool | int | float = ..., stereoHorizontalImageTranslateEnabled: bool | int = ..., she: bool | int = ..., verticalFieldOfView: bool | int | float = ..., vfv: bool | int | float = ..., verticalFilmAperture: bool | int | float = ..., vfa: bool | int | float = ..., verticalFilmOffset: bool | int | float = ..., vfo: bool | int | float = ..., verticalLock: bool | int = ..., vl: bool | int = ..., verticalPan: bool | int | float = ..., vpn: bool | int | float = ..., verticalRollPivot: bool | int | float = ..., vrp: bool | int | float = ..., verticalShake: bool | int | float = ..., vs: bool | int | float = ..., worldCenterOfInterest: bool | int | tuple[float, float, float] = ..., wci: bool | int | tuple[float, float, float] = ..., worldUp: bool | int | tuple[float, float, float] = ..., wup: bool | int | tuple[float, float, float] = ..., zoom: bool | int | float = ..., zom: bool | int | float = ...) -> Any: ...
def cameraSet(*args, active: bool | int = ..., a: bool | int = ..., appendTo: bool | int = ..., atl: bool | int = ..., camera: bool | int | str = ..., cam: bool | int | str = ..., clearDepth: bool | int = ..., cd: bool | int = ..., deleteAll: bool | int = ..., da: bool | int = ..., deleteLayer: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., insertAt: bool | int = ..., ins: bool | int = ..., layer: bool | int | int = ..., l: bool | int | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., numLayers: bool | int = ..., nl: bool | int = ..., objectSet: bool | int | str = ..., os: bool | int | str = ..., order: bool | int | int = ..., o: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def cameraView(*args, addBookmark: bool | int = ..., ab: bool | int = ..., animate: bool | int = ..., an: bool | int = ..., bookmarkType: int = ..., typ: int = ..., camera: str = ..., c: str = ..., edit: bool | int = ..., e: bool | int = ..., name: str = ..., n: str = ..., removeBookmark: bool | int = ..., rb: bool | int = ..., setCamera: bool | int = ..., sc: bool | int = ..., setView: bool | int = ..., sv: bool | int = ...) -> Any: ...
def canCreateManip(*args) -> Any: ...
def canvas(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., hsvValue: bool | int | tuple[float, float, float] = ..., hsv: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., pressCommand: str | Callable = ..., pc: str | Callable = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rgbValue: bool | int | tuple[float, float, float] = ..., rgb: bool | int | tuple[float, float, float] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def channelBox(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., attrBgColor: bool | int | tuple[float, float, float] = ..., bc: bool | int | tuple[float, float, float] = ..., attrColor: bool | int | tuple[float, float, float] = ..., ac: bool | int | tuple[float, float, float] = ..., attrFilter: bool | int | str = ..., af: bool | int | str = ..., attrRegex: bool | int | str = ..., ar: bool | int | str = ..., attributeEditorMode: bool | int = ..., aem: bool | int = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., containerAtTop: bool | int = ..., cat: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., enableLabelSelection: bool | int = ..., els: bool | int = ..., execute: tuple[str, bool | int] = ..., exe: tuple[str, bool | int] = ..., exists: bool | int = ..., ex: bool | int = ..., fieldWidth: bool | int | int = ..., fw: bool | int | int = ..., fixedAttrList: bool | int | str = ..., fal: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., historyObjectList: bool | int = ..., hol: bool | int = ..., hyperbolic: bool | int = ..., hyp: bool | int = ..., inputs: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., labelWidth: bool | int | int = ..., lw: bool | int | int = ..., longNames: bool | int = ..., ln: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., mainObjectList: bool | int = ..., mol: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., maxHeight: bool | int | int = ..., mh: bool | int | int = ..., maxWidth: bool | int | int = ..., mw: bool | int | int = ..., niceNames: bool | int = ..., nn: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., nodeRegex: bool | int | str = ..., nr: bool | int | str = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., outputObjectList: bool | int = ..., ool: bool | int = ..., outputs: bool | int = ..., out: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., precision: bool | int | int = ..., pre: bool | int | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., select: str | list[str] = ..., s: str | list[str] = ..., selectedHistoryAttributes: bool | int = ..., sha: bool | int = ..., selectedMainAttributes: bool | int = ..., sma: bool | int = ..., selectedOutputAttributes: bool | int = ..., soa: bool | int = ..., selectedShapeAttributes: bool | int = ..., ssa: bool | int = ..., shapeObjectList: bool | int = ..., sol: bool | int = ..., shapes: bool | int = ..., shp: bool | int = ..., showNamespace: bool | int = ..., sn: bool | int = ..., showTransforms: bool | int = ..., st: bool | int = ..., speed: bool | int | float = ..., spd: bool | int | float = ..., statusBarMessage: str = ..., sbm: str = ..., takeFocus: bool | int = ..., tf: bool | int = ..., update: bool | int = ..., u: bool | int = ..., useManips: bool | int | str = ..., mnp: bool | int | str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def character(*args, addElement: str = ..., add: str = ..., addOffsetObject: bool | int | str = ..., aoo: bool | int | str = ..., anyMember: str = ..., am: str = ..., characterPlug: bool | int = ..., cp: bool | int = ..., clear: str = ..., cl: str = ..., edit: bool | int = ..., e: bool | int = ..., empty: bool | int = ..., em: bool | int = ..., excludeDynamic: bool | int = ..., ed: bool | int = ..., excludeRotate: bool | int = ..., er: bool | int = ..., excludeScale: bool | int = ..., es: bool | int = ..., excludeTranslate: bool | int = ..., et: bool | int = ..., excludeVisibility: bool | int = ..., ev: bool | int = ..., flatten: str = ..., fl: str = ..., forceElement: str = ..., fe: str = ..., include: str = ..., intersection: bool | int | str = ..., int: bool | int | str = ..., isIntersecting: bool | int | str = ..., ii: bool | int | str = ..., isMember: bool | int | str = ..., im: bool | int | str = ..., library: bool | int = ..., lib: bool | int = ..., memberIndex: bool | int | int = ..., mi: bool | int | int = ..., name: str = ..., n: str = ..., noWarnings: bool | int = ..., nw: bool | int = ..., nodesOnly: bool | int = ..., no: bool | int = ..., offsetNode: bool | int = ..., ofs: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: str = ..., rm: str = ..., removeOffsetObject: str = ..., roo: str = ..., root: str = ..., rt: str = ..., scheduler: bool | int = ..., sc: bool | int = ..., split: str = ..., sp: str = ..., subtract: bool | int | str = ..., sub: bool | int | str = ..., text: bool | int | str = ..., t: bool | int | str = ..., union: bool | int | str = ..., un: bool | int | str = ..., userAlias: bool | int | str = ..., ua: bool | int | str = ...) -> Any: ...
def characterMap(*args, edit: bool | int = ..., e: bool | int = ..., mapAttr: bool | int | tuple[str, str] = ..., ma: bool | int | tuple[str, str] = ..., mapMethod: str = ..., mm: str = ..., mapNode: bool | int | tuple[str, str] = ..., mn: bool | int | tuple[str, str] = ..., mapping: bool | int | str = ..., m: bool | int | str = ..., proposedMapping: bool | int = ..., pm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., unmapAttr: tuple[str, str] = ..., ua: tuple[str, str] = ..., unmapNode: tuple[str, str] = ..., umn: tuple[str, str] = ...) -> Any: ...
def characterize(*args, activatePivot: bool | int = ..., apv: bool | int = ..., addAuxEffector: bool | int = ..., aae: bool | int = ..., addFloorContactPlane: bool | int = ..., afp: bool | int = ..., addMissingEffectors: bool | int = ..., ame: bool | int = ..., attributeFromHIKProperty: bool | int | str = ..., ahk: bool | int | str = ..., attributeFromHIKPropertyMode: bool | int | str = ..., mhk: bool | int | str = ..., autoActivateBodyPart: bool | int = ..., aab: bool | int = ..., changePivotPlacement: bool | int = ..., cpp: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., effectors: str = ..., ef: str = ..., fkSkeleton: str = ..., fk: str = ..., name: str = ..., nm: str = ..., pinHandFeet: bool | int = ..., phf: bool | int = ..., placeNewPivot: bool | int = ..., pnp: bool | int = ..., posture: str = ..., pos: str = ..., query: bool | int = ..., q: bool | int = ..., sourceSkeleton: str = ..., sk: str = ..., stancePose: bool | int | str = ..., sp: bool | int | str = ..., type: str = ..., typ: str = ...) -> Any: ...
def checkBox(*args, align: bool | int | str = ..., al: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: bool | int | str | Callable = ..., cc: bool | int | str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., offCommand: bool | int | str | Callable = ..., ofc: bool | int | str | Callable = ..., onCommand: bool | int | str | Callable = ..., onc: bool | int | str | Callable = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., recomputeSize: bool | int = ..., rs: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., value: bool | int = ..., v: bool | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def checkBoxGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., changeCommand1: str | Callable = ..., cc1: str | Callable = ..., changeCommand2: str | Callable = ..., cc2: str | Callable = ..., changeCommand3: str | Callable = ..., cc3: str | Callable = ..., changeCommand4: str | Callable = ..., cc4: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enable1: bool | int = ..., en1: bool | int = ..., enable2: bool | int = ..., en2: bool | int = ..., enable3: bool | int = ..., en3: bool | int = ..., enable4: bool | int = ..., en4: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., label1: bool | int | str = ..., l1: bool | int | str = ..., label2: bool | int | str = ..., l2: bool | int | str = ..., label3: bool | int | str = ..., l3: bool | int | str = ..., label4: bool | int | str = ..., l4: bool | int | str = ..., labelArray2: bool | int | tuple[str, str] = ..., la2: bool | int | tuple[str, str] = ..., labelArray3: bool | int | tuple[str, str, str] = ..., la3: bool | int | tuple[str, str, str] = ..., labelArray4: bool | int | tuple[str, str, str, str] = ..., la4: bool | int | tuple[str, str, str, str] = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfCheckBoxes: int = ..., ncb: int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., offCommand: str | Callable = ..., ofc: str | Callable = ..., offCommand1: str | Callable = ..., of1: str | Callable = ..., offCommand2: str | Callable = ..., of2: str | Callable = ..., offCommand3: str | Callable = ..., of3: str | Callable = ..., offCommand4: str | Callable = ..., of4: str | Callable = ..., onCommand: str | Callable = ..., onc: str | Callable = ..., onCommand1: str | Callable = ..., on1: str | Callable = ..., onCommand2: str | Callable = ..., on2: str | Callable = ..., onCommand3: str | Callable = ..., on3: str | Callable = ..., onCommand4: str | Callable = ..., on4: str | Callable = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., value1: bool | int = ..., v1: bool | int = ..., value2: bool | int = ..., v2: bool | int = ..., value3: bool | int = ..., v3: bool | int = ..., value4: bool | int = ..., v4: bool | int = ..., valueArray2: bool | int | tuple[bool | int, bool | int] = ..., va2: bool | int | tuple[bool | int, bool | int] = ..., valueArray3: bool | int | tuple[bool | int, bool | int, bool | int] = ..., va3: bool | int | tuple[bool | int, bool | int, bool | int] = ..., valueArray4: bool | int | tuple[bool | int, bool | int, bool | int, bool | int] = ..., va4: bool | int | tuple[bool | int, bool | int, bool | int, bool | int] = ..., vertical: bool | int = ..., vr: bool | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def checkDefaultRenderGlobals(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def choice(*args, attribute: str | list[str] = ..., at: str | list[str] = ..., controlPoints: bool | int = ..., cp: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., index: bool | int | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., selector: bool | int | str = ..., sl: bool | int | str = ..., shape: bool | int = ..., s: bool | int = ..., sourceAttribute: str = ..., sa: str = ..., time: int | float | list[int | float] = ..., t: int | float | list[int | float] = ...) -> Any: ...
def circle(*args, caching: bool | int = ..., cch: bool | int = ..., center: bool | int | tuple[float, float, float] = ..., c: bool | int | tuple[float, float, float] = ..., centerX: bool | int | float = ..., cx: bool | int | float = ..., centerY: bool | int | float = ..., cy: bool | int | float = ..., centerZ: bool | int | float = ..., cz: bool | int | float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., first: bool | int | tuple[float, float, float] = ..., fp: bool | int | tuple[float, float, float] = ..., firstPointX: bool | int | float = ..., fpx: bool | int | float = ..., firstPointY: bool | int | float = ..., fpy: bool | int | float = ..., firstPointZ: bool | int | float = ..., fpz: bool | int | float = ..., fixCenter: bool | int = ..., fc: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normal: bool | int | tuple[float, float, float] = ..., nr: bool | int | tuple[float, float, float] = ..., normalX: bool | int | float = ..., nrx: bool | int | float = ..., normalY: bool | int | float = ..., nry: bool | int | float = ..., normalZ: bool | int | float = ..., nrz: bool | int | float = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sections: bool | int | int = ..., s: bool | int | int = ..., sweep: bool | int | float = ..., sw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useTolerance: bool | int = ..., ut: bool | int = ...) -> Any: ...
def circularFillet(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., positionTolerance: bool | int | float = ..., pt: bool | int | float = ..., primaryRadius: bool | int | float = ..., pr: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., secondaryRadius: bool | int | float = ..., sr: bool | int | float = ..., tangentTolerance: bool | int | float = ..., tt: bool | int | float = ...) -> Any: ...
def clearCache(*args, allNodes: bool | int = ..., all: bool | int = ..., computed: bool | int = ..., c: bool | int = ..., dirty: bool | int = ..., d: bool | int = ...) -> Any: ...

clearDynStartState: Callable
clearNClothStartState: Callable
def clearShear(*args) -> Any: ...
def clip(*args, absolute: bool | int = ..., abs: bool | int = ..., absoluteRotations: bool | int = ..., abr: bool | int = ..., active: bool | int | str = ..., a: bool | int | str = ..., addTrack: bool | int = ..., at: bool | int = ..., allAbsolute: bool | int = ..., aa: bool | int = ..., allClips: bool | int = ..., ac: bool | int = ..., allRelative: bool | int = ..., ar: bool | int = ..., allSourceClips: bool | int = ..., asc: bool | int = ..., animCurveRange: bool | int = ..., acr: bool | int = ..., character: bool | int = ..., ch: bool | int = ..., constraint: bool | int = ..., cn: bool | int = ..., copy: bool | int = ..., c: bool | int = ..., defaultAbsolute: bool | int = ..., da: bool | int = ..., duplicate: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endTime: bool | int | int | float = ..., end: bool | int | int | float = ..., expression: bool | int = ..., ex: bool | int = ..., ignoreSubcharacters: bool | int = ..., isolate: bool | int = ..., i: bool | int = ..., leaveOriginal: bool | int = ..., lo: bool | int = ..., mapMethod: str = ..., mm: str = ..., name: bool | int | str | list[str] = ..., n: bool | int | str | list[str] = ..., newName: str = ..., nn: str = ..., paste: bool | int = ..., p: bool | int = ..., pasteInstance: bool | int = ..., pi: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., removeTrack: bool | int = ..., rt: bool | int = ..., rotationOffset: bool | int | tuple[float, float, float] = ..., rof: bool | int | tuple[float, float, float] = ..., rotationsAbsolute: bool | int = ..., ra: bool | int = ..., scheduleClip: bool | int = ..., sc: bool | int = ..., sourceClipName: bool | int = ..., scn: bool | int = ..., split: int | float = ..., sp: int | float = ..., startTime: bool | int | int | float = ..., s: bool | int | int | float = ..., translationOffset: bool | int | tuple[float, float, float] = ..., tof: bool | int | tuple[float, float, float] = ..., useChannel: str | list[str] = ..., uc: str | list[str] = ...) -> Any: ...
def clipEditor(*args, allTrackHeights: int = ..., th: int = ..., autoFit: bool | int | str = ..., af: bool | int | str = ..., autoFitTime: bool | int | str = ..., aft: bool | int | str = ..., characterOutline: str = ..., co: str = ..., clipDropCmd: str = ..., cd: str = ..., clipStyle: bool | int | int = ..., cs: bool | int | int = ..., control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., deleteCmd: str = ..., dc: str = ..., deselectAll: bool | int = ..., da: bool | int = ..., displayActiveKeyTangents: str = ..., dat: str = ..., displayActiveKeys: str = ..., dak: str = ..., displayInfinities: str = ..., di: str = ..., displayKeys: str = ..., dk: str = ..., displayTangents: str = ..., dtn: str = ..., displayValues: str = ..., dv: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., frameAll: bool | int = ..., fa: bool | int = ..., frameRange: bool | int | tuple[float, float] = ..., fr: bool | int | tuple[float, float] = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., highlightedBlend: bool | int | tuple[str, str] = ..., hb: bool | int | tuple[str, str] = ..., highlightedClip: bool | int | tuple[str, str] = ..., hc: bool | int | tuple[str, str] = ..., initialized: bool | int = ..., it: bool | int = ..., listAllCharacters: bool | int = ..., lac: bool | int = ..., listCurrentCharacters: bool | int = ..., lc: bool | int = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., lookAt: str = ..., la: str = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., manageSequencer: bool | int = ..., ms: bool | int = ..., menuContext: bool | int | str = ..., mc: bool | int | str = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., selectBlend: bool | int | tuple[str, str, str] = ..., sb: bool | int | tuple[str, str, str] = ..., selectClip: bool | int | tuple[str, str] = ..., sc: bool | int | tuple[str, str] = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., snapTime: bool | int | str = ..., st: bool | int | str = ..., snapValue: bool | int | str = ..., sv: bool | int | str = ..., stateString: bool | int = ..., sts: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def clipEditorCurrentTimeCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def clipMatching(*args, clipDst: tuple[str, float] = ..., cd: tuple[str, float] = ..., clipSrc: tuple[str, float] = ..., cs: tuple[str, float] = ..., matchRotation: int = ..., mr: int = ..., matchTranslation: int = ..., mt: int = ...) -> Any: ...
def clipSchedule(*args, allAbsolute: bool | int = ..., aa: bool | int = ..., allRelative: bool | int = ..., ar: bool | int = ..., blend: bool | int | tuple[int, int] = ..., b: bool | int | tuple[int, int] = ..., blendNode: bool | int | tuple[int, int] = ..., bn: bool | int | tuple[int, int] = ..., blendUsingNode: str = ..., bun: str = ..., character: bool | int = ..., ch: bool | int = ..., clipIndex: bool | int | int = ..., ci: bool | int | int = ..., cycle: bool | int | float = ..., c: bool | int | float = ..., defaultAbsolute: bool | int = ..., da: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., group: bool | int = ..., grp: bool | int = ..., groupIndex: int | list[int] = ..., gri: int | list[int] = ..., groupName: bool | int | str = ..., gn: bool | int | str = ..., hold: bool | int | int | float = ..., ph: bool | int | int | float = ..., insertTrack: int = ..., it: int = ..., instance: str = ..., listCurves: bool | int = ..., lc: bool | int = ..., listPairs: bool | int = ..., lp: bool | int = ..., lock: bool | int = ..., l: bool | int = ..., mute: bool | int = ..., m: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., postCycle: bool | int | float = ..., poc: bool | int | float = ..., preCycle: bool | int | float = ..., prc: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., removeBlend: tuple[int, int] = ..., rb: tuple[int, int] = ..., removeEmptyTracks: bool | int = ..., ret: bool | int = ..., removeTrack: int = ..., rt: int = ..., rotationsAbsolute: bool | int = ..., ra: bool | int = ..., scale: bool | int | float = ..., sc: bool | int | float = ..., shift: int = ..., sh: int = ..., shiftIndex: int | list[int] = ..., shi: int | list[int] = ..., solo: bool | int = ..., so: bool | int = ..., sourceClipName: bool | int = ..., scn: bool | int = ..., sourceEnd: bool | int | int | float = ..., se: bool | int | int | float = ..., sourceStart: bool | int | int | float = ..., ss: bool | int | int | float = ..., start: bool | int | int | float = ..., s: bool | int | int | float = ..., track: bool | int | int = ..., t: bool | int | int = ..., weight: bool | int | float = ..., w: bool | int | float = ..., weightStyle: bool | int | int = ..., ws: bool | int | int = ...) -> Any: ...
def clipSchedulerOutliner(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., clipScheduler: str = ..., cs: str = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def closeCurve(*args, blendBias: bool | int | float = ..., bb: bool | int | float = ..., blendKnotInsertion: bool | int = ..., bki: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float = ..., p: bool | int | float = ..., preserveShape: bool | int | int = ..., ps: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...) -> Any: ...
def closeSurface(*args, blendBias: bool | int | float = ..., bb: bool | int | float = ..., blendKnotInsertion: bool | int = ..., bki: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float = ..., p: bool | int | float = ..., preserveShape: bool | int | int = ..., ps: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...) -> Any: ...
def cluster(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., bindState: bool | int = ..., bs: bool | int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., envelope: bool | int | float = ..., en: bool | int | float = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., name: str = ..., n: str = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., rel: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., resetGeometry: bool | int = ..., rg: bool | int = ..., split: bool | int = ..., sp: bool | int = ..., useComponentTags: bool | int = ..., uct: bool | int = ..., weightedNode: bool | int | tuple[str, str] = ..., wn: bool | int | tuple[str, str] = ...) -> Any: ...
def cmdFileOutput(*args, close: int = ..., c: int = ..., closeAll: bool | int = ..., ca: bool | int = ..., open: bool | int | str = ..., o: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., status: bool | int | int = ..., s: bool | int | int = ...) -> Any: ...
def cmdScrollFieldExecuter(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., appendText: str = ..., at: str = ..., autoCloseBraces: bool | int = ..., acb: bool | int = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., clear: bool | int = ..., clr: bool | int = ..., commandCompletion: bool | int = ..., cco: bool | int = ..., copySelection: bool | int = ..., cp: bool | int = ..., currentLine: bool | int | int = ..., cl: bool | int | int = ..., cutSelection: bool | int = ..., ct: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., execute: bool | int = ..., exc: bool | int = ..., executeAll: bool | int = ..., exa: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fileChangedCommand: str | Callable = ..., fcc: str | Callable = ..., filename: bool | int = ..., fn: bool | int = ..., filterKeyPress: bool | int | str | Callable = ..., fkp: bool | int | str | Callable = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., hasFocus: bool | int = ..., hf: bool | int = ..., hasSelection: bool | int = ..., hsl: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., indentSelection: bool | int = ..., isl: bool | int = ..., insertText: str = ..., it: str = ..., isObscured: bool | int = ..., io: bool | int = ..., load: bool | int = ..., ld: bool | int = ..., loadContents: str = ..., ldc: str = ..., loadFile: str = ..., ldf: str = ..., manage: bool | int = ..., m: bool | int = ..., modificationChangedCommand: str | Callable = ..., mcc: str | Callable = ..., modified: bool | int = ..., mod: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfLines: bool | int | int = ..., nl: bool | int | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., objectPathCompletion: bool | int = ..., opc: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., pasteSelection: bool | int = ..., pst: bool | int = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., receiveFocusCommand: callable = ..., rfc: callable = ..., redo: bool | int = ..., rd: bool | int = ..., removeStoredContents: str = ..., rsc: str = ..., replaceAll: tuple[str, str] = ..., rpa: tuple[str, str] = ..., saveFile: str = ..., svf: str = ..., saveSelection: str = ..., sv: str = ..., saveSelectionToShelf: bool | int = ..., svs: bool | int = ..., searchAndSelect: bool | int = ..., sas: bool | int = ..., searchDown: bool | int = ..., sd: bool | int = ..., searchMatchCase: bool | int = ..., smc: bool | int = ..., searchString: bool | int | str = ..., ss: bool | int | str = ..., searchWraps: bool | int = ..., sw: bool | int = ..., select: tuple[int, int] = ..., sl: tuple[int, int] = ..., selectAll: bool | int = ..., sla: bool | int = ..., selectedText: bool | int = ..., slt: bool | int = ..., showLineNumbers: bool | int = ..., sln: bool | int = ..., showTooltipHelp: bool | int = ..., sth: bool | int = ..., source: bool | int = ..., src: bool | int = ..., sourceType: bool | int | str = ..., st: bool | int | str = ..., spacesPerTab: bool | int | int = ..., spt: bool | int | int = ..., statusBarMessage: str = ..., sbm: str = ..., storeContents: str = ..., stc: str = ..., tabsForIndent: bool | int = ..., tfi: bool | int = ..., text: bool | int | str = ..., t: bool | int | str = ..., textLength: bool | int = ..., tl: bool | int = ..., undo: bool | int = ..., ud: bool | int = ..., unindentSelection: bool | int = ..., usl: bool | int = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def cmdScrollFieldReporter(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., clear: bool | int = ..., clr: bool | int = ..., copySelection: bool | int = ..., cp: bool | int = ..., cutSelection: bool | int = ..., ct: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., echoAllCommands: bool | int = ..., eac: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filterSourceType: bool | int | str = ..., fst: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., hasFocus: bool | int = ..., hf: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., lineNumbers: bool | int = ..., ln: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., pasteSelection: bool | int = ..., pst: bool | int = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., receiveFocusCommand: str | Callable = ..., rfc: str | Callable = ..., saveSelection: str = ..., sv: str = ..., saveSelectionToShelf: bool | int = ..., svs: bool | int = ..., select: tuple[int, int] = ..., sl: tuple[int, int] = ..., selectAll: bool | int = ..., sla: bool | int = ..., stackTrace: bool | int = ..., st: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., suppressErrors: bool | int = ..., se: bool | int = ..., suppressInfo: bool | int = ..., si: bool | int = ..., suppressResults: bool | int = ..., sr: bool | int = ..., suppressStackTrace: bool | int = ..., sst: bool | int = ..., suppressWarnings: bool | int = ..., sw: bool | int = ..., text: bool | int | str = ..., t: bool | int | str = ..., textLength: bool | int = ..., tl: bool | int = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def cmdShell(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., clear: bool | int = ..., cl: bool | int = ..., command: bool | int | str = ..., c: bool | int | str = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfHistoryLines: bool | int | int = ..., nhl: bool | int | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., numberOfSavedLines: bool | int | int = ..., nsl: bool | int | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., prompt: bool | int | str = ..., pr: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def collision(*args, edit: bool | int = ..., e: bool | int = ..., friction: bool | int | float = ..., f: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., offset: bool | int | float = ..., o: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., resilience: bool | int | float = ..., r: bool | int | float = ...) -> Any: ...
def color(*args, rgbColor: tuple[float, float, float] = ..., rgb: tuple[float, float, float] = ..., userDefined: int = ..., ud: int = ...) -> Any: ...
def colorAtPoint(*args, coordU: float | list[float] = ..., u: float | list[float] = ..., coordV: float | list[float] = ..., v: float | list[float] = ..., maxU: float = ..., xu: float = ..., maxV: float = ..., xv: float = ..., minU: float = ..., mu: float = ..., minV: float = ..., mv: float = ..., output: str = ..., o: str = ..., samplesU: int = ..., su: int = ..., samplesV: int = ..., sv: int = ...) -> Any: ...
def colorEditor(*args, alpha: bool | int | float = ..., a: bool | int | float = ..., hsvValue: bool | int | tuple[float, float, float] = ..., hsv: bool | int | tuple[float, float, float] = ..., mini: bool | int = ..., m: bool | int = ..., parent: str = ..., p: str = ..., position: tuple[int, int] = ..., pos: tuple[int, int] = ..., query: bool | int = ..., q: bool | int = ..., result: bool | int = ..., r: bool | int = ..., rgbValue: bool | int | tuple[float, float, float] = ..., rgb: bool | int | tuple[float, float, float] = ...) -> Any: ...
def colorIndex(*args, hueSaturationValue: bool | int = ..., hsv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., resetToFactory: bool | int = ..., rf: bool | int = ..., resetToSaved: bool | int = ..., rs: bool | int = ...) -> Any: ...
def colorIndexSliderGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extraLabel: bool | int | str = ..., el: bool | int | str = ..., forceDragRefresh: bool | int = ..., fdr: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., invisible: bool | int | int = ..., inv: bool | int | int = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | int = ..., max: bool | int | int = ..., minValue: bool | int | int = ..., min: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | int = ..., v: bool | int | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def colorInputWidgetGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., forceDragRefresh: bool | int = ..., fdr: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., hsvValue: bool | int | tuple[float, float, float] = ..., hsv: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rgbValue: bool | int | tuple[float, float, float] = ..., rgb: bool | int | tuple[float, float, float] = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def colorManagementCatalog(*args, addTransform: str = ..., adt: str = ..., editUserTransformPath: str = ..., eut: str = ..., listSupportedExtensions: bool | int = ..., lse: bool | int = ..., listTransformConnections: bool | int = ..., ltc: bool | int = ..., path: str = ..., pth: str = ..., queryUserTransformPath: bool | int = ..., qut: bool | int = ..., removeTransform: str = ..., rmt: str = ..., transformConnection: str = ..., tcn: str = ..., type: str = ..., typ: str = ...) -> Any: ...
def colorManagementConvert(*args, toDisplaySpace: tuple[float, float, float] = ..., tds: tuple[float, float, float] = ...) -> Any: ...
def colorManagementFileRules(*args, addRule: str = ..., add: str = ..., colorSpace: bool | int | str = ..., cs: bool | int | str = ..., colorSpaceDescription: bool | int | str = ..., csd: bool | int | str = ..., colorSpaceFamilies: bool | int | str = ..., csf: bool | int | str = ..., colorSpaceNames: bool | int = ..., csn: bool | int = ..., down: str = ..., dwn: str = ..., edit: bool | int = ..., e: bool | int = ..., enabled: bool | int = ..., ena: bool | int = ..., evaluate: str = ..., ev: str = ..., extension: bool | int | str = ..., ext: bool | int | str = ..., listRules: bool | int = ..., lsr: bool | int = ..., load: bool | int = ..., ld: bool | int = ..., moveUp: str = ..., up: str = ..., pattern: bool | int | str = ..., pat: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., remove: str = ..., rm: str = ..., restoreDefaults: bool | int = ..., rde: bool | int = ..., save: bool | int = ..., sav: bool | int = ...) -> Any: ...
def colorManagementPrefs(*args, cmConfigFileEnabled: bool | int = ..., cfe: bool | int = ..., cmEnabled: bool | int = ..., cme: bool | int = ..., colorManageAllNodes: bool | int = ..., cma: bool | int = ..., colorManagePots: bool | int = ..., cmp: bool | int = ..., colorManagedNodes: bool | int = ..., cmn: bool | int = ..., colorManagementSDKVersion: bool | int | str = ..., cmv: bool | int | str = ..., configFilePath: bool | int | str = ..., cfp: bool | int | str = ..., configFileVersion: bool | int | str = ..., cfv: bool | int | str = ..., defaultInputSpaceName: bool | int | str = ..., din: bool | int | str = ..., displayName: bool | int | str = ..., dn: bool | int | str = ..., displayNames: bool | int = ..., dns: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., equalsToPolicyFile: bool | int | str = ..., etp: bool | int | str = ..., exportPolicy: str = ..., epy: str = ..., inhibitEvents: bool | int = ..., ie: bool | int = ..., inputSpaceDescription: bool | int | str = ..., isd: bool | int | str = ..., inputSpaceFamilies: bool | int | str = ..., isf: bool | int | str = ..., inputSpaceNames: bool | int = ..., iss: bool | int = ..., loadPolicy: str = ..., lpy: str = ..., loadedDefaultInputSpaceName: bool | int | str = ..., ldn: bool | int | str = ..., loadedDisplayName: bool | int | str = ..., ld: bool | int | str = ..., loadedOutputTransformName: bool | int | str = ..., lon: bool | int | str = ..., loadedRenderingSpaceName: bool | int | str = ..., lrn: bool | int | str = ..., loadedViewName: bool | int | str = ..., lv: bool | int | str = ..., loadedViewTransformName: bool | int | str = ..., lvn: bool | int | str = ..., missingColorSpaceNodes: bool | int = ..., mcn: bool | int = ..., ocioRulesEnabled: bool | int = ..., ore: bool | int = ..., ociov2Enabled: bool | int = ..., oci: bool | int = ..., outputTarget: bool | int | str = ..., ott: bool | int | str = ..., outputTransformEnabled: bool | int = ..., ote: bool | int = ..., outputTransformName: bool | int | str = ..., otn: bool | int | str = ..., outputTransformNames: bool | int = ..., ots: bool | int = ..., outputTransformUseColorConversion: bool | int = ..., otc: bool | int = ..., outputUseViewTransform: bool | int = ..., ovt: bool | int = ..., policyFileName: bool | int | str = ..., pfn: bool | int | str = ..., popupOnError: bool | int = ..., poe: bool | int = ..., query: bool | int = ..., q: bool | int = ..., refresh: bool | int = ..., rfr: bool | int = ..., renderingSpaceName: bool | int | str = ..., rsn: bool | int | str = ..., renderingSpaceNames: bool | int = ..., rss: bool | int = ..., restoreDefaults: bool | int = ..., rde: bool | int = ..., viewName: bool | int | str = ..., vn: bool | int | str = ..., viewNames: bool | int = ..., vns: bool | int = ..., viewTransformName: bool | int | str = ..., vtn: bool | int | str = ..., viewTransformNames: bool | int = ..., vts: bool | int = ...) -> Any: ...
def colorSliderButtonGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., buttonCommand: str | Callable = ..., bc: str | Callable = ..., buttonLabel: bool | int | str = ..., bl: bool | int | str = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., forceDragRefresh: bool | int = ..., fdr: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., hsvValue: bool | int | tuple[float, float, float] = ..., hsv: bool | int | tuple[float, float, float] = ..., image: bool | int | str = ..., i: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rgbValue: bool | int | tuple[float, float, float] = ..., rgb: bool | int | tuple[float, float, float] = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., symbolButtonCommand: str | Callable = ..., sbc: str | Callable = ..., symbolButtonDisplay: bool | int = ..., sbd: bool | int = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def colorSliderGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., forceDragRefresh: bool | int = ..., fdr: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., hsvValue: bool | int | tuple[float, float, float] = ..., hsv: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rgbValue: bool | int | tuple[float, float, float] = ..., rgb: bool | int | tuple[float, float, float] = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def columnLayout(*args, adjustableColumn: bool | int = ..., adj: bool | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., childArray: bool | int = ..., ca: bool | int = ..., columnAlign: str = ..., cal: str = ..., columnAttach: tuple[str, int] = ..., cat: tuple[str, int] = ..., columnOffset: tuple[str, int] = ..., co: tuple[str, int] = ..., columnWidth: bool | int | int = ..., cw: bool | int | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowSpacing: bool | int | int = ..., rs: bool | int | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def combinationShape(*args, addDriver: bool | int = ..., add: bool | int = ..., allDrivers: bool | int = ..., ald: bool | int = ..., blendShape: str = ..., bs: str = ..., combinationTargetIndex: int = ..., cti: int = ..., combinationTargetName: str = ..., ctn: str = ..., combineMethod: bool | int | int = ..., cm: bool | int | int = ..., driverTargetIndex: int | list[int] = ..., dti: int | list[int] = ..., driverTargetName: str | list[str] = ..., dtn: str | list[str] = ..., edit: bool | int = ..., e: bool | int = ..., exist: bool | int = ..., ex: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeDriver: bool | int = ..., rmd: bool | int = ...) -> Any: ...
def commandEcho(*args, addFilter: str = ..., af: str = ..., filter: bool | int | str = ..., f: bool | int | str = ..., lineNumbers: bool | int = ..., ln: bool | int = ..., query: bool | int = ..., q: bool | int = ..., state: bool | int = ..., st: bool | int = ...) -> Any: ...
def commandLine(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., command: str | Callable = ..., c: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., enterCommand: str | Callable = ..., ec: str | Callable = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., holdFocus: bool | int = ..., hf: bool | int = ..., inputAnnotation: bool | int | str = ..., ian: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfHistoryLines: bool | int | int = ..., nhl: bool | int | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., outputAnnotation: bool | int | str = ..., oan: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sourceType: bool | int | str = ..., st: bool | int | str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def commandLogging(*args, historySize: bool | int | int = ..., hs: bool | int | int = ..., logCommands: bool | int = ..., lc: bool | int = ..., logFile: bool | int | str = ..., lf: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., recordCommands: bool | int = ..., rc: bool | int = ..., resetLogFile: bool | int = ..., rl: bool | int = ...) -> Any: ...
def commandPort(*args, bufferSize: int = ..., bs: int = ..., close: bool | int = ..., cl: bool | int = ..., echoOutput: bool | int = ..., eo: bool | int = ..., listPorts: bool | int = ..., lp: bool | int = ..., name: str = ..., n: str = ..., noreturn: bool | int = ..., nr: bool | int = ..., outputVar: str = ..., o: str = ..., pickleOutput: bool | int = ..., po: bool | int = ..., prefix: str = ..., pre: str = ..., query: bool | int = ..., q: bool | int = ..., returnNumCommands: bool | int = ..., rnc: bool | int = ..., securityWarning: bool | int = ..., sw: bool | int = ..., sourceType: str = ..., stp: str = ...) -> Any: ...
def componentBox(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., execute: tuple[str, bool | int] = ..., exe: tuple[str, bool | int] = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., labelWidth: bool | int | int = ..., lw: bool | int | int = ..., manage: bool | int = ..., m: bool | int = ..., maxHeight: bool | int | int = ..., mh: bool | int | int = ..., maxWidth: bool | int | int = ..., mw: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., precision: bool | int | int = ..., pre: bool | int | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowHeight: int = ..., rh: int = ..., selectedAttr: bool | int = ..., sla: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def componentEditor(*args, control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., floatField: bool | int | str = ..., ff: bool | int | str = ..., floatSlider: bool | int | str = ..., fs: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., hidePathName: bool | int = ..., hpn: bool | int = ..., hideZeroColumns: bool | int = ..., hzc: bool | int = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., justifyHeaders: bool | int | int = ..., jh: bool | int | int = ..., lockInput: bool | int = ..., li: bool | int = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., newTab: tuple[str, str, str] = ..., nt: tuple[str, str, str] = ..., operationCount: bool | int = ..., oc: bool | int = ..., operationLabels: bool | int = ..., ol: bool | int = ..., operationType: bool | int | int = ..., ot: bool | int | int = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., precision: bool | int | int = ..., pre: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., removeTab: str = ..., rt: str = ..., selected: bool | int = ..., sl: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., setOperationLabel: tuple[int, str] = ..., sol: tuple[int, str] = ..., showNamespaces: bool | int = ..., sn: bool | int = ..., showObjects: bool | int = ..., so: bool | int = ..., showSelected: bool | int = ..., ss: bool | int = ..., sortAlpha: bool | int = ..., sa: bool | int = ..., stateString: bool | int = ..., sts: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def componentTag(*args, **kwargs): ...
def condition(*args, delete: bool | int = ..., dependency: str | list[str] = ..., d: str | list[str] = ..., edit: bool | int = ..., e: bool | int = ..., initialize: bool | int = ..., i: bool | int = ..., query: bool | int = ..., q: bool | int = ..., script: str = ..., s: str = ..., state: bool | int = ..., st: bool | int = ...) -> Any: ...
def cone(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: bool | int | float = ..., esw: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., heightRatio: bool | int | float = ..., hr: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sections: bool | int | int = ..., s: bool | int | int = ..., spans: bool | int | int = ..., nsp: bool | int | int = ..., startSweep: bool | int | float = ..., ssw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useOldInitBehaviour: bool | int = ..., oib: bool | int = ..., useTolerance: bool | int = ..., ut: bool | int = ...) -> Any: ...
def confirmDialog(*args, annotation: str | list[str] = ..., ann: str | list[str] = ..., backgroundColor: tuple[float, float, float] = ..., bgc: tuple[float, float, float] = ..., button: str | list[str] = ..., b: str | list[str] = ..., cancelButton: str = ..., cb: str = ..., defaultButton: str = ..., db: str = ..., dismissString: str = ..., ds: str = ..., icon: str = ..., icn: str = ..., message: str = ..., m: str = ..., messageAlign: str = ..., ma: str = ..., parent: str = ..., p: str = ..., title: str = ..., t: str = ...) -> Any: ...
def connectAttr(*args, force: bool | int = ..., f: bool | int = ..., lock: bool | int = ..., l: bool | int = ..., nextAvailable: bool | int = ..., na: bool | int = ..., referenceDest: str = ..., rd: str = ...) -> Any: ...
def connectControl(*args, fileName: bool | int = ..., fi: bool | int = ..., includeChildren: bool | int = ..., ic: bool | int = ..., index: int = ..., preventContextualMenu: bool | int = ..., pcm: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ...) -> Any: ...
def connectDynamic(*args, addScriptHandler: str | Callable = ..., ash: str | Callable = ..., collisions: str | list[str] = ..., c: str | list[str] = ..., delete: bool | int = ..., d: bool | int = ..., emitters: str | list[str] = ..., em: str | list[str] = ..., fields: str | list[str] = ..., f: str | list[str] = ..., removeScriptHandler: int = ..., rsh: int = ...) -> Any: ...
def connectJoint(*args, connectMode: bool | int = ..., cm: bool | int = ..., parentMode: bool | int = ..., pm: bool | int = ...) -> Any: ...
def connectionInfo(*args, destinationFromSource: bool | int = ..., dfs: bool | int = ..., getExactDestination: bool | int = ..., ged: bool | int = ..., getExactSource: bool | int = ..., ges: bool | int = ..., getLockedAncestor: bool | int = ..., gla: bool | int = ..., isDestination: bool | int = ..., id: bool | int = ..., isExactDestination: bool | int = ..., ied: bool | int = ..., isExactSource: bool | int = ..., ies: bool | int = ..., isLocked: bool | int = ..., il: bool | int = ..., isSource: bool | int = ..., sourceFromDestination: bool | int = ..., sfd: bool | int = ...) -> Any: ...
def constrain(*args, barrier: bool | int = ..., br: bool | int = ..., damping: bool | int | float = ..., d: bool | int | float = ..., directionalHinge: bool | int = ..., dhi: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., hinge: bool | int = ..., hi: bool | int = ..., interpenetrate: bool | int = ..., i: bool | int = ..., nail: bool | int = ..., na: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., orientation: bool | int | tuple[float, float, float] = ..., o: bool | int | tuple[float, float, float] = ..., pinConstraint: bool | int = ..., pin: bool | int = ..., position: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., restLength: bool | int | float = ..., rl: bool | int | float = ..., spring: bool | int = ..., s: bool | int = ..., stiffness: bool | int | float = ..., st: bool | int | float = ...) -> Any: ...
def constructionHistory(*args, query: bool | int = ..., q: bool | int = ..., toggle: bool | int = ..., tgl: bool | int = ...) -> Any: ...
def container(*args, addNode: str = ..., an: str = ..., asset: bool | int | str = ..., a: bool | int | str = ..., assetMember: bool | int | str = ..., am: bool | int | str = ..., bindAttr: bool | int | tuple[str, str] = ..., ba: bool | int | tuple[str, str] = ..., connectionList: bool | int = ..., cl: bool | int = ..., current: bool | int = ..., c: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., fileName: bool | int | str = ..., fn: bool | int | str = ..., findContainer: bool | int | str = ..., fc: bool | int | str = ..., force: bool | int = ..., f: bool | int = ..., includeHierarchyAbove: bool | int = ..., iha: bool | int = ..., includeHierarchyBelow: bool | int = ..., ihb: bool | int = ..., includeNetwork: bool | int = ..., inc: bool | int = ..., includeNetworkDetails: str | list[str] = ..., ind: str | list[str] = ..., includeShaders: bool | int = ..., isd: bool | int = ..., includeShapes: bool | int = ..., ish: bool | int = ..., includeTransform: bool | int = ..., it: bool | int = ..., isContainer: bool | int = ..., isc: bool | int = ..., name: str = ..., n: str = ..., nodeList: bool | int = ..., nl: bool | int = ..., nodeNamePrefix: bool | int = ..., nnp: bool | int = ..., parentContainer: bool | int = ..., par: bool | int = ..., preview: bool | int = ..., p: bool | int = ..., publishAndBind: tuple[str, str] = ..., pb: tuple[str, str] = ..., publishAsChild: bool | int | tuple[str, str] = ..., pac: bool | int | tuple[str, str] = ..., publishAsParent: bool | int | tuple[str, str] = ..., pap: bool | int | tuple[str, str] = ..., publishAsRoot: bool | int | tuple[str, bool | int] = ..., pro: bool | int | tuple[str, bool | int] = ..., publishAttr: bool | int | str = ..., pa: bool | int | str = ..., publishConnections: bool | int = ..., pc: bool | int = ..., publishName: bool | int | str = ..., pn: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., removeContainer: bool | int = ..., rc: bool | int = ..., removeNode: str = ..., rn: str = ..., type: bool | int | str = ..., typ: bool | int | str = ..., unbindAndUnpublish: str = ..., ubp: str = ..., unbindAttr: bool | int | tuple[str, str] = ..., ua: bool | int | tuple[str, str] = ..., unbindChild: str = ..., unc: str = ..., unbindParent: str = ..., unp: str = ..., unpublishChild: str = ..., upc: str = ..., unpublishName: str = ..., un: str = ..., unpublishParent: str = ..., upp: str = ..., unsortedOrder: bool | int = ..., uso: bool | int = ...) -> Any: ...
def containerBind(*args, allNames: bool | int = ..., all: bool | int = ..., bindingSet: bool | int | str = ..., bs: bool | int | str = ..., bindingSetConditions: bool | int = ..., bsc: bool | int = ..., bindingSetList: bool | int = ..., bsl: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., force: bool | int = ..., f: bool | int = ..., preview: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def containerProxy(*args, edit: bool | int = ..., e: bool | int = ..., fromTemplate: str = ..., ft: str = ..., query: bool | int = ..., q: bool | int = ..., type: str = ..., typ: str = ...) -> Any: ...
def containerPublish(*args, bindNode: bool | int | tuple[str, str] = ..., bn: bool | int | tuple[str, str] = ..., bindTemplateStandins: bool | int = ..., bts: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., inConnections: bool | int = ..., ic: bool | int = ..., mergeShared: bool | int = ..., ms: bool | int = ..., outConnections: bool | int = ..., oc: bool | int = ..., publishNode: bool | int | tuple[str, str] = ..., pn: bool | int | tuple[str, str] = ..., query: bool | int = ..., q: bool | int = ..., unbindNode: bool | int | str = ..., ubn: bool | int | str = ..., unpublishNode: bool | int | str = ..., upn: bool | int | str = ...) -> Any: ...
def containerTemplate(*args, addBindingSet: str = ..., abs: str = ..., addNames: bool | int = ..., an: bool | int = ..., addView: str = ..., av: str = ..., allKeyable: bool | int = ..., ak: bool | int = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., attributeList: bool | int | str = ..., al: bool | int | str = ..., baseName: bool | int | str = ..., bn: bool | int | str = ..., bindingSetList: bool | int | str = ..., bsl: bool | int | str = ..., childAnchor: bool | int = ..., can: bool | int = ..., delete: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandCompounds: bool | int = ..., ec: bool | int = ..., fileName: bool | int | str = ..., fn: bool | int | str = ..., force: bool | int = ..., f: bool | int = ..., fromContainer: str = ..., fc: str = ..., fromSelection: bool | int = ..., fs: bool | int = ..., layoutMode: int = ..., lm: int = ..., load: bool | int = ..., l: bool | int = ..., matchFile: bool | int | str = ..., mf: bool | int | str = ..., matchName: bool | int | str = ..., mn: bool | int | str = ..., parentAnchor: bool | int = ..., pan: bool | int = ..., publishedNodeList: bool | int | str = ..., pnl: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., removeBindingSet: str = ..., rbs: str = ..., removeView: str = ..., rv: str = ..., rootTransform: bool | int = ..., rtn: bool | int = ..., save: bool | int = ..., s: bool | int = ..., searchPath: bool | int | str = ..., sp: bool | int | str = ..., silent: bool | int = ..., si: bool | int = ..., templateList: bool | int | str = ..., tl: bool | int | str = ..., unload: bool | int = ..., u: bool | int = ..., updateBindingSet: str = ..., ubs: str = ..., useHierarchy: bool | int = ..., uh: bool | int = ..., viewList: bool | int | str = ..., vl: bool | int | str = ...) -> Any: ...
def containerView(*args, edit: bool | int = ..., e: bool | int = ..., itemInfo: bool | int | str = ..., ii: bool | int | str = ..., itemList: bool | int = ..., il: bool | int = ..., query: bool | int = ..., q: bool | int = ..., viewDescription: bool | int = ..., vd: bool | int = ..., viewLabel: bool | int = ..., vb: bool | int = ..., viewList: bool | int = ..., vl: bool | int = ..., viewName: bool | int | str = ..., vn: bool | int | str = ...) -> Any: ...
def contentBrowser(*args, addContentPath: str = ..., acp: str = ..., context: bool | int | tuple[str, str, str] = ..., ctx: bool | int | tuple[str, str, str] = ..., control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., location: str = ..., loc: str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., preview: bool | int = ..., pv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., refreshTreeView: bool | int = ..., rtv: bool | int = ..., removeContentPath: str = ..., rcp: str = ..., saveCurrentContext: bool | int = ..., scc: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., stateString: bool | int = ..., sts: bool | int = ..., thumbnailView: bool | int = ..., th: bool | int = ..., treeView: bool | int = ..., tr: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def contextInfo(*args, apiImage1: str = ..., ip1: str = ..., c: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., escapeContext: bool | int = ..., esc: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int = ..., i1: bool | int = ..., image2: bool | int = ..., i2: bool | int = ..., image3: bool | int = ..., i3: bool | int = ..., query: bool | int = ..., q: bool | int = ..., title: bool | int = ..., t: bool | int = ...) -> Any: ...
def control(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def controller(*args, allControllers: bool | int = ..., ac: bool | int = ..., children: bool | int = ..., cld: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., group: bool | int = ..., g: bool | int = ..., index: bool | int | int = ..., idx: bool | int | int = ..., isController: bool | int | str = ..., ic: bool | int | str = ..., parent: bool | int = ..., p: bool | int = ..., pickWalkDown: bool | int = ..., pwd: bool | int = ..., pickWalkLeft: bool | int = ..., pwl: bool | int = ..., pickWalkRight: bool | int = ..., pwr: bool | int = ..., pickWalkUp: bool | int = ..., pwu: bool | int = ..., query: bool | int = ..., q: bool | int = ..., unparent: bool | int = ..., unp: bool | int = ...) -> Any: ...
def convertIffToPsd(*args, iffFileName: bool | int | str = ..., ifn: bool | int | str = ..., psdFileName: bool | int | str = ..., pfn: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., xResolution: bool | int | int = ..., xr: bool | int | int = ..., yResolution: bool | int | int = ..., yr: bool | int | int = ...) -> Any: ...
def convertSolidTx(*args, alpha: bool | int = ..., al: bool | int = ..., antiAlias: bool | int = ..., aa: bool | int = ..., backgroundColor: tuple[int, int, int] = ..., bc: tuple[int, int, int] = ..., backgroundMode: str = ..., bm: str = ..., camera: str = ..., cam: str = ..., componentRange: bool | int = ..., cr: bool | int = ..., doubleSided: bool | int = ..., ds: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., fileFormat: str = ..., fil: str = ..., fileImageName: str = ..., fin: str = ..., fillTextureSeams: bool | int = ..., fts: bool | int = ..., force: bool | int = ..., f: bool | int = ..., fullUvRange: bool | int = ..., fur: bool | int = ..., name: str = ..., n: str = ..., pixelFormat: str = ..., pf: str = ..., query: bool | int = ..., q: bool | int = ..., resolutionX: int = ..., rx: int = ..., resolutionY: int = ..., ry: int = ..., reuseDepthMap: bool | int = ..., rdm: bool | int = ..., samplePlane: bool | int = ..., sp: bool | int = ..., samplePlaneRange: tuple[float, float, float, float] = ..., spr: tuple[float, float, float, float] = ..., shadows: bool | int = ..., sh: bool | int = ..., uvBBoxIntersect: bool | int = ..., ubi: bool | int = ..., uvRange: tuple[float, float, float, float] = ..., uvr: tuple[float, float, float, float] = ..., uvSetName: str = ..., uv: str = ...) -> Any: ...
def convertTessellation(*args, allCameras: bool | int = ..., acm: bool | int = ..., camera: str = ..., cam: str = ...) -> Any: ...
def convertUnit(*args, fromUnit: str = ..., f: str = ..., toUnit: str = ..., t: str = ...) -> Any: ...
def copyAttr(*args, attribute: str | list[str] = ..., at: str | list[str] = ..., containerParentChild: bool | int = ..., cpc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., inConnections: bool | int = ..., ic: bool | int = ..., keepSourceConnections: bool | int = ..., ksc: bool | int = ..., outConnections: bool | int = ..., oc: bool | int = ..., query: bool | int = ..., q: bool | int = ..., renameTargetContainer: bool | int = ..., rtc: bool | int = ..., values: bool | int = ..., v: bool | int = ...) -> Any: ...
def copyDeformerWeights(*args, destinationDeformer: bool | int | str = ..., dd: bool | int | str = ..., destinationShape: bool | int | str = ..., ds: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., mirrorInverse: bool | int = ..., mi: bool | int = ..., mirrorMode: bool | int | str = ..., mm: bool | int | str = ..., noMirror: bool | int = ..., nm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., smooth: bool | int = ..., sm: bool | int = ..., sourceDeformer: bool | int | str = ..., sd: bool | int | str = ..., sourceShape: bool | int | str = ..., ss: bool | int | str = ..., surfaceAssociation: bool | int | str = ..., sa: bool | int | str = ..., uvSpace: bool | int | tuple[str, str] = ..., uv: bool | int | tuple[str, str] = ...) -> Any: ...
def copyFlexor(*args) -> Any: ...
def copyKey(*args, animLayer: str = ..., al: str = ..., animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., clipboard: str = ..., cb: str = ..., controlPoints: bool | int = ..., cp: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., forceIndependentEulerAngles: bool | int = ..., fea: bool | int = ..., hierarchy: str = ..., hi: str = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., option: str = ..., o: str = ..., shape: bool | int = ..., s: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ...) -> Any: ...
def copyNode(*args) -> Any: ...
def copySkinWeights(*args, destinationSkin: bool | int | str = ..., ds: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., influenceAssociation: bool | int | str | list[str] = ..., ia: bool | int | str | list[str] = ..., mirrorInverse: bool | int = ..., mi: bool | int = ..., mirrorMode: bool | int | str = ..., mm: bool | int | str = ..., noBlendWeight: bool | int = ..., nbw: bool | int = ..., noMirror: bool | int = ..., nm: bool | int = ..., normalize: bool | int = ..., nr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sampleSpace: bool | int | int = ..., spa: bool | int | int = ..., smooth: bool | int = ..., sm: bool | int = ..., sourceSkin: bool | int | str = ..., ss: bool | int | str = ..., surfaceAssociation: bool | int | str = ..., sa: bool | int | str = ..., uvSpace: bool | int | tuple[str, str] = ..., uv: bool | int | tuple[str, str] = ...) -> Any: ...
def crashInfo(*args, crashFile: bool | int = ..., cf: bool | int = ..., query: bool | int = ..., q: bool | int = ..., savedBeforeCrash: bool | int = ..., sbc: bool | int = ...) -> Any: ...
def createAttrPatterns(*args, patternDefinition: str = ..., pd: str = ..., patternFile: str = ..., pf: str = ..., patternType: str = ..., pt: str = ...) -> Any: ...
def createDisplayLayer(*args, empty: bool | int = ..., e: bool | int = ..., makeCurrent: bool | int = ..., mc: bool | int = ..., name: str = ..., n: str = ..., noRecurse: bool | int = ..., nr: bool | int = ..., number: int = ..., num: int = ...) -> Any: ...
def createEditor(*args, noCloseOnDelete: bool | int = ..., nc: bool | int = ..., queueForDelete: bool | int = ..., qfd: bool | int = ...) -> Any: ...
def createNode(*args, name: str = ..., n: str = ..., parent: str = ..., p: str = ..., shared: bool | int = ..., s: bool | int = ..., skipSelect: bool | int = ..., ss: bool | int = ...) -> Any: ...
def createNurbsCircleCtx(*args, attachToSections: bool | int = ..., degree: int = ..., d: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., normal: tuple[float, float, float] = ..., nr: tuple[float, float, float] = ..., normalType: int = ..., nrt: int = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., sections: int = ..., sc: int = ..., sweep: float = ..., sw: float = ..., tolerance: float = ..., tol: float = ..., toleranceType: int = ..., tlt: int = ..., useTolerance: bool | int = ..., ut: bool | int = ...) -> Any: ...
def createNurbsConeCtx(*args, attachToHeightRatio: bool | int = ..., ahr: bool | int = ..., attachToSections: bool | int = ..., attachToSpans: bool | int = ..., asp: bool | int = ..., axis: tuple[float, float, float] = ..., ax: tuple[float, float, float] = ..., axisType: int = ..., axt: int = ..., caps: int = ..., cp: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: float = ..., esw: float = ..., exists: bool | int = ..., ex: bool | int = ..., extraTransformOnCaps: bool | int = ..., xtc: bool | int = ..., height: float = ..., h: float = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., sections: int = ..., sc: int = ..., spans: int = ..., sp: int = ..., startSweep: float = ..., ssw: float = ..., surfaceDegree: int = ..., sd: int = ..., tolerance: float = ..., tol: float = ..., toleranceType: int = ..., tlt: int = ..., useTolerance: bool | int = ..., ut: bool | int = ...) -> Any: ...
def createNurbsCubeCtx(*args, attachToPatchesU: bool | int = ..., apu: bool | int = ..., attachToPatchesV: bool | int = ..., apv: bool | int = ..., axis: tuple[float, float, float] = ..., ax: tuple[float, float, float] = ..., axisType: int = ..., axt: int = ..., depth: float = ..., d: float = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., height: float = ..., h: float = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., surfaceDegree: int = ..., sd: int = ..., uPatches: int = ..., up: int = ..., vPatches: int = ..., vp: int = ..., width: float = ..., w: float = ...) -> Any: ...
def createNurbsCylinderCtx(*args, attachToHeightRatio: bool | int = ..., ahr: bool | int = ..., attachToSections: bool | int = ..., attachToSpans: bool | int = ..., asp: bool | int = ..., axis: tuple[float, float, float] = ..., ax: tuple[float, float, float] = ..., axisType: int = ..., axt: int = ..., caps: int = ..., cp: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: float = ..., esw: float = ..., exists: bool | int = ..., ex: bool | int = ..., extraTransformOnCaps: bool | int = ..., xtc: bool | int = ..., height: float = ..., h: float = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., sections: int = ..., sc: int = ..., spans: int = ..., sp: int = ..., startSweep: float = ..., ssw: float = ..., surfaceDegree: int = ..., sd: int = ..., tolerance: float = ..., tol: float = ..., toleranceType: int = ..., tlt: int = ..., useTolerance: bool | int = ..., ut: bool | int = ...) -> Any: ...
def createNurbsPlaneCtx(*args, attachToPatchesU: bool | int = ..., apu: bool | int = ..., attachToPatchesV: bool | int = ..., apv: bool | int = ..., axis: tuple[float, float, float] = ..., ax: tuple[float, float, float] = ..., axisType: int = ..., axt: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., height: float = ..., h: float = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., surfaceDegree: int = ..., sd: int = ..., uPatches: int = ..., up: int = ..., vPatches: int = ..., vp: int = ..., width: float = ..., w: float = ...) -> Any: ...
def createNurbsSphereCtx(*args, attachToHeightRatio: bool | int = ..., ahr: bool | int = ..., attachToSections: bool | int = ..., attachToSpans: bool | int = ..., asp: bool | int = ..., axis: tuple[float, float, float] = ..., ax: tuple[float, float, float] = ..., axisType: int = ..., axt: int = ..., degree: int = ..., d: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: float = ..., esw: float = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., sections: int = ..., sc: int = ..., spans: int = ..., sp: int = ..., startSweep: float = ..., ssw: float = ..., tolerance: float = ..., tol: float = ..., toleranceType: int = ..., tlt: int = ..., useTolerance: bool | int = ..., ut: bool | int = ...) -> Any: ...
def createNurbsSquareCtx(*args, attachToSpans: bool | int = ..., asp: bool | int = ..., axis: tuple[float, float, float] = ..., ax: tuple[float, float, float] = ..., axisType: int = ..., axt: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., height: float = ..., h: float = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., spans: int = ..., sp: int = ..., surfaceDegree: int = ..., sd: int = ..., width: float = ..., w: float = ...) -> Any: ...
def createNurbsTorusCtx(*args, attachToHeightRatio: bool | int = ..., ahr: bool | int = ..., attachToSections: bool | int = ..., attachToSpans: bool | int = ..., asp: bool | int = ..., axis: tuple[float, float, float] = ..., ax: tuple[float, float, float] = ..., axisType: int = ..., axt: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: float = ..., esw: float = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., minorRadius: float = ..., mr: float = ..., minorSweep: float = ..., msw: float = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., sections: int = ..., sc: int = ..., spans: int = ..., sp: int = ..., startSweep: float = ..., ssw: float = ..., surfaceDegree: int = ..., sd: int = ..., tolerance: float = ..., tol: float = ..., toleranceType: int = ..., tlt: int = ..., useTolerance: bool | int = ..., ut: bool | int = ...) -> Any: ...
def createPolyConeCtx(*args, attachToSubdivisionsAxis: bool | int = ..., asa: bool | int = ..., attachToSubdivisionsCap: bool | int = ..., asc: bool | int = ..., attachToSubdivisionsHeight: bool | int = ..., ash: bool | int = ..., axis: int = ..., ax: int = ..., createUVs: int = ..., cuv: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., height: float = ..., h: float = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., roundCap: bool | int = ..., rc: bool | int = ..., subdivisionsDepth: int = ..., sd: int = ..., subdivisionsHeight: int = ..., sh: int = ..., subdivisionsWidth: int = ..., sw: int = ...) -> Any: ...
def createPolyCubeCtx(*args, attachToSubdivisionsAll: bool | int = ..., asa: bool | int = ..., attachToSubdivisionsDepth: bool | int = ..., asd: bool | int = ..., attachToSubdivisionsHeight: bool | int = ..., ash: bool | int = ..., attachToSubdivisionsWidth: bool | int = ..., asw: bool | int = ..., axis: int = ..., ax: int = ..., createUVs: int = ..., cuv: int = ..., depth: float = ..., d: float = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., height: float = ..., h: float = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., subdivisionsDepth: int = ..., sd: int = ..., subdivisionsHeight: int = ..., sh: int = ..., subdivisionsWidth: int = ..., sw: int = ..., width: float = ..., w: float = ...) -> Any: ...
def createPolyCylinderCtx(*args, attachToSubdivisionsAxis: bool | int = ..., asa: bool | int = ..., attachToSubdivisionsCap: bool | int = ..., asc: bool | int = ..., attachToSubdivisionsHeight: bool | int = ..., ash: bool | int = ..., axis: int = ..., ax: int = ..., createUVs: int = ..., cuv: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., height: float = ..., h: float = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., roundCap: bool | int = ..., rc: bool | int = ..., subdivisionsAxis: int = ..., sa: int = ..., subdivisionsCap: int = ..., sc: int = ..., subdivisionsHeight: int = ..., sh: int = ...) -> Any: ...
def createPolyHelixCtx(*args, attachToNumberCoils: bool | int = ..., anc: bool | int = ..., attachToRadius: bool | int = ..., atr: bool | int = ..., attachToSubdivisionsAxis: bool | int = ..., asa: bool | int = ..., attachToSubdivisionsCap: bool | int = ..., asc: bool | int = ..., attachToSubdivisionsCoil: bool | int = ..., aso: bool | int = ..., axis: int = ..., ax: int = ..., coils: float = ..., c: float = ..., createUVs: int = ..., cuv: int = ..., direction: bool | int = ..., dir: bool | int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., height: float = ..., h: float = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., roundCap: bool | int = ..., rc: bool | int = ..., subdivisionsAxis: int = ..., sa: int = ..., subdivisionsCap: int = ..., sc: int = ..., subdivisionsCoil: int = ..., sl: int = ..., width: float = ..., w: float = ...) -> Any: ...
def createPolyPipeCtx(*args, attachToSubdivisionsAxis: bool | int = ..., asa: bool | int = ..., attachToSubdivisionsCap: bool | int = ..., asc: bool | int = ..., attachToSubdivisionsHeight: bool | int = ..., ash: bool | int = ..., attachToThickness: bool | int = ..., att: bool | int = ..., axis: int = ..., ax: int = ..., createUVs: int = ..., cuv: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., height: float = ..., h: float = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., roundCap: bool | int = ..., rc: bool | int = ..., subdivisionsAxis: int = ..., sa: int = ..., subdivisionsCap: int = ..., sc: int = ..., subdivisionsHeight: int = ..., sh: int = ..., thickness: float = ..., th: float = ...) -> Any: ...
def createPolyPlaneCtx(*args, attachToSubdivisionsAll: bool | int = ..., asa: bool | int = ..., attachToSubdivisionsHeight: bool | int = ..., ash: bool | int = ..., attachToSubdivisionsWidth: bool | int = ..., asw: bool | int = ..., axis: int = ..., ax: int = ..., createUVs: int = ..., cuv: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., height: float = ..., h: float = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., subdivisionsHeight: int = ..., sh: int = ..., subdivisionsWidth: int = ..., sw: int = ..., width: float = ..., w: float = ...) -> Any: ...
def createPolyPlatonicSolidCtx(*args, axis: int = ..., ax: int = ..., createUVs: int = ..., cuv: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., sideLength: float = ..., sl: float = ..., solidType: int = ..., st: int = ...) -> Any: ...
def createPolyPrismCtx(*args, attachToNumSides: bool | int = ..., ans: bool | int = ..., attachToSubdivisionsCap: bool | int = ..., asc: bool | int = ..., attachToSubdivisionsHeight: bool | int = ..., ash: bool | int = ..., axis: int = ..., ax: int = ..., createUVs: int = ..., cuv: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., length: float = ..., ln: float = ..., name: str = ..., n: str = ..., numberOfSides: int = ..., ns: int = ..., query: bool | int = ..., q: bool | int = ..., sideLength: float = ..., sl: float = ..., subdivisionsCap: int = ..., sc: int = ..., subdivisionsHeight: int = ..., sh: int = ...) -> Any: ...
def createPolyPyramidCtx(*args, attachToSubdivisionsCap: bool | int = ..., asc: bool | int = ..., attachToSubdivisionsHeight: bool | int = ..., ash: bool | int = ..., axis: int = ..., ax: int = ..., createUVs: int = ..., cuv: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., numberOfSides: int = ..., ns: int = ..., query: bool | int = ..., q: bool | int = ..., sideLength: float = ..., sl: float = ..., subdivisionsDepth: int = ..., sd: int = ..., subdivisionsHeight: int = ..., sh: int = ...) -> Any: ...
def createPolySoccerBallCtx(*args, axis: int = ..., ax: int = ..., createUVs: int = ..., cuv: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., sideLength: float = ..., sl: float = ...) -> Any: ...
def createPolySphereCtx(*args, attachToSubdivisionsAll: bool | int = ..., asa: bool | int = ..., attachToSubdivisionsAxis: bool | int = ..., asx: bool | int = ..., attachToSubdivisionsHeight: bool | int = ..., ash: bool | int = ..., axis: int = ..., ax: int = ..., createUVs: int = ..., cuv: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., subdivisionsHeight: int = ..., sh: int = ..., subdivisionsWidth: int = ..., sw: int = ...) -> Any: ...
def createPolyTorusCtx(*args, attachToSectionRadius: bool | int = ..., asr: bool | int = ..., attachToSubdivisionsAxis: bool | int = ..., asa: bool | int = ..., attachToSubdivisionsHeight: bool | int = ..., ash: bool | int = ..., axis: int = ..., ax: int = ..., createUVs: int = ..., cuv: int = ..., doDragEdit: bool | int = ..., dde: bool | int = ..., doSubdivisionsCapsEdit: bool | int = ..., dsc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., sectionRadius: float = ..., sr: float = ..., subdivisionsHeight: int = ..., sh: int = ..., subdivisionsWidth: int = ..., sw: int = ..., twist: float = ..., tw: float = ...) -> Any: ...
def createRenderLayer(*args, empty: bool | int = ..., e: bool | int = ..., g: bool | int = ..., makeCurrent: bool | int = ..., mc: bool | int = ..., name: str = ..., n: str = ..., noRecurse: bool | int = ..., nr: bool | int = ..., number: int = ..., num: int = ...) -> Any: ...
def ctxAbort(*args) -> Any: ...
def ctxCompletion(*args) -> Any: ...
def ctxData(*args) -> Any: ...
def ctxEditMode(*args, buttonDown: bool | int = ..., btd: bool | int = ..., buttonUp: bool | int = ..., btu: bool | int = ...) -> Any: ...
def ctxTraverse(*args, down: bool | int = ..., d: bool | int = ..., left: bool | int = ..., l: bool | int = ..., right: bool | int = ..., r: bool | int = ..., up: bool | int = ...) -> Any: ...
def currentCtx(*args) -> Any: ...
def currentTime(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., update: bool | int = ..., u: bool | int = ...) -> Any: ...
def currentTimeCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def currentUnit(*args, angle: bool | int | str = ..., a: bool | int | str = ..., fullName: bool | int = ..., f: bool | int = ..., linear: bool | int | str = ..., l: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., time: bool | int | str = ..., t: bool | int | str = ..., updateAnimation: bool | int = ..., ua: bool | int = ...) -> Any: ...
def curve(*args, append: bool | int = ..., a: bool | int = ..., bezier: bool | int = ..., bez: bool | int = ..., degree: float = ..., d: float = ..., editPoint: tuple[float, float, float] | list[tuple[float, float, float]] = ..., ep: tuple[float, float, float] | list[tuple[float, float, float]] = ..., knot: float | list[float] = ..., k: float | list[float] = ..., name: str = ..., n: str = ..., objectSpace: bool | int = ..., os: bool | int = ..., periodic: bool | int = ..., per: bool | int = ..., point: tuple[float, float, float] | list[tuple[float, float, float]] = ..., p: tuple[float, float, float] | list[tuple[float, float, float]] = ..., pointWeight: tuple[float, float, float, float] | list[tuple[float, float, float, float]] = ..., pw: tuple[float, float, float, float] | list[tuple[float, float, float, float]] = ..., replace: bool | int = ..., r: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def curveAddPtCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def curveBezierCtx(*args, degree: int = ..., d: int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., manipMode: str = ..., mm: str = ..., name: str = ..., n: str = ..., preserveShape: bool | int = ..., ps: bool | int = ..., preserveShapeFraction: float = ..., pf: float = ..., query: bool | int = ..., q: bool | int = ..., refit: bool | int = ..., rf: bool | int = ..., selectMode: str = ..., slm: str = ..., uniform: bool | int = ..., un: bool | int = ...) -> Any: ...
def curveCVCtx(*args, bezier: bool | int = ..., bez: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., multEndKnots: bool | int = ..., me: bool | int = ..., name: str = ..., n: str = ..., preserveShape: bool | int = ..., ps: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rational: bool | int = ..., rl: bool | int = ..., refit: bool | int = ..., rf: bool | int = ..., symmetry: bool | int = ..., sm: bool | int = ..., uniform: bool | int = ..., un: bool | int = ...) -> Any: ...
def curveEPCtx(*args, bezier: bool | int = ..., bez: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., preserveShape: bool | int = ..., ps: bool | int = ..., preserveShapeFraction: bool | int | float = ..., pf: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., refit: bool | int = ..., rf: bool | int = ..., uniform: bool | int = ..., un: bool | int = ...) -> Any: ...
def curveEditorCtx(*args, direction: bool | int | int = ..., dir: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., relativeTangentSize: bool | int | float = ..., rts: bool | int | float = ..., title: bool | int | str = ..., t: bool | int | str = ...) -> Any: ...
def curveIntersect(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | tuple[float, float, float] = ..., d: bool | int | tuple[float, float, float] = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useDirection: bool | int = ..., ud: bool | int = ...) -> Any: ...
def curveMoveEPCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def curveOnSurface(*args, append: bool | int = ..., a: bool | int = ..., degree: float = ..., d: float = ..., knot: float | list[float] = ..., k: float | list[float] = ..., name: str = ..., n: str = ..., periodic: bool | int = ..., per: bool | int = ..., positionUV: tuple[float, float] | list[tuple[float, float]] = ..., uv: tuple[float, float] | list[tuple[float, float]] = ..., replace: bool | int = ..., r: bool | int = ...) -> Any: ...
def curveRGBColor(*args, hueSaturationValue: bool | int = ..., hsv: bool | int = ..., list: bool | int = ..., l: bool | int = ..., listNames: bool | int = ..., ln: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., r: bool | int = ..., resetToFactory: bool | int = ..., rf: bool | int = ..., resetToSaved: bool | int = ..., rs: bool | int = ...) -> Any: ...
def curveSketchCtx(*args, degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def cutKey(*args, animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., clear: bool | int = ..., cl: bool | int = ..., controlPoints: bool | int = ..., cp: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., hierarchy: str = ..., hi: str = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., option: str = ..., o: str = ..., selectKey: bool | int = ..., sl: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ...) -> Any: ...
def cutView(*args, **kwargs): ...
def cycleCheck(*args, all: bool | int = ..., children: bool | int = ..., c: bool | int = ..., dag: bool | int = ..., evaluation: bool | int = ..., e: bool | int = ..., firstCycleOnly: bool | int = ..., fco: bool | int = ..., firstPlugPerNode: bool | int = ..., fpn: bool | int = ..., lastPlugPerNode: bool | int = ..., lpn: bool | int = ..., list: bool | int = ..., l: bool | int = ..., listSeparator: str = ..., ls: str = ..., parents: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., secondary: bool | int = ..., s: bool | int = ..., timeLimit: int | float = ..., tl: int | float = ...) -> Any: ...
def cylinder(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: bool | int | float = ..., esw: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., heightRatio: bool | int | float = ..., hr: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sections: bool | int | int = ..., s: bool | int | int = ..., spans: bool | int | int = ..., nsp: bool | int | int = ..., startSweep: bool | int | float = ..., ssw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useTolerance: bool | int = ..., ut: bool | int = ...) -> Any: ...
def dagCommandWrapper(*args) -> Any: ...
def dagObjectCompare(*args, attribute: bool | int = ..., a: bool | int = ..., bail: str = ..., b: str = ..., connection: bool | int = ..., c: bool | int = ..., namespace: str = ..., n: str = ..., relative: bool | int = ..., r: bool | int = ..., short: bool | int = ..., s: bool | int = ..., type: bool | int = ..., t: bool | int = ...) -> Any: ...
def dagObjectHit(*args, cache: bool | int = ..., ch: bool | int = ..., menu: str = ..., mn: str = ..., multiple: bool | int = ..., m: bool | int = ..., targetSize: int = ..., ts: int = ...) -> Any: ...
def dagPose(*args, addToPose: bool | int = ..., a: bool | int = ..., atPose: bool | int = ..., ap: bool | int = ..., bindPose: bool | int = ..., bp: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., g: bool | int = ..., members: bool | int = ..., m: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., reset: bool | int = ..., rs: bool | int = ..., restore: bool | int = ..., r: bool | int = ..., save: bool | int = ..., s: bool | int = ..., selection: bool | int = ..., sl: bool | int = ..., worldParent: bool | int = ..., wp: bool | int = ...) -> Any: ...
def dataStructure(*args, asFile: bool | int | str = ..., af: bool | int | str = ..., asString: bool | int | str = ..., dataType: bool | int = ..., dt: bool | int = ..., format: bool | int | str = ..., fmt: bool | int | str = ..., listMemberNames: bool | int | str = ..., lmn: bool | int | str = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rem: bool | int = ..., removeAll: bool | int = ..., ral: bool | int = ...) -> Any: ...
def date(*args, date: bool | int = ..., d: bool | int = ..., format: str = ..., f: str = ..., shortDate: bool | int = ..., sd: bool | int = ..., shortTime: bool | int = ..., st: bool | int = ..., time: bool | int = ..., t: bool | int = ...) -> Any: ...
def dbcount(*args, enabled: bool | int = ..., e: bool | int = ..., file: str = ..., f: str = ..., keyword: str = ..., k: str = ..., list: bool | int = ..., l: bool | int = ..., maxdepth: int = ..., md: int = ..., quick: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., r: bool | int = ..., spreadsheet: bool | int = ..., s: bool | int = ...) -> Any: ...
def dbfootprint(*args, allObjects: bool | int = ..., all: bool | int = ..., outputFile: str = ..., of: str = ..., query: bool | int = ..., q: bool | int = ..., type: bool | int | str = ..., t: bool | int | str = ...) -> Any: ...
def dbmessage(*args, file: str = ..., f: str = ..., list: bool | int = ..., l: bool | int = ..., monitor: bool | int = ..., m: bool | int = ..., type: str = ..., t: str = ...) -> Any: ...
def dbpeek(*args, allObjects: bool | int = ..., all: bool | int = ..., argument: bool | int | str | list[str] = ..., a: bool | int | str | list[str] = ..., count: bool | int | int = ..., c: bool | int | int = ..., evaluationGraph: bool | int = ..., eg: bool | int = ..., operation: bool | int | str = ..., op: bool | int | str = ..., outputFile: bool | int | str = ..., of: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def dbtrace(*args, filter: bool | int | str = ..., f: bool | int | str = ..., info: bool | int = ..., i: bool | int = ..., keyword: bool | int | str | list[str] = ..., k: bool | int | str | list[str] = ..., mark: bool | int = ..., m: bool | int = ..., off: Any = ..., boolean: Any = ..., output: bool | int | str = ..., o: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., timed: bool | int = ..., tm: bool | int = ..., title: str = ..., t: str = ..., verbose: bool | int = ..., v: bool | int = ...) -> Any: ...
def defaultLightListCheckBox(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: str = ..., l: str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., shadingGroup: str = ..., sg: str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def defaultNavigation(*args, connectToExisting: bool | int = ..., ce: bool | int = ..., createNew: bool | int = ..., cn: bool | int = ..., defaultAttribute: bool | int = ..., da: bool | int = ..., defaultTraversal: bool | int = ..., dtv: bool | int = ..., defaultWorkingNode: bool | int = ..., dwn: bool | int = ..., delete: bool | int = ..., destination: str = ..., d: str = ..., disconnect: bool | int = ..., dis: bool | int = ..., force: bool | int = ..., f: bool | int = ..., ignore: bool | int = ..., i: bool | int = ..., navigatorDecisionString: str = ..., nds: str = ..., quiet: bool | int = ..., qt: bool | int = ..., relatedNodes: bool | int = ..., ren: bool | int = ..., source: str = ..., s: str = ..., unignore: bool | int = ..., u: bool | int = ...) -> Any: ...
def defineDataServer(*args, device: str = ..., d: str = ..., server: str = ..., s: str = ..., undefine: bool | int = ..., u: bool | int = ...) -> Any: ...
def defineVirtualDevice(*args, axis: int = ..., ax: int = ..., channel: str = ..., c: str = ..., clear: bool | int = ..., cl: bool | int = ..., create: bool | int = ..., cr: bool | int = ..., device: str = ..., d: str = ..., parent: str = ..., p: str = ..., undefine: bool | int = ..., u: bool | int = ..., usage: str = ..., use: str = ...) -> Any: ...
def deformableShape(*args, chain: bool | int = ..., ch: bool | int = ..., createOriginalGeometry: bool | int = ..., cog: bool | int = ..., createTweakNode: bool | int = ..., ctw: bool | int = ..., createUpstreamTagInjectionNode: bool | int = ..., cti: bool | int = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., localShapeInAttr: bool | int = ..., lsi: bool | int = ..., localShapeOutAttr: bool | int = ..., lso: bool | int = ..., nodeChain: bool | int = ..., nch: bool | int = ..., originalGeometry: bool | int = ..., og: bool | int = ..., outputPlugChain: bool | int = ..., och: bool | int = ..., plugChain: bool | int = ..., pch: bool | int = ..., tagInjectionList: bool | int = ..., til: bool | int = ..., tagInjectionNode: bool | int = ..., ti: bool | int = ..., tweakNode: bool | int = ..., tw: bool | int = ..., upstreamTagInjectionNode: bool | int = ..., uti: bool | int = ..., worldShapeOutAttr: bool | int = ..., wso: bool | int = ...) -> Any: ...
def deformer(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., name: str = ..., n: str = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., split: bool | int = ..., sp: bool | int = ..., type: str = ..., typ: str = ..., useComponentTags: bool | int = ..., uct: bool | int = ...) -> Any: ...
def deformerWeights(*args, attribute: bool | int | str | list[str] = ..., at: bool | int | str | list[str] = ..., defaultValue: bool | int | float = ..., dv: bool | int | float = ..., deformer: bool | int | str | list[str] = ..., df: bool | int | str | list[str] = ..., edit: bool | int = ..., e: bool | int = ..., export: bool | int = ..., ex: bool | int = ..., format: bool | int | str = ..., fm: bool | int | str = ..., ignoreName: bool | int = ..., ig: bool | int = ..., im: bool | int = ..., method: bool | int | str = ..., m: bool | int | str = ..., path: bool | int | str = ..., p: bool | int | str = ..., positionTolerance: bool | int | float = ..., pt: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., remap: bool | int | str | list[str] = ..., r: bool | int | str | list[str] = ..., shape: bool | int | str | list[str] = ..., sh: bool | int | str | list[str] = ..., skip: bool | int | str | list[str] = ..., sk: bool | int | str | list[str] = ..., vertexConnections: bool | int = ..., vc: bool | int = ..., weightPrecision: bool | int | int = ..., wp: bool | int | int = ..., weightTolerance: bool | int | float = ..., wt: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def delete(*args, all: bool | int = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., channels: bool | int = ..., c: bool | int = ..., constraints: bool | int = ..., cn: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., controlPoints: bool | int = ..., cp: bool | int = ..., expressions: bool | int = ..., e: bool | int = ..., hierarchy: str = ..., hi: str = ..., inputConnectionsAndNodes: bool | int = ..., icn: bool | int = ..., motionPaths: bool | int = ..., mp: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., staticChannels: bool | int = ..., sc: bool | int = ..., timeAnimationCurves: bool | int = ..., tac: bool | int = ..., unitlessAnimationCurves: bool | int = ..., uac: bool | int = ...) -> Any: ...
def deleteAttr(*args, attribute: str = ..., at: str = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def deleteAttrPattern(*args, allPatterns: bool | int = ..., all: bool | int = ..., patternName: str = ..., pn: str = ..., patternType: str = ..., pt: str = ...) -> Any: ...
def deleteExtension(*args, attribute: str = ..., at: str = ..., forceDelete: bool | int = ..., fd: bool | int = ..., nodeType: str = ..., nt: str = ...) -> Any: ...

deleteGeometryCache: Callable
deleteHistoryAheadOfGeomCache: Callable
deleteNclothCache: Callable
def deleteUI(*args, collection: bool | int = ..., cl: bool | int = ..., control: bool | int = ..., ctl: bool | int = ..., editor: bool | int = ..., ed: bool | int = ..., layout: bool | int = ..., lay: bool | int = ..., menu: bool | int = ..., m: bool | int = ..., menuItem: bool | int = ..., mi: bool | int = ..., panel: bool | int = ..., pnl: bool | int = ..., panelConfig: bool | int = ..., pc: bool | int = ..., radioMenuItemCollection: bool | int = ..., ric: bool | int = ..., toolContext: bool | int = ..., tc: bool | int = ..., uiTemplate: bool | int = ..., uit: bool | int = ..., window: bool | int = ..., wnd: bool | int = ...) -> Any: ...
def deltaMush(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., envelope: bool | int | float = ..., en: bool | int | float = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., inwardConstraint: bool | int | float = ..., iwc: bool | int | float = ..., name: str = ..., n: str = ..., outwardConstraint: bool | int | float = ..., owc: bool | int | float = ..., parallel: bool | int = ..., par: bool | int = ..., pinBorderVertices: bool | int = ..., pbv: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., smoothingIterations: bool | int | int = ..., si: bool | int | int = ..., smoothingStep: bool | int | float = ..., ss: bool | int | float = ..., split: bool | int = ..., sp: bool | int = ..., useComponentTags: bool | int = ..., uct: bool | int = ...) -> Any: ...
def detachCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keep: bool | int | bool | int | list[bool | int] = ..., k: bool | int | bool | int | list[bool | int] = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float | list[float] = ..., p: bool | int | float | list[float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...) -> Any: ...
def detachDeviceAttr(*args, all: bool | int = ..., attribute: str = ..., at: str = ..., axis: str = ..., ax: str = ..., device: str = ..., d: str = ..., selection: bool | int = ..., sl: bool | int = ...) -> Any: ...
def detachSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keep: bool | int | bool | int | list[bool | int] = ..., k: bool | int | bool | int | list[bool | int] = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float | list[float] = ..., p: bool | int | float | list[float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...) -> Any: ...
def deviceEditor(*args, control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., stateString: bool | int = ..., sts: bool | int = ..., takePath: bool | int | str = ..., tp: bool | int | str = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def deviceManager(*args, attachment: bool | int = ..., att: bool | int = ..., axisCoordChanges: bool | int = ..., acc: bool | int = ..., axisIndex: bool | int | int = ..., axi: bool | int | int = ..., axisName: bool | int = ..., axn: bool | int = ..., axisOffset: bool | int = ..., axo: bool | int = ..., axisScale: bool | int = ..., axs: bool | int = ..., deviceIndex: bool | int | int = ..., dvi: bool | int | int = ..., deviceNameFromIndex: bool | int | int = ..., dni: bool | int | int = ..., numAxis: bool | int = ..., nax: bool | int = ..., numDevices: bool | int = ..., ndv: bool | int = ...) -> Any: ...
def devicePanel(*args, control: bool | int = ..., ctl: bool | int = ..., copy: str = ..., cp: str = ..., createString: bool | int = ..., cs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., editString: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., init: bool | int = ..., isUnique: bool | int = ..., iu: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., menuBarRepeatLast: bool | int = ..., mrl: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., needsInit: bool | int = ..., ni: bool | int = ..., parent: str = ..., p: str = ..., popupMenuProcedure: bool | int | str | Callable = ..., pmp: bool | int | str | Callable = ..., replacePanel: str = ..., rp: str = ..., tearOff: bool | int = ..., to: bool | int = ..., tearOffCopy: str = ..., toc: str = ..., tearOffRestore: bool | int = ..., tor: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def dgInfo(*args, allNodes: bool | int = ..., all: bool | int = ..., connections: bool | int = ..., c: bool | int = ..., dirty: bool | int = ..., d: bool | int = ..., nodes: bool | int = ..., n: bool | int = ..., nonDeletable: bool | int = ..., nd: bool | int = ..., outputFile: str = ..., of: str = ..., propagation: bool | int = ..., p: bool | int = ..., short: bool | int = ..., s: bool | int = ..., size: bool | int = ..., sz: bool | int = ..., subgraph: bool | int = ..., sub: bool | int = ..., type: str = ..., nt: str = ...) -> Any: ...
def dgValidateCurve(*args, allCurves: bool | int = ..., a: bool | int = ..., verbose: bool | int = ..., v: bool | int = ...) -> Any: ...
def dgcontrol(*args, iomode: bool | int = ..., iom: bool | int = ...) -> Any: ...
def dgdirty(*args, allPlugs: bool | int = ..., a: bool | int = ..., clean: bool | int = ..., c: bool | int = ..., implicit: bool | int = ..., i: bool | int = ..., list: bool | int | str = ..., l: bool | int | str = ..., propagation: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., showTiming: bool | int = ..., st: bool | int = ..., verbose: bool | int = ..., v: bool | int = ...) -> Any: ...
def dgeval(*args, src: bool | int = ..., verbose: bool | int = ..., v: bool | int = ...) -> Any: ...
def dgmodified(*args) -> Any: ...
def dgtimer(*args, combineType: bool | int = ..., ct: bool | int = ..., hide: bool | int | str | list[str] = ..., hi: bool | int | str | list[str] = ..., hierarchy: bool | int = ..., h: bool | int = ..., maxDisplay: bool | int | int = ..., m: bool | int | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., noHeader: bool | int = ..., nh: bool | int = ..., outputFile: bool | int | str = ..., o: bool | int | str = ..., overhead: bool | int = ..., oh: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rangeLower: float = ..., rgl: float = ..., rangeUpper: float = ..., rgu: float = ..., reset: bool | int = ..., r: bool | int = ..., returnCode: bool | int | str = ..., rc: bool | int | str = ..., returnType: bool | int | str = ..., rt: bool | int | str = ..., show: bool | int | str | list[str] = ..., sh: bool | int | str | list[str] = ..., sortMetric: bool | int | str = ..., sm: bool | int | str = ..., sortType: bool | int | str = ..., st: bool | int | str = ..., threshold: bool | int | float = ..., th: bool | int | float = ..., timerOff: bool | int = ..., off: bool | int = ..., timerOn: bool | int = ..., on: bool | int = ..., trace: bool | int = ..., tr: bool | int = ..., type: bool | int | str = ..., t: bool | int | str = ..., uniqueName: bool | int = ..., un: bool | int = ..., updateHeatMap: int = ..., uhm: int = ...) -> Any: ...
def dimWhen(*args, clear: bool | int = ..., c: bool | int = ..., false: bool | int = ..., f: bool | int = ..., true: bool | int = ..., t: bool | int = ...) -> Any: ...
def directConnectPath(*args) -> Any: ...
def directKeyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., option: bool | int | str = ..., o: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., selectedOnly: bool | int = ..., so: bool | int = ...) -> Any: ...
def directionalLight(*args, decayRate: int = ..., d: int = ..., discRadius: bool | int | float = ..., drs: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int = ..., exc: bool | int = ..., intensity: bool | int | float = ..., i: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., position: bool | int | tuple[float, float, float] = ..., pos: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., rgb: bool | int | tuple[float, float, float] = ..., rotation: bool | int | tuple[float, float, float] = ..., rot: bool | int | tuple[float, float, float] = ..., shadowColor: bool | int | tuple[float, float, float] = ..., sc: bool | int | tuple[float, float, float] = ..., shadowDither: bool | int | float = ..., sd: bool | int | float = ..., shadowSamples: bool | int | int = ..., sh: bool | int | int = ..., softShadow: bool | int = ..., ss: bool | int = ..., useRayTraceShadows: bool | int = ..., rs: bool | int = ...) -> Any: ...
def dirmap(*args, convertDirectory: str = ..., cd: str = ..., enable: bool | int = ..., en: bool | int = ..., getAllMappings: bool | int = ..., gam: bool | int = ..., getMappedDirectory: str = ..., gmd: str = ..., mapDirectory: tuple[str, str] = ..., m: tuple[str, str] = ..., query: bool | int = ..., q: bool | int = ..., unmapDirectory: str = ..., um: str = ...) -> Any: ...
def disable(*args, value: bool | int = ..., v: bool | int = ...) -> Any: ...
def disableIncorrectNameWarning(*args) -> Any: ...
def disconnectAttr(*args, nextAvailable: bool | int = ..., na: bool | int = ...) -> Any: ...
def disconnectJoint(*args, attachHandleMode: bool | int = ..., ahm: bool | int = ..., deleteHandleMode: bool | int = ..., dhm: bool | int = ...) -> Any: ...
def diskCache(*args, append: bool | int = ..., a: bool | int = ..., cacheType: bool | int | str = ..., ct: bool | int | str = ..., close: bool | int | str = ..., c: bool | int | str = ..., closeAll: bool | int = ..., ca: bool | int = ..., delete: bool | int | str = ..., d: bool | int | str = ..., deleteAll: bool | int = ..., da: bool | int = ..., empty: bool | int | str = ..., e: bool | int | str = ..., emptyAll: bool | int = ..., ea: bool | int = ..., enabledCachesOnly: bool | int = ..., eco: bool | int = ..., endTime: bool | int | int | float = ..., et: bool | int | int | float = ..., frameRangeType: bool | int | str = ..., frt: bool | int | str = ..., overSample: bool | int = ..., os: bool | int = ..., query: bool | int = ..., q: bool | int = ..., samplingRate: bool | int | int = ..., sr: bool | int | int = ..., startTime: bool | int | int | float = ..., st: bool | int | int | float = ..., tempDir: bool | int = ..., tmp: bool | int = ...) -> Any: ...
def dispatchGenericCommand(*args) -> Any: ...
def displacementToPoly(*args, edit: bool | int = ..., e: bool | int = ..., findBboxOnly: bool | int = ..., fbb: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def displayAffected(*args, query: bool | int = ..., q: bool | int = ...) -> Any: ...
def displayColor(*args, active: bool | int = ..., a: bool | int = ..., create: bool | int = ..., c: bool | int = ..., dormant: bool | int = ..., d: bool | int = ..., list: bool | int = ..., l: bool | int = ..., query: bool | int = ..., q: bool | int = ..., queryIndex: int = ..., qi: int = ..., resetToFactory: bool | int = ..., rf: bool | int = ..., resetToSaved: bool | int = ..., rs: bool | int = ...) -> Any: ...
def displayCull(*args, backFaceCulling: bool | int = ..., bfc: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def displayLevelOfDetail(*args, levelOfDetail: bool | int = ..., lod: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def displayPref(*args, activeObjectPivots: bool | int = ..., aop: bool | int = ..., defaultFontSize: int = ..., dfs: int = ..., displayAffected: bool | int = ..., da: bool | int = ..., displayGradient: bool | int = ..., dgr: bool | int = ..., fontSettingMode: int = ..., fm: int = ..., ghostFrames: bool | int | tuple[int, int, int] = ..., gf: bool | int | tuple[int, int, int] = ..., lineWidth: float = ..., lw: float = ..., materialLoadingMode: bool | int | str = ..., mld: bool | int | str = ..., maxHardwareTextureResolution: bool | int = ..., mhr: bool | int = ..., maxTextureResolution: bool | int | int = ..., mtr: bool | int | int = ..., purgeExistingTextures: bool | int = ..., pet: bool | int = ..., query: bool | int = ..., q: bool | int = ..., regionOfEffect: bool | int = ..., roe: bool | int = ..., shadeTemplates: bool | int = ..., st: bool | int = ..., smallFontSize: int = ..., sfs: int = ..., textureDrawPixel: bool | int = ..., tdp: bool | int = ..., wireframeOnShadedActive: bool | int | str = ..., wsa: bool | int | str = ...) -> Any: ...
def displayRGBColor(*args, create: bool | int = ..., c: bool | int = ..., hueSaturationValue: bool | int = ..., hsv: bool | int = ..., list: bool | int = ..., l: bool | int = ..., query: bool | int = ..., q: bool | int = ..., resetToFactory: bool | int = ..., rf: bool | int = ..., resetToSaved: bool | int = ..., rs: bool | int = ...) -> Any: ...
def displaySmoothness(*args, all: bool | int = ..., boundary: bool | int = ..., bn: bool | int = ..., defaultCreation: bool | int = ..., dc: bool | int = ..., divisionsU: bool | int | int = ..., du: bool | int | int = ..., divisionsV: bool | int | int = ..., dv: bool | int | int = ..., full: bool | int = ..., f: bool | int = ..., hull: bool | int = ..., hl: bool | int = ..., pointsShaded: bool | int | int = ..., ps: bool | int | int = ..., pointsWire: bool | int | int = ..., pw: bool | int | int = ..., polygonObject: bool | int | int = ..., po: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., renderTessellation: bool | int = ..., rt: bool | int = ..., simplifyU: bool | int | int = ..., su: bool | int | int = ..., simplifyV: bool | int | int = ..., sv: bool | int | int = ...) -> Any: ...
def displayStats(*args, frameRate: bool | int = ..., fr: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def displayString(*args, delete: bool | int = ..., d: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., keys: bool | int = ..., k: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replace: bool | int = ..., r: bool | int = ..., value: bool | int | str = ..., v: bool | int | str = ...) -> Any: ...
def displaySurface(*args, flipNormals: bool | int = ..., flp: bool | int = ..., query: bool | int = ..., q: bool | int = ..., twoSidedLighting: bool | int = ..., two: bool | int = ..., xRay: bool | int = ..., x: bool | int = ...) -> Any: ...
def distanceDimContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def distanceDimension(*args, endPoint: tuple[float, float, float] = ..., ep: tuple[float, float, float] = ..., startPoint: tuple[float, float, float] = ..., sp: tuple[float, float, float] = ...) -> Any: ...
def doBlur(*args, colorFile: str = ..., c: str = ..., length: float = ..., l: float = ..., memCapSize: float = ..., o: float = ..., sharpness: float = ..., s: float = ..., smooth: float = ..., m: float = ..., smoothColor: bool | int = ..., r: bool | int = ..., vectorFile: str = ..., v: str = ...) -> Any: ...
def dockControl(*args, allowedArea: bool | int | str | list[str] = ..., aa: bool | int | str | list[str] = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., area: bool | int | str = ..., a: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., closeCommand: str | Callable = ..., cc: str | Callable = ..., content: bool | int | str = ..., con: bool | int | str = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dockStation: str = ..., ds: str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., enablePopupOption: bool | int = ..., epo: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fixedHeight: bool | int = ..., fh: bool | int = ..., fixedWidth: bool | int = ..., fw: bool | int = ..., floatChangeCommand: str | Callable = ..., fcc: str | Callable = ..., floating: bool | int = ..., fl: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., moveable: bool | int = ..., mov: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., r: bool | int = ..., retain: bool | int = ..., ret: bool | int = ..., sizeable: bool | int = ..., s: bool | int = ..., splitLayout: str = ..., sl: str = ..., state: bool | int | str = ..., st: bool | int | str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def dolly(*args, absolute: bool | int = ..., abs: bool | int = ..., distance: float = ..., d: float = ..., dollyTowardsCenter: bool | int = ..., dtc: bool | int = ..., orthoScale: float = ..., os: float = ..., relative: bool | int = ..., rel: bool | int = ...) -> Any: ...
def dollyCtx(*args, alternateContext: bool | int = ..., ac: bool | int = ..., boxDollyType: bool | int | str = ..., bdt: bool | int | str = ..., centerOfInterestDolly: bool | int = ..., cd: bool | int = ..., dollyTowardsCenter: bool | int = ..., dtc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., localDolly: bool | int = ..., ld: bool | int = ..., name: str = ..., n: str = ..., orthoZoom: bool | int = ..., oz: bool | int = ..., query: bool | int = ..., q: bool | int = ..., scale: bool | int | float = ..., s: bool | int | float = ..., toolName: bool | int | str = ..., tn: bool | int | str = ...) -> Any: ...
def dopeSheetEditor(*args, autoFit: bool | int | str = ..., af: bool | int | str = ..., autoFitTime: bool | int | str = ..., aft: bool | int | str = ..., control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., displayActiveKeyTangents: str = ..., dat: str = ..., displayActiveKeys: str = ..., dak: str = ..., displayInfinities: str = ..., di: str = ..., displayKeys: str = ..., dk: str = ..., displayTangents: str = ..., dtn: str = ..., displayValues: str = ..., dv: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., hierarchyBelow: bool | int = ..., hb: bool | int = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., lookAt: str = ..., la: str = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., outliner: bool | int | str = ..., o: bool | int | str = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., selectionWindow: bool | int | tuple[float, float, float, float] = ..., sel: bool | int | tuple[float, float, float, float] = ..., showScene: bool | int = ..., sc: bool | int = ..., showSummary: bool | int = ..., ss: bool | int = ..., showTicks: bool | int = ..., stk: bool | int = ..., snapTime: bool | int | str = ..., st: bool | int | str = ..., snapValue: bool | int | str = ..., sv: bool | int | str = ..., stateString: bool | int = ..., sts: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def doubleProfileBirailSurface(*args, blendFactor: bool | int | float = ..., bl: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., tangentContinuityProfile1: bool | int = ..., tp1: bool | int = ..., tangentContinuityProfile2: bool | int = ..., tp2: bool | int = ..., transformMode: bool | int | int = ..., tm: bool | int | int = ...) -> Any: ...
def dpBirailCtx(*args, activeNodes: bool | int = ..., anq: bool | int = ..., autoCreate: bool | int = ..., ac: bool | int = ..., bldProfileFirst: bool | int = ..., bpf: bool | int = ..., bldProfileLast: bool | int = ..., bpl: bool | int = ..., bldProfiles: bool | int = ..., bp: bool | int = ..., bldRailOne: bool | int = ..., br1: bool | int = ..., bldRailTwo: bool | int = ..., br2: bool | int = ..., blendFactor: float = ..., bl: float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., immediate: bool | int = ..., im: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., rs: bool | int = ..., tangentContinuityProfile1: bool | int = ..., tp1: bool | int = ..., tangentContinuityProfile2: bool | int = ..., tp2: bool | int = ..., toolNode: bool | int = ..., tnq: bool | int = ..., transformMode: int = ..., tm: int = ...) -> Any: ...
def drag(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., useDirection: bool | int = ..., ud: bool | int = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | tuple[float, float, float] = ..., vof: bool | int | tuple[float, float, float] = ..., volumeShape: bool | int | str = ..., vsh: bool | int | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...
def dragAttrContext(*args, connectTo: bool | int | str | list[str] = ..., ct: bool | int | str | list[str] = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., r: bool | int = ...) -> Any: ...
def draggerContext(*args, anchorPoint: bool | int | tuple[float, float, float] = ..., ap: bool | int | tuple[float, float, float] = ..., button: bool | int | int = ..., bu: bool | int | int = ..., currentStep: bool | int | int = ..., cs: bool | int | int = ..., cursor: bool | int | str = ..., cur: bool | int | str = ..., dragCommand: bool | int | str | Callable = ..., dc: bool | int | str | Callable = ..., dragPoint: bool | int | tuple[float, float, float] = ..., dp: bool | int | tuple[float, float, float] = ..., drawString: str = ..., ds: str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., finalize: bool | int | str | Callable = ..., fnz: bool | int | str | Callable = ..., helpString: bool | int | str = ..., hs: bool | int | str = ..., history: bool | int = ..., ch: bool | int = ..., holdCommand: bool | int | str | Callable = ..., hc: bool | int | str | Callable = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., initialize: bool | int | str | Callable = ..., inz: bool | int | str | Callable = ..., modifier: bool | int | str = ..., mo: bool | int | str = ..., name: str = ..., n: str = ..., plane: tuple[float, float, float] = ..., pl: tuple[float, float, float] = ..., prePressCommand: bool | int | str | Callable = ..., ppc: bool | int | str | Callable = ..., pressCommand: bool | int | str | Callable = ..., pc: bool | int | str | Callable = ..., projection: bool | int | str = ..., pr: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., releaseCommand: bool | int | str | Callable = ..., rc: bool | int | str | Callable = ..., snapping: bool | int = ..., snp: bool | int = ..., space: bool | int | str = ..., sp: bool | int | str = ..., stepsCount: bool | int | int = ..., sc: bool | int | int = ..., undoMode: bool | int | str = ..., um: bool | int | str = ...) -> Any: ...
def drawExtrudeFacetCtx(*args, degree: int = ..., d: int = ..., divisions: int = ..., div: int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., facesTogether: bool | int = ..., ft: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def dropoffLocator(*args) -> Any: ...
def duplicate(*args, fullPath: bool | int = ..., f: bool | int = ..., inputConnections: bool | int = ..., ic: bool | int = ..., instanceLeaf: bool | int = ..., ilf: bool | int = ..., name: str = ..., n: str = ..., parentOnly: bool | int = ..., po: bool | int = ..., renameChildren: bool | int = ..., rc: bool | int = ..., returnRootsOnly: bool | int = ..., rr: bool | int = ..., smartTransform: bool | int = ..., st: bool | int = ..., transformsOnly: bool | int = ..., to: bool | int = ..., upstreamNodes: bool | int = ..., un: bool | int = ...) -> Any: ...
def duplicateCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., local: bool | int = ..., l: bool | int = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., mergeItems: bool | int = ..., mi: bool | int = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., relative: bool | int = ..., r: bool | int = ...) -> Any: ...
def duplicateSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., faceCountU: bool | int | int = ..., fcu: bool | int | int = ..., faceCountV: bool | int | int = ..., fcv: bool | int | int = ..., firstFaceU: bool | int | int = ..., ffu: bool | int | int = ..., firstFaceV: bool | int | int = ..., ffv: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., local: bool | int = ..., l: bool | int = ..., mergeItems: bool | int = ..., mi: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def dynCache(*args) -> Any: ...
def dynControl(*args, autoCreate: bool | int = ..., ac: bool | int = ..., oversample: int = ..., os: int = ..., particleCache: bool | int = ..., pc: bool | int = ..., particleLOD: float = ..., pld: float = ..., particlesOn: bool | int = ..., po: bool | int = ..., rigidOn: bool | int = ..., ro: bool | int = ..., seed: int = ..., sd: int = ..., startTime: int | float = ..., st: int | float = ..., traceDepth: int = ..., td: int = ...) -> Any: ...
def dynExport(*args, allObjects: bool | int = ..., all: bool | int = ..., attribute: str | list[str] = ..., atr: str | list[str] = ..., format: str = ..., f: str = ..., maxFrame: int | float = ..., mxf: int | float = ..., minFrame: int | float = ..., mnf: int | float = ..., onlyUpdateParticles: bool | int = ..., oup: bool | int = ..., overSampling: int = ..., os: int = ..., path: str = ..., p: str = ...) -> Any: ...
def dynExpression(*args, creation: bool | int = ..., c: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., runtime: bool | int = ..., r: bool | int = ..., runtimeAfterDynamics: bool | int = ..., rad: bool | int = ..., runtimeBeforeDynamics: bool | int = ..., rbd: bool | int = ..., string: str = ..., s: str = ...) -> Any: ...
def dynGlobals(*args, active: bool | int = ..., a: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., listAll: bool | int = ..., la: bool | int = ..., overSampling: bool | int | int = ..., os: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def dynPaintCtx(*args, brushDrag: float = ..., bd: float = ..., brushMass: float = ..., bm: float = ..., displayQuality: float = ..., dq: float = ..., doProject: int = ..., dp: int = ..., dragBrushSize: str = ..., dbs: str = ..., drawAsMesh: bool | int = ..., dam: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., inputSamples: int = ..., paintAtDepth: bool | int = ..., pd: bool | int = ..., pixelMode: int = ..., pxm: int = ..., pressureMapping1: int = ..., pm1: int = ..., pressureMapping2: int = ..., pm2: int = ..., pressureMapping3: int = ..., pm3: int = ..., pressureMax1: float = ..., px1: float = ..., pressureMax2: float = ..., px2: float = ..., pressureMax3: float = ..., px3: float = ..., pressureMin1: float = ..., ps1: float = ..., pressureMin2: float = ..., ps2: float = ..., pressureMin3: float = ..., ps3: float = ..., query: bool | int = ..., q: bool | int = ..., sampleSeparation: float = ..., sp: float = ..., setSelection: bool | int = ..., ss: bool | int = ..., surfaceOffset: float = ..., sof: float = ..., usePressure: bool | int = ..., usp: bool | int = ...) -> Any: ...
def dynPaintEditor(*args, activeOnly: bool | int = ..., ao: bool | int = ..., autoSave: bool | int = ..., camera: bool | int | str = ..., cam: bool | int | str = ..., canvasMode: bool | int = ..., cm: bool | int = ..., canvasUndo: bool | int = ..., cu: bool | int = ..., changeCommand: bool | int | tuple[str, str, str, str] = ..., cc: bool | int | tuple[str, str, str, str] = ..., clear: tuple[float, float, float] = ..., cl: tuple[float, float, float] = ..., control: bool | int = ..., ctl: bool | int = ..., currentCanvasSize: bool | int = ..., ccs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., displayAppearance: bool | int | str = ..., dsa: bool | int | str = ..., displayFog: bool | int = ..., dfg: bool | int = ..., displayImage: bool | int | int = ..., di: bool | int | int = ..., displayLights: bool | int | str = ..., dsl: bool | int | str = ..., displayStyle: bool | int | str = ..., dst: bool | int | str = ..., displayTextures: bool | int = ..., dtx: bool | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., doubleBuffer: bool | int = ..., dbf: bool | int = ..., drawAxis: bool | int = ..., da: bool | int = ..., drawContext: bool | int = ..., drc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fastUpdate: int = ..., fu: int = ..., fileName: bool | int | str = ..., fil: bool | int | str = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., iconGrab: bool | int = ..., ig: bool | int = ..., loadImage: str = ..., li: str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., menu: str = ..., mn: str = ..., nbImages: bool | int = ..., nim: bool | int = ..., newImage: bool | int | tuple[int, int, float, float, float] = ..., ni: bool | int | tuple[int, int, float, float, float] = ..., paintAll: float = ..., pa: float = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., redrawLast: bool | int = ..., rl: bool | int = ..., refresh: bool | int = ..., ref: bool | int = ..., refreshMode: bool | int | int = ..., rmd: bool | int | int = ..., removeAllImages: bool | int = ..., ra: bool | int = ..., removeImage: bool | int = ..., ri: bool | int = ..., rollImage: tuple[float, float] = ..., rig: tuple[float, float] = ..., saveAlpha: bool | int = ..., sa: bool | int = ..., saveBumpmap: bool | int | str = ..., sbm: bool | int | str = ..., saveImage: bool | int = ..., si: bool | int = ..., scaleBlue: bool | int | float = ..., sb: bool | int | float = ..., scaleGreen: bool | int | float = ..., sg: bool | int | float = ..., scaleRed: bool | int | float = ..., sr: bool | int | float = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., singleBuffer: bool | int = ..., sbf: bool | int = ..., snapShot: bool | int = ..., snp: bool | int = ..., stateString: bool | int = ..., sts: bool | int = ..., swap: int = ..., swp: int = ..., tileSize: int = ..., ts: int = ..., unParent: bool | int = ..., up: bool | int = ..., undoCache: bool | int = ..., uc: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ..., wrap: bool | int | tuple[bool | int, bool | int] = ..., wr: bool | int | tuple[bool | int, bool | int] = ..., writeImage: str = ..., wi: str = ..., zoom: bool | int | float = ..., zm: bool | int | float = ...) -> Any: ...
def dynParticleCtx(*args, conserve: bool | int | float = ..., c: bool | int | float = ..., cursorPlacement: bool | int = ..., cp: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., grid: bool | int = ..., gr: bool | int = ..., gridSpacing: bool | int | float = ..., grs: bool | int | float = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., jitterRadius: bool | int | float = ..., jr: bool | int | float = ..., lowerLeftX: bool | int | float = ..., llx: bool | int | float = ..., lowerLeftY: bool | int | float = ..., lly: bool | int | float = ..., lowerLeftZ: bool | int | float = ..., llz: bool | int | float = ..., name: str = ..., n: str = ..., nucleus: bool | int = ..., nc: bool | int = ..., numJitters: bool | int | int = ..., nj: bool | int | int = ..., particleName: bool | int | str = ..., pn: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., sketch: bool | int = ..., sk: bool | int = ..., sketchInterval: bool | int | int = ..., ski: bool | int | int = ..., textPlacement: bool | int = ..., tp: bool | int = ..., upperRightX: bool | int | float = ..., urx: bool | int | float = ..., upperRightY: bool | int | float = ..., ury: bool | int | float = ..., upperZ: bool | int | float = ..., urz: bool | int | float = ...) -> Any: ...
def dynPref(*args, autoCreate: bool | int = ..., ac: bool | int = ..., echoCollision: bool | int = ..., ec: bool | int = ..., query: bool | int = ..., q: bool | int = ..., runupFrom: bool | int | int = ..., rf: bool | int | int = ..., runupToCurrentTime: bool | int = ..., rt: bool | int = ..., saveOnQuit: bool | int = ..., sq: bool | int = ..., saveRuntimeState: bool | int = ..., sr: bool | int = ...) -> Any: ...
def dynSelectCtx(*args, edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., enb: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def dynTestData(*args, arrayAttrs: bool | int = ..., aa: bool | int = ..., verbose: bool | int = ..., v: bool | int = ...) -> Any: ...
def dynWireCtx(*args, brushDrag: float = ..., bd: float = ..., brushMass: float = ..., bm: float = ..., displayQuality: float = ..., dq: float = ..., doProject: int = ..., dp: int = ..., dragBrushSize: str = ..., dbs: str = ..., drawAsMesh: bool | int = ..., dam: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., inputSamples: int = ..., paintAtDepth: bool | int = ..., pd: bool | int = ..., pixelMode: int = ..., pxm: int = ..., pressureMapping1: int = ..., pm1: int = ..., pressureMapping2: int = ..., pm2: int = ..., pressureMapping3: int = ..., pm3: int = ..., pressureMax1: float = ..., px1: float = ..., pressureMax2: float = ..., px2: float = ..., pressureMax3: float = ..., px3: float = ..., pressureMin1: float = ..., ps1: float = ..., pressureMin2: float = ..., ps2: float = ..., pressureMin3: float = ..., ps3: float = ..., query: bool | int = ..., q: bool | int = ..., sampleSeparation: float = ..., sp: float = ..., setSelection: bool | int = ..., ss: bool | int = ..., surfaceOffset: float = ..., sof: float = ..., usePressure: bool | int = ..., usp: bool | int = ...) -> Any: ...

dynamicConstraintRemove: Callable
def dynamicLoad(*args, query: bool | int = ..., q: bool | int = ...) -> Any: ...
def editDisplayLayerGlobals(*args, baseId: bool | int | int = ..., bi: bool | int | int = ..., currentDisplayLayer: bool | int | str = ..., cdl: bool | int | str = ..., mergeType: bool | int | int = ..., mt: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., useCurrent: bool | int = ..., uc: bool | int = ...) -> Any: ...
def editDisplayLayerMembers(*args, fullNames: bool | int = ..., fn: bool | int = ..., noRecurse: bool | int = ..., nr: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...

editImportedStatus: Callable
def editMetadata(*args, channelName: bool | int | str = ..., cn: bool | int | str = ..., channelType: bool | int | str = ..., cht: bool | int | str = ..., endIndex: str = ..., eix: str = ..., index: bool | int | str | list[str] = ..., idx: bool | int | str | list[str] = ..., indexType: bool | int | str = ..., idt: bool | int | str = ..., memberName: str = ..., mn: str = ..., remove: bool | int = ..., rem: bool | int = ..., scene: bool | int = ..., scn: bool | int = ..., startIndex: str = ..., six: str = ..., streamName: bool | int | str = ..., stn: bool | int | str = ..., stringValue: str | list[str] = ..., sv: str | list[str] = ..., value: float | list[float] = ..., v: float | list[float] = ...) -> Any: ...
def editRenderLayerAdjustment(*args, attributeLog: bool | int = ..., alg: bool | int = ..., layer: bool | int | str = ..., lyr: bool | int | str = ..., nodeLog: bool | int = ..., nlg: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., r: bool | int = ...) -> Any: ...
def editRenderLayerGlobals(*args, baseId: bool | int | int = ..., bi: bool | int | int = ..., currentRenderLayer: bool | int | str = ..., crl: bool | int | str = ..., enableAutoAdjustments: bool | int = ..., eaa: bool | int = ..., mergeType: bool | int | int = ..., mt: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., useCurrent: bool | int = ..., uc: bool | int = ...) -> Any: ...
def editRenderLayerMembers(*args, fullNames: bool | int = ..., fn: bool | int = ..., noRecurse: bool | int = ..., nr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., r: bool | int = ...) -> Any: ...
def editor(*args, control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., stateString: bool | int = ..., sts: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def editorTemplate(*args, addAdskAssetControls: bool | int = ..., aac: bool | int = ..., addComponents: bool | int = ..., acp: bool | int = ..., addControl: tuple[str, str | Callable] = ..., ac: tuple[str, str | Callable] = ..., addDynamicControl: tuple[str, str | Callable] = ..., adc: tuple[str, str | Callable] = ..., addExtraControls: bool | int = ..., aec: bool | int = ..., addSeparator: bool | int = ..., annotateFieldOnly: bool | int = ..., afo: bool | int = ..., annotation: str = ..., ann: str = ..., beginLayout: str = ..., bl: str = ..., beginNoOptimize: bool | int = ..., bn: bool | int = ..., beginScrollLayout: bool | int = ..., bsl: bool | int = ..., callCustom: tuple[str | Callable, str | Callable] = ..., ccu: tuple[str | Callable, str | Callable] = ..., collapse: bool | int = ..., cl: bool | int = ..., debugMode: bool | int = ..., dbm: bool | int = ..., dimControl: tuple[str, str, bool | int] = ..., dc: tuple[str, str, bool | int] = ..., endLayout: bool | int = ..., el: bool | int = ..., endNoOptimize: bool | int = ..., en: bool | int = ..., endScrollLayout: bool | int = ..., esl: bool | int = ..., extraControlsLabel: str = ..., ecl: str = ..., interruptOptimize: bool | int = ..., io: bool | int = ..., label: str = ..., l: str = ..., listExtraAttributes: str = ..., lea: str = ..., preventOverride: bool | int = ..., po: bool | int = ..., queryControl: tuple[str, str] = ..., qc: tuple[str, str] = ..., queryLabel: tuple[str, str] = ..., ql: tuple[str, str] = ..., queryName: tuple[str, str] = ..., qn: tuple[str, str] = ..., removeControl: tuple[str, str] = ..., rc: tuple[str, str] = ..., suppress: str = ..., s: str = ...) -> Any: ...
def effector(*args, edit: bool | int = ..., e: bool | int = ..., hide: bool | int = ..., hi: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def emit(*args, attribute: str | list[str] = ..., at: str | list[str] = ..., floatValue: float | list[float] = ..., fv: float | list[float] = ..., object: str = ..., o: str = ..., position: tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: tuple[float, float, float] | list[tuple[float, float, float]] = ..., vectorValue: tuple[float, float, float] | list[tuple[float, float, float]] = ..., vv: tuple[float, float, float] | list[tuple[float, float, float]] = ...) -> Any: ...
def emitter(*args, alongAxis: bool | int | float = ..., alx: bool | int | float = ..., aroundAxis: bool | int | float = ..., arx: bool | int | float = ..., awayFromAxis: bool | int | float = ..., afx: bool | int | float = ..., awayFromCenter: bool | int | float = ..., afc: bool | int | float = ..., cycleEmission: bool | int | str = ..., cye: bool | int | str = ..., cycleInterval: bool | int | int = ..., cyi: bool | int | int = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., directionalSpeed: bool | int | float = ..., drs: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., minDistance: bool | int | float = ..., mnd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., needParentUV: bool | int = ..., nuv: bool | int = ..., normalSpeed: bool | int | float = ..., nsp: bool | int | float = ..., position: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., randomDirection: bool | int | float = ..., rnd: bool | int | float = ..., rate: bool | int | float = ..., r: bool | int | float = ..., scaleRateByObjectSize: bool | int = ..., sro: bool | int = ..., scaleSpeedBySize: bool | int = ..., ssz: bool | int = ..., speed: bool | int | float = ..., spd: bool | int | float = ..., speedRandom: bool | int | float = ..., srn: bool | int | float = ..., spread: bool | int | float = ..., sp: bool | int | float = ..., tangentSpeed: bool | int | float = ..., tsp: bool | int | float = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., type: bool | int | str = ..., typ: bool | int | str = ..., volumeOffset: bool | int | tuple[float, float, float] = ..., vof: bool | int | tuple[float, float, float] = ..., volumeShape: bool | int | str = ..., vsh: bool | int | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...
def enableDevice(*args, apply: bool | int = ..., a: bool | int = ..., device: bool | int | str = ..., d: bool | int | str = ..., enable: bool | int = ..., en: bool | int = ..., monitor: bool | int = ..., m: bool | int = ..., record: bool | int = ..., rec: bool | int = ...) -> Any: ...
def encodeString(*args) -> Any: ...
def error(*args, noContext: bool | int = ..., n: bool | int = ..., showLineNumber: bool | int = ..., sl: bool | int = ...) -> Any: ...
def evalContinue(*args) -> Any: ...
def evalDeferred(*args, evaluateNext: bool | int = ..., en: bool | int = ..., list: bool | int = ..., ls: bool | int = ..., lowPriority: bool | int = ..., low: bool | int = ..., lowestPriority: bool | int = ..., lp: bool | int = ...) -> Any: ...
def evalEcho(*args) -> Any: ...
def evalNoSelectNotify(*args) -> Any: ...
def evaluationManager(*args, cycleCluster: bool | int | str = ..., ccl: bool | int | str = ..., disableInfo: bool | int | str = ..., di: bool | int | str = ..., downstreamFrom: bool | int | str = ..., dst: bool | int | str = ..., empty: bool | int = ..., mt: bool | int = ..., enabled: bool | int = ..., e: bool | int = ..., fallbackTriggered: bool | int = ..., ft: bool | int = ..., idleAction: bool | int | int = ..., ia: bool | int | int = ..., idleBuild: bool | int = ..., ib: bool | int = ..., invalidate: bool | int = ..., inv: bool | int = ..., manipulation: bool | int = ..., man: bool | int = ..., manipulationPrevalidation: bool | int = ..., mp: bool | int = ..., manipulationReady: bool | int = ..., mr: bool | int = ..., mode: bool | int | str = ..., m: bool | int | str = ..., nodeTypeGloballySerialize: bool | int = ..., ntg: bool | int = ..., nodeTypeParallel: bool | int = ..., ntp: bool | int = ..., nodeTypeSerialize: bool | int = ..., nts: bool | int = ..., nodeTypeUntrusted: bool | int = ..., ntu: bool | int = ..., query: bool | int = ..., q: bool | int = ..., safeMode: bool | int = ..., sfm: bool | int = ..., upstreamFrom: bool | int | str = ..., ust: bool | int | str = ...) -> Any: ...
def evaluationManagerInternal(*args, dataSharing: bool | int = ..., ds: bool | int = ..., dataTypeShare: bool | int = ..., dts: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def evaluator(*args, clusters: bool | int = ..., cl: bool | int = ..., configuration: bool | int | str | list[str] = ..., c: bool | int | str | list[str] = ..., enable: bool | int = ..., en: bool | int = ..., info: bool | int = ..., i: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., nodeType: bool | int | str | list[str] = ..., nt: bool | int | str | list[str] = ..., nodeTypeChildren: bool | int = ..., ntc: bool | int = ..., priority: bool | int | int = ..., p: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., valueName: bool | int | str = ..., vn: bool | int | str = ...) -> Any: ...
def evaluatorInternal(*args, name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., ready: bool | int = ..., r: bool | int = ...) -> Any: ...
def event(*args, count: bool | int | int = ..., ct: bool | int | int = ..., delete: bool | int = ..., d: bool | int = ..., dieAtCollision: bool | int = ..., die: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., emit: bool | int | int = ..., em: bool | int | int = ..., idNumber: int = ..., id: int = ..., list: bool | int = ..., ls: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., proc: bool | int | str | Callable = ..., pr: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int = ..., r: bool | int = ..., rename: bool | int | str = ..., re: bool | int | str = ..., select: bool | int = ..., s: bool | int = ..., split: bool | int | int = ..., spl: bool | int | int = ..., spread: bool | int | float = ..., sp: bool | int | float = ..., target: bool | int | str = ..., t: bool | int | str = ...) -> Any: ...
def exactWorldBoundingBox(*args, calculateExactly: bool | int = ..., ce: bool | int = ..., ignoreInvisible: bool | int = ..., ii: bool | int = ...) -> Any: ...
def excludeObjectDisplayPreset(*args, **kwargs): ...
def exclusiveLightCheckBox(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: str = ..., l: str = ..., light: str = ..., lt: str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def expandedSelection(*args, depth: int = ..., d: int = ..., expansionType: str = ..., et: str = ...) -> Any: ...
def exportEdits(*args, editCommand: bool | int | str | list[str] = ..., ec: bool | int | str | list[str] = ..., excludeHierarchy: bool | int = ..., ehr: bool | int = ..., excludeNode: bool | int | str | list[str] = ..., en: bool | int | str | list[str] = ..., exportSelected: bool | int = ..., exs: bool | int = ..., force: bool | int = ..., f: bool | int = ..., includeAnimation: bool | int = ..., ian: bool | int = ..., includeConstraints: bool | int = ..., ic: bool | int = ..., includeDeformers: bool | int = ..., idf: bool | int = ..., includeNetwork: bool | int = ..., inw: bool | int = ..., includeNode: bool | int | str | list[str] = ..., includeSetAttrs: bool | int = ..., isa: bool | int = ..., includeSetDrivenKeys: bool | int = ..., sdk: bool | int = ..., includeShaders: bool | int = ..., ish: bool | int = ..., onReferenceNode: bool | int | str | list[str] = ..., orn: bool | int | str | list[str] = ..., query: bool | int = ..., q: bool | int = ..., selected: bool | int = ..., sel: bool | int = ..., type: bool | int | str = ..., typ: bool | int | str = ...) -> Any: ...
def expression(*args, alwaysEvaluate: bool | int | int = ..., ae: bool | int | int = ..., animated: bool | int | int = ..., an: bool | int | int = ..., attribute: bool | int | str = ..., a: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., object: bool | int | str = ..., o: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., safe: bool | int = ..., sf: bool | int = ..., shortNames: bool | int = ..., sn: bool | int = ..., string: bool | int | str = ..., s: bool | int | str = ..., timeDependent: bool | int = ..., td: bool | int = ..., unitConversion: bool | int | str = ..., uc: bool | int | str = ...) -> Any: ...
def expressionEditorListen(*args, listenFile: str = ..., lf: str = ..., listenForAttr: str = ..., la: str = ..., listenForExpression: str = ..., le: str = ..., listenForName: str = ..., ln: str = ..., stopListenForAttr: str = ..., sla: str = ..., stopListenForExpression: str = ..., sle: str = ..., stopListenForName: str = ..., sln: str = ...) -> Any: ...
def extendCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., extendMethod: bool | int | int = ..., em: bool | int | int = ..., extensionType: bool | int | int = ..., et: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inputPoint: bool | int | tuple[float, float, float] = ..., ip: bool | int | tuple[float, float, float] = ..., join: bool | int = ..., jn: bool | int = ..., name: str = ..., n: str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pointX: bool | int | float = ..., px: bool | int | float = ..., pointY: bool | int | float = ..., py: bool | int | float = ..., pointZ: bool | int | float = ..., pz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., removeMultipleKnots: bool | int = ..., rmk: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., start: bool | int | int = ..., s: bool | int | int = ...) -> Any: ...
def extendFluid(*args, edit: bool | int = ..., e: bool | int = ..., endD: int = ..., ed: int = ..., endH: int = ..., eh: int = ..., endW: int = ..., ew: int = ..., query: bool | int = ..., q: bool | int = ..., startD: int = ..., sd: int = ..., startH: int = ..., sh: int = ..., startW: int = ..., sw: int = ...) -> Any: ...
def extendSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., extendDirection: bool | int | int = ..., ed: bool | int | int = ..., extendMethod: bool | int | int = ..., em: bool | int | int = ..., extendSide: bool | int | int = ..., es: bool | int | int = ..., extensionType: bool | int | int = ..., et: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., join: bool | int = ..., jn: bool | int = ..., name: str = ..., n: str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...) -> Any: ...
def extrude(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degreeAlongLength: bool | int | int = ..., dl: bool | int | int = ..., direction: bool | int | tuple[float, float, float] = ..., d: bool | int | tuple[float, float, float] = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., extrudeType: bool | int | int = ..., et: bool | int | int = ..., fixedPath: bool | int = ..., fpt: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., length: bool | int | float = ..., l: bool | int | float = ..., mergeItems: bool | int = ..., mi: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., rebuild: bool | int = ..., rb: bool | int = ..., reverseSurfaceIfPathReversed: bool | int = ..., rsp: bool | int = ..., rotation: bool | int | float = ..., ro: bool | int | float = ..., scale: bool | int | float = ..., sc: bool | int | float = ..., subCurveSubSurface: bool | int = ..., scs: bool | int = ..., useComponentPivot: bool | int | int = ..., ucp: bool | int | int = ..., useProfileNormal: bool | int = ..., upn: bool | int = ...) -> Any: ...
def falloffCurve(*args, addControlVertex: str = ..., acv: str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., asString: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., currentKey: bool | int | int = ..., ck: bool | int | int = ..., currentKeyValue: bool | int | tuple[float, float] = ..., ckv: bool | int | tuple[float, float] = ..., customCurveWidget: bool | int = ..., ccw: bool | int = ..., defineTemplate: str = ..., dt: str = ..., deleteControlVertex: int = ..., dcv: int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., optionVar: bool | int | str = ..., ov: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., readOnly: bool | int = ..., ro: bool | int = ..., snapToGrid: bool | int = ..., stg: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def falloffCurveAttr(*args, addControlVertex: str = ..., acv: str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., asString: bool | int | str = ..., attribute: str = ..., at: str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., currentKey: bool | int | int = ..., ck: bool | int | int = ..., currentKeyValue: bool | int | tuple[float, float] = ..., ckv: bool | int | tuple[float, float] = ..., customCurveWidget: bool | int | int = ..., ccw: bool | int | int = ..., defineTemplate: str = ..., dt: str = ..., deleteControlVertex: int = ..., dcv: int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., readOnly: bool | int | int = ..., ro: bool | int | int = ..., selectedPositionControl: str = ..., spc: str = ..., selectedValueControl: str = ..., svc: str = ..., snapToGrid: bool | int | int = ..., stg: bool | int | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def file(*args, absoluteName: bool | int = ..., an: bool | int = ..., activate: bool | int = ..., a: bool | int = ..., activeProxy: bool | int = ..., ap: bool | int = ..., add: bool | int = ..., anyModified: bool | int = ..., amf: bool | int = ..., applyTo: str = ..., at: str = ..., buildLoadSettings: bool | int = ..., bls: bool | int = ..., channels: bool | int = ..., chn: bool | int = ..., cleanReference: str = ..., cr: str = ..., command: bool | int | tuple[str, str] = ..., c: bool | int | tuple[str, str] = ..., compress: bool | int = ..., cmp: bool | int = ..., constraints: bool | int = ..., con: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., copyNumberList: bool | int = ..., cnl: bool | int = ..., defaultExtensions: bool | int = ..., de: bool | int = ..., defaultNamespace: bool | int = ..., dns: bool | int = ..., deferReference: bool | int = ..., dr: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., editCommand: str = ..., ec: str = ..., errorStatus: bool | int = ..., err: bool | int = ..., executeScriptNodes: bool | int = ..., esn: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandName: bool | int = ..., exn: bool | int = ..., exportAll: bool | int = ..., ea: bool | int = ..., exportAnim: bool | int = ..., ean: bool | int = ..., exportAnimFromReference: bool | int = ..., ear: bool | int = ..., exportAsReference: bool | int = ..., er: bool | int = ..., exportAsSegment: bool | int = ..., exs: bool | int = ..., exportSelected: bool | int = ..., es: bool | int = ..., exportSelectedAnim: bool | int = ..., eas: bool | int = ..., exportSelectedAnimFromReference: bool | int = ..., esa: bool | int = ..., exportSelectedNoReference: bool | int = ..., esr: bool | int = ..., exportSelectedStrict: bool | int = ..., ess: bool | int = ..., exportSnapshotCallback: tuple[str | Callable, str] = ..., esc: tuple[str | Callable, str] = ..., exportUnloadedReferences: bool | int = ..., eur: bool | int = ..., expressions: bool | int = ..., exp: bool | int = ..., fileMetaData: bool | int = ..., fmd: bool | int = ..., flushReference: str = ..., fr: str = ..., force: bool | int = ..., f: bool | int = ..., groupLocator: bool | int = ..., gl: bool | int = ..., groupName: str = ..., gn: str = ..., groupReference: bool | int = ..., gr: bool | int = ..., i: bool | int = ..., ignoreVersion: bool | int = ..., iv: bool | int = ..., importFrameRate: bool | int = ..., ifr: bool | int = ..., importReference: bool | int = ..., ir: bool | int = ..., importTimeRange: str = ..., itr: str = ..., lastFileOption: bool | int = ..., lfo: bool | int = ..., lastTempFile: bool | int = ..., ltf: bool | int = ..., list: bool | int = ..., l: bool | int = ..., loadAllDeferred: bool | int = ..., lad: bool | int = ..., loadAllReferences: bool | int = ..., lar: bool | int = ..., loadNoReferences: bool | int = ..., lnr: bool | int = ..., loadReference: bool | int | str = ..., lr: bool | int | str = ..., loadReferenceDepth: str = ..., lrd: str = ..., loadReferencePreview: str = ..., lrp: str = ..., loadSettings: str = ..., ls: str = ..., location: bool | int = ..., loc: bool | int = ..., lockContainerUnpublished: bool | int = ..., lcu: bool | int = ..., lockFile: bool | int = ..., lf: bool | int = ..., lockReference: bool | int = ..., lck: bool | int = ..., mapPlaceHolderNamespace: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., mns: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., mergeBaseAnimLayer: bool | int = ..., mbl: bool | int = ..., mergeNamespaceWithParent: bool | int = ..., mnp: bool | int = ..., mergeNamespaceWithRoot: bool | int = ..., mnr: bool | int = ..., mergeNamespacesOnClash: bool | int = ..., mnc: bool | int = ..., modified: bool | int = ..., mf: bool | int = ..., moveSelected: bool | int = ..., ms: bool | int = ..., namespace: str = ..., ns: str = ..., newFile: bool | int = ..., new: bool | int = ..., open: bool | int = ..., o: bool | int = ..., options: bool | int | str = ..., op: bool | int | str = ..., parentNamespace: bool | int = ..., pns: bool | int = ..., postSaveScript: str = ..., pos: str = ..., preSaveScript: str = ..., prs: str = ..., preserveName: bool | int = ..., pn: bool | int = ..., preserveReferences: bool | int = ..., pr: bool | int = ..., preserveUndo: bool | int = ..., pu: bool | int = ..., preview: bool | int = ..., pv: bool | int = ..., prompt: bool | int = ..., pmt: bool | int = ..., proxyManager: str = ..., pm: str = ..., proxyTag: str = ..., pt: str = ..., query: bool | int = ..., q: bool | int = ..., reference: bool | int = ..., r: bool | int = ..., referenceDepthInfo: int = ..., rdi: int = ..., referenceNode: bool | int | str = ..., rfn: bool | int | str = ..., relativeNamespace: str = ..., rns: str = ..., removeDuplicateNetworks: bool | int = ..., rdn: bool | int = ..., removeReference: bool | int = ..., rr: bool | int = ..., rename: str = ..., rn: str = ..., renameAll: bool | int = ..., ra: bool | int = ..., renameToSave: bool | int = ..., rts: bool | int = ..., renamingPrefix: bool | int | str = ..., rpr: bool | int | str = ..., renamingPrefixList: bool | int = ..., rpl: bool | int = ..., replaceName: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., rep: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., reserveNamespaces: bool | int = ..., rvn: bool | int = ..., resetError: bool | int = ..., rer: bool | int = ..., returnNewNodes: bool | int = ..., rnn: bool | int = ..., save: bool | int = ..., s: bool | int = ..., saveDiskCache: bool | int | str = ..., sdc: bool | int | str = ..., saveReference: bool | int = ..., sr: bool | int = ..., saveReferencesUnloaded: bool | int = ..., sru: bool | int = ..., saveTextures: bool | int | str = ..., stx: bool | int | str = ..., sceneName: bool | int = ..., sn: bool | int = ..., segment: str = ..., seg: str = ..., selectAll: bool | int = ..., sa: bool | int = ..., shader: bool | int = ..., sh: bool | int = ..., sharedNodes: str | list[str] = ..., shd: str | list[str] = ..., sharedReferenceFile: bool | int = ..., srf: bool | int = ..., shortName: bool | int = ..., shn: bool | int = ..., strict: bool | int = ..., str: bool | int = ..., swapNamespace: tuple[str, str] | list[tuple[str, str]] = ..., sns: tuple[str, str] | list[tuple[str, str]] = ..., type: bool | int | str = ..., typ: bool | int | str = ..., uiConfiguration: bool | int = ..., uc: bool | int = ..., uiLoadConfiguration: bool | int = ..., ulc: bool | int = ..., unloadReference: str = ..., ur: str = ..., unresolvedName: bool | int = ..., un: bool | int = ..., usingNamespaces: bool | int = ..., uns: bool | int = ..., withoutCopyNumber: bool | int = ..., wcn: bool | int = ..., writable: bool | int = ..., w: bool | int = ...) -> Any: ...
def fileBrowserDialog(*args, actionName: str = ..., an: str = ..., dialogStyle: int = ..., ds: int = ..., fileCommand: str | Callable = ..., fc: str | Callable = ..., fileType: str = ..., ft: str = ..., filterList: str | list[str] = ..., fl: str | list[str] = ..., includeName: str = ..., mode: int = ..., m: int = ..., operationMode: str = ..., om: str = ..., tipMessage: str = ..., tm: str = ..., windowTitle: str = ..., wt: str = ...) -> Any: ...
def fileDialog(*args, application: bool | int = ..., app: bool | int = ..., defaultFileName: str = ..., dfn: str = ..., directoryMask: str = ..., dm: str = ..., mode: int = ..., m: int = ..., title: str = ..., t: str = ...) -> Any: ...
def fileDialog2(*args, buttonBoxOrientation: int = ..., bbo: int = ..., cancelCaption: str = ..., cc: str = ..., caption: str = ..., cap: str = ..., dialogStyle: int = ..., ds: int = ..., fileFilter: str = ..., ff: str = ..., fileMode: int = ..., fm: int = ..., fileTypeChanged: str | Callable = ..., ftc: str | Callable = ..., hideFileExtensions: bool | int = ..., hfe: bool | int = ..., hideNameEdit: bool | int = ..., hne: bool | int = ..., okCaption: str = ..., okc: str = ..., optionsUICancel: str | Callable = ..., oca: str | Callable = ..., optionsUICommit: str | Callable = ..., ocm: str | Callable = ..., optionsUICommit2: str | Callable = ..., oc2: str | Callable = ..., optionsUICreate: str | Callable = ..., ocr: str | Callable = ..., optionsUIInit: str | Callable = ..., oin: str | Callable = ..., optionsUITitle: str = ..., oti: str = ..., returnFilter: bool | int = ..., rf: bool | int = ..., selectFileFilter: str = ..., sff: str = ..., selectionChanged: str | Callable = ..., sc: str | Callable = ..., setProjectBtnEnabled: bool | int = ..., spe: bool | int = ..., startingDirectory: str = ..., dir: str = ...) -> Any: ...
def fileInfo(*args, query: bool | int = ..., q: bool | int = ..., referenceNode: bool | int | str = ..., rfn: bool | int | str = ..., remove: bool | int | str = ..., rm: bool | int | str = ...) -> Any: ...
def filePathEditor(*args, attributeOnly: bool | int = ..., ao: bool | int = ..., attributeType: bool | int | str = ..., at: bool | int | str = ..., byType: bool | int | str = ..., bt: bool | int | str = ..., copyAndRepath: tuple[str, str] = ..., cr: tuple[str, str] = ..., deregisterType: str = ..., dt: str = ..., force: bool | int = ..., f: bool | int = ..., listDirectories: bool | int | str = ..., ld: bool | int | str = ..., listFiles: bool | int | str = ..., lf: bool | int | str = ..., listRegisteredTypes: bool | int = ..., lrt: bool | int = ..., preview: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., recursive: bool | int = ..., rc: bool | int = ..., refresh: bool | int = ..., rf: bool | int = ..., registerType: str = ..., rt: str = ..., relativeNames: bool | int = ..., rel: bool | int = ..., repath: str = ..., r: str = ..., replaceAll: bool | int = ..., ra: bool | int = ..., replaceField: str = ..., rfd: str = ..., replaceString: tuple[str, str] = ..., rs: tuple[str, str] = ..., status: bool | int = ..., s: bool | int = ..., temporary: bool | int = ..., tmp: bool | int = ..., typeLabel: bool | int | str = ..., tl: bool | int | str = ..., unresolved: bool | int = ..., u: bool | int = ..., withAttribute: bool | int = ..., wa: bool | int = ...) -> Any: ...
def filletCurve(*args, bias: bool | int | float = ..., b: bool | int | float = ..., blendControl: bool | int = ..., bc: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., circular: bool | int = ..., cir: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveParameter1: bool | int | float = ..., cp1: bool | int | float = ..., curveParameter2: bool | int | float = ..., cp2: bool | int | float = ..., depth: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., freeformBlend: bool | int = ..., fb: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., join: bool | int = ..., jn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., trim: bool | int = ..., t: bool | int = ...) -> Any: ...
def filter(*args, name: bool | int | str = ..., n: bool | int | str = ..., type: bool | int | str = ..., t: bool | int | str = ...) -> Any: ...
def filterButterworthCtx(*args, apply: bool | int = ..., a: bool | int = ..., cutoffFrequency: bool | int | float = ..., cof: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., endTime: bool | int | int | float = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., keepKeysOnFrame: bool | int = ..., kof: bool | int = ..., name: str = ..., n: str = ..., preserveKeyTangent: str | list[str] = ..., pkt: str | list[str] = ..., query: bool | int = ..., q: bool | int = ..., samplingRate: bool | int | float = ..., sr: bool | int | float = ..., selectedKeys: bool | int = ..., sk: bool | int = ..., startTime: bool | int | int | float = ..., s: bool | int | int | float = ...) -> Any: ...
def filterCurve(*args, cutoffFrequency: float = ..., cof: float = ..., endTime: int | float = ..., e: int | float = ..., filter: str = ..., f: str = ..., keepKeysOnFrame: bool | int = ..., kof: bool | int = ..., kernel: str = ..., ker: str = ..., keySync: bool | int = ..., ks: bool | int = ..., maxTimeStep: float = ..., mxs: float = ..., minTimeStep: float = ..., mns: float = ..., period: float = ..., per: float = ..., precision: float = ..., pre: float = ..., precisionMode: int = ..., pm: int = ..., preserveKeyTangent: str | list[str] = ..., pkt: str | list[str] = ..., sampleCount: int = ..., sc: int = ..., samplingRate: float = ..., sr: float = ..., selectedKeys: bool | int = ..., sk: bool | int = ..., startTime: int | float = ..., s: int | float = ..., timeTolerance: float = ..., tto: float = ..., tolerance: float = ..., tol: float = ..., useQuaternion: bool | int = ..., uq: bool | int = ..., width: int | float = ..., w: int | float = ...) -> Any: ...
def filterExpand(*args, expand: bool | int = ..., ex: bool | int = ..., fullPath: bool | int = ..., fp: bool | int = ..., selectionMask: int | list[int] = ..., sm: int | list[int] = ..., symActive: bool | int = ..., sma: bool | int = ..., symNegative: bool | int = ..., smn: bool | int = ..., symPositive: bool | int = ..., smp: bool | int = ..., symSeam: bool | int = ..., sms: bool | int = ...) -> Any: ...
def filterGaussianCtx(*args, apply: bool | int = ..., a: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endTime: bool | int | int | float = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., sampleCount: bool | int | int = ..., sc: bool | int | int = ..., selectedKeys: bool | int = ..., sk: bool | int = ..., startTime: bool | int | int | float = ..., s: bool | int | int | float = ..., useQuaternion: bool | int = ..., uq: bool | int = ..., width: bool | int | int | float = ..., w: bool | int | int | float = ...) -> Any: ...
def filterInstances(*args, query: bool | int = ..., q: bool | int = ..., shapes: bool | int = ..., s: bool | int = ...) -> Any: ...
def filterKeyReducerCtx(*args, apply: bool | int = ..., a: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endTime: bool | int | int | float = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., keySync: bool | int = ..., ks: bool | int = ..., name: str = ..., n: str = ..., precision: bool | int | float = ..., pre: bool | int | float = ..., precisionMode: bool | int | int = ..., pm: bool | int | int = ..., preserveKeyTangent: bool | int | str | list[str] = ..., pkt: bool | int | str | list[str] = ..., query: bool | int = ..., q: bool | int = ..., selectedKeys: bool | int = ..., sk: bool | int = ..., startTime: bool | int | int | float = ..., s: bool | int | int | float = ...) -> Any: ...
def filterPeakRemoverCtx(*args, apply: bool | int = ..., a: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endTime: int | float = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., selectedKeys: bool | int = ..., sk: bool | int = ..., startTime: int | float = ..., s: int | float = ...) -> Any: ...
def findDeformers(*args) -> Any: ...
def findKeyframe(*args, animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., controlPoints: bool | int = ..., cp: bool | int = ..., curve: bool | int = ..., c: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., hierarchy: str = ..., hi: str = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., shape: bool | int = ..., s: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., timeSlider: bool | int = ..., ts: bool | int = ..., which: str = ..., w: str = ...) -> Any: ...
def findType(*args, deep: bool | int = ..., d: bool | int = ..., exact: bool | int = ..., e: bool | int = ..., forward: bool | int = ..., f: bool | int = ..., type: str = ..., t: str = ...) -> Any: ...
def fitBspline(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepRange: int = ..., kr: int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...) -> Any: ...
def flagTest(*args, edit: bool | int = ..., e: bool | int = ..., floatRange: None | list[None] = ..., fr: None | list[None] = ..., indexRange: None | list[None] = ..., ir: None | list[None] = ..., multiUse: tuple[float, int, str] | list[tuple[float, int, str]] = ..., mu: tuple[float, int, str] | list[tuple[float, int, str]] = ..., noReport: bool | int = ..., nr: bool | int = ..., optionalQueryArgsFlag: tuple[float, int, str] = ..., oqa: tuple[float, int, str] = ..., pythonOptionalQueryArgsFlag: tuple[float, int, str] = ..., poq: tuple[float, int, str] = ..., pythonQueryArgsFlag: tuple[float, int, str] = ..., pq: tuple[float, int, str] = ..., query: bool | int = ..., q: bool | int = ..., queryArgsFlag: tuple[float, int, str] = ..., qa: tuple[float, int, str] = ..., simpleFlag: bool | int = ..., s: bool | int = ..., stringArrayFlag=..., saf=..., stringFlag: str = ..., sf: str = ..., timeRange: None | list[None] = ..., tr: None | list[None] = ..., tripleFloat: tuple[float, float, float] = ..., tf: tuple[float, float, float] = ...) -> Any: ...
def flexor(*args, atBones: bool | int = ..., ab: bool | int = ..., atJoints: bool | int = ..., aj: bool | int = ..., deformerCommand: str = ..., dc: str = ..., edit: bool | int = ..., e: bool | int = ..., list: bool | int = ..., l: bool | int = ..., name: str = ..., n: str = ..., noScale: bool | int = ..., ns: bool | int = ..., query: bool | int = ..., q: bool | int = ..., toSkeleton: bool | int = ..., ts: bool | int = ..., type: str = ..., typ: str = ...) -> Any: ...
def floatField(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., enterCommand: str | Callable = ..., ec: str | Callable = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., precision: bool | int | int = ..., pre: bool | int | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., receiveFocusCommand: str | Callable = ..., rfc: str | Callable = ..., showTrailingZeros: bool | int = ..., tze: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | float = ..., s: bool | int | float = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | float = ..., v: bool | int | float = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def floatFieldGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enable1: bool | int = ..., en1: bool | int = ..., enable2: bool | int = ..., en2: bool | int = ..., enable3: bool | int = ..., en3: bool | int = ..., enable4: bool | int = ..., en4: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extraLabel: bool | int | str = ..., el: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfFields: int = ..., nf: int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., precision: int = ..., pre: int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., showTrailingZeros: bool | int = ..., tze: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | float = ..., s: bool | int | float = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | tuple[float, float, float, float] = ..., v: bool | int | tuple[float, float, float, float] = ..., value1: bool | int | float = ..., v1: bool | int | float = ..., value2: bool | int | float = ..., v2: bool | int | float = ..., value3: bool | int | float = ..., v3: bool | int | float = ..., value4: bool | int | float = ..., v4: bool | int | float = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def floatScrollBar(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., horizontal: bool | int = ..., hr: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., largeStep: bool | int | float = ..., ls: bool | int | float = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | float = ..., s: bool | int | float = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | float = ..., v: bool | int | float = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def floatSlider(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., horizontal: bool | int = ..., hr: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | float = ..., s: bool | int | float = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | float = ..., v: bool | int | float = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def floatSlider2(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand1: str = ..., cc1: str = ..., changeCommand2: str = ..., cc2: str = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., maximum: bool | int | float = ..., max: bool | int | float = ..., minimum: bool | int | float = ..., min: bool | int | float = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., polarity: bool | int | int = ..., pol: bool | int | int = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., positionControl1: str = ..., pc1: str = ..., positionControl2: str = ..., pc2: str = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., value1: bool | int | float = ..., v1: bool | int | float = ..., value2: bool | int | float = ..., v2: bool | int | float = ..., values: tuple[float, float] = ..., vs: tuple[float, float] = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def floatSliderButtonGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., buttonCommand: str | Callable = ..., bc: str | Callable = ..., buttonLabel: bool | int | str = ..., bl: bool | int | str = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extraLabel: bool | int | str = ..., el: bool | int | str = ..., field: bool | int = ..., f: bool | int = ..., fieldMaxValue: bool | int | float = ..., fmx: bool | int | float = ..., fieldMinValue: bool | int | float = ..., fmn: bool | int | float = ..., fieldStep: bool | int | float = ..., fs: bool | int | float = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., image: bool | int | str = ..., i: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., precision: int = ..., pre: int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., sliderStep: bool | int | float = ..., ss: bool | int | float = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | float = ..., s: bool | int | float = ..., symbolButtonCommand: str | Callable = ..., sbc: str | Callable = ..., symbolButtonDisplay: bool | int = ..., sbd: bool | int = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | float = ..., v: bool | int | float = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def floatSliderGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extraLabel: bool | int | str = ..., el: bool | int | str = ..., field: bool | int = ..., f: bool | int = ..., fieldMaxValue: bool | int | float = ..., fmx: bool | int | float = ..., fieldMinValue: bool | int | float = ..., fmn: bool | int | float = ..., fieldStep: bool | int | float = ..., fs: bool | int | float = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., precision: int = ..., pre: int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., sliderStep: bool | int | float = ..., ss: bool | int | float = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | float = ..., s: bool | int | float = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | float = ..., v: bool | int | float = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def flow(*args, divisions: bool | int | tuple[int, int, int] = ..., dv: bool | int | tuple[int, int, int] = ..., edit: bool | int = ..., e: bool | int = ..., localCompute: bool | int = ..., lc: bool | int = ..., localDivisions: bool | int | tuple[int, int, int] = ..., ld: bool | int | tuple[int, int, int] = ..., objectCentered: bool | int = ..., oc: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def flowLayout(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., childArray: bool | int = ..., ca: bool | int = ..., columnSpacing: bool | int | int = ..., cs: bool | int | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., horizontal: bool | int = ..., hr: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., vertical: bool | int = ..., v: bool | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ..., wrap: bool | int = ..., wr: bool | int = ...) -> Any: ...

fluidAppend: Callable
fluidAppendOpt: Callable
def fluidCacheInfo(*args, attribute: bool | int | str = ..., at: bool | int | str = ..., cacheTime: bool | int | int | float = ..., t: bool | int | int | float = ..., edit: bool | int = ..., e: bool | int = ..., endFrame: bool | int = ..., ef: bool | int = ..., hasCache: bool | int = ..., hc: bool | int = ..., hasData: bool | int = ..., hd: bool | int = ..., initialConditions: bool | int = ..., ic: bool | int = ..., playback: bool | int = ..., pb: bool | int = ..., query: bool | int = ..., q: bool | int = ..., resolution: bool | int = ..., re: bool | int = ..., startFrame: bool | int = ..., sf: bool | int = ...) -> Any: ...

fluidDeleteCache: Callable
fluidDeleteCacheFrames: Callable
fluidDeleteCacheFramesOpt: Callable
fluidDeleteCacheOpt: Callable
def fluidEmitter(*args, cycleEmission: bool | int | str = ..., cye: bool | int | str = ..., cycleInterval: bool | int | int = ..., cyi: bool | int | int = ..., densityEmissionRate: bool | int | float = ..., der: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., fluidDropoff: bool | int | float = ..., fdr: bool | int | float = ..., fuelEmissionRate: bool | int | float = ..., fer: bool | int | float = ..., heatEmissionRate: bool | int | float = ..., her: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., minDistance: bool | int | float = ..., mnd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., position: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., rate: bool | int | float = ..., r: bool | int | float = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., type: bool | int | str = ..., typ: bool | int | str = ..., volumeOffset: bool | int | tuple[float, float, float] = ..., vof: bool | int | tuple[float, float, float] = ..., volumeShape: bool | int | str = ..., vsh: bool | int | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...

fluidMergeCache: Callable
fluidMergeCacheOpt: Callable
fluidReplaceCache: Callable
fluidReplaceCacheOpt: Callable
fluidReplaceFrames: Callable
fluidReplaceFramesOpt: Callable
def fluidVoxelInfo(*args, checkBounds: bool | int = ..., cb: bool | int = ..., inBounds: tuple[int, int, int] = ..., ib: tuple[int, int, int] = ..., objectSpace: bool | int = ..., os: bool | int = ..., radius: float = ..., r: float = ..., voxel: tuple[float, float, float] = ..., v: tuple[float, float, float] = ..., voxelCenter: bool | int = ..., vc: bool | int = ..., xIndex: int = ..., xi: int = ..., yIndex: int = ..., yi: int = ..., zIndex: int = ..., zi: int = ...) -> Any: ...
def flushIdleQueue(*args, resume: bool | int = ..., r: bool | int = ...) -> Any: ...
def flushThumbnailCache(*args) -> Any: ...
def flushUndo(*args) -> Any: ...
def fontDialog(*args, FontList: bool | int = ..., fl: bool | int = ..., scalable: bool | int = ..., sc: bool | int = ...) -> Any: ...
def formLayout(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., attachControl: tuple[str, str, int, str] | list[tuple[str, str, int, str]] = ..., ac: tuple[str, str, int, str] | list[tuple[str, str, int, str]] = ..., attachForm: tuple[str, str, int] | list[tuple[str, str, int]] = ..., af: tuple[str, str, int] | list[tuple[str, str, int]] = ..., attachNone: tuple[str, str] | list[tuple[str, str]] = ..., an: tuple[str, str] | list[tuple[str, str]] = ..., attachOppositeControl: tuple[str, str, int, str] | list[tuple[str, str, int, str]] = ..., aoc: tuple[str, str, int, str] | list[tuple[str, str, int, str]] = ..., attachOppositeForm: tuple[str, str, int] | list[tuple[str, str, int]] = ..., aof: tuple[str, str, int] | list[tuple[str, str, int]] = ..., attachPosition: tuple[str, str, int, int] | list[tuple[str, str, int, int]] = ..., ap: tuple[str, str, int, int] | list[tuple[str, str, int, int]] = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., childArray: bool | int = ..., ca: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfDivisions: bool | int | int = ..., nd: bool | int | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def format(*args, stringArg: str | list[str] = ..., s: str | list[str] = ...) -> Any: ...
def frameBufferName(*args, autoTruncate: bool | int = ..., a: bool | int = ..., camera: str = ..., c: str = ..., renderLayer: str = ..., l: str = ..., renderPass: str = ..., p: str = ...) -> Any: ...
def frameLayout(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., backgroundShade: bool | int = ..., bgs: bool | int = ..., borderStyle: bool | int | str = ..., bs: bool | int | str = ..., borderVisible: bool | int = ..., bv: bool | int = ..., childArray: bool | int = ..., ca: bool | int = ..., collapsable: bool | int = ..., cll: bool | int = ..., collapse: bool | int = ..., cl: bool | int = ..., collapseCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandCommand: str | Callable = ..., ec: str | Callable = ..., font: bool | int | str = ..., fn: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelAlign: bool | int | str = ..., la: bool | int | str = ..., labelIndent: bool | int | int = ..., li: bool | int | int = ..., labelVisible: bool | int = ..., lv: bool | int = ..., labelWidth: bool | int | int = ..., lw: bool | int | int = ..., manage: bool | int = ..., m: bool | int = ..., marginHeight: bool | int | int = ..., mh: bool | int | int = ..., marginWidth: bool | int | int = ..., mw: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preCollapseCommand: str | Callable = ..., pcc: str | Callable = ..., preExpandCommand: str | Callable = ..., pec: str | Callable = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def framelessDialog(*args, button: str | list[str] = ..., b: str | list[str] = ..., message: str = ..., m: str = ..., messageAlign: str = ..., ma: str = ..., parent: str = ..., p: str = ..., path: str = ..., pat: str = ..., title: str = ..., t: str = ...) -> Any: ...
def freeFormFillet(*args, bias: bool | int | float = ..., b: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., depth: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., positionTolerance: bool | int | float = ..., pt: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., tangentTolerance: bool | int | float = ..., tt: bool | int | float = ...) -> Any: ...
def freezeOptions(*args, displayLayers: bool | int = ..., dl: bool | int = ..., downstream: bool | int | str = ..., dn: bool | int | str = ..., explicitPropagation: bool | int = ..., ep: bool | int = ..., invisible: bool | int = ..., inv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., referencedNodes: bool | int = ..., rn: bool | int = ..., runtimePropagation: bool | int = ..., rt: bool | int = ..., upstream: bool | int | str = ..., up: bool | int | str = ...) -> Any: ...
def geomBind(*args, bindMethod: int = ..., bm: int = ..., edit: bool | int = ..., e: bool | int = ..., falloff: bool | int | float = ..., fo: bool | int | float = ..., geodesicVoxelParams: bool | int | tuple[int, bool | int] = ..., gvp: bool | int | tuple[int, bool | int] = ..., maxInfluences: bool | int | int = ..., mi: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def geomToBBox(*args, bakeAnimation: bool | int = ..., ba: bool | int = ..., combineMesh: bool | int = ..., cm: bool | int = ..., endTime: int | float = ..., et: int | float = ..., keepOriginal: bool | int = ..., ko: bool | int = ..., name: str = ..., n: str = ..., nameSuffix: str = ..., ns: str = ..., sampleBy: int | float = ..., sb: int | float = ..., shaderColor: tuple[float, float, float] = ..., sc: tuple[float, float, float] = ..., single: bool | int = ..., s: bool | int = ..., startTime: int | float = ..., st: int | float = ...) -> Any: ...

geometryAppendCache: Callable
geometryAppendCacheOpt: Callable
def geometryAttrInfo(*args, boundingBox: bool | int = ..., bb: bool | int = ..., castToEdges: bool | int = ..., cte: bool | int = ..., castToFaces: bool | int = ..., ctf: bool | int = ..., castToVerts: bool | int = ..., ctv: bool | int = ..., componentTagCategory: bool | int = ..., ccy: bool | int = ..., componentTagExpression: str = ..., cex: str = ..., componentTagHash: bool | int = ..., hsh: bool | int = ..., componentTagHistory: bool | int = ..., cth: bool | int = ..., componentTagHistoryHash: bool | int = ..., chh: bool | int = ..., componentTagNames: bool | int = ..., cnm: bool | int = ..., components: bool | int = ..., cmp: bool | int = ..., deformerChain: bool | int = ..., dch: bool | int = ..., elementCount: bool | int = ..., ec: bool | int = ..., groupId: int = ..., gid: int = ..., matrix: bool | int = ..., mtx: bool | int = ..., nodeChain: bool | int = ..., nch: bool | int = ..., originalGeometry: bool | int = ..., og: bool | int = ..., outputPlugChain: bool | int = ..., och: bool | int = ..., plugChain: bool | int = ..., pch: bool | int = ..., pointCount: bool | int = ..., pc: bool | int = ..., pointIndices: bool | int = ..., pi: bool | int = ..., points: bool | int = ..., pnt: bool | int = ..., subsetState: bool | int = ..., sbs: bool | int = ...) -> Any: ...

geometryCache: Callable
geometryCacheOpt: Callable
def geometryConstraint(*args, edit: bool | int = ..., e: bool | int = ..., layer: str = ..., l: str = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., targetList: bool | int = ..., tl: bool | int = ..., weight: bool | int | float = ..., w: bool | int | float = ..., weightAliasList: bool | int = ..., wal: bool | int = ...) -> Any: ...

geometryDeleteCacheFrames: Callable
geometryDeleteCacheFramesOpt: Callable
geometryDeleteCacheOpt: Callable
geometryExportCache: Callable
geometryExportCacheOpt: Callable
geometryMergeCache: Callable
geometryMergeCacheOpt: Callable
geometryReplaceCache: Callable
geometryReplaceCacheFrames: Callable
geometryReplaceCacheFramesOpt: Callable
geometryReplaceCacheOpt: Callable
def getAttr(*args, asString: bool | int = ..., caching: bool | int = ..., ca: bool | int = ..., channelBox: bool | int = ..., cb: bool | int = ..., expandEnvironmentVariables: bool | int = ..., x: bool | int = ..., keyable: bool | int = ..., k: bool | int = ..., lock: bool | int = ..., l: bool | int = ..., multiIndices: bool | int = ..., mi: bool | int = ..., settable: bool | int = ..., se: bool | int = ..., silent: bool | int = ..., sl: bool | int = ..., size: bool | int = ..., s: bool | int = ..., time: int | float = ..., t: int | float = ..., type: bool | int = ..., typ: bool | int = ...) -> Any: ...
def getClassification(*args, satisfies: str = ..., sat: str = ...) -> Any: ...
def getDefaultBrush(*args) -> Any: ...
def getFileList(*args, filespec: str = ..., fs: str = ..., folder: str = ..., fld: str = ...) -> Any: ...
def getFluidAttr(*args, attribute: str = ..., at: str = ..., lowerFace: bool | int = ..., lf: bool | int = ..., xIndex: int = ..., xi: int = ..., xvalue: bool | int = ..., x: bool | int = ..., yIndex: int = ..., yi: int = ..., yvalue: bool | int = ..., y: bool | int = ..., zIndex: int = ..., zi: int = ..., zvalue: bool | int = ..., z: bool | int = ...) -> Any: ...
def getInputDeviceRange(*args, maxValue: bool | int = ..., max: bool | int = ..., minValue: bool | int = ..., min: bool | int = ...) -> Any: ...
def getLastError(*args) -> Any: ...
def getMetadata(*args, channelName: bool | int | str = ..., cn: bool | int | str = ..., channelType: bool | int | str = ..., cht: bool | int | str = ..., dataType: bool | int = ..., dt: bool | int = ..., endIndex: str = ..., eix: str = ..., index: bool | int | str | list[str] = ..., idx: bool | int | str | list[str] = ..., indexType: bool | int | str = ..., idt: bool | int | str = ..., listChannelNames: bool | int = ..., lcn: bool | int = ..., listMemberNames: bool | int = ..., lmn: bool | int = ..., listStreamNames: bool | int = ..., lsn: bool | int = ..., memberName: str = ..., mn: str = ..., scene: bool | int = ..., scn: bool | int = ..., startIndex: str = ..., six: str = ..., streamName: bool | int | str = ..., stn: bool | int | str = ...) -> Any: ...
def getModifiers(*args) -> Any: ...
def getModulePath(*args, moduleName: str = ..., mn: str = ...) -> Any: ...
def getPanel(*args, allConfigs: bool | int = ..., ac: bool | int = ..., allPanels: bool | int = ..., all: bool | int = ..., allScriptedTypes: bool | int = ..., ast: bool | int = ..., allTypes: bool | int = ..., at: bool | int = ..., atPosition: tuple[int, int] = ..., ap: tuple[int, int] = ..., configWithLabel: str = ..., cwl: str = ..., containing: str = ..., c: str = ..., invisiblePanels: bool | int = ..., inv: bool | int = ..., scriptType: str = ..., sty: str = ..., type: str = ..., typ: str = ..., typeOf: str = ..., to: str = ..., underPointer: bool | int = ..., up: bool | int = ..., visiblePanels: bool | int = ..., vis: bool | int = ..., withFocus: bool | int = ..., wf: bool | int = ..., withLabel: str = ..., wl: str = ...) -> Any: ...
def getParticleAttr(*args, array: bool | int = ..., a: bool | int = ..., attribute: str = ..., at: str = ..., object: str = ..., o: str = ...) -> Any: ...
def getProcArguments(*args) -> Any: ...
def getRenderDependencies(*args) -> Any: ...
def getRenderTasks(*args, camera: str = ..., c: str = ..., renderLayer: str = ..., rl: str = ...) -> Any: ...
def ghosting(*args, action: str = ..., act: str = ..., allGhostedObjects: bool | int = ..., ago: bool | int = ..., allInRange: bool | int = ..., a: bool | int = ..., customFrames: bool | int | int | list[int] = ..., cf: bool | int | int | list[int] = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., farOpacity: bool | int | float = ..., fo: bool | int | float = ..., frames: bool | int = ..., f: bool | int = ..., geometryFilter: bool | int = ..., gf: bool | int = ..., ghostedObjects: bool | int = ..., go: bool | int = ..., ghostsStep: bool | int | int = ..., gs: bool | int | int = ..., hierarchy: bool | int = ..., h: bool | int = ..., jointFilter: bool | int = ..., jf: bool | int = ..., locatorFilter: bool | int = ..., lf: bool | int = ..., mode: bool | int | str = ..., m: bool | int | str = ..., nearOpacity: bool | int | float = ..., no: bool | int | float = ..., postColor: bool | int | tuple[float, float, float] = ..., poc: bool | int | tuple[float, float, float] = ..., postFrames: bool | int | int = ..., pof: bool | int | int = ..., preColor: bool | int | tuple[float, float, float] = ..., prc: bool | int | tuple[float, float, float] = ..., preFrames: bool | int | int = ..., prf: bool | int | int = ..., preset: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., resetAll: bool | int = ..., r: bool | int = ..., useDriver: bool | int = ..., ud: bool | int = ...) -> Any: ...
def glRender(*args, accumBufferPasses: bool | int | int = ..., abp: bool | int | int = ..., alphaSource: bool | int | str = ..., antiAliasMethod: bool | int | str = ..., aam: bool | int | str = ..., cameraIcons: bool | int = ..., ci: bool | int = ..., clearClr: bool | int | tuple[float, float, float] = ..., cc: bool | int | tuple[float, float, float] = ..., collisionIcons: bool | int = ..., coi: bool | int = ..., crossingEffect: bool | int = ..., ce: bool | int = ..., currentFrame: bool | int = ..., cf: bool | int = ..., drawStyle: bool | int | str = ..., ds: bool | int | str = ..., edgeSmoothness: bool | int | float = ..., es: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., emitterIcons: bool | int = ..., ei: bool | int = ..., fieldIcons: bool | int = ..., fii: bool | int = ..., flipbookCallback: bool | int | str = ..., fc: bool | int | str = ..., frameEnd: bool | int | int = ..., fe: bool | int | int = ..., frameIncrement: bool | int | int = ..., fi: bool | int | int = ..., frameStart: bool | int | int = ..., fs: bool | int | int = ..., fullResolution: bool | int = ..., fr: bool | int = ..., grid: bool | int = ..., gr: bool | int = ..., imageDirectory: bool | int | str = ..., id: bool | int | str = ..., imageName: bool | int | str = ..., imageSize: bool | int | tuple[int, int, float] = ..., lightIcons: bool | int = ..., li: bool | int = ..., lightingMode: bool | int | str = ..., lm: bool | int | str = ..., lineSmoothing: bool | int = ..., ls: bool | int = ..., offScreen: bool | int = ..., os: bool | int = ..., query: bool | int = ..., q: bool | int = ..., renderFrame: bool | int | str = ..., rf: bool | int | str = ..., renderSequence: bool | int | str = ..., rs: bool | int | str = ..., sharpness: bool | int | float = ..., sh: bool | int | float = ..., shutterAngle: bool | int | float = ..., sa: bool | int | float = ..., textureDisplay: bool | int = ..., txd: bool | int = ..., transformIcons: bool | int = ..., ti: bool | int = ..., useAccumBuffer: bool | int = ..., uab: bool | int = ..., viewport: bool | int | tuple[int, int, float] = ..., vp: bool | int | tuple[int, int, float] = ..., writeDepthMap: bool | int = ..., wdm: bool | int = ...) -> Any: ...
def glRenderEditor(*args, control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., lookThru: bool | int | str = ..., lt: bool | int | str = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., stateString: bool | int = ..., sts: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ..., viewCameraName: bool | int = ..., vcn: bool | int = ...) -> Any: ...
def globalStitch(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., lockSurface: bool | int | bool | int | list[bool | int] = ..., lk: bool | int | bool | int | list[bool | int] = ..., maxSeparation: bool | int | float = ..., ms: bool | int | float = ..., modificationResistance: bool | int | float = ..., mr: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., sampling: bool | int | int = ..., sam: bool | int | int = ..., stitchCorners: bool | int | int = ..., sc: bool | int | int = ..., stitchEdges: bool | int | int = ..., se: bool | int | int = ..., stitchPartialEdges: bool | int = ..., spe: bool | int = ..., stitchSmoothness: bool | int | int = ..., ss: bool | int | int = ...) -> Any: ...
def goal(*args, goal: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., index: bool | int = ..., i: bool | int = ..., query: bool | int = ..., q: bool | int = ..., useTransformAsGoal: bool | int = ..., utr: bool | int = ..., weight: float = ..., w: float = ...) -> Any: ...
def grabColor(*args, hsvValue: bool | int = ..., hsv: bool | int = ..., rgbValue: bool | int = ..., rgb: bool | int = ...) -> Any: ...
def gradientControl(*args, adaptiveScaling: bool | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., attribute: str = ..., at: str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfControls: bool | int | int = ..., nc: bool | int | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., refreshOnRelease: bool | int | int = ..., ror: bool | int | int = ..., selectedColorControl: str = ..., scc: str = ..., selectedInterpControl: str = ..., sic: str = ..., selectedPositionControl: str = ..., spc: str = ..., staticNumberOfControls: bool | int = ..., snc: bool | int = ..., staticPositions: bool | int = ..., sp: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., upperLimitControl: bool | int | str = ..., ulc: bool | int | str = ..., useTemplate: str = ..., ut: str = ..., verticalLayout: bool | int = ..., vl: bool | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def gradientControlNoAttr(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., asString: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., currentKey: bool | int | int = ..., ck: bool | int | int = ..., currentKeyChanged: str | Callable = ..., ckc: str | Callable = ..., currentKeyColorValue: bool | int | tuple[float, float, float] = ..., clv: bool | int | tuple[float, float, float] = ..., currentKeyCurveValue: bool | int = ..., cvv: bool | int = ..., currentKeyInterpValue: bool | int | int = ..., civ: bool | int | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., optionVar: bool | int | str = ..., ov: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rampAsColor: bool | int = ..., rac: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., valueAtPoint: bool | int | float = ..., vap: bool | int | float = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def graphDollyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def graphSelectContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def graphTrackCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def gravity(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | tuple[float, float, float] = ..., vof: bool | int | tuple[float, float, float] = ..., volumeShape: bool | int | str = ..., vsh: bool | int | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...
def grid(*args, default: bool | int = ..., df: bool | int = ..., displayAxes: bool | int = ..., da: bool | int = ..., displayAxesBold: bool | int = ..., dab: bool | int = ..., displayDivisionLines: bool | int = ..., ddl: bool | int = ..., displayGridLines: bool | int = ..., dgl: bool | int = ..., displayOrthographicLabels: bool | int = ..., dol: bool | int = ..., displayPerspectiveLabels: bool | int = ..., dpl: bool | int = ..., divisions: bool | int | int = ..., d: bool | int | int = ..., drawInfiniteGrid: bool | int = ..., dig: bool | int = ..., fogBase: bool | int | float = ..., fb: bool | int | float = ..., fogEnabled: bool | int = ..., fog: bool | int = ..., fogMinimumCameraDistance: bool | int | float = ..., fmd: bool | int | float = ..., fogPower: bool | int | float = ..., fp: bool | int | float = ..., gridSizeCameraDistanceFactor: bool | int | float = ..., cdf: bool | int | float = ..., gridSizeFixed: bool | int = ..., gsf: bool | int = ..., gridSizeLogFactorAdjustment: bool | int | float = ..., lfa: bool | int | float = ..., gridSizeMinimum: bool | int | float = ..., gsm: bool | int | float = ..., gridSizeVarying: bool | int = ..., gsv: bool | int = ..., lineWidth: bool | int | float = ..., lw: bool | int | float = ..., majorColor: bool | int | tuple[float, float, float, float] = ..., mac: bool | int | tuple[float, float, float, float] = ..., minorColor: bool | int | tuple[float, float, float, float] = ..., mic: bool | int | tuple[float, float, float, float] = ..., normalAxis: bool | int | int = ..., na: bool | int | int = ..., orthographicLabelPosition: bool | int | str = ..., olp: bool | int | str = ..., perspectiveLabelPosition: bool | int | str = ..., plp: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., r: bool | int = ..., size: bool | int | float = ..., s: bool | int | float = ..., spacing: bool | int | float = ..., sp: bool | int | float = ..., style: bool | int | int = ..., st: bool | int | int = ..., toggle: bool | int = ..., tgl: bool | int = ..., xAxisColor: bool | int | tuple[float, float, float, float] = ..., xac: bool | int | tuple[float, float, float, float] = ..., yAxisColor: bool | int | tuple[float, float, float, float] = ..., yac: bool | int | tuple[float, float, float, float] = ..., zAxisColor: bool | int | tuple[float, float, float, float] = ..., zac: bool | int | tuple[float, float, float, float] = ...) -> Any: ...
def gridLayout(*args, allowEmptyCells: bool | int = ..., aec: bool | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., autoGrow: bool | int = ..., ag: bool | int = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., cellHeight: bool | int | int = ..., ch: bool | int | int = ..., cellWidth: bool | int | int = ..., cw: bool | int | int = ..., cellWidthHeight: tuple[int, int] = ..., cwh: tuple[int, int] = ..., childArray: bool | int = ..., ca: bool | int = ..., columnsResizable: bool | int = ..., cr: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., gridOrder: bool | int = ..., go: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfColumns: bool | int | int = ..., nc: bool | int | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., numberOfRows: bool | int | int = ..., nr: bool | int | int = ..., numberOfRowsColumns: tuple[int, int] = ..., nrc: tuple[int, int] = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., position: tuple[str, int] | list[tuple[str, int]] = ..., pos: tuple[str, int] | list[tuple[str, int]] = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def group(*args, absolute: bool | int = ..., a: bool | int = ..., empty: bool | int = ..., em: bool | int = ..., name: str = ..., n: str = ..., parent: str = ..., p: str = ..., relative: bool | int = ..., r: bool | int = ..., useAsGroup: str = ..., uag: str = ..., world: bool | int = ..., w: bool | int = ...) -> Any: ...
def groupParts(*args) -> Any: ...
def hardenPointCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., multiplicity: bool | int | int = ..., m: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...) -> Any: ...
def hardware(*args, brdType: bool | int = ..., brd: bool | int = ..., cpuType: bool | int = ..., cpu: bool | int = ..., graphicsType: bool | int = ..., gfx: bool | int = ..., megaHertz: bool | int = ..., mhz: bool | int = ..., numProcessors: bool | int = ..., npr: bool | int = ...) -> Any: ...
def hardwareRenderPanel(*args, camera: bool | int | str = ..., cam: bool | int | str = ..., control: bool | int = ..., ctl: bool | int = ..., copy: str = ..., cp: str = ..., createString: bool | int = ..., cs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., editString: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., glRenderEditor: bool | int = ..., gre: bool | int = ..., init: bool | int = ..., isUnique: bool | int = ..., iu: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., menuBarRepeatLast: bool | int = ..., mrl: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., needsInit: bool | int = ..., ni: bool | int = ..., parent: str = ..., p: str = ..., popupMenuProcedure: bool | int | str | Callable = ..., pmp: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., replacePanel: str = ..., rp: str = ..., tearOff: bool | int = ..., to: bool | int = ..., tearOffCopy: str = ..., toc: str = ..., tearOffRestore: bool | int = ..., tor: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def hasMetadata(*args, asList: bool | int = ..., al: bool | int = ..., channelName: bool | int | str = ..., cn: bool | int | str = ..., channelType: bool | int | str = ..., cht: bool | int | str = ..., endIndex: str = ..., eix: str = ..., ignoreDefault: bool | int = ..., id: bool | int = ..., index: bool | int | str | list[str] = ..., idx: bool | int | str | list[str] = ..., indexType: bool | int | str = ..., idt: bool | int | str = ..., memberName: str = ..., mn: str = ..., scene: bool | int = ..., scn: bool | int = ..., startIndex: str = ..., six: str = ..., streamName: bool | int | str = ..., stn: bool | int | str = ...) -> Any: ...
def headsUpDisplay(*args, allDescendants: bool | int = ..., ad: bool | int = ..., allowOverlap: bool | int = ..., ao: bool | int = ..., attachToRefresh: bool | int = ..., atr: bool | int = ..., attributeChange: str = ..., ac: str = ..., block: bool | int | int = ..., b: bool | int | int = ..., blockAlignment: bool | int | str = ..., ba: bool | int | str = ..., blockSize: bool | int | str = ..., bs: bool | int | str = ..., command: bool | int | str | Callable = ..., c: bool | int | str | Callable = ..., conditionChange: str = ..., cc: str = ..., conditionFalse: str = ..., cf: str = ..., conditionTrue: str = ..., ct: str = ..., connectionChange: str = ..., con: str = ..., dataAlignment: bool | int | str = ..., da: bool | int | str = ..., dataFontSize: bool | int | str = ..., dfs: bool | int | str = ..., dataWidth: bool | int | int = ..., dw: bool | int | int = ..., decimalPrecision: bool | int | int = ..., dp: bool | int | int = ..., disregardIndex: bool | int = ..., di: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., event: str = ..., ev: str = ..., exists: bool | int = ..., ex: bool | int = ..., getOption: bool | int | str = ..., op: bool | int | str = ..., gridColor: bool | int | int = ..., gco: bool | int | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelFontSize: bool | int | str = ..., lfs: bool | int | str = ..., labelWidth: bool | int | int = ..., lw: bool | int | int = ..., lastOccupiedBlock: int = ..., lob: int = ..., layoutVisibility: bool | int = ..., lv: bool | int = ..., listConditions: bool | int = ..., lc: bool | int = ..., listEvents: bool | int = ..., le: bool | int = ..., listHeadsUpDisplays: bool | int = ..., lh: bool | int = ..., listNodeChanges: bool | int = ..., lnc: bool | int = ..., listPresets: bool | int = ..., lp: bool | int = ..., name: str = ..., n: str = ..., nextFreeBlock: int = ..., nfb: int = ..., nodeChanges: bool | int | str | list[str] = ..., nc: bool | int | str | list[str] = ..., padding: bool | int | int = ..., p: bool | int | int = ..., preset: bool | int | str = ..., pre: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., refresh: bool | int = ..., r: bool | int = ..., remove: bool | int = ..., rem: bool | int = ..., removeID: int = ..., rid: int = ..., removePosition: tuple[int, int] = ..., rp: tuple[int, int] = ..., resetNodeChanges: str | list[str] = ..., rnc: str | list[str] = ..., scriptResult: bool | int = ..., sr: bool | int = ..., section: bool | int | int = ..., s: bool | int | int = ..., setOption: tuple[str, str] = ..., so: tuple[str, str] = ..., showGrid: bool | int = ..., sg: bool | int = ..., visible: bool | int = ..., vis: bool | int = ...) -> Any: ...
def help(*args, documentation: bool | int = ..., doc: bool | int = ..., language: str = ..., lng: str = ..., list: bool | int = ..., l: bool | int = ..., popupDisplayTime: bool | int | int = ..., pdt: bool | int | int = ..., popupMode: bool | int = ..., pm: bool | int = ..., popupPauseTime: bool | int | int = ..., ppt: bool | int | int = ..., popupSimpleMode: bool | int = ..., psm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rolloverMode: bool | int = ..., rm: bool | int = ..., syntaxOnly: bool | int = ..., so: bool | int = ...) -> Any: ...
def helpLine(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def hide(*args, allObjects: bool | int = ..., all: bool | int = ..., clearLastHidden: bool | int = ..., clh: bool | int = ..., clearSelection: bool | int = ..., cs: bool | int = ..., invertComponents: bool | int = ..., ic: bool | int = ..., returnHidden: bool | int = ..., rh: bool | int = ..., testVisibility: bool | int = ..., tv: bool | int = ...) -> Any: ...
def hikGlobals(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., releaseAllPinning: bool | int = ..., rap: bool | int = ...) -> Any: ...
def hilite(*args, replace: bool | int = ..., r: bool | int = ..., toggle: bool | int = ..., tgl: bool | int = ..., unHilite: bool | int = ..., u: bool | int = ...) -> Any: ...
def hitTest(*args) -> Any: ...
def hotBox(*args, PaneOnlyMenus: bool | int = ..., po: bool | int = ..., PaneToggleMenus: bool | int = ..., pt: bool | int = ..., animationOnlyMenus: bool | int = ..., ao: bool | int = ..., animationToggleMenus: bool | int = ..., at: bool | int = ..., clothOnlyMenus: bool | int = ..., clo: bool | int = ..., clothToggleMenus: bool | int = ..., clt: bool | int = ..., commonOnlyMenus: bool | int = ..., co: bool | int = ..., commonToggleMenus: bool | int = ..., ct: bool | int = ..., customMenuSetsToggleMenus: bool | int = ..., cst: bool | int = ..., displayCenterOnly: bool | int = ..., dco: bool | int = ..., displayHotbox: bool | int = ..., dh: bool | int = ..., displayStyle: bool | int = ..., ds: bool | int = ..., displayZonesOnly: bool | int = ..., dzo: bool | int = ..., dynamicsOnlyMenus: bool | int = ..., do: bool | int = ..., dynamicsToggleMenus: bool | int = ..., dt: bool | int = ..., liveOnlyMenus: bool | int = ..., lo: bool | int = ..., liveToggleMenus: bool | int = ..., lt: bool | int = ..., menuSetOnly: str = ..., mso: str = ..., menuSetToggle: tuple[str, bool | int] = ..., mst: tuple[str, bool | int] = ..., modelingOnlyMenus: bool | int = ..., mdo: bool | int = ..., modelingToggleMenus: bool | int = ..., mdt: bool | int = ..., noClickCommand: str | Callable = ..., ncc: str | Callable = ..., noClickDelay: float = ..., ncd: float = ..., noClickPosition: bool | int = ..., ncp: bool | int = ..., noKeyPress: bool | int = ..., nkp: bool | int = ..., polygonsOnlyMenus: bool | int = ..., plo: bool | int = ..., polygonsToggleMenus: bool | int = ..., plt: bool | int = ..., position: tuple[int, int] = ..., pos: tuple[int, int] = ..., query: bool | int = ..., q: bool | int = ..., release: bool | int = ..., rl: bool | int = ..., renderingOnlyMenus: bool | int = ..., ro: bool | int = ..., renderingToggleMenus: bool | int = ..., rt: bool | int = ..., riggingOnlyMenus: bool | int = ..., rgo: bool | int = ..., riggingToggleMenus: bool | int = ..., rgt: bool | int = ..., rmbPopups: bool | int = ..., rmb: bool | int = ..., showAllToggleMenus: bool | int = ..., a: bool | int = ..., surfacesOnlyMenus: bool | int = ..., so: bool | int = ..., surfacesToggleMenus: bool | int = ..., st: bool | int = ..., transparenyLevel: bool | int | int = ..., tr: bool | int | int = ..., updateMenus: bool | int = ..., um: bool | int = ...) -> Any: ...
def hotkey(*args, altModifier: bool | int = ..., alt: bool | int = ..., autoSave: bool | int = ..., commandModifier: bool | int = ..., cmd: bool | int = ..., ctrlModifier: bool | int = ..., ctl: bool | int = ..., ctxClient: bool | int | str = ..., cc: bool | int | str = ..., dragPress: bool | int = ..., dp: bool | int = ..., factorySettings: bool | int = ..., fs: bool | int = ..., isModifier: bool | int = ..., mod: bool | int = ..., keyShortcut: str = ..., k: str = ..., name: bool | int | str = ..., n: bool | int | str = ..., pressCommandRepeat: bool | int = ..., pcr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., releaseCommandRepeat: bool | int = ..., rcr: bool | int = ..., releaseName: bool | int | str = ..., rn: bool | int | str = ..., shiftModifier: bool | int = ..., sht: bool | int = ..., sourceUserHotkeys: bool | int = ..., suh: bool | int = ...) -> Any: ...
def hotkeyCheck(*args, altModifier: bool | int = ..., alt: bool | int = ..., commandModifier: bool | int = ..., cmd: bool | int = ..., ctrlModifier: bool | int = ..., ctl: bool | int = ..., isRepeatable: bool | int = ..., ir: bool | int = ..., keyString: str = ..., k: str = ..., keyUp: bool | int = ..., kup: bool | int = ..., optionModifier: bool | int = ..., opt: bool | int = ..., toBeRemovedInFutureMayaRelease: str = ..., key: str = ...) -> Any: ...
def hotkeyCtx(*args, addClient: str | list[str] = ..., ac: str | list[str] = ..., clientArray: bool | int = ..., ca: bool | int = ..., currentClient: bool | int | str = ..., cc: bool | int | str = ..., insertTypeAt: tuple[str, str] = ..., ita: tuple[str, str] = ..., query: bool | int = ..., q: bool | int = ..., removeAllClients: bool | int = ..., rac: bool | int = ..., removeClient: str | list[str] = ..., rc: str | list[str] = ..., removeType: str = ..., rt: str = ..., type: bool | int | str = ..., t: bool | int | str = ..., typeArray: bool | int = ..., ta: bool | int = ..., typeExists: bool | int | str = ..., te: bool | int | str = ...) -> Any: ...
def hotkeyEditorPanel(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def hotkeySet(*args, current: bool | int = ..., cu: bool | int = ..., delete: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., export: str = ..., ep: str = ..., hotkeySetArray: bool | int = ..., hsa: bool | int = ..., ip: str = ..., query: bool | int = ..., q: bool | int = ..., rename: str = ..., re: str = ..., source: str = ..., src: str = ...) -> Any: ...
def hudButton(*args, allowOverlap: bool | int = ..., ao: bool | int = ..., block: bool | int | int = ..., b: bool | int | int = ..., blockAlignment: bool | int | str = ..., ba: bool | int | str = ..., blockSize: bool | int | str = ..., bs: bool | int | str = ..., buttonShape: bool | int | str = ..., bsh: bool | int | str = ..., buttonWidth: bool | int | int = ..., bw: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelFontSize: bool | int | str = ..., lfs: bool | int | str = ..., padding: bool | int | int = ..., p: bool | int | int = ..., pressCommand: bool | int | str | Callable = ..., pc: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., releaseCommand: bool | int | str | Callable = ..., rc: bool | int | str | Callable = ..., section: bool | int | int = ..., s: bool | int | int = ..., visible: bool | int = ..., vis: bool | int = ...) -> Any: ...
def hudSlider(*args, allowOverlap: bool | int = ..., ao: bool | int = ..., block: bool | int | int = ..., b: bool | int | int = ..., blockAlignment: bool | int | str = ..., ba: bool | int | str = ..., blockSize: bool | int | str = ..., bs: bool | int | str = ..., decimalPrecision: bool | int | int = ..., dp: bool | int | int = ..., dragCommand: bool | int | str | Callable = ..., dc: bool | int | str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., internalPadding: bool | int | int = ..., ip: bool | int | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelFontSize: bool | int | str = ..., lfs: bool | int | str = ..., labelWidth: bool | int | int = ..., lw: bool | int | int = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., padding: bool | int | int = ..., p: bool | int | int = ..., pressCommand: bool | int | str | Callable = ..., pc: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., releaseCommand: bool | int | str | Callable = ..., rc: bool | int | str | Callable = ..., section: bool | int | int = ..., s: bool | int | int = ..., sliderIncrement: bool | int | float = ..., si: bool | int | float = ..., sliderLength: bool | int | int = ..., sl: bool | int | int = ..., type: bool | int | str = ..., t: bool | int | str = ..., value: bool | int | float = ..., v: bool | int | float = ..., valueAlignment: bool | int | str = ..., va: bool | int | str = ..., valueFontSize: bool | int | str = ..., vfs: bool | int | str = ..., valueWidth: bool | int | int = ..., vw: bool | int | int = ..., visible: bool | int = ..., vis: bool | int = ...) -> Any: ...
def hudSliderButton(*args, allowOverlap: bool | int = ..., ao: bool | int = ..., block: bool | int | int = ..., b: bool | int | int = ..., blockAlignment: bool | int | str = ..., ba: bool | int | str = ..., blockSize: bool | int | str = ..., bs: bool | int | str = ..., buttonLabel: bool | int | str = ..., bl: bool | int | str = ..., buttonLabelFontSize: bool | int | str = ..., bfs: bool | int | str = ..., buttonPressCommand: bool | int | str | Callable = ..., bpc: bool | int | str | Callable = ..., buttonReleaseCommand: bool | int | str | Callable = ..., brc: bool | int | str | Callable = ..., buttonShape: bool | int | str = ..., bsh: bool | int | str = ..., buttonWidth: bool | int | int = ..., bw: bool | int | int = ..., decimalPrecision: bool | int | int = ..., dp: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., internalPadding: bool | int | int = ..., ip: bool | int | int = ..., maxValue: bool | int | float = ..., max: bool | int | float = ..., minValue: bool | int | float = ..., min: bool | int | float = ..., padding: bool | int | int = ..., p: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., section: bool | int | int = ..., s: bool | int | int = ..., sliderDragCommand: bool | int | str | Callable = ..., sdc: bool | int | str | Callable = ..., sliderIncrement: bool | int | float = ..., si: bool | int | float = ..., sliderLabel: bool | int | str = ..., sl: bool | int | str = ..., sliderLabelFontSize: bool | int | str = ..., sfs: bool | int | str = ..., sliderLabelWidth: bool | int | int = ..., slw: bool | int | int = ..., sliderLength: bool | int | int = ..., sln: bool | int | int = ..., sliderPressCommand: bool | int | str | Callable = ..., spc: bool | int | str | Callable = ..., sliderReleaseCommand: bool | int | str | Callable = ..., src: bool | int | str | Callable = ..., type: bool | int | str = ..., t: bool | int | str = ..., value: bool | int | float = ..., v: bool | int | float = ..., valueAlignment: bool | int | str = ..., va: bool | int | str = ..., valueFontSize: bool | int | str = ..., vfs: bool | int | str = ..., valueWidth: bool | int | int = ..., vw: bool | int | int = ..., visible: bool | int = ..., vis: bool | int = ...) -> Any: ...
def hwReflectionMap(*args, backTextureName: bool | int | str = ..., bkn: bool | int | str = ..., bottomTextureName: bool | int | str = ..., bmn: bool | int | str = ..., cubeMap: bool | int = ..., cm: bool | int = ..., decalMode: bool | int = ..., dm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., frontTextureName: bool | int | str = ..., ftn: bool | int | str = ..., leftTextureName: bool | int | str = ..., ltn: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., rightTextureName: bool | int | str = ..., rtn: bool | int | str = ..., sphereMapTextureName: bool | int | str = ..., smn: bool | int | str = ..., topTextureName: bool | int | str = ..., tpn: bool | int | str = ...) -> Any: ...
def hwRender(*args, acceleratedMultiSampleSupport: bool | int = ..., ams: bool | int = ..., activeTextureCount: bool | int = ..., atc: bool | int = ..., camera: bool | int | str = ..., cam: bool | int | str = ..., currentFrame: bool | int = ..., cf: bool | int = ..., currentView: bool | int = ..., cv: bool | int = ..., edgeAntiAliasing: bool | int | tuple[int, int] = ..., eaa: bool | int | tuple[int, int] = ..., fixFileNameNumberPattern: bool | int = ..., fnp: bool | int = ..., frame: float = ..., f: float = ..., fullRenderSupport: bool | int = ..., frs: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., imageFileName: bool | int = ..., ifn: bool | int = ..., layer: bool | int | str = ..., l: bool | int | str = ..., limitedRenderSupport: bool | int = ..., lrs: bool | int = ..., lowQualityLighting: bool | int = ..., lql: bool | int = ..., noRenderView: bool | int = ..., nrv: bool | int = ..., notWriteToFile: bool | int = ..., nwf: bool | int = ..., printGeometry: bool | int = ..., pg: bool | int = ..., query: bool | int = ..., q: bool | int = ..., renderHardwareName: bool | int = ..., rhw: bool | int = ..., renderRegion: bool | int | tuple[int, int, int, int] = ..., reg: bool | int | tuple[int, int, int, int] = ..., renderSelected: bool | int = ..., rs: bool | int = ..., textureResolution: bool | int | int = ..., res: bool | int | int = ..., width: bool | int | int = ..., w: bool | int | int = ..., writeAlpha: bool | int = ..., a: bool | int = ..., writeDepth: bool | int = ..., d: bool | int = ...) -> Any: ...
def hwRenderLoad(*args) -> Any: ...
def hyperGraph(*args, addBookmark: bool | int = ..., abk: bool | int = ..., addDependGraph: str = ..., adg: str = ..., addDependNode: str = ..., adn: str = ..., animateTransition: bool | int = ..., atr: bool | int = ..., attributeEditor: str = ..., ae: str = ..., backward: bool | int = ..., bak: bool | int = ..., bookmarkName: bool | int = ..., bn: bool | int = ..., breakConnectionCommand: bool | int | str = ..., bco: bool | int | str = ..., clear: bool | int = ..., clr: bool | int = ..., collapseContainer: bool | int = ..., cc: bool | int = ..., connectionDrawStyle: str = ..., cds: str = ..., control: bool | int = ..., ctl: bool | int = ..., currentEdge: bool | int | str = ..., ced: bool | int | str = ..., currentNode: bool | int | str = ..., cno: bool | int | str = ..., debug: str = ..., deb: str = ..., defineTemplate: str = ..., dt: str = ..., deleteBookmark: str = ..., dbk: str = ..., dependGraph: bool | int = ..., dg: bool | int = ..., dependNode: str = ..., dn: str = ..., directoryPressCommand: str = ..., dp: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., down: bool | int = ..., do: bool | int = ..., downstream: bool | int = ..., ds: bool | int = ..., dragAndDropBehaviorCommand: str = ..., ddc: str = ..., dropNode: bool | int | str = ..., dr: bool | int | str = ..., dropTargetNode: bool | int | str = ..., drt: bool | int | str = ..., edgeDblClickCommand: str = ..., edc: str = ..., edgeDimmedDblClickCommand: str = ..., edd: str = ..., edgeDropCommand: str = ..., edr: str = ..., edgePressCommand: str = ..., ep: str = ..., edgeReleaseCommand: str = ..., er: str = ..., edit: bool | int = ..., e: bool | int = ..., enableAutomaticLayout: bool | int = ..., eal: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandContainer: bool | int = ..., ec: bool | int = ..., feedbackGadget: bool | int | str = ..., fbg: bool | int | str = ..., feedbackNode: bool | int | str = ..., fbn: bool | int | str = ..., filter: bool | int | str = ..., f: bool | int | str = ..., filterDetail: tuple[str, bool | int] = ..., fd: tuple[str, bool | int] = ..., fitImageToHeight: bool | int = ..., fih: bool | int = ..., fitImageToWidth: bool | int = ..., fiw: bool | int = ..., focusCommand: str = ..., fc: str = ..., fold: bool | int = ..., fo: bool | int = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., forceRefresh: bool | int = ..., frf: bool | int = ..., forward: bool | int = ..., fow: bool | int = ..., frame: bool | int = ..., fr: bool | int = ..., frameBranch: bool | int = ..., frb: bool | int = ..., frameGraph: bool | int = ..., fg: bool | int = ..., frameGraphNoRebuild: bool | int = ..., fgn: bool | int = ..., frameHierarchy: bool | int = ..., frh: bool | int = ..., freeform: bool | int = ..., fre: bool | int = ..., fromAttr: bool | int | str = ..., fat: bool | int | str = ..., fromNode: bool | int | str = ..., frn: bool | int | str = ..., getNodeList: bool | int = ..., gnl: bool | int = ..., getNodePosition: bool | int | str = ..., gnp: bool | int | str = ..., graphDescription: bool | int = ..., gd: bool | int = ..., graphLayoutStyle: bool | int | str = ..., gls: bool | int | str = ..., graphType: bool | int | str = ..., gt: bool | int | str = ..., heatMapDisplay: bool | int = ..., hmd: bool | int = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., iconSize: bool | int | str = ..., ics: bool | int | str = ..., image: bool | int | str = ..., img: bool | int | str = ..., imageEnabled: bool | int = ..., ime: bool | int = ..., imageForContainer: bool | int = ..., ifc: bool | int = ..., imagePosition: bool | int | tuple[float, float] = ..., imp: bool | int | tuple[float, float] = ..., imageScale: bool | int | float = ..., ims: bool | int | float = ..., initializeScript: str = ..., ini: str = ..., isHotkeyTarget: bool | int = ..., iht: bool | int = ..., layout: bool | int = ..., lay: bool | int = ..., layoutSelected: str = ..., lsl: str = ..., layoutSubtree: bool | int = ..., lsb: bool | int = ..., limitGraphTraversal: int = ..., lgt: int = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., look: tuple[float, float] = ..., loo: tuple[float, float] = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., mergeConnections: bool | int = ..., mc: bool | int = ..., navigateHome: bool | int = ..., hom: bool | int = ..., navup: bool | int = ..., nu: bool | int = ..., newInputConnection: str = ..., nin: str = ..., newOutputConnection: str = ..., nou: str = ..., nextView: bool | int = ..., nvw: bool | int = ..., nodeConnectCommand: str = ..., nco: str = ..., nodeDblClickCommand: str = ..., ndc: str = ..., nodeDropCommand: str = ..., ndr: str = ..., nodeMenuCommand: str = ..., nm: str = ..., nodePressCommand: str = ..., np: str = ..., nodeReleaseCommand: str = ..., nr: str = ..., opaqueContainers: bool | int = ..., opc: bool | int = ..., orientation: bool | int | str = ..., panView: tuple[float, float] = ..., pan: tuple[float, float] = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuScript: str = ..., pms: str = ..., previousView: bool | int = ..., pvw: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int | tuple[float, float] = ..., rg: bool | int | tuple[float, float] = ..., rebuild: bool | int = ..., rb: bool | int = ..., removeNode: str = ..., rmn: str = ..., rename: bool | int = ..., rn: bool | int = ..., resetFreeform: bool | int = ..., rf: bool | int = ..., restoreBookmark: str = ..., rbk: str = ..., scrollUpDownNoZoom: bool | int = ..., snz: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., setNodePosition: tuple[str, float, float] = ..., snp: tuple[str, float, float] = ..., showCachedConnections: bool | int = ..., scc: bool | int = ..., showConnectionFromSelected: bool | int = ..., scf: bool | int = ..., showConnectionToSelected: bool | int = ..., sct: bool | int = ..., showConstraintLabels: bool | int = ..., scl: bool | int = ..., showConstraints: bool | int = ..., shc: bool | int = ..., showDeformers: bool | int = ..., shd: bool | int = ..., showExpressions: bool | int = ..., shx: bool | int = ..., showInvisible: bool | int = ..., shi: bool | int = ..., showRelationships: bool | int = ..., shr: bool | int = ..., showShapes: bool | int = ..., shs: bool | int = ..., showUnderworld: bool | int = ..., shu: bool | int = ..., stateString: bool | int = ..., sts: bool | int = ..., toAttr: bool | int | str = ..., tat: bool | int | str = ..., toNode: bool | int | str = ..., ton: bool | int | str = ..., transitionFrames: bool | int | int = ..., tfr: bool | int | int = ..., unParent: bool | int = ..., up: bool | int = ..., unfold: bool | int = ..., uf: bool | int = ..., unfoldAll: bool | int = ..., ua: bool | int = ..., unfoldAllShapes: bool | int = ..., uas: bool | int = ..., unfoldHidden: bool | int = ..., ufh: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., updateNodeAdded: bool | int = ..., una: bool | int = ..., updateSelection: bool | int = ..., us: bool | int = ..., upstream: bool | int = ..., ups: bool | int = ..., useDrawOverrideColor: bool | int = ..., drc: bool | int = ..., useFeedbackList: bool | int = ..., ufl: bool | int = ..., useTemplate: str = ..., ut: str = ..., viewOption: bool | int | str = ..., vo: bool | int | str = ..., visibility: bool | int = ..., vis: bool | int = ..., zoom: float = ..., zm: float = ...) -> Any: ...
def hyperPanel(*args, control: bool | int = ..., ctl: bool | int = ..., copy: str = ..., cp: str = ..., createString: bool | int = ..., cs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., editString: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., hyperEditor: bool | int = ..., he: bool | int = ..., init: bool | int = ..., isUnique: bool | int = ..., iu: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., menuBarRepeatLast: bool | int = ..., mrl: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., needsInit: bool | int = ..., ni: bool | int = ..., parent: str = ..., p: str = ..., popupMenuProcedure: bool | int | str | Callable = ..., pmp: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., replacePanel: str = ..., rp: str = ..., tearOff: bool | int = ..., to: bool | int = ..., tearOffCopy: str = ..., toc: str = ..., tearOffRestore: bool | int = ..., tor: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def hyperShade(*args, assign: str = ..., a: str = ..., clearWorkArea: bool | int = ..., cwa: bool | int = ..., collapse: str = ..., clp: str = ..., createNode: str = ..., rcn: str = ..., dependGraphArea: bool | int = ..., dg: bool | int = ..., downStream: bool | int = ..., ds: bool | int = ..., duplicate: bool | int = ..., dup: bool | int = ..., fixRenderSize: bool | int = ..., fix: bool | int = ..., incremental: bool | int = ..., inc: bool | int = ..., listDownstreamNodes: str = ..., ldn: str = ..., listDownstreamShaderNodes: str = ..., lds: str = ..., listUpstreamNodes: str = ..., lun: str = ..., name: str = ..., n: str = ..., networks: bool | int = ..., net: bool | int = ..., noSGShapes: bool | int = ..., nsg: bool | int = ..., noShapes: bool | int = ..., ns: bool | int = ..., noTransforms: bool | int = ..., nt: bool | int = ..., objects: str = ..., o: str = ..., renderCreateAndDrop: str = ..., rcd: str = ..., reset: bool | int = ..., rst: bool | int = ..., resetGraph: bool | int = ..., rsg: bool | int = ..., resetSwatch: bool | int = ..., rss: bool | int = ..., setAllowsRegraphing: bool | int = ..., sar: bool | int = ..., setWorkArea: str = ..., swa: str = ..., shaderNetwork: str = ..., sn: str = ..., shaderNetworks: bool | int = ..., sns: bool | int = ..., shaderNetworksSelectMaterialNodes: bool | int = ..., smn: bool | int = ..., snapShot: bool | int = ..., snp: bool | int = ..., uncollapse: str = ..., ucl: str = ..., upStream: bool | int = ..., ups: bool | int = ..., userDefinedLayout: bool | int = ..., udl: bool | int = ..., workAreaAddCmd: str = ..., waa: str = ..., workAreaDeleteCmd: str = ..., wad: str = ..., workAreaSelectCmd: str = ..., was: str = ...) -> Any: ...
def iconTextButton(*args, actionIsSubstitute: bool | int = ..., ais: bool | int = ..., align: bool | int | str = ..., al: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., command: bool | int | str | Callable = ..., c: bool | int | str | Callable = ..., commandRepeatable: bool | int = ..., rpt: bool | int = ..., defineTemplate: str = ..., dt: str = ..., disabledImage: bool | int | str = ..., di: bool | int | str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., doubleClickCommand: bool | int | str | Callable = ..., dcc: bool | int | str | Callable = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., flat: bool | int = ..., fla: bool | int = ..., flipX: bool | int = ..., fx: bool | int = ..., flipY: bool | int = ..., fy: bool | int = ..., font: bool | int | str = ..., fn: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., handleNodeDropCallback: str | Callable = ..., hnd: str | Callable = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., highlightImage: bool | int | str = ..., hi: bool | int | str = ..., image: bool | int | str = ..., i: bool | int | str = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., imageOverlayLabel: bool | int | str = ..., iol: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelEditingCallback: str | Callable = ..., lec: str | Callable = ..., labelOffset: bool | int | int = ..., lo: bool | int | int = ..., ltVersion: bool | int | str = ..., lt: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., marginHeight: bool | int | int = ..., mh: bool | int | int = ..., marginWidth: bool | int | int = ..., mw: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., overlayLabelBackColor: bool | int | tuple[float, float, float, float] = ..., olb: bool | int | tuple[float, float, float, float] = ..., overlayLabelColor: bool | int | tuple[float, float, float] = ..., olc: bool | int | tuple[float, float, float] = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rotation: bool | int | float = ..., rot: bool | int | float = ..., scaleIcon: bool | int = ..., sic: bool | int = ..., selectionImage: bool | int | str = ..., si: bool | int | str = ..., sourceType: bool | int | str = ..., stp: bool | int | str = ..., statusBarMessage: str = ..., sbm: str = ..., style: bool | int | str = ..., st: bool | int | str = ..., useAlpha: bool | int = ..., ua: bool | int = ..., useTemplate: str = ..., ut: str = ..., version: bool | int | str = ..., ver: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def iconTextCheckBox(*args, align: bool | int | str = ..., al: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: bool | int | str | Callable = ..., cc: bool | int | str | Callable = ..., defineTemplate: str = ..., dt: str = ..., disabledImage: bool | int | str = ..., di: bool | int | str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., flat: bool | int = ..., fla: bool | int = ..., flipX: bool | int = ..., fx: bool | int = ..., flipY: bool | int = ..., fy: bool | int = ..., font: bool | int | str = ..., fn: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., highlightImage: bool | int | str = ..., hi: bool | int | str = ..., image: bool | int | str = ..., i: bool | int | str = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., imageOverlayLabel: bool | int | str = ..., iol: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelOffset: bool | int | int = ..., lo: bool | int | int = ..., ltVersion: bool | int | str = ..., lt: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., marginHeight: bool | int | int = ..., mh: bool | int | int = ..., marginWidth: bool | int | int = ..., mw: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., offCommand: bool | int | str | Callable = ..., ofc: bool | int | str | Callable = ..., onCommand: bool | int | str | Callable = ..., onc: bool | int | str | Callable = ..., overlayLabelBackColor: bool | int | tuple[float, float, float, float] = ..., olb: bool | int | tuple[float, float, float, float] = ..., overlayLabelColor: bool | int | tuple[float, float, float] = ..., olc: bool | int | tuple[float, float, float] = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rotation: bool | int | float = ..., rot: bool | int | float = ..., selectionHighlightImage: bool | int | str = ..., shi: bool | int | str = ..., selectionImage: bool | int | str = ..., si: bool | int | str = ..., statusBarMessage: str = ..., sbm: str = ..., style: bool | int | str = ..., st: bool | int | str = ..., useAlpha: bool | int = ..., ua: bool | int = ..., useTemplate: str = ..., ut: str = ..., value: bool | int = ..., v: bool | int = ..., version: bool | int | str = ..., ver: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def iconTextRadioButton(*args, align: bool | int | str = ..., al: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: bool | int | str | Callable = ..., cc: bool | int | str | Callable = ..., collection: str = ..., cl: str = ..., defineTemplate: str = ..., dt: str = ..., disabledImage: bool | int | str = ..., di: bool | int | str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., flat: bool | int = ..., fla: bool | int = ..., flipX: bool | int = ..., fx: bool | int = ..., flipY: bool | int = ..., fy: bool | int = ..., font: bool | int | str = ..., fn: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., highlightImage: bool | int | str = ..., hi: bool | int | str = ..., image: bool | int | str = ..., i: bool | int | str = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., imageOverlayLabel: bool | int | str = ..., iol: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelOffset: bool | int | int = ..., lo: bool | int | int = ..., ltVersion: bool | int | str = ..., lt: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., marginHeight: bool | int | int = ..., mh: bool | int | int = ..., marginWidth: bool | int | int = ..., mw: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., offCommand: bool | int | str | Callable = ..., ofc: bool | int | str | Callable = ..., onCommand: bool | int | str | Callable = ..., onc: bool | int | str | Callable = ..., overlayLabelBackColor: bool | int | tuple[float, float, float, float] = ..., olb: bool | int | tuple[float, float, float, float] = ..., overlayLabelColor: bool | int | tuple[float, float, float] = ..., olc: bool | int | tuple[float, float, float] = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rotation: bool | int | float = ..., rot: bool | int | float = ..., select: bool | int = ..., sl: bool | int = ..., selectionHighlightImage: bool | int | str = ..., shi: bool | int | str = ..., selectionImage: bool | int | str = ..., si: bool | int | str = ..., statusBarMessage: str = ..., sbm: str = ..., style: bool | int | str = ..., st: bool | int | str = ..., useAlpha: bool | int = ..., ua: bool | int = ..., useTemplate: str = ..., ut: str = ..., version: bool | int | str = ..., ver: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def iconTextRadioCollection(*args, collectionItemArray: bool | int = ..., cia: bool | int = ..., defineTemplate: str = ..., dt: str = ..., disableCommands: bool | int = ..., dcm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., gl: bool | int = ..., numberOfCollectionItems: bool | int = ..., nci: bool | int = ..., parent: str = ..., p: str = ..., query: bool | int = ..., q: bool | int = ..., select: bool | int | str = ..., sl: bool | int | str = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def iconTextScrollList(*args, allowMultiSelection: bool | int = ..., ams: bool | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., append: str | list[str] = ..., a: str | list[str] = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., deselectAll: bool | int = ..., da: bool | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., doubleClickCommand: str | Callable = ..., dcc: str | Callable = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragFeedbackVisible: bool | int = ..., dfv: bool | int = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., dropRectCallback: str | Callable = ..., drc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editIndexed: int = ..., ei: int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., itemAt: bool | int | tuple[int, int] = ..., ia: bool | int | tuple[int, int] = ..., itemTextColor: tuple[int, float, float, float] | list[tuple[int, float, float, float]] = ..., itc: tuple[int, float, float, float] | list[tuple[int, float, float, float]] = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfIcons: bool | int | int = ..., nic: bool | int | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., numberOfRows: bool | int = ..., nr: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeAll: bool | int = ..., ra: bool | int = ..., selectCommand: str | Callable = ..., sc: str | Callable = ..., selectIndexedItem: bool | int | int | list[int] = ..., sii: bool | int | int | list[int] = ..., selectItem: bool | int | str | list[str] = ..., si: bool | int | str | list[str] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., visualRectAt: bool | int | tuple[int, int] = ..., vra: bool | int | tuple[int, int] = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def iconTextStaticLabel(*args, align: bool | int | str = ..., al: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., disabledImage: bool | int | str = ..., di: bool | int | str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., flipX: bool | int = ..., fx: bool | int = ..., flipY: bool | int = ..., fy: bool | int = ..., font: bool | int | str = ..., fn: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., image: bool | int | str = ..., i: bool | int | str = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., imageOverlayLabel: bool | int | str = ..., iol: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelOffset: bool | int | int = ..., lo: bool | int | int = ..., ltVersion: bool | int | str = ..., lt: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., marginHeight: bool | int | int = ..., mh: bool | int | int = ..., marginWidth: bool | int | int = ..., mw: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., overlayLabelBackColor: bool | int | tuple[float, float, float, float] = ..., olb: bool | int | tuple[float, float, float, float] = ..., overlayLabelColor: bool | int | tuple[float, float, float] = ..., olc: bool | int | tuple[float, float, float] = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rotation: bool | int | float = ..., rot: bool | int | float = ..., statusBarMessage: str = ..., sbm: str = ..., style: bool | int | str = ..., st: bool | int | str = ..., useAlpha: bool | int = ..., ua: bool | int = ..., useTemplate: str = ..., ut: str = ..., version: bool | int | str = ..., ver: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def ikHandle(*args, autoPriority: bool | int = ..., ap: bool | int = ..., connectEffector: bool | int = ..., ce: bool | int = ..., createCurve: bool | int = ..., ccv: bool | int = ..., createRootAxis: bool | int = ..., cra: bool | int = ..., curve: bool | int | str = ..., c: bool | int | str = ..., disableHandles: bool | int = ..., dh: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., enableHandles: bool | int = ..., eh: bool | int = ..., endEffector: bool | int | str = ..., ee: bool | int | str = ..., exists: str = ..., ex: str = ..., forceSolver: bool | int = ..., fs: bool | int = ..., freezeJoints: bool | int = ..., fj: bool | int = ..., jointList: bool | int = ..., jl: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., numSpans: int = ..., ns: int = ..., parentCurve: bool | int = ..., pcv: bool | int = ..., positionWeight: bool | int | float = ..., pw: bool | int | float = ..., priority: bool | int | int = ..., p: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., rootOnCurve: bool | int = ..., roc: bool | int = ..., rootTwistMode: bool | int = ..., rtm: bool | int = ..., setupForRPsolver: bool | int = ..., srp: bool | int = ..., simplifyCurve: bool | int = ..., scv: bool | int = ..., snapCurve: bool | int = ..., snc: bool | int = ..., snapHandleFlagToggle: bool | int = ..., shf: bool | int = ..., snapHandleToEffector: bool | int = ..., see: bool | int = ..., solver: bool | int | str = ..., sol: bool | int | str = ..., startJoint: bool | int | str = ..., sj: bool | int | str = ..., sticky: bool | int | str = ..., s: bool | int | str = ..., twistType: bool | int | str = ..., tws: bool | int | str = ..., weight: bool | int | float = ..., w: bool | int | float = ...) -> Any: ...
def ikHandleCtx(*args, autoPriorityH: bool | int = ..., apH: bool | int = ..., createCurve: bool | int = ..., ccv: bool | int = ..., createRootAxis: bool | int = ..., cra: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., forceSolverH: bool | int = ..., fsH: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., numSpans: int = ..., ns: int = ..., parentCurve: bool | int = ..., pcv: bool | int = ..., poWeightH: bool | int | float = ..., pwH: bool | int | float = ..., priorityH: bool | int | int = ..., pH: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., rootOnCurve: bool | int = ..., roc: bool | int = ..., rootTwistMode: bool | int = ..., rtm: bool | int = ..., simplifyCurve: bool | int = ..., scv: bool | int = ..., snapCurve: bool | int = ..., snc: bool | int = ..., snapHandleH: bool | int = ..., snH: bool | int = ..., solverTypeH: bool | int | str = ..., stH: bool | int | str = ..., stickyH: bool | int | str = ..., sH: bool | int | str = ..., twistType: str = ..., tws: str = ..., weightH: bool | int | float = ..., wH: bool | int | float = ...) -> Any: ...
def ikHandleDisplayScale(*args, query: bool | int = ..., q: bool | int = ...) -> Any: ...
def ikSolver(*args, edit: bool | int = ..., e: bool | int = ..., epsilon: bool | int | float = ..., ep: bool | int | float = ..., maxIterations: bool | int | int = ..., mxi: bool | int | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., solverType: bool | int | str = ..., st: bool | int | str = ...) -> Any: ...
def ikSplineHandleCtx(*args, autoPriorityH: bool | int = ..., apH: bool | int = ..., createCurve: bool | int = ..., ccv: bool | int = ..., createRootAxis: bool | int = ..., cra: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., forceSolverH: bool | int = ..., fsH: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., numSpans: int = ..., ns: int = ..., parentCurve: bool | int = ..., pcv: bool | int = ..., poWeightH: bool | int | float = ..., pwH: bool | int | float = ..., priorityH: bool | int | int = ..., pH: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., rootOnCurve: bool | int = ..., roc: bool | int = ..., rootTwistMode: bool | int = ..., rtm: bool | int = ..., simplifyCurve: bool | int = ..., scv: bool | int = ..., snapCurve: bool | int = ..., snc: bool | int = ..., snapHandleH: bool | int = ..., snH: bool | int = ..., solverTypeH: bool | int | str = ..., stH: bool | int | str = ..., stickyH: bool | int | str = ..., sH: bool | int | str = ..., twistType: str = ..., tws: str = ..., weightH: bool | int | float = ..., wH: bool | int | float = ...) -> Any: ...
def ikSystem(*args, allowRotation: bool | int = ..., ar: bool | int = ..., autoPriority: bool | int = ..., ap: bool | int = ..., autoPriorityMC: bool | int = ..., apm: bool | int = ..., autoPrioritySC: bool | int = ..., aps: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., list: bool | int | tuple[int, int] = ..., ls: bool | int | tuple[int, int] = ..., query: bool | int = ..., q: bool | int = ..., snap: bool | int = ..., sn: bool | int = ..., solve: bool | int = ..., sol: bool | int = ..., solverTypes: bool | int = ..., st: bool | int = ...) -> Any: ...
def ikSystemInfo(*args, globalSnapHandle: bool | int = ..., gsh: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def ikfkDisplayMethod(*args, display: bool | int | str = ..., d: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def illustratorCurves(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., illustratorFilename: str = ..., ifn: str = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., scaleFactor: float = ..., sf: float = ..., tolerance: bool | int | float = ..., tl: bool | int | float = ...) -> Any: ...
def image(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., image: bool | int | str = ..., i: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def imagePlane(*args, camera: bool | int | str = ..., c: bool | int | str = ..., counter: bool | int = ..., cn: bool | int = ..., detach: bool | int = ..., d: bool | int = ..., dropFrame: bool | int = ..., df: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., fileName: str = ..., fn: str = ..., frameDuration: bool | int | int = ..., fd: bool | int | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., imageSize: bool | int | tuple[int, int] = ..., iz: bool | int | tuple[int, int] = ..., lookThrough: bool | int | str = ..., lt: bool | int | str = ..., maintainRatio: bool | int = ..., mr: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., negTimesOK: bool | int = ..., nt: bool | int = ..., numFrames: bool | int | int = ..., nf: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., quickTime: bool | int = ..., qt: bool | int = ..., showInAllViews: bool | int = ..., sia: bool | int = ..., timeCode: bool | int | int = ..., tc: bool | int | int = ..., timeCodeTrack: bool | int = ..., tt: bool | int = ..., timeScale: bool | int | int = ..., ts: bool | int | int = ..., twentyFourHourMax: bool | int = ..., tf: bool | int = ..., width: bool | int | float = ..., w: bool | int | float = ...) -> Any: ...
def imageWindowEditor(*args, autoResize: bool | int = ..., ar: bool | int = ..., changeCommand: tuple[str, str, str, str] = ..., cc: tuple[str, str, str, str] = ..., clear: tuple[int, int, float, float, float] = ..., cl: tuple[int, int, float, float, float] = ..., control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., displayImage: int = ..., di: int = ..., displayStyle: str = ..., dst: str = ..., docTag: str = ..., dtg: str = ..., doubleBuffer: bool | int = ..., dbf: bool | int = ..., drawAxis: bool | int = ..., da: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: str = ..., f: str = ..., forceMainConnection: str = ..., fmc: str = ..., frameImage: bool | int = ..., fi: bool | int = ..., frameRegion: bool | int = ..., fr: bool | int = ..., highlightConnection: str = ..., hlc: str = ..., loadImage: str = ..., li: str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: str = ..., mlc: str = ..., marquee: tuple[float, float, float, float] = ..., mq: tuple[float, float, float, float] = ..., nbImages: bool | int = ..., nim: bool | int = ..., panel: str = ..., pnl: str = ..., parent: str = ..., p: str = ..., query: bool | int = ..., q: bool | int = ..., realSize: bool | int = ..., rs: bool | int = ..., refresh: bool | int = ..., ref: bool | int = ..., removeAllImages: bool | int = ..., ra: bool | int = ..., removeImage: bool | int = ..., ri: bool | int = ..., saveImage: bool | int = ..., si: bool | int = ..., scaleBlue: float = ..., sb: float = ..., scaleGreen: float = ..., sg: float = ..., scaleRed: float = ..., sr: float = ..., selectionConnection: str = ..., slc: str = ..., showRegion: tuple[int, int] = ..., srg: tuple[int, int] = ..., singleBuffer: bool | int = ..., sbf: bool | int = ..., stateString: bool | int = ..., sts: bool | int = ..., toggle: bool | int = ..., tgl: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ..., writeImage: str = ..., wi: str = ...) -> Any: ...
def imfPlugins(*args, extension: bool | int | str = ..., ext: bool | int | str = ..., keyword: bool | int | str = ..., key: bool | int | str = ..., multiFrameSupport: bool | int | str = ..., mfs: bool | int | str = ..., pluginName: bool | int | str = ..., pn: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., readSupport: bool | int | str = ..., rs: bool | int | str = ..., writeSupport: bool | int | str = ..., ws: bool | int | str = ...) -> Any: ...
def inViewMessage(*args, alpha: float = ..., a: float = ..., assistMessage: str = ..., amg: str = ..., backColor: int = ..., bkc: int = ..., clear: str = ..., cl: str = ..., clickKill: bool | int = ..., ck: bool | int = ..., dragKill: bool | int = ..., dk: bool | int = ..., fade: bool | int = ..., f: bool | int = ..., fadeInTime: int = ..., fit: int = ..., fadeOutTime: int = ..., fot: int = ..., fadeStayTime: int = ..., fst: int = ..., font: str = ..., ft: str = ..., fontSize: int = ..., fts: int = ..., frameOffset: int = ..., fof: int = ..., hide: bool | int = ..., hd: bool | int = ..., message: str = ..., msg: str = ..., minimize: bool | int = ..., min: bool | int = ..., position: str = ..., pos: str = ..., restore: bool | int = ..., res: bool | int = ..., show: bool | int = ..., sh: bool | int = ..., statusMessage: str = ..., smg: str = ..., textAlpha: float = ..., ta: float = ..., textOffset: int = ..., tof: int = ..., uvEditor: bool | int = ..., uv: bool | int = ...) -> Any: ...
def inheritTransform(*args, off: bool | int = ..., on: bool | int = ..., preserve: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., toggle: bool | int = ..., tgl: bool | int = ...) -> Any: ...
def insertJoint(*args) -> Any: ...
def insertJointCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def insertKeyCtx(*args, breakdown: bool | int = ..., bd: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., preserveTangent: bool | int = ..., pt: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def insertKnotCurve(*args, addKnots: bool | int = ..., add: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBetween: bool | int = ..., ib: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfKnots: bool | int | int | list[int] = ..., nk: bool | int | int | list[int] = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float | list[float] = ..., p: bool | int | float | list[float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...) -> Any: ...
def insertKnotSurface(*args, addKnots: bool | int = ..., add: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBetween: bool | int = ..., ib: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfKnots: bool | int | int | list[int] = ..., nk: bool | int | int | list[int] = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float | list[float] = ..., p: bool | int | float | list[float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...) -> Any: ...

insertListItem: Callable
insertListItemBefore: Callable
def instance(*args, leaf: bool | int = ..., lf: bool | int = ..., name: str = ..., n: str = ..., smartTransform: bool | int = ..., st: bool | int = ...) -> Any: ...
def instanceable(*args, allow: bool | int = ..., a: bool | int = ..., query: bool | int = ..., q: bool | int = ..., recursive: bool | int = ..., r: bool | int = ..., shape: bool | int = ..., s: bool | int = ...) -> Any: ...
def instancer(*args, addObject: bool | int = ..., a: bool | int = ..., cycle: bool | int | str = ..., c: bool | int | str = ..., cycleStep: bool | int | float = ..., cs: bool | int | float = ..., cycleStepUnits: bool | int | str = ..., csu: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., index: bool | int | int = ..., i: bool | int | int = ..., levelOfDetail: bool | int | str = ..., lod: bool | int | str = ..., name: bool | int | str = ..., n: bool | int | str = ..., object: bool | int | str | list[str] = ..., obj: bool | int | str | list[str] = ..., objectPosition: bool | int | str = ..., op: bool | int | str = ..., objectRotation: bool | int | str = ..., objectScale: bool | int | str = ..., os: bool | int | str = ..., pointDataSource: bool | int = ..., pds: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeObject: bool | int = ..., rm: bool | int = ..., rotationOrder: bool | int | str = ..., ro: bool | int | str = ..., rotationUnits: bool | int | str = ..., ru: bool | int | str = ..., valueName: bool | int | str = ..., vn: bool | int | str = ...) -> Any: ...
def intField(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., enterCommand: str | Callable = ..., ec: str | Callable = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | int = ..., max: bool | int | int = ..., minValue: bool | int | int = ..., min: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., receiveFocusCommand: str | Callable = ..., rfc: str | Callable = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | int = ..., s: bool | int | int = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | int = ..., v: bool | int | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def intFieldGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enable1: bool | int = ..., en1: bool | int = ..., enable2: bool | int = ..., en2: bool | int = ..., enable3: bool | int = ..., en3: bool | int = ..., enable4: bool | int = ..., en4: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extraLabel: bool | int | str = ..., el: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfFields: int = ..., nf: int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | tuple[int, int, int, int] = ..., v: bool | int | tuple[int, int, int, int] = ..., value1: bool | int | int = ..., v1: bool | int | int = ..., value2: bool | int | int = ..., v2: bool | int | int = ..., value3: bool | int | int = ..., v3: bool | int | int = ..., value4: bool | int | int = ..., v4: bool | int | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def intScrollBar(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., horizontal: bool | int = ..., hr: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., largeStep: bool | int | int = ..., ls: bool | int | int = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | int = ..., max: bool | int | int = ..., minValue: bool | int | int = ..., min: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | int = ..., s: bool | int | int = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | int = ..., v: bool | int | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def intSlider(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., horizontal: bool | int = ..., hr: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | int = ..., max: bool | int | int = ..., minValue: bool | int | int = ..., min: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | int = ..., s: bool | int | int = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | int = ..., v: bool | int | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def intSliderGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extraLabel: bool | int | str = ..., el: bool | int | str = ..., field: bool | int = ..., f: bool | int = ..., fieldMaxValue: bool | int | int = ..., fmx: bool | int | int = ..., fieldMinValue: bool | int | int = ..., fmn: bool | int | int = ..., fieldStep: bool | int | int = ..., fs: bool | int | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | int = ..., max: bool | int | int = ..., minValue: bool | int | int = ..., min: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., sliderStep: bool | int | int = ..., ss: bool | int | int = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | int = ..., s: bool | int | int = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | int = ..., v: bool | int | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def interactionStyle(*args, query: bool | int = ..., q: bool | int = ..., style: str = ..., s: str = ...) -> Any: ...
def internalVar(*args, userAppDir: bool | int = ..., uad: bool | int = ..., userBitmapsDir: bool | int = ..., ubd: bool | int = ..., userHotkeyDir: bool | int = ..., uhk: bool | int = ..., userMarkingMenuDir: bool | int = ..., umm: bool | int = ..., userPrefDir: bool | int = ..., upd: bool | int = ..., userPresetsDir: bool | int = ..., ups: bool | int = ..., userScriptDir: bool | int = ..., usd: bool | int = ..., userShelfDir: bool | int = ..., ush: bool | int = ..., userTmpDir: bool | int = ..., utd: bool | int = ..., userWorkspaceDir: bool | int = ..., uwd: bool | int = ...) -> Any: ...
def intersect(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., firstSurface: bool | int = ..., fs: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...) -> Any: ...
def iprEngine(*args, copy: str = ..., cp: str = ..., defineTemplate: str = ..., dt: str = ..., diagnostics: bool | int = ..., dig: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., estimatedMemory: bool | int = ..., mem: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., iprImage: bool | int | str = ..., ipr: bool | int | str = ..., motionVectorFile: bool | int = ..., mvf: bool | int = ..., object: bool | int | str = ..., obj: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., region: bool | int | tuple[int, int, int, int] = ..., r: bool | int | tuple[int, int, int, int] = ..., relatedFiles: bool | int = ..., rel: bool | int = ..., releaseIprImage: bool | int = ..., rii: bool | int = ..., resolution: bool | int = ..., res: bool | int = ..., scanlineIncrement: bool | int | str = ..., sli: bool | int | str = ..., showProgressBar: bool | int = ..., spb: bool | int = ..., startTuning: bool | int = ..., st: bool | int = ..., stopTuning: bool | int = ..., spt: bool | int = ..., underPixel: tuple[int, int] = ..., un: tuple[int, int] = ..., update: bool | int = ..., u: bool | int = ..., updateDepthOfField: bool | int = ..., udf: bool | int = ..., updateLightGlow: bool | int = ..., ulg: bool | int = ..., updateMotionBlur: bool | int = ..., umb: bool | int = ..., updatePort: bool | int | str = ..., up: bool | int | str = ..., updateShaderGlow: bool | int = ..., usg: bool | int = ..., updateShading: bool | int = ..., us: bool | int = ..., updateShadowMaps: bool | int = ..., usm: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def isConnected(*args, ignoreUnitConversion: bool | int = ..., iuc: bool | int = ...) -> Any: ...
def isDirty(*args, connection: bool | int = ..., c: bool | int = ..., datablock: bool | int = ..., d: bool | int = ...) -> Any: ...
def isTrue(*args) -> Any: ...
def isolateSelect(*args, addDagObject: str = ..., ado: str = ..., addSelected: bool | int = ..., addSelectedObjects: bool | int = ..., aso: bool | int = ..., loadSelected: bool | int = ..., ls: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeDagObject: str = ..., rdo: str = ..., removeSelected: bool | int = ..., rs: bool | int = ..., state: bool | int = ..., s: bool | int = ..., update: bool | int = ..., u: bool | int = ..., viewObjects: bool | int = ..., vo: bool | int = ...) -> Any: ...
def itemFilter(*args, byBin: bool | int | str | list[str] = ..., bk: bool | int | str | list[str] = ..., byName: bool | int | str = ..., bn: bool | int | str = ..., byScript: bool | int | str = ..., bs: bool | int | str = ..., byType: bool | int | str | list[str] = ..., bt: bool | int | str | list[str] = ..., category: bool | int | str | list[str] = ..., cat: bool | int | str | list[str] = ..., classification: bool | int | str = ..., cls: bool | int | str = ..., clearByBin: bool | int = ..., cbk: bool | int = ..., clearByType: bool | int = ..., cbt: bool | int = ..., difference: bool | int | tuple[str, str] = ..., di: bool | int | tuple[str, str] = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., intersect: bool | int | tuple[str, str] = ..., listBuiltInFilters: bool | int = ..., lbf: bool | int = ..., listOtherFilters: bool | int = ..., lof: bool | int = ..., listUserFilters: bool | int = ..., luf: bool | int = ..., negate: bool | int = ..., neg: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., pythonModule: bool | int | str = ..., pym: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., secondScript: bool | int | str = ..., ss: bool | int | str = ..., text: bool | int | str = ..., t: bool | int | str = ..., union: bool | int | tuple[str, str] = ..., un: bool | int | tuple[str, str] = ..., uniqueNodeNames: bool | int = ..., unn: bool | int = ...) -> Any: ...
def itemFilterAttr(*args, byName: bool | int | str = ..., bn: bool | int | str = ..., byNameString: bool | int | str | list[str] = ..., bns: bool | int | str | list[str] = ..., byScript: bool | int | str = ..., bs: bool | int | str = ..., classification: bool | int | str = ..., cls: bool | int | str = ..., dynamic: bool | int = ..., dy: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., hasCurve: bool | int = ..., hc: bool | int = ..., hasDrivenKey: bool | int = ..., hdk: bool | int = ..., hasExpression: bool | int = ..., he: bool | int = ..., hidden: bool | int = ..., h: bool | int = ..., intersect: bool | int | tuple[str, str] = ..., keyable: bool | int = ..., k: bool | int = ..., listBuiltInFilters: bool | int = ..., lbf: bool | int = ..., listOtherFilters: bool | int = ..., lof: bool | int = ..., listUserFilters: bool | int = ..., luf: bool | int = ..., negate: bool | int = ..., neg: bool | int = ..., parent: str = ..., p: str = ..., published: bool | int = ..., pub: bool | int = ..., query: bool | int = ..., q: bool | int = ..., readable: bool | int = ..., r: bool | int = ..., scaleRotateTranslate: bool | int = ..., srt: bool | int = ..., secondScript: bool | int | str = ..., ss: bool | int | str = ..., text: bool | int | str = ..., t: bool | int | str = ..., union: bool | int | tuple[str, str] = ..., un: bool | int | tuple[str, str] = ..., writable: bool | int = ..., w: bool | int = ...) -> Any: ...
def itemFilterRender(*args, anyTextures: bool | int = ..., at: bool | int = ..., category: str | list[str] = ..., cat: str | list[str] = ..., classification: str = ..., cls: str = ..., edit: bool | int = ..., e: bool | int = ..., exclusiveLights: bool | int = ..., exl: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., lightSets: bool | int = ..., ls: bool | int = ..., lights: bool | int = ..., l: bool | int = ..., linkedLights: bool | int = ..., ll: bool | int = ..., listBuiltInFilters: bool | int = ..., lbf: bool | int = ..., listOtherFilters: bool | int = ..., lof: bool | int = ..., listUserFilters: bool | int = ..., luf: bool | int = ..., negate: bool | int = ..., neg: bool | int = ..., nodeClassification: str | list[str] = ..., nc: str | list[str] = ..., nonExclusiveLights: bool | int = ..., nxl: bool | int = ..., nonIlluminatingLights: bool | int = ..., nil: bool | int = ..., parent: str = ..., p: str = ..., postProcess: bool | int = ..., pp: bool | int = ..., query: bool | int = ..., q: bool | int = ..., renderUtilityNode: bool | int = ..., run: bool | int = ..., renderableObjectSets: bool | int = ..., ros: bool | int = ..., renderingNode: bool | int = ..., rn: bool | int = ..., shaders: bool | int = ..., s: bool | int = ..., text: str = ..., t: str = ..., textures2d: bool | int = ..., t2d: bool | int = ..., textures3d: bool | int = ..., t3d: bool | int = ..., texturesProcedural: bool | int = ..., tp: bool | int = ...) -> Any: ...
def itemFilterType(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., text: bool | int | str = ..., t: bool | int | str = ..., type: bool | int = ..., typ: bool | int = ...) -> Any: ...
def joint(*args, absolute: bool | int = ..., a: bool | int = ..., angleX: bool | int | float = ..., ax: bool | int | float = ..., angleY: bool | int | float = ..., ay: bool | int | float = ..., angleZ: bool | int | float = ..., az: bool | int | float = ..., assumePreferredAngles: bool | int = ..., apa: bool | int = ..., automaticLimits: bool | int = ..., al: bool | int = ..., children: bool | int = ..., ch: bool | int = ..., component: bool | int = ..., co: bool | int = ..., degreeOfFreedom: bool | int | str = ..., dof: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int | str = ..., ex: bool | int | str = ..., limitSwitchX: bool | int = ..., lsx: bool | int = ..., limitSwitchY: bool | int = ..., lsy: bool | int = ..., limitSwitchZ: bool | int = ..., lsz: bool | int = ..., limitX: bool | int | tuple[float, float] = ..., lx: bool | int | tuple[float, float] = ..., limitY: bool | int | tuple[float, float] = ..., ly: bool | int | tuple[float, float] = ..., limitZ: bool | int | tuple[float, float] = ..., lz: bool | int | tuple[float, float] = ..., name: bool | int | str = ..., n: bool | int | str = ..., orientJoint: str = ..., oj: str = ..., orientation: bool | int | tuple[float, float, float] = ..., o: bool | int | tuple[float, float, float] = ..., position: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., rad: bool | int | float = ..., relative: bool | int = ..., r: bool | int = ..., rotationOrder: bool | int | str = ..., roo: bool | int | str = ..., scale: bool | int | tuple[float, float, float] = ..., s: bool | int | tuple[float, float, float] = ..., scaleCompensate: bool | int = ..., sc: bool | int = ..., scaleOrientation: bool | int | tuple[float, float, float] = ..., so: bool | int | tuple[float, float, float] = ..., secondaryAxisOrient: str = ..., sao: str = ..., setPreferredAngles: bool | int = ..., spa: bool | int = ..., stiffnessX: bool | int | float = ..., stx: bool | int | float = ..., stiffnessY: bool | int | float = ..., sty: bool | int | float = ..., stiffnessZ: bool | int | float = ..., stz: bool | int | float = ..., symmetry: bool | int = ..., sym: bool | int = ..., symmetryAxis: str = ..., sa: str = ..., zeroScaleOrient: bool | int = ..., zso: bool | int = ...) -> Any: ...
def jointCluster(*args, aboveBound: bool | int | float = ..., ab: bool | int | float = ..., aboveCluster: bool | int = ..., ac: bool | int = ..., aboveDropoffType: bool | int | str = ..., adt: bool | int | str = ..., aboveValue: bool | int | float = ..., av: bool | int | float = ..., belowBound: bool | int | float = ..., bb: bool | int | float = ..., belowCluster: bool | int = ..., bc: bool | int = ..., belowDropoffType: bool | int | str = ..., bdt: bool | int | str = ..., belowValue: bool | int | float = ..., bv: bool | int | float = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., joint: str = ..., j: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def jointCtx(*args, autoJointOrient: bool | int | str = ..., ajo: bool | int | str = ..., autoPriorityH: bool | int = ..., apH: bool | int = ..., createIKHandle: bool | int = ..., ikh: bool | int = ..., degreeOfFreedomJ: bool | int | str = ..., dJ: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., forceSolverH: bool | int = ..., fsH: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., jointAutoLimits: bool | int = ..., jal: bool | int = ..., jointOrientationJ: bool | int | tuple[float, float, float] = ..., joJ: bool | int | tuple[float, float, float] = ..., largeBoneLength: bool | int | float = ..., lbl: bool | int | float = ..., largeBoneRadius: bool | int | float = ..., lbr: bool | int | float = ..., poWeightH: bool | int | float = ..., pwH: bool | int | float = ..., priorityH: bool | int | int = ..., pH: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., scaleCompensateJ: bool | int = ..., scJ: bool | int = ..., scaleJ: bool | int | tuple[float, float, float] = ..., sJ: bool | int | tuple[float, float, float] = ..., scaleOrientationJ: bool | int | tuple[float, float, float] = ..., soJ: bool | int | tuple[float, float, float] = ..., secondaryAxisOrient: bool | int | str = ..., sao: bool | int | str = ..., smallBoneLength: bool | int | float = ..., sbl: bool | int | float = ..., smallBoneRadius: bool | int | float = ..., sbr: bool | int | float = ..., snapHandleH: bool | int = ..., snH: bool | int = ..., solverTypeH: bool | int | str = ..., stH: bool | int | str = ..., stickyH: bool | int | str = ..., sH: bool | int | str = ..., symmetry: bool | int = ..., sym: bool | int = ..., symmetryAxis: bool | int | str = ..., sa: bool | int | str = ..., variableBoneSize: bool | int = ..., vbs: bool | int = ..., weightH: bool | int | float = ..., wH: bool | int | float = ...) -> Any: ...
def jointDisplayScale(*args, absolute: bool | int = ..., a: bool | int = ..., ikfk: bool | int | float = ..., ik: bool | int | float = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def jointLattice(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., creasing: bool | int | float = ..., cr: bool | int | float = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., joint: str = ..., j: str = ..., lengthIn: bool | int | float = ..., li: bool | int | float = ..., lengthOut: bool | int | float = ..., lo: bool | int | float = ..., lowerBindSkin: str = ..., lb: str = ..., lowerTransform: str = ..., lt: str = ..., name: str = ..., n: str = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., rounding: bool | int | float = ..., ro: bool | int | float = ..., split: bool | int = ..., sp: bool | int = ..., upperBindSkin: str = ..., ub: str = ..., upperTransform: str = ..., ut: str = ..., useComponentTags: bool | int = ..., uct: bool | int = ..., widthLeft: bool | int | float = ..., wl: bool | int | float = ..., widthRight: bool | int | float = ..., wr: bool | int | float = ...) -> Any: ...
def journal(*args, comment: str = ..., c: str = ..., flush: bool | int = ..., fl: bool | int = ..., highPrecision: bool | int = ..., hp: bool | int = ..., query: bool | int = ..., q: bool | int = ..., state: bool | int = ..., st: bool | int = ...) -> Any: ...
def keyTangent(*args, absolute: bool | int = ..., a: bool | int = ..., animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., controlPoints: bool | int = ..., cp: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., g: bool | int = ..., hierarchy: str = ..., hi: str = ..., inAngle: bool | int | float = ..., ia: bool | int | float = ..., inTangentType: bool | int | str = ..., itt: bool | int | str = ..., inWeight: bool | int | float = ..., iw: bool | int | float = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., ix: bool | int | float = ..., iy: bool | int | float = ..., lock: bool | int = ..., l: bool | int = ..., outAngle: bool | int | float = ..., oa: bool | int | float = ..., outTangentType: bool | int | str = ..., ott: bool | int | str = ..., outWeight: bool | int | float = ..., ow: bool | int | float = ..., ox: bool | int | float = ..., oy: bool | int | float = ..., pluginTangentTypes: bool | int | str = ..., ptt: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., stepAttributes: bool | int = ..., sa: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., unify: bool | int = ..., uni: bool | int = ..., weightLock: bool | int = ..., wl: bool | int = ..., weightedTangents: bool | int = ..., wt: bool | int = ...) -> Any: ...
def keyframe(*args, absolute: bool | int = ..., a: bool | int = ..., adjustBreakdown: bool | int = ..., abd: bool | int = ..., animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., breakdown: bool | int = ..., bd: bool | int = ..., clipTime: tuple[int | float, int | float, float] = ..., ct: tuple[int | float, int | float, float] = ..., controlPoints: bool | int = ..., cp: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., eval: bool | int = ..., ev: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., floatChange: bool | int | float = ..., fc: bool | int | float = ..., hierarchy: str = ..., hi: str = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., indexValue: bool | int = ..., iv: bool | int = ..., keyframeCount: bool | int = ..., kc: bool | int = ..., lastSelected: bool | int = ..., lsl: bool | int = ..., name: bool | int = ..., n: bool | int = ..., option: str = ..., o: str = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., selected: bool | int = ..., sl: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., tickDrawSpecial: bool | int = ..., tds: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., timeChange: bool | int | int | float = ..., tc: bool | int | int | float = ..., valueChange: bool | int | float = ..., vc: bool | int | float = ...) -> Any: ...
def keyframeOutliner(*args, animCurve: str = ..., ac: str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., display: bool | int | str = ..., dsp: bool | int | str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def keyframeRegionCurrentTimeCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def keyframeRegionDirectKeyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., option: str = ..., o: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def keyframeRegionDollyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def keyframeRegionInsertKeyCtx(*args, breakdown: bool | int = ..., bd: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def keyframeRegionMoveKeyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., option: bool | int | str = ..., o: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def keyframeRegionScaleKeyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., scaleSpecifiedKeys: bool | int = ..., ssk: bool | int = ..., type: str = ..., typ: str = ...) -> Any: ...
def keyframeRegionSelectKeyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def keyframeRegionSetKeyCtx(*args, breakdown: bool | int = ..., bd: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def keyframeRegionTrackCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def keyframeStats(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., animEditor: bool | int | str = ..., ae: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., classicMode: bool | int = ..., cm: bool | int = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., precision: bool | int | int = ..., pre: bool | int | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., timeAnnotation: bool | int | str = ..., tan: bool | int | str = ..., useTemplate: str = ..., ut: str = ..., valueAnnotation: bool | int | str = ..., van: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def keyframeTangentControl(*args, **kwargs): ...
def keyingGroup(*args, activator: bool | int | str = ..., act: bool | int | str = ..., addElement: str = ..., add: str = ..., afterFilters: bool | int = ..., af: bool | int = ..., anyMember: str = ..., am: str = ..., category: bool | int | str = ..., cat: bool | int | str = ..., clear: str = ..., cl: str = ..., color: bool | int | int = ..., co: bool | int | int = ..., copy: str = ..., cp: str = ..., edges: bool | int = ..., eg: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., editPoints: bool | int = ..., ep: bool | int = ..., empty: bool | int = ..., em: bool | int = ..., excludeDynamic: bool | int = ..., ed: bool | int = ..., excludeRotate: bool | int = ..., er: bool | int = ..., excludeScale: bool | int = ..., es: bool | int = ..., excludeTranslate: bool | int = ..., et: bool | int = ..., excludeVisibility: bool | int = ..., ev: bool | int = ..., facets: bool | int = ..., fc: bool | int = ..., flatten: str = ..., fl: str = ..., forceElement: str = ..., fe: str = ..., include: str = ..., intersection: str = ..., int: str = ..., isIntersecting: str = ..., ii: str = ..., isMember: str = ..., im: str = ..., layer: bool | int = ..., l: bool | int = ..., minimizeRotation: bool | int = ..., mr: bool | int = ..., name: str = ..., n: str = ..., noIntermediate: bool | int = ..., ni: bool | int = ..., noSurfaceShader: bool | int = ..., nss: bool | int = ..., noWarnings: bool | int = ..., nw: bool | int = ..., nodesOnly: bool | int = ..., no: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: str = ..., rm: str = ..., removeActivator: str = ..., rac: str = ..., renderable: bool | int = ..., r: bool | int = ..., setActiveFilter: bool | int | str = ..., fil: bool | int | str = ..., size: bool | int = ..., s: bool | int = ..., split: str = ..., sp: str = ..., subtract: str = ..., sub: str = ..., text: bool | int | str = ..., t: bool | int | str = ..., union: str = ..., un: str = ..., vertices: bool | int = ..., v: bool | int = ...) -> Any: ...
def lassoContext(*args, drawClosed: bool | int = ..., dc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fastComponents: bool | int = ..., fc: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def lattice(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., commonParent: bool | int = ..., cp: bool | int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., divisions: bool | int | tuple[int, int, int] = ..., dv: bool | int | tuple[int, int, int] = ..., dualBase: bool | int = ..., db: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., freezeMapping: bool | int = ..., fm: bool | int = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., latticeReset: bool | int = ..., lr: bool | int = ..., ldivisions: bool | int | tuple[int, int, int] = ..., ldv: bool | int | tuple[int, int, int] = ..., name: str = ..., n: str = ..., objectCentered: bool | int = ..., oc: bool | int = ..., outsideFalloffDistance: float = ..., ofd: float = ..., outsideLattice: int = ..., ol: int = ..., parallel: bool | int = ..., par: bool | int = ..., position: tuple[float, float, float] = ..., pos: tuple[float, float, float] = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., removeTweaks: bool | int = ..., rt: bool | int = ..., rotation: tuple[float, float, float] = ..., ro: tuple[float, float, float] = ..., scale: tuple[float, float, float] = ..., s: tuple[float, float, float] = ..., split: bool | int = ..., sp: bool | int = ..., useComponentTags: bool | int = ..., uct: bool | int = ...) -> Any: ...
def latticeDeformKeyCtx(*args, edit: bool | int = ..., e: bool | int = ..., envelope: bool | int | float = ..., ev: bool | int | float = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., latticeColumns: bool | int | int = ..., lc: bool | int | int = ..., latticeRows: bool | int | int = ..., lr: bool | int | int = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., scaleLatticePts: bool | int = ..., slp: bool | int = ...) -> Any: ...
def launch(*args, directory: str = ..., dir: str = ..., movie: str = ..., mov: str = ..., pdfFile: str = ..., pdf: str = ..., webPage: str = ..., web: str = ...) -> Any: ...
def launchImageEditor(*args, editImageFile: str = ..., eif: str = ..., viewImageFile: str = ..., vif: str = ...) -> Any: ...
def layerButton(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., color: tuple[float, float, float] = ..., cl: tuple[float, float, float] = ..., command: str | Callable = ..., c: str | Callable = ..., current: bool | int = ..., cr: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., doubleClickCommand: str | Callable = ..., dcc: str | Callable = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., hideOnPlaybackCommand: str | Callable = ..., hpc: str | Callable = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., identification: bool | int | int = ..., id: bool | int | int = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelWidth: bool | int = ..., lw: bool | int = ..., layerHideOnPlayback: bool | int = ..., hp: bool | int = ..., layerState: bool | int | str = ..., ls: bool | int | str = ..., layerVisible: bool | int = ..., lv: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., renameCommand: str = ..., rc: str = ..., select: bool | int = ..., s: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., transparent: bool | int = ..., t: bool | int = ..., typeCommand: str | Callable = ..., tc: str | Callable = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., visibleCommand: str | Callable = ..., vc: str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def layeredShaderPort(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., node: str = ..., n: str = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., selectedColorControl: str = ..., scc: str = ..., selectedTransparencyControl: str = ..., stc: str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def layeredTexturePort(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., node: str = ..., n: str = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., selectedAlphaControl: str = ..., sac: str = ..., selectedBlendModeControl: str = ..., sbc: str = ..., selectedColorControl: str = ..., scc: str = ..., selectedIsVisibleControl: str = ..., svc: str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def layout(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., childArray: bool | int = ..., ca: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def layoutDialog(*args, backgroundColor: tuple[float, float, float] = ..., bgc: tuple[float, float, float] = ..., dismiss: str = ..., dis: str = ..., parent: str = ..., p: str = ..., title: str = ..., t: str = ..., uiScript: str | Callable = ..., ui: str | Callable = ...) -> Any: ...
def license(*args, borrow: bool | int = ..., b: bool | int = ..., info: bool | int = ..., i: bool | int = ..., isBorrowed: bool | int = ..., ib: bool | int = ..., isExported: bool | int = ..., ie: bool | int = ..., isTrial: bool | int = ..., it: bool | int = ..., licenseMethod: bool | int = ..., lm: bool | int = ..., productChoice: bool | int = ..., pc: bool | int = ..., r: bool | int = ..., showBorrowInfo: bool | int = ..., sbi: bool | int = ..., showProductInfoDialog: bool | int = ..., spi: bool | int = ..., status: bool | int = ..., s: bool | int = ..., usage: bool | int = ..., u: bool | int = ...) -> Any: ...
def licenseCheck(*args, mode: str = ..., m: str = ..., type: str = ..., typ: str = ...) -> Any: ...
def lightList(*args, add: str = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: str = ..., rm: str = ...) -> Any: ...
def lightlink(*args, b: bool | int = ..., hierarchy: bool | int = ..., h: bool | int = ..., light: str | list[str] = ..., l: str | list[str] = ..., make: bool | int = ..., m: bool | int = ..., object: str | list[str] = ..., o: str | list[str] = ..., query: bool | int = ..., q: bool | int = ..., sets: bool | int = ..., set: bool | int = ..., shadow: bool | int = ..., shd: bool | int = ..., shapes: bool | int = ..., shp: bool | int = ..., transforms: bool | int = ..., t: bool | int = ..., useActiveLights: bool | int = ..., ual: bool | int = ..., useActiveObjects: bool | int = ..., uao: bool | int = ...) -> Any: ...
def linearPrecision(*args, query: bool | int = ..., q: bool | int = ...) -> Any: ...
def listAnimatable(*args, active: bool | int = ..., act: bool | int = ..., manip: bool | int = ..., m: bool | int = ..., manipHandle: bool | int = ..., mh: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., type: bool | int = ..., typ: bool | int = ...) -> Any: ...
def listAttr(*args, array: bool | int = ..., a: bool | int = ..., caching: bool | int = ..., ca: bool | int = ..., category: str | list[str] = ..., ct: str | list[str] = ..., changedSinceFileOpen: bool | int = ..., cfo: bool | int = ..., channelBox: bool | int = ..., cb: bool | int = ..., connectable: bool | int = ..., c: bool | int = ..., extension: bool | int = ..., ex: bool | int = ..., fromPlugin: bool | int = ..., fp: bool | int = ..., hasData: bool | int = ..., hd: bool | int = ..., hasNullData: bool | int = ..., hnd: bool | int = ..., inUse: bool | int = ..., iu: bool | int = ..., keyable: bool | int = ..., k: bool | int = ..., leaf: bool | int = ..., lf: bool | int = ..., locked: bool | int = ..., l: bool | int = ..., multi: bool | int = ..., m: bool | int = ..., output: bool | int = ..., o: bool | int = ..., ramp: bool | int = ..., ra: bool | int = ..., read: bool | int = ..., r: bool | int = ..., readOnly: bool | int = ..., ro: bool | int = ..., scalar: bool | int = ..., s: bool | int = ..., scalarAndArray: bool | int = ..., sa: bool | int = ..., settable: bool | int = ..., se: bool | int = ..., shortNames: bool | int = ..., sn: bool | int = ..., string: str | list[str] = ..., st: str | list[str] = ..., unlocked: bool | int = ..., u: bool | int = ..., usedAsFilename: bool | int = ..., uf: bool | int = ..., userDefined: bool | int = ..., ud: bool | int = ..., visible: bool | int = ..., v: bool | int = ..., write: bool | int = ..., w: bool | int = ...) -> Any: ...
def listAttrPatterns(*args, patternType: bool | int = ..., pt: bool | int = ..., verbose: bool | int = ..., v: bool | int = ...) -> Any: ...
def listCameras(*args, orthographic: bool | int = ..., o: bool | int = ..., perspective: bool | int = ..., p: bool | int = ..., ufeCameras: bool | int = ..., ufe: bool | int = ...) -> Any: ...
def listConnections(*args, connections: bool | int = ..., c: bool | int = ..., destination: bool | int = ..., d: bool | int = ..., exactType: bool | int = ..., et: bool | int = ..., plugs: bool | int = ..., p: bool | int = ..., shapes: bool | int = ..., sh: bool | int = ..., skipConversionNodes: bool | int = ..., scn: bool | int = ..., source: bool | int = ..., s: bool | int = ..., type: str = ..., t: str = ...) -> Any: ...
def listDeviceAttachments(*args, attribute: str = ..., at: str = ..., axis: str = ..., ax: str = ..., clutch: str = ..., c: str = ..., device: str = ..., d: str = ..., file: str = ..., f: str = ..., selection: bool | int = ..., sl: bool | int = ..., write: bool | int = ..., w: bool | int = ...) -> Any: ...
def listHistory(*args, allConnections: bool | int = ..., ac: bool | int = ..., allFuture: bool | int = ..., af: bool | int = ..., allGraphs: bool | int = ..., ag: bool | int = ..., breadthFirst: bool | int = ..., bf: bool | int = ..., fastIteration: bool | int = ..., fi: bool | int = ..., future: bool | int = ..., f: bool | int = ..., futureLocalAttr: bool | int = ..., fl: bool | int = ..., futureWorldAttr: bool | int = ..., fw: bool | int = ..., groupLevels: bool | int = ..., gl: bool | int = ..., historyAttr: bool | int = ..., ha: bool | int = ..., interestLevel: int = ..., il: int = ..., leaf: bool | int = ..., lf: bool | int = ..., levels: int = ..., lv: int = ..., pruneDagObjects: bool | int = ..., pdo: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def listInputDeviceAxes(*args) -> Any: ...
def listInputDeviceButtons(*args) -> Any: ...
def listInputDevices(*args, free: bool | int = ..., f: bool | int = ..., primary: bool | int = ..., p: bool | int = ..., secondary: bool | int = ..., s: bool | int = ...) -> Any: ...
def listNodeTypes(*args, exclude: str = ..., ex: str = ...) -> Any: ...
def listNodesWithIncorrectNames(*args) -> Any: ...
def listRelatives(*args, allDescendents: bool | int = ..., ad: bool | int = ..., allParents: bool | int = ..., ap: bool | int = ..., children: bool | int = ..., c: bool | int = ..., fullPath: bool | int = ..., f: bool | int = ..., noIntermediate: bool | int = ..., ni: bool | int = ..., parent: bool | int = ..., p: bool | int = ..., path: bool | int = ..., pa: bool | int = ..., shapes: bool | int = ..., s: bool | int = ..., type: str | list[str] = ..., typ: str | list[str] = ...) -> Any: ...
def listSets(*args, allSets: bool | int = ..., extendToShape: bool | int = ..., ets: bool | int = ..., object: str = ..., o: str = ..., type: int = ..., t: int = ...) -> Any: ...
def loadFluid(*args, currentTime: bool | int = ..., ct: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frame: bool | int | float = ..., f: bool | int | float = ..., initialConditions: bool | int = ..., ic: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def loadModule(*args, allModules: bool | int = ..., a: bool | int = ..., load: str = ..., ld: str = ..., scan: bool | int = ..., sc: bool | int = ...) -> Any: ...
def loadPlugin(*args, addCallback: str | Callable = ..., ac: str | Callable = ..., allPlugins: bool | int = ..., a: bool | int = ..., name: str = ..., n: str = ..., qObsolete: bool | int = ..., q: bool | int = ..., quiet: bool | int = ..., qt: bool | int = ..., removeCallback: str | Callable = ..., rc: str | Callable = ...) -> Any: ...
def loadPrefObjects(*args) -> Any: ...
def loadUI(*args, listTypes: bool | int = ..., lt: bool | int = ..., uiFile: str = ..., f: str = ..., uiString: str = ..., s: str = ..., verbose: bool | int = ..., v: bool | int = ..., workingDirectory: str = ..., wd: str = ...) -> Any: ...
def lockNode(*args, ignoreComponents: bool | int = ..., ic: bool | int = ..., lock: bool | int = ..., l: bool | int = ..., lockName: bool | int = ..., ln: bool | int = ..., lockUnpublished: bool | int = ..., lu: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def loft(*args, autoReverse: bool | int = ..., ar: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., close: bool | int = ..., c: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCusp: bool | int | bool | int | list[bool | int] = ..., cc: bool | int | bool | int | list[bool | int] = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., rebuild: bool | int = ..., rb: bool | int = ..., reverse: bool | int | bool | int | list[bool | int] = ..., r: bool | int | bool | int | list[bool | int] = ..., reverseSurfaceNormals: bool | int = ..., rsn: bool | int = ..., sectionSpans: bool | int | int = ..., ss: bool | int | int = ..., uniform: bool | int = ..., u: bool | int = ...) -> Any: ...
def lookThru(*args, farClip: float = ..., fc: float = ..., nearClip: float = ..., nc: float = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def ls(*args, absoluteName: bool | int = ..., an: bool | int = ..., allPaths: bool | int = ..., ap: bool | int = ..., assemblies: bool | int = ..., cameras: bool | int = ..., ca: bool | int = ..., containerType: str | list[str] = ..., ct: str | list[str] = ..., containers: bool | int = ..., con: bool | int = ..., dagObjects: bool | int = ..., dag: bool | int = ..., defaultNodes: bool | int = ..., dn: bool | int = ..., dependencyNodes: bool | int = ..., dep: bool | int = ..., exactType: str | list[str] = ..., et: str | list[str] = ..., excludeType: str | list[str] = ..., ext: str | list[str] = ..., flatten: bool | int = ..., fl: bool | int = ..., geometry: bool | int = ..., g: bool | int = ..., ghost: bool | int = ..., gh: bool | int = ..., head: int = ..., hd: int = ..., hilite: bool | int = ..., hl: bool | int = ..., intermediateObjects: bool | int = ..., io: bool | int = ..., invisible: bool | int = ..., iv: bool | int = ..., leaf: bool | int = ..., lf: bool | int = ..., lights: bool | int = ..., lt: bool | int = ..., live: bool | int = ..., lv: bool | int = ..., lockedNodes: bool | int = ..., ln: bool | int = ..., long: bool | int = ..., l: bool | int = ..., materials: bool | int = ..., mat: bool | int = ..., modified: bool | int = ..., mod: bool | int = ..., noIntermediate: bool | int = ..., ni: bool | int = ..., nodeTypes: bool | int = ..., nt: bool | int = ..., objectsOnly: bool | int = ..., o: bool | int = ..., orderedSelection: bool | int = ..., os: bool | int = ..., partitions: bool | int = ..., pr: bool | int = ..., persistentNodes: bool | int = ..., pn: bool | int = ..., planes: bool | int = ..., pl: bool | int = ..., preSelectHilite: bool | int = ..., psh: bool | int = ..., readOnly: bool | int = ..., ro: bool | int = ..., recursive: bool | int = ..., r: bool | int = ..., referencedNodes: bool | int = ..., rn: bool | int = ..., references: bool | int = ..., rf: bool | int = ..., renderGlobals: bool | int = ..., rg: bool | int = ..., renderQualities: bool | int = ..., rq: bool | int = ..., renderResolutions: bool | int = ..., rr: bool | int = ..., renderSetups: bool | int = ..., rs: bool | int = ..., selection: bool | int = ..., sl: bool | int = ..., sets: bool | int = ..., set: bool | int = ..., shapes: bool | int = ..., s: bool | int = ..., shortNames: bool | int = ..., sn: bool | int = ..., showNamespace: bool | int = ..., sns: bool | int = ..., showType: bool | int = ..., st: bool | int = ..., tail: int = ..., tl: int = ..., templated: bool | int = ..., tm: bool | int = ..., textures: bool | int = ..., tex: bool | int = ..., transforms: bool | int = ..., tr: bool | int = ..., type: str | list[str] = ..., typ: str | list[str] = ..., ufeObjects: bool | int = ..., ufe: bool | int = ..., undeletable: bool | int = ..., ud: bool | int = ..., untemplated: bool | int = ..., ut: bool | int = ..., uuid: bool | int = ..., uid: bool | int = ..., visible: bool | int = ..., v: bool | int = ...) -> Any: ...
def lsThroughFilter(*args, item: str | list[str] = ..., it: str | list[str] = ..., nodeArray: bool | int = ..., na: bool | int = ..., reverse: bool | int = ..., rv: bool | int = ..., selection: bool | int = ..., sl: bool | int = ..., sort: str = ..., so: str = ...) -> Any: ...
def lsUI(*args, cmdTemplates: bool | int = ..., ct: bool | int = ..., collection: bool | int = ..., col: bool | int = ..., contexts: bool | int = ..., ctx: bool | int = ..., controlLayouts: bool | int = ..., cl: bool | int = ..., controls: bool | int = ..., ctl: bool | int = ..., dumpWidgets: bool | int = ..., dw: bool | int = ..., editors: bool | int = ..., ed: bool | int = ..., head: int = ..., hd: int = ..., long: bool | int = ..., l: bool | int = ..., menuItems: bool | int = ..., mi: bool | int = ..., menus: bool | int = ..., m: bool | int = ..., numWidgets: bool | int = ..., nw: bool | int = ..., panels: bool | int = ..., p: bool | int = ..., radioMenuItemCollections: bool | int = ..., rmc: bool | int = ..., tail: int = ..., tl: int = ..., type: str | list[str] = ..., typ: str | list[str] = ..., windows: bool | int = ..., wnd: bool | int = ...) -> Any: ...
def makeIdentity(*args, apply: bool | int = ..., a: bool | int = ..., jointOrient: bool | int = ..., jo: bool | int = ..., normal: int = ..., n: int = ..., preserveNormals: bool | int = ..., pn: bool | int = ..., rotate: bool | int = ..., r: bool | int = ..., scale: bool | int = ..., s: bool | int = ..., translate: bool | int = ..., t: bool | int = ...) -> Any: ...
def makeLive(*args, none: bool | int = ..., n: bool | int = ...) -> Any: ...
def makePaintable(*args, activate: bool | int = ..., ac: bool | int = ..., activateAll: bool | int = ..., aca: bool | int = ..., altAttribute: bool | int | str | list[str] = ..., aa: bool | int | str | list[str] = ..., attrType: bool | int | str = ..., at: bool | int | str = ..., clearAll: bool | int = ..., ca: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., shapeMode: bool | int | str = ..., sm: bool | int | str = ..., uiName: bool | int | str = ..., ui: bool | int | str = ...) -> Any: ...
def makeSingleSurface(*args, caching: bool | int = ..., cch: bool | int = ..., chordHeight: float = ..., cht: float = ..., chordHeightRatio: float = ..., chr: float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., delta: float = ..., d: float = ..., edgeSwap: bool | int = ..., es: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., format: int = ..., f: int = ..., fractionalTolerance: float = ..., ft: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., matchNormalDir: bool | int = ..., mnd: bool | int = ..., minEdgeLength: float = ..., mel: float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalizeTrimmedUVRange: bool | int = ..., ntr: bool | int = ..., object: bool | int = ..., o: bool | int = ..., polygonCount: int = ..., pc: int = ..., polygonType: int = ..., pt: int = ..., query: bool | int = ..., q: bool | int = ..., stitchTolerance: float = ..., st: float = ..., uNumber: int = ..., un: int = ..., uType: int = ..., ut: int = ..., useChordHeight: bool | int = ..., uch: bool | int = ..., useChordHeightRatio: bool | int = ..., ucr: bool | int = ..., vNumber: int = ..., vn: int = ..., vType: int = ..., vt: int = ...) -> Any: ...
def makebot(*args, checkdepends: bool | int = ..., c: bool | int = ..., checkres: int = ..., r: int = ..., input: str = ..., i: str = ..., nooverwrite: bool | int = ..., nov: bool | int = ..., output: str = ..., o: str = ..., verbose: bool | int = ..., v: bool | int = ...) -> Any: ...
def manipComponentUpdate(*args) -> Any: ...
def manipMoveContext(*args, activeHandle: bool | int | int = ..., ah: bool | int | int = ..., activeHandleNormal: bool | int | int = ..., ahn: bool | int | int = ..., alignAlong: tuple[float, float, float] = ..., aa: tuple[float, float, float] = ..., bakePivotOri: bool | int = ..., bpo: bool | int = ..., constrainAlongNormal: bool | int = ..., xn: bool | int = ..., currentActiveHandle: bool | int | int = ..., cah: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., editPivotMode: bool | int = ..., epm: bool | int = ..., editPivotPosition: bool | int = ..., epp: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., interactiveUpdate: bool | int = ..., iu: bool | int = ..., lastMode: bool | int | int = ..., lm: bool | int | int = ..., manipVisible: bool | int = ..., vis: bool | int = ..., mode: bool | int | int = ..., m: bool | int | int = ..., orientAxes: bool | int | tuple[float, float, float] = ..., oa: bool | int | tuple[float, float, float] = ..., orientJoint: bool | int | str = ..., oj: bool | int | str = ..., orientJointEnabled: bool | int = ..., oje: bool | int = ..., orientObject: str = ..., oo: str = ..., orientTowards: tuple[float, float, float] = ..., ot: tuple[float, float, float] = ..., pinPivot: bool | int = ..., pin: bool | int = ..., pivotOriHandle: bool | int = ..., poh: bool | int = ..., position: bool | int = ..., p: bool | int = ..., postCommand: str | Callable = ..., psc: str | Callable = ..., postDragCommand: tuple[str | Callable, str] = ..., pod: tuple[str | Callable, str] = ..., preCommand: str | Callable = ..., prc: str | Callable = ..., preDragCommand: tuple[str | Callable, str] = ..., prd: tuple[str | Callable, str] = ..., preserveChildPosition: bool | int = ..., pcp: bool | int = ..., preserveUV: bool | int = ..., puv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., reflection: bool | int = ..., rfl: bool | int = ..., reflectionAbout: int = ..., rab: int = ..., reflectionAxis: int = ..., rfa: int = ..., reflectionTolerance: float = ..., rft: float = ..., secondaryAxisOrient: bool | int | str = ..., sao: bool | int | str = ..., snap: bool | int = ..., s: bool | int = ..., snapComponentsRelative: bool | int = ..., scr: bool | int = ..., snapLiveFaceCenter: bool | int = ..., slf: bool | int = ..., snapLivePoint: bool | int = ..., slp: bool | int = ..., snapPivotOri: bool | int = ..., spo: bool | int = ..., snapPivotPos: bool | int = ..., spp: bool | int = ..., snapRelative: bool | int = ..., sr: bool | int = ..., snapValue: bool | int | float = ..., sv: bool | int | float = ..., translate: bool | int | tuple[float, float, float] = ..., tr: bool | int | tuple[float, float, float] = ..., tweakMode: bool | int = ..., twk: bool | int = ..., xformConstraint: bool | int | str = ..., xc: bool | int | str = ...) -> Any: ...
def manipMoveLimitsCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def manipOptions(*args, enableSmartDuplicate: bool | int = ..., esd: bool | int = ..., enableSmartExtrude: bool | int = ..., ese: bool | int = ..., forceRefresh: bool | int = ..., fr: bool | int = ..., handleSize: bool | int | float = ..., hs: bool | int | float = ..., hideManipOnCtrl: bool | int = ..., hmc: bool | int = ..., hideManipOnShift: bool | int = ..., hms: bool | int = ..., hideManipOnShiftCtrl: bool | int = ..., hsc: bool | int = ..., linePick: bool | int | float = ..., lp: bool | int | float = ..., lineSize: bool | int | float = ..., ls: bool | int | float = ..., middleMouseRepositioning: bool | int = ..., mm: bool | int = ..., pivotRotateHandleOffset: bool | int | int = ..., pro: bool | int | int = ..., planeHandleOffset: bool | int | int = ..., pho: bool | int | int = ..., pointSize: bool | int | float = ..., ps: bool | int | float = ..., preselectHighlight: bool | int = ..., psh: bool | int = ..., query: bool | int = ..., q: bool | int = ..., refreshMode: bool | int | int = ..., rm: bool | int | int = ..., relative: bool | int = ..., r: bool | int = ..., rememberActiveHandle: bool | int = ..., rah: bool | int = ..., rememberActiveHandleAfterToolSwitch: bool | int = ..., rhs: bool | int = ..., scale: bool | int | float = ..., s: bool | int | float = ..., showExtrudeSliders: bool | int = ..., ses: bool | int = ..., showPivotRotateHandle: bool | int = ..., spr: bool | int = ..., showPlaneHandles: bool | int = ..., sph: bool | int = ..., smartDuplicateType: bool | int | int = ..., sdt: bool | int | int = ...) -> Any: ...
def manipPivot(*args, bakeOri: bool | int = ..., bo: bool | int = ..., moveToolOri: int = ..., mto: int = ..., ori: bool | int | tuple[float, float, float] = ..., o: bool | int | tuple[float, float, float] = ..., oriValid: bool | int = ..., ov: bool | int = ..., orientation: tuple[float, float, float] = ..., pinPivot: bool | int = ..., pin: bool | int = ..., pos: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., posValid: bool | int = ..., pv: bool | int = ..., position: tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., r: bool | int = ..., resetOri: bool | int = ..., ro: bool | int = ..., resetPos: bool | int = ..., rp: bool | int = ..., rotateToolOri: int = ..., rto: int = ..., scaleToolOri: int = ..., sto: int = ..., snapOri: bool | int = ..., so: bool | int = ..., snapPos: bool | int = ..., sp: bool | int = ..., valid: bool | int = ..., v: bool | int = ...) -> Any: ...
def manipRotateContext(*args, activeHandle: bool | int | int = ..., ah: bool | int | int = ..., alignAlong: tuple[float, float, float] = ..., aa: tuple[float, float, float] = ..., bakePivotOri: bool | int = ..., bpo: bool | int = ..., centerTrackball: bool | int = ..., ctb: bool | int = ..., constrainAlongNormal: bool | int = ..., xn: bool | int = ..., currentActiveHandle: bool | int | int = ..., cah: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., editPivotMode: bool | int = ..., epm: bool | int = ..., editPivotPosition: bool | int = ..., epp: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., lastMode: bool | int | int = ..., lm: bool | int | int = ..., manipVisible: bool | int = ..., vis: bool | int = ..., mode: bool | int | int = ..., m: bool | int | int = ..., modifyTranslation: bool | int = ..., mt: bool | int = ..., orientAxes: bool | int | tuple[float, float, float] = ..., oa: bool | int | tuple[float, float, float] = ..., orientObject: str = ..., oo: str = ..., orientTowards: tuple[float, float, float] = ..., ot: tuple[float, float, float] = ..., pinPivot: bool | int = ..., pin: bool | int = ..., pivotOriHandle: bool | int = ..., poh: bool | int = ..., position: bool | int = ..., p: bool | int = ..., postCommand: str | Callable = ..., psc: str | Callable = ..., postDragCommand: tuple[str | Callable, str] = ..., pod: tuple[str | Callable, str] = ..., preCommand: str | Callable = ..., prc: str | Callable = ..., preDragCommand: tuple[str | Callable, str] = ..., prd: tuple[str | Callable, str] = ..., preserveChildPosition: bool | int = ..., pcp: bool | int = ..., preserveUV: bool | int = ..., puv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., reflection: bool | int = ..., rfl: bool | int = ..., reflectionAbout: int = ..., rab: int = ..., reflectionAxis: int = ..., rfa: int = ..., reflectionTolerance: float = ..., rft: float = ..., rotate: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., snap: bool | int = ..., s: bool | int = ..., snapPivotOri: bool | int = ..., spo: bool | int = ..., snapPivotPos: bool | int = ..., spp: bool | int = ..., snapRelative: bool | int = ..., sr: bool | int = ..., snapValue: bool | int | float = ..., sv: bool | int | float = ..., tweakMode: bool | int = ..., twk: bool | int = ..., useCenterPivot: bool | int = ..., ucp: bool | int = ..., useManipPivot: bool | int = ..., ump: bool | int = ..., useObjectPivot: bool | int = ..., uop: bool | int = ..., xformConstraint: bool | int | str = ..., xc: bool | int | str = ...) -> Any: ...
def manipRotateLimitsCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def manipScaleContext(*args, activeHandle: bool | int | int = ..., ah: bool | int | int = ..., alignAlong: tuple[float, float, float] = ..., aa: tuple[float, float, float] = ..., bakePivotOri: bool | int = ..., bpo: bool | int = ..., constrainAlongNormal: bool | int = ..., xn: bool | int = ..., currentActiveHandle: bool | int | int = ..., cah: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., editPivotMode: bool | int = ..., epm: bool | int = ..., editPivotPosition: bool | int = ..., epp: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., lastMode: bool | int | int = ..., lm: bool | int | int = ..., manipVisible: bool | int = ..., vis: bool | int = ..., mode: bool | int | int = ..., m: bool | int | int = ..., orientAxes: bool | int | tuple[float, float, float] = ..., oa: bool | int | tuple[float, float, float] = ..., orientObject: str = ..., oo: str = ..., orientTowards: tuple[float, float, float] = ..., ot: tuple[float, float, float] = ..., pinPivot: bool | int = ..., pin: bool | int = ..., pivotOriHandle: bool | int = ..., poh: bool | int = ..., position: bool | int = ..., p: bool | int = ..., postCommand: str | Callable = ..., psc: str | Callable = ..., postDragCommand: tuple[str | Callable, str] = ..., pod: tuple[str | Callable, str] = ..., preCommand: str | Callable = ..., prc: str | Callable = ..., preDragCommand: tuple[str | Callable, str] = ..., prd: tuple[str | Callable, str] = ..., preserveChildPosition: bool | int = ..., pcp: bool | int = ..., preserveUV: bool | int = ..., puv: bool | int = ..., preventNegativeScale: bool | int = ..., pns: bool | int = ..., query: bool | int = ..., q: bool | int = ..., reflection: bool | int = ..., rfl: bool | int = ..., reflectionAbout: int = ..., rab: int = ..., reflectionAxis: int = ..., rfa: int = ..., reflectionTolerance: float = ..., rft: float = ..., scale: bool | int | tuple[float, float, float] = ..., sc: bool | int | tuple[float, float, float] = ..., snap: bool | int = ..., s: bool | int = ..., snapPivotOri: bool | int = ..., spo: bool | int = ..., snapPivotPos: bool | int = ..., spp: bool | int = ..., snapRelative: bool | int = ..., sr: bool | int = ..., snapValue: bool | int | float = ..., sv: bool | int | float = ..., tweakMode: bool | int = ..., twk: bool | int = ..., useManipPivot: bool | int = ..., ump: bool | int = ..., useObjectPivot: bool | int = ..., uop: bool | int = ..., xformConstraint: bool | int | str = ..., xc: bool | int | str = ...) -> Any: ...
def manipScaleLimitsCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def marker(*args, attach: bool | int = ..., a: bool | int = ..., detach: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frontTwist: bool | int | float = ..., ft: bool | int | float = ..., orientationMarker: bool | int = ..., om: bool | int = ..., positionMarker: bool | int = ..., pm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sideTwist: bool | int | float = ..., st: bool | int | float = ..., time: bool | int | int | float = ..., t: bool | int | int | float = ..., upTwist: bool | int | float = ..., ut: bool | int | float = ..., valueU: bool | int | float = ..., u: bool | int | float = ...) -> Any: ...
def matchTransform(*args, pivots: bool | int = ..., piv: bool | int = ..., position: bool | int = ..., pos: bool | int = ..., positionX: bool | int = ..., px: bool | int = ..., positionY: bool | int = ..., py: bool | int = ..., positionZ: bool | int = ..., pz: bool | int = ..., rotatePivot: bool | int = ..., rp: bool | int = ..., rotation: bool | int = ..., rot: bool | int = ..., rotationX: bool | int = ..., rx: bool | int = ..., rotationY: bool | int = ..., ry: bool | int = ..., rotationZ: bool | int = ..., rz: bool | int = ..., scale: bool | int = ..., scl: bool | int = ..., scaleBox: bool | int = ..., box: bool | int = ..., scalePivot: bool | int = ..., sp: bool | int = ..., scaleX: bool | int = ..., sx: bool | int = ..., scaleY: bool | int = ..., sy: bool | int = ..., scaleZ: bool | int = ..., sz: bool | int = ...) -> Any: ...
def matrixUtil(*args, edit: bool | int = ..., e: bool | int = ..., inverse: bool | int = ..., iv: bool | int = ..., quaternion: bool | int | tuple[float, float, float, float] = ..., qt: bool | int | tuple[float, float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., rt: bool | int = ..., rotation: bool | int | tuple[float, float, float] = ..., r: bool | int | tuple[float, float, float] = ..., scale: bool | int | tuple[float, float, float] = ..., s: bool | int | tuple[float, float, float] = ..., shear: bool | int | tuple[float, float, float] = ..., sh: bool | int | tuple[float, float, float] = ..., translation: bool | int | tuple[float, float, float] = ..., t: bool | int | tuple[float, float, float] = ..., transpose: bool | int = ..., tp: bool | int = ...) -> Any: ...
def mayaHasRenderSetup(*args, edit: bool | int = ..., e: bool | int = ..., enableCurrentSession: bool | int = ..., ecs: bool | int = ..., enableDuringTests: bool | int = ..., edt: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...

mayaPreviewRenderIntoNewWindow: Callable
def melInfo(*args) -> Any: ...
def melOptions(*args, duplicateVariableWarnings: bool | int = ..., dvw: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def memory(*args, adjustedVirtualMemory: bool | int = ..., av: bool | int = ..., asFloat: bool | int = ..., af: bool | int = ..., debug: bool | int = ..., dbg: bool | int = ..., freeMemory: bool | int = ..., fr: bool | int = ..., gigaByte: bool | int = ..., gb: bool | int = ..., heapMemory: bool | int = ..., he: bool | int = ..., kiloByte: bool | int = ..., kb: bool | int = ..., megaByte: bool | int = ..., mb: bool | int = ..., pageFaults: bool | int = ..., pf: bool | int = ..., pageReclaims: bool | int = ..., pr: bool | int = ..., physicalMemory: bool | int = ..., phy: bool | int = ..., processResidentMemory: bool | int = ..., prm: bool | int = ..., processVirtualMemory: bool | int = ..., pv: bool | int = ..., summary: bool | int = ..., sum: bool | int = ..., swapFree: bool | int = ..., swf: bool | int = ..., swapLogical: bool | int = ..., swl: bool | int = ..., swapMax: bool | int = ..., swm: bool | int = ..., swapPhysical: bool | int = ..., swp: bool | int = ..., swapReserved: bool | int = ..., swr: bool | int = ..., swapVirtual: bool | int = ..., swv: bool | int = ..., swaps: bool | int = ..., sw: bool | int = ...) -> Any: ...
def menu(*args, allowOptionBoxes: bool | int = ..., aob: bool | int = ..., defineTemplate: str = ..., dt: str = ..., deleteAllItems: bool | int = ..., dai: bool | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., familyImage: bool | int | str = ..., fi: bool | int | str = ..., helpMenu: bool | int = ..., hm: bool | int = ..., itemArray: bool | int = ..., ia: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., ltVersion: bool | int | str = ..., lt: bool | int | str = ..., mnemonic: bool | int | str = ..., mn: bool | int | str = ..., numberOfItems: bool | int = ..., ni: bool | int = ..., parent: str = ..., p: str = ..., postMenuCommand: str | Callable = ..., pmc: str | Callable = ..., postMenuCommandOnce: bool | int = ..., pmo: bool | int = ..., query: bool | int = ..., q: bool | int = ..., scrollable: bool | int = ..., srb: bool | int = ..., tearOff: bool | int = ..., to: bool | int = ..., useTemplate: str = ..., ut: str = ..., version: bool | int | str = ..., ver: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ...) -> Any: ...
def menuBarLayout(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., childArray: bool | int = ..., ca: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., menuArray: bool | int = ..., ma: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., menuIndex: tuple[str, int] = ..., mi: tuple[str, int] = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfMenus: bool | int = ..., nm: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def menuEditor(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., cellHeight: bool | int | int = ..., ch: bool | int | int = ..., cellWidth: bool | int | int = ..., cw: bool | int | int = ..., cellWidthHeight: tuple[int, int] = ..., cwh: tuple[int, int] = ..., checkBoxPresent: bool | int | tuple[bool | int, str, int] = ..., cbp: bool | int | tuple[bool | int, str, int] = ..., checkBoxState: bool | int | tuple[bool | int, str, int] = ..., cbs: bool | int | tuple[bool | int, str, int] = ..., childArray: bool | int = ..., ca: bool | int = ..., command: bool | int | tuple[str, str, int] = ..., c: bool | int | tuple[str, str, int] = ..., defineTemplate: str = ..., dt: str = ..., delete: tuple[str, int] = ..., d: tuple[str, int] = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., iconMenuCallback: str = ..., imc: str = ..., image: bool | int | tuple[str, str, int] = ..., i: bool | int | tuple[str, str, int] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | tuple[str, str, int] = ..., l: bool | int | tuple[str, str, int] = ..., manage: bool | int = ..., m: bool | int = ..., menuItemTypes: bool | int = ..., mit: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., optionBoxCommand: bool | int | tuple[str, str, int] = ..., obc: bool | int | tuple[str, str, int] = ..., optionBoxPresent: bool | int | tuple[bool | int, str, int] = ..., obp: bool | int | tuple[bool | int, str, int] = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radioButtonPresent: bool | int | tuple[bool | int, str, int] = ..., rbp: bool | int | tuple[bool | int, str, int] = ..., radioButtonState: bool | int | tuple[bool | int, str, int] = ..., rbs: bool | int | tuple[bool | int, str, int] = ..., separator: bool | int | tuple[str, int] = ..., sp: bool | int | tuple[str, int] = ..., statusBarMessage: str = ..., sbm: str = ..., style: bool | int | str = ..., st: bool | int | str = ..., subMenuAt: tuple[str, int] = ..., sma: tuple[str, int] = ..., subMenuEditorWindow: str = ..., sew: str = ..., subMenuEditorsOpen: bool | int = ..., seo: bool | int = ..., subMenuOf: tuple[str, str, int] = ..., smo: tuple[str, str, int] = ..., topLevelMenu: bool | int | str = ..., tlm: bool | int | str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def menuItem(*args, allowOptionBoxes: bool | int = ..., aob: bool | int = ..., altModifier: bool | int = ..., alt: bool | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., boldFont: bool | int = ..., bld: bool | int = ..., checkBox: bool | int = ..., cb: bool | int = ..., collection: bool | int | str = ..., cl: bool | int | str = ..., command: bool | int | str | Callable = ..., c: bool | int | str | Callable = ..., commandModifier: bool | int = ..., cmd: bool | int = ..., ctrlModifier: bool | int = ..., ctl: bool | int = ..., data: bool | int | int = ..., da: bool | int | int = ..., defineTemplate: str = ..., dt: str = ..., divider: bool | int = ..., d: bool | int = ..., dividerLabel: bool | int | str = ..., dl: bool | int | str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragDoubleClickCommand: bool | int | str | Callable = ..., ddc: bool | int | str | Callable = ..., dragMenuCommand: bool | int | str | Callable = ..., dmc: bool | int | str | Callable = ..., echoCommand: bool | int = ..., ec: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableCommandRepeat: bool | int = ..., ecr: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., familyImage: bool | int | str = ..., fi: bool | int | str = ..., image: bool | int | str = ..., i: bool | int | str = ..., imageOverlayLabel: bool | int | str = ..., iol: bool | int | str = ..., insertAfter: str = ..., ia: str = ..., isCheckBox: bool | int = ..., icb: bool | int = ..., isOptionBox: bool | int = ..., iob: bool | int = ..., isRadioButton: bool | int = ..., irb: bool | int = ..., italicized: bool | int = ..., itl: bool | int = ..., keyEquivalent: str = ..., ke: str = ..., label: bool | int | str = ..., l: bool | int | str = ..., longDivider: bool | int = ..., ld: bool | int = ..., ltVersion: bool | int | str = ..., lt: bool | int | str = ..., mnemonic: str = ..., mn: str = ..., optionBox: bool | int = ..., ob: bool | int = ..., optionBoxIcon: bool | int | str = ..., obi: bool | int | str = ..., optionModifier: bool | int = ..., opt: bool | int = ..., parent: str = ..., p: str = ..., postMenuCommand: bool | int | str | Callable = ..., pmc: bool | int | str | Callable = ..., postMenuCommandOnce: bool | int = ..., pmo: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radialPosition: bool | int | str = ..., rp: bool | int | str = ..., radioButton: bool | int = ..., rb: bool | int = ..., runTimeCommand: str = ..., rtc: str = ..., shiftModifier: bool | int = ..., sh: bool | int = ..., sourceType: bool | int | str = ..., stp: bool | int | str = ..., subMenu: bool | int = ..., sm: bool | int = ..., tearOff: bool | int = ..., to: bool | int = ..., useTemplate: str = ..., ut: str = ..., version: bool | int | str = ..., ver: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ...) -> Any: ...
def menuSet(*args, addMenu: str = ..., am: str = ..., allMenuSets: bool | int = ..., ams: bool | int = ..., currentMenuSet: bool | int | str = ..., cms: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int | str = ..., ex: bool | int | str = ..., hotBoxVisible: bool | int = ..., hbv: bool | int = ..., insertMenu: tuple[str, int] = ..., im: tuple[str, int] = ..., label: bool | int | str = ..., l: bool | int | str = ..., menuArray: bool | int | str = ..., ma: bool | int | str = ..., moveMenu: tuple[str, int] = ..., mm: tuple[str, int] = ..., moveMenuSet: tuple[str, int] = ..., mms: tuple[str, int] = ..., numberOfMenuSets: bool | int = ..., nms: bool | int = ..., numberOfMenus: bool | int = ..., nm: bool | int = ..., permanent: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeMenu: str = ..., rm: str = ..., removeMenuSet: str = ..., rms: str = ...) -> Any: ...
def menuSetPref(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., force: bool | int = ..., f: bool | int = ..., loadAll: bool | int = ..., la: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeAll: bool | int = ..., ra: bool | int = ..., saveAll: bool | int = ..., sa: bool | int = ..., saveBackup: bool | int = ..., sb: bool | int = ..., version: bool | int = ..., v: bool | int = ...) -> Any: ...
def messageLine(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def mimicManipulation(*args, manipulations: str = ..., m: str = ..., prevalidation: bool | int = ..., p: bool | int = ..., refresh: bool | int = ..., r: bool | int = ...) -> Any: ...
def minimizeApp(*args) -> Any: ...
def mirrorJoint(*args, mirrorBehavior: bool | int = ..., mb: bool | int = ..., mirrorXY: bool | int = ..., mxy: bool | int = ..., mirrorXZ: bool | int = ..., mxz: bool | int = ..., mirrorYZ: bool | int = ..., myz: bool | int = ..., searchReplace: tuple[str, str] = ..., sr: tuple[str, str] = ...) -> Any: ...
def modelCurrentTimeCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., percent: bool | int | float = ..., per: bool | int | float = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def modelEditor(*args, activeComponentsXray: bool | int = ..., acx: bool | int = ..., activeCustomEnvironment: str = ..., ace: str = ..., activeCustomGeometry: bool | int | str = ..., acg: bool | int | str = ..., activeCustomLighSet: bool | int | str = ..., acl: bool | int | str = ..., activeCustomOverrideGeometry: bool | int | str = ..., aog: bool | int | str = ..., activeCustomRenderer: bool | int | str = ..., acr: bool | int | str = ..., activeOnly: bool | int = ..., ao: bool | int = ..., activeShadingGraph: bool | int | str = ..., asg: bool | int | str = ..., activeView: bool | int = ..., av: bool | int = ..., addObjects: str = ..., aob: str = ..., addSelected: bool | int = ..., addSelectedObjects: bool | int = ..., aso: bool | int = ..., allObjects: bool | int = ..., alo: bool | int = ..., backfaceCulling: bool | int = ..., bfc: bool | int = ..., bufferMode: bool | int | str = ..., bm: bool | int | str = ..., bumpResolution: bool | int | tuple[int, int] = ..., brz: bool | int | tuple[int, int] = ..., camera: bool | int | str = ..., cam: bool | int | str = ..., cameraName: str = ..., cn: str = ..., cameraSet: bool | int | str = ..., cst: bool | int | str = ..., cameraSetup: bool | int = ..., cs: bool | int = ..., cameras: bool | int = ..., ca: bool | int = ..., capture: bool | int | str = ..., cpt: bool | int | str = ..., captureSequenceNumber: bool | int | int = ..., csn: bool | int | int = ..., clipGhosts: bool | int = ..., cg: bool | int = ..., cmEnabled: bool | int = ..., cme: bool | int = ..., colorMap: bool | int = ..., cm: bool | int = ..., colorResolution: bool | int | tuple[int, int] = ..., crz: bool | int | tuple[int, int] = ..., control: bool | int = ..., ctl: bool | int = ..., controlVertices: bool | int = ..., cv: bool | int = ..., controllers: bool | int = ..., cts: bool | int = ..., cullingOverride: bool | int | str = ..., cov: bool | int | str = ..., default: bool | int = ..., d: bool | int = ..., defineTemplate: str = ..., dt: str = ..., deformers: bool | int = ..., df: bool | int = ..., depthOfFieldPreview: bool | int = ..., dof: bool | int = ..., dimensions: bool | int = ..., dim: bool | int = ..., displayAppearance: bool | int | str = ..., da: bool | int | str = ..., displayLights: bool | int | str = ..., dl: bool | int | str = ..., displayTextures: bool | int = ..., dtx: bool | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dynamicConstraints: bool | int = ..., dc: bool | int = ..., dynamics: bool | int = ..., dy: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., editorChanged: bool | int | str | Callable = ..., ec: bool | int | str | Callable = ..., exists: bool | int = ..., ex: bool | int = ..., exposure: bool | int | float = ..., exp: bool | int | float = ..., filter: bool | int | str = ..., f: bool | int | str = ..., filteredObjectList: bool | int = ..., fol: bool | int = ..., fluids: bool | int = ..., fl: bool | int = ..., fogColor: bool | int | tuple[float, float, float, float] = ..., fcl: bool | int | tuple[float, float, float, float] = ..., fogDensity: bool | int | float = ..., fdn: bool | int | float = ..., fogEnd: bool | int | float = ..., fen: bool | int | float = ..., fogMode: bool | int | str = ..., fmd: bool | int | str = ..., fogSource: bool | int | str = ..., fsc: bool | int | str = ..., fogStart: bool | int | float = ..., fst: bool | int | float = ..., fogging: bool | int = ..., fg: bool | int = ..., follicles: bool | int = ..., fo: bool | int = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., gamma: bool | int | float = ..., ga: bool | int | float = ..., greasePencils: bool | int = ..., gp: bool | int = ..., grid: bool | int = ..., gr: bool | int = ..., hairSystems: bool | int = ..., hs: bool | int = ..., handles: bool | int = ..., ha: bool | int = ..., headsUpDisplay: bool | int = ..., hud: bool | int = ..., height: bool | int = ..., h: bool | int = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., holdOuts: bool | int = ..., hos: bool | int = ..., hulls: bool | int = ..., hu: bool | int = ..., ignorePanZoom: bool | int = ..., ipz: bool | int = ..., ikHandles: bool | int = ..., ikh: bool | int = ..., imagePlane: bool | int = ..., imp: bool | int = ..., interactive: bool | int = ..., i: bool | int = ..., interactiveBackFaceCull: bool | int = ..., ibc: bool | int = ..., interactiveDisableShadows: bool | int = ..., dis: bool | int = ..., isFiltered: bool | int = ..., jointXray: bool | int = ..., jx: bool | int = ..., joints: bool | int = ..., j: bool | int = ..., lights: bool | int = ..., lt: bool | int = ..., lineWidth: bool | int | float = ..., lw: bool | int | float = ..., locators: bool | int = ..., lc: bool | int = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., lowQualityLighting: bool | int = ..., lql: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., manipulators: bool | int = ..., m: bool | int = ..., maxConstantTransparency: bool | int | float = ..., mct: bool | int | float = ..., maximumNumHardwareLights: bool | int = ..., mhl: bool | int = ..., modelPanel: str = ..., mp: str = ..., motionTrails: bool | int = ..., mt: bool | int = ..., nCloths: bool | int = ..., ncl: bool | int = ..., nParticles: bool | int = ..., npa: bool | int = ..., nRigids: bool | int = ..., nr: bool | int = ..., noUndo: bool | int = ..., nud: bool | int = ..., nurbsCurves: bool | int = ..., nc: bool | int = ..., nurbsSurfaces: bool | int = ..., ns: bool | int = ..., objectFilter: bool | int | str | Callable = ..., obf: bool | int | str | Callable = ..., objectFilterList: bool | int | str | Callable = ..., ofl: bool | int | str | Callable = ..., objectFilterListUI: bool | int | str | Callable = ..., ofu: bool | int | str | Callable = ..., objectFilterShowInHUD: bool | int = ..., ofs: bool | int = ..., objectFilterUI: bool | int | str | Callable = ..., obu: bool | int | str | Callable = ..., occlusionCulling: bool | int = ..., ocl: bool | int = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., particleInstancers: bool | int = ..., pi: bool | int = ..., pivots: bool | int = ..., pv: bool | int = ..., planes: bool | int = ..., pl: bool | int = ..., pluginObjects: tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., po: tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., pluginShapes: bool | int = ..., ps: bool | int = ..., polymeshes: bool | int = ..., pm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., queryPluginObjects: bool | int | str = ..., qpo: bool | int | str = ..., removeSelected: bool | int = ..., rs: bool | int = ..., rendererDeviceName: bool | int = ..., rdn: bool | int = ..., rendererList: bool | int = ..., rls: bool | int = ..., rendererListUI: bool | int = ..., rlu: bool | int = ..., rendererName: bool | int | str = ..., rnm: bool | int | str = ..., rendererOverrideList: bool | int = ..., rol: bool | int = ..., rendererOverrideListUI: bool | int = ..., rou: bool | int = ..., rendererOverrideName: bool | int | str = ..., rom: bool | int | str = ..., resetCustomCamera: bool | int = ..., rcc: bool | int = ..., sceneRenderFilter: bool | int | str = ..., srf: bool | int | str = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., selectionHiliteDisplay: bool | int = ..., sel: bool | int = ..., setSelected: bool | int = ..., ss: bool | int = ..., shadingModel: bool | int | int = ..., sml: bool | int | int = ..., shadows: bool | int = ..., sdw: bool | int = ..., smallObjectCulling: bool | int = ..., soc: bool | int = ..., smallObjectThreshold: bool | int | float = ..., sot: bool | int | float = ..., smoothWireframe: bool | int = ..., swf: bool | int = ..., sortTransparent: bool | int = ..., st: bool | int = ..., stateString: bool | int = ..., sts: bool | int = ..., stereoDrawMode: bool | int = ..., sdm: bool | int = ..., strokes: bool | int = ..., str: bool | int = ..., subdivSurfaces: bool | int = ..., sds: bool | int = ..., textureAnisotropic: bool | int = ..., ta: bool | int = ..., textureCompression: bool | int = ..., tcp: bool | int = ..., textureDisplay: bool | int | str = ..., td: bool | int | str = ..., textureEnvironmentMap: bool | int = ..., tem: bool | int = ..., textureHilight: bool | int = ..., th: bool | int = ..., textureMaxSize: bool | int | int = ..., tms: bool | int | int = ..., textureMemoryUsed: bool | int = ..., tmu: bool | int = ..., textureSampling: bool | int | int = ..., ts: bool | int | int = ..., textures: bool | int = ..., tx: bool | int = ..., toggleExposure: bool | int = ..., tge: bool | int = ..., toggleGamma: bool | int = ..., tgg: bool | int = ..., transpInShadows: bool | int = ..., tis: bool | int = ..., transparencyAlgorithm: bool | int | str = ..., tal: bool | int | str = ..., twoSidedLighting: bool | int = ..., tsl: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateColorMode: bool | int = ..., ucm: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useBaseRenderer: bool | int = ..., ubr: bool | int = ..., useColorIndex: bool | int = ..., uci: bool | int = ..., useDefaultMaterial: bool | int = ..., udm: bool | int = ..., useInteractiveMode: bool | int = ..., ui: bool | int = ..., useRGBImagePlane: bool | int = ..., ip: bool | int = ..., useReducedRenderer: bool | int = ..., urr: bool | int = ..., useTemplate: str = ..., ut: str = ..., userNode: bool | int | str = ..., un: bool | int | str = ..., viewObjects: bool | int = ..., vo: bool | int = ..., viewSelected: bool | int = ..., vs: bool | int = ..., viewTransformName: bool | int | str = ..., vtn: bool | int | str = ..., viewType: bool | int = ..., vt: bool | int = ..., width: bool | int = ..., w: bool | int = ..., wireframeBackingStore: bool | int = ..., wbs: bool | int = ..., wireframeOnShaded: bool | int = ..., wos: bool | int = ..., xray: bool | int = ..., xr: bool | int = ...) -> Any: ...
def modelPanel(*args, barLayout: bool | int = ..., bl: bool | int = ..., camera: bool | int | str = ..., cam: bool | int | str = ..., control: bool | int = ..., ctl: bool | int = ..., copy: str = ..., cp: str = ..., createString: bool | int = ..., cs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., editString: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., init: bool | int = ..., isUnique: bool | int = ..., iu: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., menuBarRepeatLast: bool | int = ..., mrl: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., modelEditor: bool | int = ..., me: bool | int = ..., needsInit: bool | int = ..., ni: bool | int = ..., parent: str = ..., p: str = ..., popupMenuProcedure: bool | int | str | Callable = ..., pmp: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., replacePanel: str = ..., rp: str = ..., tearOff: bool | int = ..., to: bool | int = ..., tearOffCopy: str = ..., toc: str = ..., tearOffRestore: bool | int = ..., tor: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def modelingToolkitSuperCtx(*args, attach: str | list[str] = ..., a: str | list[str] = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def moduleInfo(*args, definition: bool | int = ..., d: bool | int = ..., listModules: bool | int = ..., lm: bool | int = ..., moduleName: str = ..., mn: str = ..., path: bool | int = ..., p: bool | int = ..., version: bool | int = ..., v: bool | int = ...) -> Any: ...
def mouldMesh(*args) -> Any: ...
def mouldSrf(*args) -> Any: ...
def mouldSubdiv(*args) -> Any: ...
def mouse(*args, enableScrollWheel: bool | int = ..., esw: bool | int = ..., mouseButtonTracking: int = ..., mbt: int = ..., mouseButtonTrackingStatus: bool | int = ..., mbs: bool | int = ..., scrollWheelStatus: bool | int = ..., sws: bool | int = ...) -> Any: ...
def movIn(*args, file: str = ..., f: str = ..., startTime: int | float = ..., st: int | float = ...) -> Any: ...
def movOut(*args, comment: bool | int = ..., c: bool | int = ..., file: str = ..., f: str = ..., precision: int = ..., pre: int = ..., time: str | tuple[float, float] | tuple[float] = ..., t: str | tuple[float, float] | tuple[float] = ...) -> Any: ...
def move(*args, absolute: bool | int = ..., a: bool | int = ..., componentOffset: bool | int = ..., co: bool | int = ..., componentSpace: bool | int = ..., cs: bool | int = ..., constrainAlongNormal: bool | int = ..., xn: bool | int = ..., deletePriorHistory: bool | int = ..., dph: bool | int = ..., localSpace: bool | int = ..., ls: bool | int = ..., moveX: bool | int = ..., x: bool | int = ..., moveXY: bool | int = ..., xy: bool | int = ..., moveXYZ: bool | int = ..., xyz: bool | int = ..., moveXZ: bool | int = ..., xz: bool | int = ..., moveY: bool | int = ..., y: bool | int = ..., moveYZ: bool | int = ..., yz: bool | int = ..., moveZ: bool | int = ..., z: bool | int = ..., objectSpace: bool | int = ..., os: bool | int = ..., orientJoint: str = ..., oj: str = ..., parameter: bool | int = ..., p: bool | int = ..., preserveChildPosition: bool | int = ..., pcp: bool | int = ..., preserveGeometryPosition: bool | int = ..., pgp: bool | int = ..., preserveUV: bool | int = ..., puv: bool | int = ..., reflection: bool | int = ..., rfl: bool | int = ..., reflectionAboutBBox: bool | int = ..., rab: bool | int = ..., reflectionAboutOrigin: bool | int = ..., rao: bool | int = ..., reflectionAboutX: bool | int = ..., rax: bool | int = ..., reflectionAboutY: bool | int = ..., ray: bool | int = ..., reflectionAboutZ: bool | int = ..., raz: bool | int = ..., reflectionTolerance: float = ..., rft: float = ..., relative: bool | int = ..., r: bool | int = ..., rotatePivotRelative: bool | int = ..., rpr: bool | int = ..., scalePivotRelative: bool | int = ..., spr: bool | int = ..., secondaryAxisOrient: str = ..., sao: str = ..., symNegative: bool | int = ..., smn: bool | int = ..., ufeRotatePivot: bool | int = ..., urp: bool | int = ..., ufeScalePivot: bool | int = ..., usp: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ..., worldSpaceDistance: bool | int = ..., wd: bool | int = ..., xformConstraint: str = ..., xc: str = ...) -> Any: ...
def moveKeyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., moveFunction: bool | int | str = ..., mf: bool | int | str = ..., name: str = ..., n: str = ..., option: bool | int | str = ..., o: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def moveVertexAlongDirection(*args, direction: tuple[float, float, float] | list[tuple[float, float, float]] = ..., d: tuple[float, float, float] | list[tuple[float, float, float]] = ..., magnitude: float | list[float] = ..., m: float | list[float] = ..., normalDirection: float | list[float] = ..., n: float | list[float] = ..., uDirection: float | list[float] = ..., u: float | list[float] = ..., uvNormalDirection: tuple[float, float, float] | list[tuple[float, float, float]] = ..., uvn: tuple[float, float, float] | list[tuple[float, float, float]] = ..., vDirection: float | list[float] = ..., v: float | list[float] = ...) -> Any: ...
def movieCompressor(*args, hardwareOptions: bool | int = ..., ho: bool | int = ..., softwareOptions: bool | int = ..., so: bool | int = ...) -> Any: ...
def movieInfo(*args, counter: bool | int = ..., cn: bool | int = ..., dropFrame: bool | int = ..., df: bool | int = ..., frameCount: bool | int = ..., f: bool | int = ..., frameDuration: bool | int = ..., fd: bool | int = ..., height: bool | int = ..., h: bool | int = ..., movieTexture: bool | int = ..., mt: bool | int = ..., negTimesOK: bool | int = ..., nt: bool | int = ..., numFrames: bool | int = ..., nf: bool | int = ..., quickTime: bool | int = ..., qt: bool | int = ..., timeCode: bool | int = ..., tc: bool | int = ..., timeCodeTrack: bool | int = ..., tt: bool | int = ..., timeScale: bool | int = ..., ts: bool | int = ..., twentyFourHourMax: bool | int = ..., tf: bool | int = ..., width: bool | int = ..., w: bool | int = ...) -> Any: ...
def mpBirailCtx(*args, activeNodes: bool | int = ..., anq: bool | int = ..., autoCreate: bool | int = ..., ac: bool | int = ..., bldProfileFirst: bool | int = ..., bpf: bool | int = ..., bldProfileLast: bool | int = ..., bpl: bool | int = ..., bldProfiles: bool | int = ..., bp: bool | int = ..., bldRailOne: bool | int = ..., br1: bool | int = ..., bldRailTwo: bool | int = ..., br2: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., immediate: bool | int = ..., im: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., rs: bool | int = ..., tangentContinuityProfile1: bool | int = ..., tp1: bool | int = ..., tangentContinuityProfile2: bool | int = ..., tp2: bool | int = ..., toolNode: bool | int = ..., tnq: bool | int = ..., transformMode: int = ..., tm: int = ...) -> Any: ...

mrMapVisualizer: Callable
mrShaderManager: Callable
def multiProfileBirailSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., tangentContinuityProfile1: bool | int = ..., tp1: bool | int = ..., tangentContinuityProfile2: bool | int = ..., tp2: bool | int = ..., transformMode: bool | int | int = ..., tm: bool | int | int = ...) -> Any: ...
def mute(*args, disable: bool | int = ..., d: bool | int = ..., force: bool | int = ..., f: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def nBase(*args, clearCachedTextureMap: str = ..., cct: str = ..., clearStart: bool | int = ..., cs: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., stuffStart: bool | int = ..., ss: bool | int = ..., textureToVertex: str = ..., ttv: str = ...) -> Any: ...

nClothAppend: Callable
nClothAppendOpt: Callable
nClothCache: Callable
nClothCacheOpt: Callable
nClothCreate: Callable
nClothCreateOptions: Callable
nClothDeleteCacheFrames: Callable
nClothDeleteCacheFramesOpt: Callable
nClothDeleteCacheOpt: Callable
nClothDeleteHistory: Callable
nClothDeleteHistoryOpt: Callable
nClothDisplayCurrentMesh: Callable
nClothDisplayInputMesh: Callable
nClothLocalToWorld: Callable
nClothMakeCollide: Callable
nClothMakeCollideOptions: Callable
nClothMergeCache: Callable
nClothMergeCacheOpt: Callable
nClothRemove: Callable
nClothReplaceCache: Callable
nClothReplaceCacheOpt: Callable
nClothReplaceFrames: Callable
nClothReplaceFramesOpt: Callable
nClothRestToInput: Callable
nClothRestToInputStart: Callable
nClothRestToMesh: Callable
nClothWorldToLocal: Callable
nConstraintAddMembers: Callable
nConstraintAttractToMatch: Callable
nConstraintAttractToMatchOptions: Callable
nConstraintCollisionExclusion: Callable
nConstraintCollisionExclusionOptions: Callable
nConstraintComponent: Callable
nConstraintComponentOptions: Callable
nConstraintComponentToComponent: Callable
nConstraintComponentToComponentOptions: Callable
nConstraintConstraintMembershipTool: Callable
nConstraintDisableCollision: Callable
nConstraintDisableCollisionOptions: Callable
nConstraintForceField: Callable
nConstraintForceFieldOptions: Callable
nConstraintPointToSurface: Callable
nConstraintPointToSurfaceOptions: Callable
nConstraintRemoveMembers: Callable
nConstraintReplaceMembers: Callable
nConstraintSelectMembers: Callable
nConstraintSlideOnSurface: Callable
nConstraintSlideOnSurfaceOptions: Callable
nConstraintTearableSurface: Callable
nConstraintTearableSurfaceOptions: Callable
nConstraintTransform: Callable
nConstraintTransformOptions: Callable
nConstraintWeldBorders: Callable
nConstraintWeldBordersOptions: Callable
def nParticle(*args, attribute: bool | int | str = ..., at: bool | int | str = ..., cache: bool | int = ..., ch: bool | int = ..., conserve: bool | int | float = ..., c: bool | int | float = ..., count: bool | int = ..., ct: bool | int = ..., deleteCache: bool | int = ..., dc: bool | int = ..., dynamicAttrList: bool | int = ..., dal: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., floatValue: float = ..., fv: float = ..., gridSpacing: bool | int | float | list[float] = ..., grs: bool | int | float | list[float] = ..., inherit: bool | int | float = ..., i: bool | int | float = ..., jitterBasePoint: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., jbp: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., jitterRadius: bool | int | float | list[float] = ..., jr: bool | int | float | list[float] = ..., lowerLeft: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., ll: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., name: bool | int | str = ..., n: bool | int | str = ..., numJitters: bool | int | int | list[int] = ..., nj: bool | int | int | list[int] = ..., order: bool | int | int = ..., particleId: bool | int | int = ..., id: bool | int | int = ..., perParticleDouble: bool | int = ..., ppd: bool | int = ..., perParticleVector: bool | int = ..., ppv: bool | int = ..., position: tuple[float, float, float] | list[tuple[float, float, float]] = ..., p: tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., shapeName: bool | int | str = ..., sn: bool | int | str = ..., upperRight: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., ur: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., vectorValue: tuple[float, float, float] = ..., vv: tuple[float, float, float] = ...) -> Any: ...
def nSoft(*args, convert: bool | int = ..., c: bool | int = ..., duplicate: bool | int = ..., d: bool | int = ..., duplicateHistory: bool | int = ..., dh: bool | int = ..., goal: float = ..., g: float = ..., hideOriginal: bool | int = ..., h: bool | int = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def nameCommand(*args, annotation: str = ..., ann: str = ..., command: str | Callable = ..., c: str | Callable = ..., data1: str = ..., da1: str = ..., data2: str = ..., da2: str = ..., data3: str = ..., da3: str = ..., default: bool | int = ..., d: bool | int = ..., sourceType: str = ..., stp: str = ...) -> Any: ...
def nameField(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: bool | int | str | Callable = ..., cc: bool | int | str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., drawInactiveFrame: bool | int = ..., dif: bool | int = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., nameChangeCommand: bool | int | str | Callable = ..., ncc: bool | int | str | Callable = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., object: bool | int | str = ..., o: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., receiveFocusCommand: bool | int | str | Callable = ..., rfc: bool | int | str | Callable = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def namespace(*args, absoluteName: bool | int = ..., an: bool | int = ..., addNamespace: str = ..., add: str = ..., collapseAncestors: str = ..., ch: str = ..., deleteNamespaceContent: bool | int = ..., dnc: bool | int = ..., exists: str = ..., ex: str = ..., force: bool | int = ..., f: bool | int = ..., isRootNamespace: bool | int | str = ..., ir: bool | int | str = ..., mergeNamespaceWithOther: str = ..., mno: str = ..., mergeNamespaceWithParent: bool | int = ..., mnp: bool | int = ..., mergeNamespaceWithRoot: bool | int = ..., mnr: bool | int = ..., moveNamespace: tuple[str, str] = ..., mv: tuple[str, str] = ..., parent: str = ..., p: str = ..., query: bool | int = ..., q: bool | int = ..., recurse: bool | int = ..., r: bool | int = ..., relativeNames: bool | int = ..., rel: bool | int = ..., removeNamespace: str = ..., rm: str = ..., rename: tuple[str, str] = ..., ren: tuple[str, str] = ..., setNamespace: str = ..., set: str = ..., validateName: str = ..., vn: str = ...) -> Any: ...
def namespaceInfo(*args, absoluteName: bool | int = ..., an: bool | int = ..., baseName: bool | int = ..., bn: bool | int = ..., currentNamespace: bool | int = ..., cur: bool | int = ..., dagPath: bool | int = ..., dp: bool | int = ..., fullName: bool | int = ..., fn: bool | int = ..., internal: bool | int = ..., int: bool | int = ..., isRootNamespace: bool | int = ..., ir: bool | int = ..., listNamespace: bool | int = ..., ls: bool | int = ..., listOnlyDependencyNodes: bool | int = ..., lod: bool | int = ..., listOnlyNamespaces: bool | int = ..., lon: bool | int = ..., parent: bool | int = ..., p: bool | int = ..., recurse: bool | int = ..., r: bool | int = ..., shortName: bool | int = ..., sn: bool | int = ...) -> Any: ...
def newton(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., minDistance: bool | int | float = ..., mnd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | tuple[float, float, float] = ..., vof: bool | int | tuple[float, float, float] = ..., volumeShape: bool | int | str = ..., vsh: bool | int | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...
def nodeCast(*args, copyDynamicAttrs: bool | int = ..., cda: bool | int = ..., disableAPICallbacks: bool | int = ..., dsa: bool | int = ..., disableScriptJobCallbacks: bool | int = ..., dsj: bool | int = ..., disconnectUnmatchedAttrs: bool | int = ..., dua: bool | int = ..., force: bool | int = ..., f: bool | int = ..., swapNames: bool | int = ..., sn: bool | int = ..., swapValues: bool | int = ..., sv: bool | int = ...) -> Any: ...
def nodeEditor(*args, activeTab: bool | int | int = ..., at: bool | int | int = ..., addNewNodes: bool | int = ..., ann: bool | int = ..., addNode: str | list[str] = ..., an: str | list[str] = ..., additiveGraphingMode: bool | int = ..., agm: bool | int = ..., allAttributes: bool | int = ..., ala: bool | int = ..., allNodes: bool | int = ..., aln: bool | int = ..., allowNewTabs: bool | int = ..., ant: bool | int = ..., allowTabTearoff: bool | int = ..., att: bool | int = ..., autoSizeNodes: bool | int = ..., asn: bool | int = ..., backToParentView: bool | int = ..., bpv: bool | int = ..., beginCreateNode: bool | int = ..., bcn: bool | int = ..., beginNewConnection: str = ..., bnc: str = ..., breakSelectedConnections: bool | int = ..., bsc: bool | int = ..., closeAllTabs: bool | int = ..., cat: bool | int = ..., closeTab: int = ..., clt: int = ..., connectNodeOnCreation: bool | int = ..., cno: bool | int = ..., connectOnDrop: bool | int = ..., cod: bool | int = ..., connectSelectedNodes: bool | int = ..., csn: bool | int = ..., connectionMinSegment: bool | int | float = ..., csm: bool | int | float = ..., connectionOffset: bool | int | float = ..., cso: bool | int | float = ..., connectionRoundness: bool | int | float = ..., csr: bool | int | float = ..., connectionStyle: bool | int | str = ..., cs: bool | int | str = ..., connectionTension: bool | int | int = ..., cst: bool | int | int = ..., consistentNameSize: bool | int = ..., cns: bool | int = ..., contentsChangedCommand: bool | int | str | Callable = ..., cc: bool | int | str | Callable = ..., control: bool | int = ..., ctl: bool | int = ..., copyConnectionsOnPaste: bool | int = ..., ccp: bool | int = ..., createInfo: str = ..., ci: str = ..., createNodeCommand: bool | int | str | Callable = ..., cnc: bool | int | str | Callable = ..., createTab: tuple[int, str] = ..., ct: tuple[int, str] = ..., crosshairOnEdgeDragging: bool | int = ..., ced: bool | int = ..., customAttributeListEdit: bool | int | tuple[str, str] = ..., cal: bool | int | tuple[str, str] = ..., cycleHUD: bool | int = ..., ch: bool | int = ..., defaultPinnedState: bool | int = ..., dps: bool | int = ..., defineTemplate: str = ..., dt: str = ..., deleteSelected: bool | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dotFormat: bool | int | str = ..., dot: bool | int | str = ..., downstream: bool | int = ..., ds: bool | int = ..., duplicateTab: tuple[int, int] = ..., dpt: tuple[int, int] = ..., edit: bool | int = ..., e: bool | int = ..., editorMode: str = ..., em: str = ..., enableOpenGL: bool | int = ..., egl: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extendToShapes: bool | int = ..., ets: bool | int = ..., feedbackConnection: bool | int = ..., fbc: bool | int = ..., feedbackNode: bool | int = ..., fbn: bool | int = ..., feedbackPlug: bool | int = ..., fbp: bool | int = ..., feedbackTabIndex: bool | int = ..., fbi: bool | int = ..., feedbackType: bool | int = ..., fbt: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., filterCreateNodeTypes: bool | int | str | Callable = ..., fcn: bool | int | str | Callable = ..., focusCommand: bool | int | str | Callable = ..., fc: bool | int | str | Callable = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., frameAll: bool | int = ..., fa: bool | int = ..., frameModelSelection: bool | int = ..., fms: bool | int = ..., frameSelected: bool | int = ..., fs: bool | int = ..., getNodeList: bool | int = ..., gnl: bool | int = ..., graphSelectedConnections: bool | int = ..., gsc: bool | int = ..., graphSelection: bool | int = ..., gsl: bool | int = ..., gridSnap: bool | int = ..., gs: bool | int = ..., gridVisibility: bool | int = ..., gv: bool | int = ..., hasWatchpoint: bool | int = ..., hw: bool | int = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., highlightConnections: bool | int | tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., hc: bool | int | tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., hudMessage: tuple[str, int, float] = ..., hm: tuple[str, int, float] = ..., ignoreAssets: bool | int = ..., ia: bool | int = ..., inContainerView: bool | int = ..., icv: bool | int = ..., isContainerNode: str = ..., icn: str = ..., island: bool | int = ..., isl: bool | int = ..., keyPressCommand: bool | int | str | Callable = ..., kpc: bool | int | str | Callable = ..., keyReleaseCommand: bool | int | str | Callable = ..., krc: bool | int | str | Callable = ..., layout: bool | int = ..., lay: bool | int = ..., layoutCommand: bool | int | str | Callable = ..., lc: bool | int | str | Callable = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., nodeSwatchSize: str = ..., nss: str = ..., nodeTitleMode: bool | int | str = ..., ntm: bool | int | str = ..., nodeViewMode: str = ..., nvm: str = ..., openContainerView: tuple[str, bool | int] = ..., ocv: tuple[str, bool | int] = ..., overrideNodeDropPosition: tuple[float, float] = ..., onp: tuple[float, float] = ..., panView: tuple[float, float] = ..., pv: tuple[float, float] = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., pinSelectedNodes: bool | int = ..., psn: bool | int = ..., popupMenuScript: bool | int | str | Callable = ..., pms: bool | int | str | Callable = ..., primary: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., redockTab: bool | int = ..., rdt: bool | int = ..., removeDownstream: bool | int = ..., rd: bool | int = ..., removeNode: str | list[str] = ..., rem: str | list[str] = ..., removeUnselected: bool | int = ..., run: bool | int = ..., removeUpstream: bool | int = ..., ru: bool | int = ..., renameNode: str = ..., ren: str = ..., renameTab: tuple[int, str] = ..., rt: tuple[int, str] = ..., restoreInfo: str = ..., ri: str = ..., restoreLastClosedTab: bool | int = ..., rlt: bool | int = ..., rootNode: str | list[str] = ..., rn: str | list[str] = ..., rootsFromSelection: bool | int = ..., rfs: bool | int = ..., scaleView: float = ..., sv: float = ..., selectAll: bool | int = ..., sa: bool | int = ..., selectConnectionNodes: bool | int = ..., scn: bool | int = ..., selectDownstream: bool | int = ..., sd: bool | int = ..., selectFeedbackConnection: bool | int = ..., sfc: bool | int = ..., selectNode: bool | int | str | list[str] = ..., sln: bool | int | str | list[str] = ..., selectUpstream: bool | int = ..., su: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., setWatchpoint: bool | int = ..., sw: bool | int = ..., settingsChangedCallback: bool | int | str | Callable = ..., scc: bool | int | str | Callable = ..., shaderNetworks: bool | int = ..., sns: bool | int = ..., showAllNodeAttributes: str = ..., saa: str = ..., showNamespace: bool | int = ..., sn: bool | int = ..., showSGShapes: bool | int = ..., ssg: bool | int = ..., showShapes: bool | int = ..., ss: bool | int = ..., showTabs: bool | int = ..., tab: bool | int = ..., showTransforms: bool | int = ..., st: bool | int = ..., showUnitConversions: bool | int = ..., suc: bool | int = ..., stateString: bool | int = ..., sts: bool | int = ..., syncedSelection: bool | int = ..., ssl: bool | int = ..., tabChangeCommand: str | Callable = ..., tcc: str | Callable = ..., toggleAttrFilter: bool | int = ..., taf: bool | int = ..., toggleSelectedPins: bool | int = ..., tsp: bool | int = ..., toggleSwatchSize: str = ..., tss: str = ..., toolTipCommand: bool | int | str | Callable = ..., ttc: bool | int | str | Callable = ..., traversalDepthLimit: bool | int | int = ..., tdl: bool | int | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., upstream: bool | int = ..., ups: bool | int = ..., useAssets: bool | int = ..., ua: bool | int = ..., useLongName: bool | int | int = ..., uln: bool | int | int = ..., useTemplate: str = ..., ut: str = ..., vnnCompound: bool | int = ..., vc: bool | int = ..., vnnDgContainer: bool | int = ..., vd: bool | int = ..., vnnRuntime: bool | int = ..., vr: bool | int = ...) -> Any: ...
def nodeIconButton(*args, align: bool | int | str = ..., al: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., command: bool | int | str | Callable = ..., c: bool | int | str | Callable = ..., defineTemplate: str = ..., dt: str = ..., disabledImage: bool | int | str = ..., di: bool | int | str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., flipX: bool | int = ..., fx: bool | int = ..., flipY: bool | int = ..., fy: bool | int = ..., font: bool | int | str = ..., fn: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., image: bool | int | str = ..., i: bool | int | str = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., imageOverlayLabel: bool | int | str = ..., iol: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelOffset: bool | int | int = ..., lo: bool | int | int = ..., ltVersion: bool | int | str = ..., lt: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., marginHeight: bool | int | int = ..., mh: bool | int | int = ..., marginWidth: bool | int | int = ..., mw: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., overlayLabelBackColor: bool | int | tuple[float, float, float, float] = ..., olb: bool | int | tuple[float, float, float, float] = ..., overlayLabelColor: bool | int | tuple[float, float, float] = ..., olc: bool | int | tuple[float, float, float] = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rotation: bool | int | float = ..., rot: bool | int | float = ..., statusBarMessage: str = ..., sbm: str = ..., style: bool | int | str = ..., st: bool | int | str = ..., useAlpha: bool | int = ..., ua: bool | int = ..., useTemplate: str = ..., ut: str = ..., version: bool | int | str = ..., ver: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def nodeOutliner(*args, addCommand: bool | int | str | Callable = ..., ac: bool | int | str | Callable = ..., addObject: str = ..., a: str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., attrAlphaOrder: bool | int | str = ..., aao: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., connectivity: bool | int | str = ..., c: bool | int | str = ..., currentSelection: bool | int = ..., cs: bool | int = ..., dc: callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., lastClickedNode: bool | int = ..., lcn: bool | int = ..., lastMenuChoice: bool | int | str = ..., lmc: bool | int | str = ..., longNames: bool | int = ..., ln: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., menuCommand: str | Callable = ..., mc: str | Callable = ..., menuMultiOption: bool | int = ..., mmo: bool | int = ..., multiSelect: bool | int = ..., ms: bool | int = ..., niceNames: bool | int = ..., nn: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., noConnectivity: bool | int = ..., nc: bool | int = ..., nodesDisplayed: bool | int = ..., nd: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., pressHighlightsUnconnected: bool | int = ..., phu: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., redraw: bool | int = ..., r: bool | int = ..., redrawRow: bool | int = ..., rr: bool | int = ..., remove: str | list[str] = ..., rm: str | list[str] = ..., removeAll: bool | int = ..., rma: bool | int = ..., replace: bool | int | str = ..., rpl: bool | int | str = ..., selectCommand: bool | int | str | Callable = ..., sc: bool | int | str | Callable = ..., showConnectedOnly: bool | int = ..., sco: bool | int = ..., showHidden: bool | int = ..., sh: bool | int = ..., showInputs: bool | int = ..., si: bool | int = ..., showNonConnectable: bool | int = ..., snc: bool | int = ..., showNonKeyable: bool | int = ..., snk: bool | int = ..., showOutputs: bool | int = ..., so: bool | int = ..., showPublished: bool | int = ..., sp: bool | int = ..., showReadOnly: bool | int = ..., sro: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def nodePreset(*args, attributes: str = ..., atr: str = ..., custom: str = ..., ctm: str = ..., delete: tuple[str, str] = ..., exists: tuple[str, str] = ..., ex: tuple[str, str] = ..., isValidName: str = ..., ivn: str = ..., list: str = ..., ls: str = ..., load: tuple[str, str] = ..., ld: tuple[str, str] = ..., save: tuple[str, str] = ..., sv: tuple[str, str] = ...) -> Any: ...
def nodeTreeLister(*args, addFavorite: str | list[str] = ..., af: str | list[str] = ..., addItem: tuple[str, str, str | Callable] | list[tuple[str, str, str | Callable]] = ..., add: tuple[str, str, str | Callable] | list[tuple[str, str, str | Callable]] = ..., addVnnItem: tuple[str, str, str, str] | list[tuple[str, str, str, str]] = ..., avi: tuple[str, str, str, str] | list[tuple[str, str, str, str]] = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., clearContents: bool | int = ..., clr: bool | int = ..., collapsePath: str | list[str] = ..., cp: str | list[str] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., executeItem: str = ..., ei: str = ..., exists: bool | int = ..., ex: bool | int = ..., expandPath: str | list[str] = ..., ep: str | list[str] = ..., expandToDepth: int = ..., etd: int = ..., favoritesCallback: str | Callable = ..., fcb: str | Callable = ..., favoritesList: bool | int = ..., fl: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., itemScript: bool | int | str = ..., isc: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., nodeLibrary: bool | int | str = ..., nl: bool | int | str = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., refreshCommand: bool | int | str | Callable = ..., rc: bool | int | str | Callable = ..., removeFavorite: str | list[str] = ..., rf: str | list[str] = ..., removeItem: str | list[str] = ..., rem: str | list[str] = ..., resultsPathUnderCursor: bool | int = ..., ruc: bool | int = ..., selectPath: str | list[str] = ..., sp: str | list[str] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., vnnString: bool | int = ..., vnn: bool | int = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def nodeType(*args, apiType: bool | int = ..., api: bool | int = ..., derived: bool | int = ..., d: bool | int = ..., inherited: bool | int = ..., i: bool | int = ..., isTypeName: bool | int = ..., itn: bool | int = ..., ufeRuntimeName: bool | int = ..., urn: bool | int = ...) -> Any: ...
def nonLinear(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., autoParent: bool | int = ..., ap: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., commonParent: bool | int = ..., cp: bool | int = ..., defaultScale: bool | int = ..., ds: bool | int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., name: str = ..., n: str = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., split: bool | int = ..., sp: bool | int = ..., type: str = ..., typ: str = ..., useComponentTags: bool | int = ..., uct: bool | int = ...) -> Any: ...
def normalConstraint(*args, aimVector: bool | int | tuple[float, float, float] = ..., aim: bool | int | tuple[float, float, float] = ..., edit: bool | int = ..., e: bool | int = ..., layer: str = ..., l: str = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., targetList: bool | int = ..., tl: bool | int = ..., upVector: bool | int | tuple[float, float, float] = ..., u: bool | int | tuple[float, float, float] = ..., weight: bool | int | float = ..., w: bool | int | float = ..., weightAliasList: bool | int = ..., wal: bool | int = ..., worldUpObject: bool | int | str = ..., wuo: bool | int | str = ..., worldUpType: bool | int | str = ..., wut: bool | int | str = ..., worldUpVector: bool | int | tuple[float, float, float] = ..., wu: bool | int | tuple[float, float, float] = ...) -> Any: ...

notifyDecorator: Callable
notifyPostRedo: Callable
notifyPostUndo: Callable
nucleusDisplayDynamicConstraintNodes: Callable
nucleusDisplayMaterialNodes: Callable
nucleusDisplayNComponentNodes: Callable
nucleusDisplayOtherNodes: Callable
nucleusDisplayTextureNodes: Callable
nucleusDisplayTransformNodes: Callable
nucleusGetEffectsAsset: Callable
nucleusGetnClothExample: Callable
nucleusGetnParticleExample: Callable
def nurbsBoolean(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., nsrfsInFirstShell: int = ..., nsf: int = ..., object: bool | int = ..., o: bool | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., smartConnection: bool | int = ..., sc: bool | int = ..., tolerance: bool | int | float = ..., tlb: bool | int | float = ...) -> Any: ...
def nurbsCopyUVSet(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def nurbsCube(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., heightRatio: bool | int | float = ..., hr: bool | int | float = ..., lengthRatio: bool | int | float = ..., lr: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., patchesU: bool | int | int = ..., u: bool | int | int = ..., patchesV: bool | int | int = ..., v: bool | int | int = ..., pivot: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., width: bool | int | float = ..., w: bool | int | float = ...) -> Any: ...
def nurbsCurveRebuildPref(*args, degree: int = ..., d: int = ..., endKnots: int = ..., end: int = ..., fitRebuild: int = ..., fr: int = ..., keepControlPoints: bool | int = ..., kcp: bool | int = ..., keepEndPoints: bool | int = ..., kep: bool | int = ..., keepRange: int = ..., kr: int = ..., keepTangents: bool | int = ..., kt: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rebuildType: int = ..., rt: int = ..., smartSurfaceCurve: bool | int = ..., scr: bool | int = ..., spans: int = ..., s: int = ..., tolerance: float = ..., tol: float = ...) -> Any: ...
def nurbsCurveToBezier(*args) -> Any: ...
def nurbsEditUV(*args, angle: bool | int | float = ..., a: bool | int | float = ..., pivotU: bool | int | float = ..., pu: bool | int | float = ..., pivotV: bool | int | float = ..., pv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., rotateRatio: bool | int | float = ..., rr: bool | int | float = ..., rotation: bool | int = ..., rot: bool | int = ..., scale: bool | int = ..., s: bool | int = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., uValue: bool | int | float = ..., u: bool | int | float = ..., vValue: bool | int | float = ..., v: bool | int | float = ...) -> Any: ...
def nurbsPlane(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., lengthRatio: bool | int | float = ..., lr: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., patchesU: bool | int | int = ..., u: bool | int | int = ..., patchesV: bool | int | int = ..., v: bool | int | int = ..., pivot: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., width: bool | int | float = ..., w: bool | int | float = ...) -> Any: ...
def nurbsSelect(*args, borderSelection: bool | int = ..., bs: bool | int = ..., bottomBorder: bool | int = ..., bb: bool | int = ..., growSelection: int = ..., gs: int = ..., leftBorder: bool | int = ..., lb: bool | int = ..., rightBorder: bool | int = ..., rb: bool | int = ..., shrinkSelection: int = ..., ss: int = ..., topBorder: bool | int = ..., tb: bool | int = ...) -> Any: ...
def nurbsSquare(*args, caching: bool | int = ..., cch: bool | int = ..., center: bool | int | tuple[float, float, float] = ..., c: bool | int | tuple[float, float, float] = ..., centerX: bool | int | float = ..., cx: bool | int | float = ..., centerY: bool | int | float = ..., cy: bool | int | float = ..., centerZ: bool | int | float = ..., cz: bool | int | float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normal: bool | int | tuple[float, float, float] = ..., nr: bool | int | tuple[float, float, float] = ..., normalX: bool | int | float = ..., nrx: bool | int | float = ..., normalY: bool | int | float = ..., nry: bool | int | float = ..., normalZ: bool | int | float = ..., nrz: bool | int | float = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sideLength1: bool | int | float = ..., sl1: bool | int | float = ..., sideLength2: bool | int | float = ..., sl2: bool | int | float = ..., spansPerSide: bool | int | int = ..., sps: bool | int | int = ...) -> Any: ...
def nurbsToPoly(*args, caching: bool | int = ..., cch: bool | int = ..., chordHeight: float = ..., cht: float = ..., chordHeightRatio: float = ..., chr: float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvatureTolerance: bool | int | int = ..., cvt: bool | int | int = ..., delta: float = ..., d: float = ..., edgeSwap: bool | int = ..., es: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., explicitTessellationAttributes: bool | int = ..., eta: bool | int = ..., format: int = ..., f: int = ..., fractionalTolerance: float = ..., ft: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., matchNormalDir: bool | int = ..., mnd: bool | int = ..., matchRenderTessellation: bool | int = ..., mrt: bool | int = ..., minEdgeLength: float = ..., mel: float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalizeTrimmedUVRange: bool | int = ..., ntr: bool | int = ..., object: bool | int = ..., o: bool | int = ..., polygonCount: int = ..., pc: int = ..., polygonType: int = ..., pt: int = ..., query: bool | int = ..., q: bool | int = ..., smoothEdge: bool | int = ..., ues: bool | int = ..., smoothEdgeRatio: bool | int | float = ..., esr: bool | int | float = ..., uDivisionsFactor: bool | int | float = ..., nuf: bool | int | float = ..., uNumber: int = ..., un: int = ..., uType: int = ..., ut: int = ..., useChordHeight: bool | int = ..., uch: bool | int = ..., useChordHeightRatio: bool | int = ..., ucr: bool | int = ..., useSurfaceShader: bool | int = ..., uss: bool | int = ..., vDivisionsFactor: bool | int | float = ..., nvf: bool | int | float = ..., vNumber: int = ..., vn: int = ..., vType: int = ..., vt: int = ...) -> Any: ...
def nurbsToPolygonsPref(*args, chordHeight: bool | int | float = ..., cht: bool | int | float = ..., chordHeightRatio: bool | int | float = ..., chr: bool | int | float = ..., delta3D: bool | int | float = ..., d: bool | int | float = ..., edgeSwap: bool | int = ..., es: bool | int = ..., format: bool | int | int = ..., f: bool | int | int = ..., fraction: bool | int | float = ..., ft: bool | int | float = ..., matchRenderTessellation: bool | int | int = ..., mrt: bool | int | int = ..., merge: bool | int | int = ..., m: bool | int | int = ..., mergeTolerance: bool | int | float = ..., mt: bool | int | float = ..., minEdgeLen: bool | int | float = ..., mel: bool | int | float = ..., polyCount: bool | int | int = ..., pc: bool | int | int = ..., polyType: bool | int | int = ..., pt: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., uNumber: bool | int | int = ..., un: bool | int | int = ..., uType: bool | int | int = ..., ut: bool | int | int = ..., useChordHeight: bool | int = ..., uch: bool | int = ..., useChordHeightRatio: bool | int = ..., ucr: bool | int = ..., vNumber: bool | int | int = ..., vn: bool | int | int = ..., vType: bool | int | int = ..., vt: bool | int | int = ...) -> Any: ...
def nurbsToSubdiv(*args, addUnderTransform: bool | int = ..., aut: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., collapsePoles: bool | int = ..., cp: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., matchPeriodic: bool | int = ..., mp: bool | int = ..., maxPolyCount: bool | int | int = ..., mpc: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., reverseNormal: bool | int = ..., rn: bool | int = ...) -> Any: ...
def nurbsToSubdivPref(*args, bridge: bool | int | int = ..., br: bool | int | int = ..., capType: bool | int | int = ..., ct: bool | int | int = ..., collapsePoles: bool | int = ..., cp: bool | int = ..., matchPeriodic: bool | int = ..., mp: bool | int = ..., maxPolyCount: bool | int | int = ..., mpc: bool | int | int = ..., offset: bool | int | float = ..., o: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., reverseNormal: bool | int = ..., rn: bool | int = ..., solidType: bool | int | int = ..., st: bool | int | int = ..., trans00: bool | int | float = ..., t00: bool | int | float = ..., trans01: bool | int | float = ..., t01: bool | int | float = ..., trans02: bool | int | float = ..., t02: bool | int | float = ..., trans10: bool | int | float = ..., t10: bool | int | float = ..., trans11: bool | int | float = ..., t11: bool | int | float = ..., trans12: bool | int | float = ..., t12: bool | int | float = ..., trans20: bool | int | float = ..., t20: bool | int | float = ..., trans21: bool | int | float = ..., t21: bool | int | float = ..., trans22: bool | int | float = ..., t22: bool | int | float = ..., trans30: bool | int | float = ..., t30: bool | int | float = ..., trans31: bool | int | float = ..., t31: bool | int | float = ..., trans32: bool | int | float = ..., t32: bool | int | float = ...) -> Any: ...
def nurbsUVSet(*args, create: bool | int = ..., c: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., useExplicit: bool | int = ..., ue: bool | int = ...) -> Any: ...
def objExists(*args) -> Any: ...
def objectCenter(*args, gl: bool | int = ..., local: bool | int = ..., l: bool | int = ..., x: bool | int = ..., y: bool | int = ..., z: bool | int = ...) -> Any: ...
def objectType(*args, convertTag: str = ..., ct: str = ..., isAType: str = ..., isa: str = ..., isType: str = ..., i: str = ..., tagFromType: str = ..., tgt: str = ..., typeFromTag: int = ..., tpt: int = ..., typeTag: bool | int = ..., tt: bool | int = ...) -> Any: ...
def objectTypeUI(*args, isType: str = ..., i: str = ..., listAll: bool | int = ..., la: bool | int = ..., superClasses: bool | int = ..., sc: bool | int = ...) -> Any: ...
def offsetCurve(*args, caching: bool | int = ..., cch: bool | int = ..., connectBreaks: bool | int | int = ..., cb: bool | int | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cutLoop: bool | int = ..., cl: bool | int = ..., cutRadius: bool | int | float = ..., cr: bool | int | float = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normal: bool | int | tuple[float, float, float] = ..., nr: bool | int | tuple[float, float, float] = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., reparameterize: bool | int = ..., rp: bool | int = ..., stitch: bool | int = ..., st: bool | int = ..., subdivisionDensity: bool | int | int = ..., sd: bool | int | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useGivenNormal: bool | int = ..., ugn: bool | int = ...) -> Any: ...
def offsetCurveOnSurface(*args, caching: bool | int = ..., cch: bool | int = ..., checkPoints: bool | int | int = ..., cp: bool | int | int = ..., connectBreaks: bool | int | int = ..., cb: bool | int | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cutLoop: bool | int = ..., cl: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., stitch: bool | int = ..., st: bool | int = ..., subdivisionDensity: bool | int | int = ..., sd: bool | int | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...) -> Any: ...
def offsetSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., method: bool | int | int = ..., m: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def ogs(*args, deviceInformation: bool | int = ..., di: bool | int = ..., disposeReleasableTextures: bool | int = ..., drt: bool | int = ..., dumpTexture: str = ..., dt: str = ..., enableHardwareInstancing: bool | int = ..., hwi: bool | int = ..., fragmentEditor: str = ..., fe: str = ..., fragmentXML: str = ..., xml: str = ..., gpuMemoryTotal: bool | int | int = ..., gmt: bool | int | int = ..., gpuMemoryUsed: bool | int = ..., gpu: bool | int = ..., isLegacyViewportEnabled: bool | int = ..., lve: bool | int = ..., isRemoteGLSessionEnabled: bool | int = ..., rgl: bool | int = ..., isWinRemoteSession: bool | int = ..., irs: bool | int = ..., pause: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rebakeTextures: bool | int = ..., rbt: bool | int = ..., regenerateUVTilePreview: str = ..., rup: str = ..., reloadTextures: bool | int = ..., rlt: bool | int = ..., reset: bool | int = ..., r: bool | int = ..., shaderSource: bool | int | str = ..., ss: bool | int | str = ..., toggleTexturePaging: bool | int = ..., ttp: bool | int = ..., traceRenderPipeline: bool | int = ..., trp: bool | int = ...) -> Any: ...
def ogsRender(*args, activeMultisampleType: bool | int | str = ..., mst: bool | int | str = ..., activeRenderOverride: bool | int | str = ..., cro: bool | int | str = ..., activeRenderTargetFormat: bool | int | str = ..., fpt: bool | int | str = ..., availableFloatingPointTargetFormat: bool | int = ..., afp: bool | int = ..., availableMultisampleType: bool | int = ..., amt: bool | int = ..., availableRenderOverrides: bool | int = ..., aro: bool | int = ..., camera: bool | int | str = ..., cam: bool | int | str = ..., currentFrame: bool | int = ..., cf: bool | int = ..., currentView: bool | int = ..., cv: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., enableFloatingPointRenderTarget: bool | int = ..., efp: bool | int = ..., enableMultisample: bool | int = ..., ems: bool | int = ..., frame: float = ..., f: float = ..., height: bool | int | int = ..., h: bool | int | int = ..., layer: bool | int | str = ..., l: bool | int | str = ..., noRenderView: bool | int = ..., nrv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def ogsdebug(*args, count: int = ..., c: int = ..., debug: str = ..., d: str = ..., timing: str = ..., t: str = ..., verbose: bool | int = ..., v: bool | int = ...) -> Any: ...
def openCLInfo(*args, minVertexBuffer: bool | int = ..., mvb: bool | int = ..., query: bool | int = ..., q: bool | int = ..., valid: bool | int = ..., v: bool | int = ...) -> Any: ...
def openGLExtension(*args, extension: str = ..., ext: str = ..., renderer: bool | int = ..., rnd: bool | int = ..., vendor: bool | int = ..., vnd: bool | int = ..., version: bool | int = ..., ver: bool | int = ...) -> Any: ...
def openMayaPref(*args, edit: bool | int = ..., e: bool | int = ..., errlog: bool | int = ..., el: bool | int = ..., lazyLoad: bool | int = ..., lz: bool | int = ..., oldPluginWarning: bool | int = ..., ow: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def optionMenu(*args, alwaysCallChangeCommand: bool | int = ..., acc: bool | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., beforeShowPopup: str | Callable = ..., bsp: str | Callable = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., deleteAllItems: bool | int = ..., dai: bool | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., itemListLong: bool | int = ..., ill: bool | int = ..., itemListShort: bool | int = ..., ils: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., maxVisibleItems: bool | int | int = ..., mvi: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfItems: bool | int = ..., ni: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., postMenuCommand: str | Callable = ..., pmc: str | Callable = ..., postMenuCommandOnce: bool | int = ..., pmo: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., select: bool | int | int = ..., sl: bool | int | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | str = ..., v: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def optionMenuGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., deleteAllItems: bool | int = ..., dai: bool | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extraLabel: bool | int | str = ..., el: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., itemListLong: bool | int = ..., ill: bool | int = ..., itemListShort: bool | int = ..., ils: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfItems: bool | int = ..., ni: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., postMenuCommand: str | Callable = ..., pmc: str | Callable = ..., postMenuCommandOnce: bool | int = ..., pmo: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., select: bool | int | int = ..., sl: bool | int | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | str = ..., v: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def optionVar(*args, arraySize: str = ..., category: str = ..., cat: str = ..., clearArray: str | list[str] = ..., ca: str | list[str] = ..., clearStash: str | list[str] = ..., cs: str | list[str] = ..., default: bool | int = ..., d: bool | int = ..., exists: str = ..., ex: str = ..., floatArray: str | list[str] = ..., fa: str | list[str] = ..., floatValue: tuple[str, float] | list[tuple[str, float]] = ..., fv: tuple[str, float] | list[tuple[str, float]] = ..., floatValue2: tuple[str, float, float] | list[tuple[str, float, float]] = ..., fv2: tuple[str, float, float] | list[tuple[str, float, float]] = ..., floatValue3: tuple[str, float, float, float] | list[tuple[str, float, float, float]] = ..., fv3: tuple[str, float, float, float] | list[tuple[str, float, float, float]] = ..., floatValue4: tuple[str, float, float, float, float] | list[tuple[str, float, float, float, float]] = ..., fv4: tuple[str, float, float, float, float] | list[tuple[str, float, float, float, float]] = ..., floatValueAppend: tuple[str, float] | list[tuple[str, float]] = ..., fva: tuple[str, float] | list[tuple[str, float]] = ..., init: bool | int = ..., ini: bool | int = ..., intArray: str | list[str] = ..., ia: str | list[str] = ..., intValue: tuple[str, int] | list[tuple[str, int]] = ..., iv: tuple[str, int] | list[tuple[str, int]] = ..., intValue2: tuple[str, int, int] | list[tuple[str, int, int]] = ..., iv2: tuple[str, int, int] | list[tuple[str, int, int]] = ..., intValue3: tuple[str, int, int, int] | list[tuple[str, int, int, int]] = ..., iv3: tuple[str, int, int, int] | list[tuple[str, int, int, int]] = ..., intValue4: tuple[str, int, int, int, int] | list[tuple[str, int, int, int, int]] = ..., iv4: tuple[str, int, int, int, int] | list[tuple[str, int, int, int, int]] = ..., intValueAppend: tuple[str, int] | list[tuple[str, int]] = ..., iva: tuple[str, int] | list[tuple[str, int]] = ..., list: bool | int = ..., l: bool | int = ..., listCategories: bool | int = ..., lc: bool | int = ..., listModified: bool | int = ..., lm: bool | int = ..., prefFile: bool | int | str = ..., pf: bool | int | str = ..., query: str = ..., q: str = ..., remove: str | list[str] = ..., rm: str | list[str] = ..., removeFromArray: tuple[str, int] | list[tuple[str, int]] = ..., rfa: tuple[str, int] | list[tuple[str, int]] = ..., stash: str | list[str] = ..., st: str | list[str] = ..., stringArray: str | list[str] = ..., sa: str | list[str] = ..., stringValue: tuple[str, str] | list[tuple[str, str]] = ..., sv: tuple[str, str] | list[tuple[str, str]] = ..., stringValueAppend: tuple[str, str] | list[tuple[str, str]] = ..., sva: tuple[str, str] | list[tuple[str, str]] = ..., transient: bool | int = ..., t: bool | int = ..., unstash: str | list[str] = ..., us: str | list[str] = ..., version: int = ..., v: int = ...) -> Any: ...
def orbit(*args, horizontalAngle: float = ..., ha: float = ..., pivotPoint: tuple[float, float, float] = ..., pp: tuple[float, float, float] = ..., rotationAngles: tuple[float, float] = ..., ra: tuple[float, float] = ..., verticalAngle: float = ..., va: float = ...) -> Any: ...
def orbitCtx(*args, alternateContext: bool | int = ..., ac: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., localOrbit: bool | int = ..., lo: bool | int = ..., name: str = ..., n: str = ..., orbitScale: bool | int | float = ..., os: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., toolName: bool | int | str = ..., tn: bool | int | str = ...) -> Any: ...
def orientConstraint(*args, createCache: tuple[float, float] = ..., cc: tuple[float, float] = ..., deleteCache: bool | int = ..., dc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., layer: str = ..., l: str = ..., maintainOffset: bool | int = ..., mo: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., offset: bool | int | tuple[float, float, float] = ..., o: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., skip: str | list[str] = ..., sk: str | list[str] = ..., targetList: bool | int = ..., tl: bool | int = ..., weight: bool | int | float = ..., w: bool | int | float = ..., weightAliasList: bool | int = ..., wal: bool | int = ...) -> Any: ...
def outlinerEditor(*args, allowMultiSelection: bool | int = ..., ams: bool | int = ..., alwaysToggleSelect: bool | int = ..., ats: bool | int = ..., animLayerFilterOptions: bool | int | str = ..., alf: bool | int | str = ..., attrAlphaOrder: bool | int | str = ..., aao: bool | int | str = ..., attrFilter: bool | int | str = ..., af: bool | int | str = ..., autoExpand: bool | int = ..., xpd: bool | int = ..., autoExpandAnimatedShapes: bool | int = ..., xas: bool | int = ..., autoExpandLayers: bool | int = ..., ael: bool | int = ..., autoSelectNewObjects: bool | int = ..., containersIgnoreFilters: bool | int = ..., cif: bool | int = ..., control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., directSelect: bool | int = ..., ds: bool | int = ..., displayMode: bool | int | str = ..., dm: bool | int | str = ..., doNotSelectNewObjects: bool | int = ..., dns: bool | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dropIsParent: bool | int = ..., dip: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., editAttrName: bool | int = ..., ean: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandAllItems: bool | int = ..., eai: bool | int = ..., expandAllSelectedItems: bool | int = ..., eas: bool | int = ..., expandAttribute: bool | int = ..., att: bool | int = ..., expandConnections: bool | int = ..., xc: bool | int = ..., expandObjects: bool | int = ..., eo: bool | int = ..., feedbackItemName: bool | int = ..., fbn: bool | int = ..., feedbackRowNumber: bool | int = ..., fbr: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., getCurrentSetOfItem: bool | int | int = ..., gcs: bool | int | int = ..., highlightActive: bool | int = ..., ha: bool | int = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., highlightSecondary: bool | int = ..., hs: bool | int = ..., ignoreDagHierarchy: bool | int = ..., hir: bool | int = ..., ignoreHiddenAttribute: bool | int = ..., iha: bool | int = ..., ignoreOutlinerColor: bool | int = ..., ioc: bool | int = ..., isChildSelected: bool | int | str = ..., ics: bool | int | str = ..., isSet: bool | int | int = ..., isSetMember: bool | int | int = ..., ism: bool | int | int = ..., isUfeItem: bool | int | int = ..., isu: bool | int | int = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., longNames: bool | int = ..., ln: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., mapMotionTrails: bool | int = ..., mmt: bool | int = ..., masterOutliner: bool | int | str = ..., mst: bool | int | str = ..., niceNames: bool | int = ..., nn: bool | int = ..., object: bool | int | str = ..., obj: bool | int | str = ..., organizeByClip: bool | int = ..., obc: bool | int = ..., organizeByLayer: bool | int = ..., obl: bool | int = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., parentObject: bool | int = ..., po: bool | int = ..., pinPlug: bool | int | str = ..., pin: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., refresh: bool | int = ..., rfs: bool | int = ..., removeFromCurrentSet: int = ..., rcs: int = ..., renameItem: int = ..., rni: int = ..., renameSelectedItem: bool | int = ..., rsi: bool | int = ..., renderFilterActive: bool | int = ..., rfa: bool | int = ..., renderFilterIndex: bool | int | int = ..., rfi: bool | int | int = ..., renderFilterVisible: bool | int = ..., rfv: bool | int = ..., selectCommand: bool | int | str | Callable = ..., sec: bool | int | str | Callable = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., selectionOrder: str = ..., sod: str = ..., setFilter: bool | int | str = ..., sf: bool | int | str = ..., setsIgnoreFilters: bool | int = ..., sif: bool | int = ..., showAnimCurvesOnly: bool | int = ..., aco: bool | int = ..., showAnimLayerWeight: bool | int = ..., saw: bool | int = ..., showAssets: bool | int = ..., a: bool | int = ..., showAssignedMaterials: bool | int = ..., sam: bool | int = ..., showAttrValues: bool | int = ..., av: bool | int = ..., showAttributes: bool | int = ..., atr: bool | int = ..., showCompounds: bool | int = ..., cmp: bool | int = ..., showConnected: bool | int = ..., con: bool | int = ..., showContainedOnly: bool | int = ..., sco: bool | int = ..., showContainerContents: bool | int = ..., scc: bool | int = ..., showDagOnly: bool | int = ..., dag: bool | int = ..., showLeafs: bool | int = ..., laf: bool | int = ..., showMuteInfo: bool | int = ..., smi: bool | int = ..., showNamespace: bool | int = ..., sn: bool | int = ..., showNumericAttrsOnly: bool | int = ..., num: bool | int = ..., showParentContainers: bool | int = ..., spa: bool | int = ..., showPinIcons: bool | int = ..., spi: bool | int = ..., showPublishedAsConnected: bool | int = ..., spc: bool | int = ..., showReferenceMembers: bool | int = ..., rm: bool | int = ..., showReferenceNodes: bool | int = ..., rn: bool | int = ..., showSelected: bool | int = ..., sc: bool | int = ..., showSetMembers: bool | int = ..., ssm: bool | int = ..., showShapes: bool | int = ..., shp: bool | int = ..., showTextureNodesOnly: bool | int = ..., tno: bool | int = ..., showTimeEditor: bool | int = ..., ste: bool | int = ..., showUVAttrsOnly: bool | int = ..., uv: bool | int = ..., showUnitlessCurves: bool | int = ..., su: bool | int = ..., showUpstreamCurves: bool | int = ..., suc: bool | int = ..., sortCommand: callable = ..., soc: callable = ..., sortOrder: bool | int | str = ..., so: bool | int | str = ..., stateString: bool | int = ..., sts: bool | int = ..., transmitFilters: bool | int = ..., tf: bool | int = ..., ufeFilter: bool | int | tuple[str, str] = ..., uf: bool | int | tuple[str, str] = ..., ufeFilterValue: bool | int = ..., ufv: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., unpinPlug: str = ..., unp: str = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def outlinerPanel(*args, control: bool | int = ..., ctl: bool | int = ..., copy: str = ..., cp: str = ..., createString: bool | int = ..., cs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., divider: bool | int | int = ..., div: bool | int | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., editString: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., init: bool | int = ..., isUnique: bool | int = ..., iu: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., menuBarRepeatLast: bool | int = ..., mrl: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., needsInit: bool | int = ..., ni: bool | int = ..., outlinerEditor: bool | int = ..., oe: bool | int = ..., parent: str = ..., p: str = ..., popupMenuProcedure: bool | int | str | Callable = ..., pmp: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., replacePanel: str = ..., rp: str = ..., tearOff: bool | int = ..., to: bool | int = ..., tearOffCopy: str = ..., toc: str = ..., tearOffRestore: bool | int = ..., tor: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def outputWindow(*args, query: bool | int = ..., q: bool | int = ..., show: bool | int = ..., s: bool | int = ...) -> Any: ...
def overrideModifier(*args, clear: bool | int = ..., cl: bool | int = ..., press: str | list[str] = ..., p: str | list[str] = ..., release: str | list[str] = ..., r: str | list[str] = ...) -> Any: ...
def paint3d(*args) -> Any: ...
def paintEffectsDisplay(*args, meshDrawEnable: bool | int = ..., me: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def pairBlend(*args, attribute: str | list[str] = ..., at: str | list[str] = ..., edit: bool | int = ..., e: bool | int = ..., input1: bool | int = ..., i1: bool | int = ..., input2: bool | int = ..., i2: bool | int = ..., node: str = ..., nd: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def palettePort(*args, actualTotal: bool | int | int = ..., at: bool | int | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., colorEditable: bool | int = ..., ced: bool | int = ..., colorEdited: str | Callable = ..., ce: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., dimensions: bool | int | tuple[int, int] = ..., dim: bool | int | tuple[int, int] = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., hsvValue: bool | int | tuple[int, int, float, float, float] = ..., hsv: bool | int | tuple[int, int, float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., redraw: bool | int = ..., r: bool | int = ..., rgbValue: bool | int | tuple[int, float, float, float] = ..., rgb: bool | int | tuple[int, float, float, float] = ..., setCurCell: bool | int | int = ..., scc: bool | int | int = ..., statusBarMessage: str = ..., sbm: str = ..., topDown: bool | int = ..., td: bool | int = ..., transparent: bool | int | int = ..., t: bool | int | int = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def panZoom(*args, absolute: bool | int = ..., abs: bool | int = ..., downDistance: float = ..., d: float = ..., leftDistance: float = ..., l: float = ..., relative: bool | int = ..., rel: bool | int = ..., rightDistance: float = ..., r: float = ..., upDistance: float = ..., u: float = ..., zoomRatio: float = ..., z: float = ...) -> Any: ...
def panZoomCtx(*args, alternateContext: bool | int = ..., ac: bool | int = ..., buttonDown: bool | int = ..., btd: bool | int = ..., buttonUp: bool | int = ..., btu: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., panMode: bool | int = ..., pm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., toolName: bool | int | str = ..., tn: bool | int | str = ..., zoomMode: bool | int = ..., zm: bool | int = ..., zoomScale: bool | int | float = ..., zs: bool | int | float = ...) -> Any: ...
def paneLayout(*args, activeFrameThickness: bool | int | int = ..., aft: bool | int | int = ..., activePane: bool | int | str = ..., ap: bool | int | str = ..., activePaneIndex: bool | int | int = ..., api: bool | int | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., childArray: bool | int = ..., ca: bool | int = ..., configuration: bool | int | str = ..., cn: bool | int | str = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., numberOfVisiblePanes: bool | int = ..., nvp: bool | int = ..., pane1: bool | int = ..., p1: bool | int = ..., pane2: bool | int = ..., p2: bool | int = ..., pane3: bool | int = ..., p3: bool | int = ..., pane4: bool | int = ..., p4: bool | int = ..., paneSize: bool | int | tuple[int, int, int] | list[tuple[int, int, int]] = ..., ps: bool | int | tuple[int, int, int] | list[tuple[int, int, int]] = ..., paneUnderPointer: bool | int = ..., pup: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., separatorMovedCommand: str | Callable = ..., smc: str | Callable = ..., separatorThickness: bool | int | int = ..., st: bool | int | int = ..., setPane: tuple[str, int] | list[tuple[str, int]] = ..., sp: tuple[str, int] | list[tuple[str, int]] = ..., staticHeightPane: int = ..., shp: int = ..., staticWidthPane: int = ..., swp: int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def panel(*args, control: bool | int = ..., ctl: bool | int = ..., copy: str = ..., cp: str = ..., createString: bool | int = ..., cs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., editString: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., init: bool | int = ..., isUnique: bool | int = ..., iu: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., menuBarRepeatLast: bool | int = ..., mrl: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., needsInit: bool | int = ..., ni: bool | int = ..., parent: str = ..., p: str = ..., popupMenuProcedure: bool | int | str | Callable = ..., pmp: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., replacePanel: str = ..., rp: str = ..., tearOff: bool | int = ..., to: bool | int = ..., tearOffCopy: str = ..., toc: str = ..., tearOffRestore: bool | int = ..., tor: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def panelConfiguration(*args, addPanel: tuple[bool | int, str, str, str, str] | list[tuple[bool | int, str, str, str, str]] = ..., ap: tuple[bool | int, str, str, str, str] | list[tuple[bool | int, str, str, str, str]] = ..., configString: bool | int | str = ..., cfs: bool | int | str = ..., createStrings: bool | int = ..., cs: bool | int = ..., defaultImage: bool | int | str = ..., di: bool | int | str = ..., defineTemplate: str = ..., dt: str = ..., edit: bool | int = ..., e: bool | int = ..., editStrings: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image: bool | int | str = ..., i: bool | int | str = ..., isFixedState: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelStrings: bool | int = ..., ls: bool | int = ..., numberOfPanels: bool | int = ..., np: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeAllPanels: bool | int = ..., rap: bool | int = ..., removeLastPanel: bool | int = ..., rlp: bool | int = ..., replaceCreateString: tuple[int, str] = ..., rcs: tuple[int, str] = ..., replaceEditString: tuple[int, str] = ..., res: tuple[int, str] = ..., replaceFixedState: tuple[int, bool | int] = ..., rfs: tuple[int, bool | int] = ..., replaceLabel: tuple[int, str] = ..., rl: tuple[int, str] = ..., replacePanel: tuple[int, bool | int, str, str, str, str] = ..., rp: tuple[int, bool | int, str, str, str, str] = ..., replaceTypeString: tuple[int, str] = ..., rts: tuple[int, str] = ..., sceneConfig: bool | int = ..., sc: bool | int = ..., typeStrings: bool | int = ..., ts: bool | int = ..., useTemplate: str = ..., ut: str = ..., userCreated: bool | int = ..., uc: bool | int = ...) -> Any: ...
def panelHistory(*args, back: bool | int = ..., b: bool | int = ..., clear: bool | int = ..., cl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., forward: bool | int = ..., f: bool | int = ..., historyDepth: bool | int | int = ..., hd: bool | int | int = ..., isEmpty: bool | int = ..., ie: bool | int = ..., query: bool | int = ..., q: bool | int = ..., suspend: bool | int = ..., s: bool | int = ..., targetPane: bool | int | str = ..., tp: bool | int | str = ..., useTemplate: str = ..., ut: str = ..., wrap: bool | int = ..., w: bool | int = ...) -> Any: ...
def paramDimContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def paramDimension(*args) -> Any: ...
def paramLocator(*args, edit: bool | int = ..., e: bool | int = ..., position: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def parent(*args, absolute: bool | int = ..., a: bool | int = ..., addObject: bool | int = ..., add: bool | int = ..., noConnections: bool | int = ..., nc: bool | int = ..., noInvScale: bool | int = ..., nis: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., removeObject: bool | int = ..., rm: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., world: bool | int = ..., w: bool | int = ...) -> Any: ...
def parentConstraint(*args, createCache: tuple[float, float] = ..., cc: tuple[float, float] = ..., decompRotationToChild: bool | int = ..., dr: bool | int = ..., deleteCache: bool | int = ..., dc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., layer: str = ..., l: str = ..., maintainOffset: bool | int = ..., mo: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., skipRotate: str | list[str] = ..., sr: str | list[str] = ..., skipTranslate: str | list[str] = ..., st: str | list[str] = ..., targetList: bool | int = ..., tl: bool | int = ..., weight: bool | int | float = ..., w: bool | int | float = ..., weightAliasList: bool | int = ..., wal: bool | int = ...) -> Any: ...
def particle(*args, attribute: bool | int | str = ..., at: bool | int | str = ..., cache: bool | int = ..., ch: bool | int = ..., conserve: bool | int | float = ..., c: bool | int | float = ..., count: bool | int = ..., ct: bool | int = ..., deleteCache: bool | int = ..., dc: bool | int = ..., dynamicAttrList: bool | int = ..., dal: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., floatValue: float = ..., fv: float = ..., gridSpacing: bool | int | float | list[float] = ..., grs: bool | int | float | list[float] = ..., inherit: bool | int | float = ..., i: bool | int | float = ..., jitterBasePoint: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., jbp: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., jitterRadius: bool | int | float | list[float] = ..., jr: bool | int | float | list[float] = ..., lowerLeft: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., ll: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., name: bool | int | str = ..., n: bool | int | str = ..., numJitters: bool | int | int | list[int] = ..., nj: bool | int | int | list[int] = ..., order: bool | int | int = ..., particleId: bool | int | int = ..., id: bool | int | int = ..., perParticleDouble: bool | int = ..., ppd: bool | int = ..., perParticleVector: bool | int = ..., ppv: bool | int = ..., position: tuple[float, float, float] | list[tuple[float, float, float]] = ..., p: tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., shapeName: bool | int | str = ..., sn: bool | int | str = ..., upperRight: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., ur: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., vectorValue: tuple[float, float, float] = ..., vv: tuple[float, float, float] = ...) -> Any: ...
def particleExists(*args) -> Any: ...
def particleFill(*args, closePacking: bool | int = ..., cp: bool | int = ..., doubleWalled: bool | int = ..., dw: bool | int = ..., maxX: float = ..., mxx: float = ..., maxY: float = ..., mxy: float = ..., maxZ: float = ..., mxz: float = ..., minX: float = ..., mnx: float = ..., minY: float = ..., mny: float = ..., minZ: float = ..., mnz: float = ..., particleDensity: float = ..., pd: float = ..., resolution: int = ..., rs: int = ...) -> Any: ...
def particleInstancer(*args, addObject: bool | int = ..., a: bool | int = ..., aimAxis: bool | int | str = ..., aa: bool | int | str = ..., aimDirection: bool | int | str = ..., ad: bool | int | str = ..., aimPosition: bool | int | str = ..., ap: bool | int | str = ..., aimUpAxis: bool | int | str = ..., aua: bool | int | str = ..., aimWorldUp: bool | int | str = ..., awu: bool | int | str = ..., attributeMapping: bool | int = ..., am: bool | int = ..., cycle: bool | int | str = ..., c: bool | int | str = ..., cycleStartObject: bool | int | str = ..., sto: bool | int | str = ..., cycleStep: bool | int | float = ..., cs: bool | int | float = ..., cycleStepUnits: bool | int | str = ..., csu: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., index: bool | int | int = ..., i: bool | int | int = ..., instanceId: bool | int | str = ..., id: bool | int | str = ..., levelOfDetail: bool | int | str = ..., lod: bool | int | str = ..., name: bool | int | str = ..., n: bool | int | str = ..., object: bool | int | str | list[str] = ..., obj: bool | int | str | list[str] = ..., objectIndex: bool | int | str = ..., oi: bool | int | str = ..., particleAge: bool | int | str = ..., age: bool | int | str = ..., position: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., removeObject: bool | int = ..., rm: bool | int = ..., rotation: bool | int | str = ..., r: bool | int | str = ..., rotationOrder: bool | int | str = ..., ro: bool | int | str = ..., rotationType: bool | int | str = ..., rt: bool | int | str = ..., rotationUnits: bool | int | str = ..., ru: bool | int | str = ..., scale: bool | int | str = ..., sc: bool | int | str = ..., shear: bool | int | str = ..., sh: bool | int | str = ..., visibility: bool | int | str = ..., vis: bool | int | str = ...) -> Any: ...
def particleRenderInfo(*args, attrList: bool | int | int = ..., al: bool | int | int = ..., attrListAll: bool | int = ..., ala: bool | int = ..., name: bool | int | int = ..., n: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., renderTypeCount: bool | int = ..., rtc: bool | int = ...) -> Any: ...
def partition(*args, addSet: str = ..., add: str = ..., edit: bool | int = ..., e: bool | int = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., removeSet: str = ..., rm: str = ..., render: bool | int = ..., re: bool | int = ...) -> Any: ...
def pasteKey(*args, animLayer: str = ..., al: str = ..., animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., clipboard: str = ..., cb: str = ..., connect: bool | int = ..., c: bool | int = ..., copies: int = ..., cp: int = ..., edit: bool | int = ..., e: bool | int = ..., float: str | int | float = ..., f: str | int | float = ..., floatOffset: float = ..., fo: float = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int = ..., matchByName: bool | int = ..., mn: bool | int = ..., option: str = ..., o: str = ..., query: bool | int = ..., q: bool | int = ..., time: str | tuple[float, float] | tuple[float] = ..., t: str | tuple[float, float] | tuple[float] = ..., timeOffset: int | float = ..., to: int | float = ..., valueOffset: float = ..., vo: float = ...) -> Any: ...
def pathAnimation(*args, bank: bool | int = ..., b: bool | int = ..., bankScale: bool | int | float = ..., bs: bool | int | float = ..., bankThreshold: bool | int | float = ..., bt: bool | int | float = ..., curve: bool | int | str = ..., c: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., endTimeU: bool | int | int | float | list[int | float] = ..., etu: bool | int | int | float | list[int | float] = ..., endU: bool | int | float = ..., eu: bool | int | float = ..., follow: bool | int = ..., f: bool | int = ..., followAxis: bool | int | str = ..., fa: bool | int | str = ..., fractionMode: bool | int = ..., fm: bool | int = ..., inverseFront: bool | int = ..., inverseUp: bool | int = ..., iu: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., startTimeU: bool | int | int | float | list[int | float] = ..., stu: bool | int | int | float | list[int | float] = ..., startU: bool | int | float = ..., su: bool | int | float = ..., upAxis: bool | int | str = ..., ua: bool | int | str = ..., useNormal: bool | int = ..., un: bool | int = ..., worldUpObject: bool | int | str = ..., wuo: bool | int | str = ..., worldUpType: bool | int | str = ..., wut: bool | int | str = ..., worldUpVector: bool | int | tuple[float, float, float] = ..., wu: bool | int | tuple[float, float, float] = ...) -> Any: ...
def pause(*args, seconds: int = ..., sec: int = ...) -> Any: ...
def perCameraVisibility(*args, camera: bool | int | str = ..., c: bool | int | str = ..., exclusive: bool | int = ..., ex: bool | int = ..., hide: bool | int = ..., hi: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., removeAll: bool | int = ..., ra: bool | int = ..., removeCamera: bool | int = ..., rc: bool | int = ...) -> Any: ...
def percent(*args, addPercent: bool | int = ..., ap: bool | int = ..., dropoffAxis: tuple[float, float, float] = ..., dax: tuple[float, float, float] = ..., dropoffCurve: str = ..., dc: str = ..., dropoffDistance: float = ..., dds: float = ..., dropoffPosition: tuple[float, float, float] = ..., dp: tuple[float, float, float] = ..., dropoffType: str = ..., dt: str = ..., multiplyPercent: bool | int = ..., mp: bool | int = ..., query: bool | int = ..., q: bool | int = ..., value: bool | int | float = ..., v: bool | int | float = ...) -> Any: ...
def performanceOptions(*args, clusterResolution: bool | int | float = ..., cr: bool | int | float = ..., disableStitch: bool | int | str = ..., ds: bool | int | str = ..., disableTrimBoundaryDisplay: bool | int | str = ..., dtb: bool | int | str = ..., disableTrimDisplay: bool | int | str = ..., dt: bool | int | str = ..., latticeResolution: bool | int | float = ..., lr: bool | int | float = ..., passThroughBindSkinAndFlexors: bool | int | str = ..., pbf: bool | int | str = ..., passThroughBlendShape: bool | int | str = ..., pbs: bool | int | str = ..., passThroughCluster: bool | int | str = ..., pc: bool | int | str = ..., passThroughDeltaMush: bool | int | str = ..., pdm: bool | int | str = ..., passThroughFlexors: bool | int | str = ..., pf: bool | int | str = ..., passThroughLattice: bool | int | str = ..., pl: bool | int | str = ..., passThroughPaintEffects: bool | int | str = ..., pp: bool | int | str = ..., passThroughSculpt: bool | int | str = ..., ps: bool | int | str = ..., passThroughWire: bool | int | str = ..., pw: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., skipHierarchyTraversal: bool | int = ..., sht: bool | int = ..., useClusterResolution: bool | int | str = ..., ucr: bool | int | str = ..., useLatticeResolution: bool | int | str = ..., ulr: bool | int | str = ...) -> Any: ...
def pfxstrokes(*args, filename: str = ..., fn: str = ..., postCallback: bool | int = ..., pc: bool | int = ..., selected: bool | int = ..., sl: bool | int = ...) -> Any: ...
def pickWalk(*args, direction: str = ..., d: str = ..., recurse: bool | int = ..., r: bool | int = ..., type: str = ..., typ: str = ...) -> Any: ...
def picture(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., image: bool | int | str = ..., i: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., tile: bool | int = ..., tl: bool | int = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def pixelMove(*args) -> Any: ...
def planarSrf(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepOutside: bool | int = ..., ko: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...) -> Any: ...
def plane(*args, length: float = ..., l: float = ..., name: str = ..., n: str = ..., position: tuple[float, float, float] = ..., p: tuple[float, float, float] = ..., rotation: tuple[float, float, float] = ..., r: tuple[float, float, float] = ..., size: float = ..., s: float = ..., width: float = ..., w: float = ...) -> Any: ...
def play(*args, forward: bool | int = ..., f: bool | int = ..., playSound: bool | int = ..., ps: bool | int = ..., query: bool | int = ..., q: bool | int = ..., record: bool | int = ..., rec: bool | int = ..., sound: bool | int | str = ..., s: bool | int | str = ..., state: bool | int = ..., st: bool | int = ..., wait: bool | int = ..., w: bool | int = ...) -> Any: ...
def playbackOptions(*args, animationEndTime: bool | int | int | float = ..., aet: bool | int | int | float = ..., animationStartTime: bool | int | int | float = ..., ast: bool | int | int | float = ..., blockingAnim: bool | int = ..., ba: bool | int = ..., by: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., framesPerSecond: bool | int = ..., fps: bool | int = ..., loop: bool | int | str = ..., l: bool | int | str = ..., maxPlaybackSpeed: bool | int | float = ..., mps: bool | int | float = ..., maxTime: bool | int | int | float = ..., max: bool | int | int | float = ..., minTime: bool | int | int | float = ..., min: bool | int | int | float = ..., playbackSpeed: bool | int | float = ..., ps: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., stepLoop: bool | int = ..., slp: bool | int = ..., view: bool | int | str = ..., v: bool | int | str = ...) -> Any: ...
def playblast(*args, activeEditor: bool | int = ..., ae: bool | int = ..., cameraSetup: tuple[str, str] | list[tuple[str, str]] = ..., cs: tuple[str, str] | list[tuple[str, str]] = ..., clearCache: bool | int = ..., cc: bool | int = ..., codecOptions: bool | int = ..., co: bool | int = ..., combineSound: bool | int = ..., csd: bool | int = ..., completeFilename: str = ..., cf: str = ..., compression: str = ..., c: str = ..., editorPanelName: str = ..., epn: str = ..., endTime: int | float = ..., et: int | float = ..., filename: str = ..., f: str = ..., forceOverwrite: bool | int = ..., fo: bool | int = ..., format: str = ..., fmt: str = ..., frame: int | float | list[int | float] = ..., fr: int | float | list[int | float] = ..., framePadding: int = ..., fp: int = ..., height: int = ..., h: int = ..., indexFromZero: bool | int = ..., ifz: bool | int = ..., offScreen: bool | int = ..., os: bool | int = ..., offScreenViewportUpdate: bool | int = ..., osv: bool | int = ..., options: bool | int = ..., o: bool | int = ..., percent: int = ..., p: int = ..., quality: int = ..., qlt: int = ..., query: bool | int = ..., q: bool | int = ..., rawFrameNumbers: bool | int = ..., rfn: bool | int = ..., replaceAudioOnly: bool | int = ..., rao: bool | int = ..., replaceEndTime: int | float = ..., ret: int | float = ..., replaceFilename: str = ..., rf: str = ..., replaceStartTime: int | float = ..., rst: int | float = ..., saveDepth: bool | int = ..., sd: bool | int = ..., sequenceTime: bool | int = ..., sqt: bool | int = ..., showOrnaments: bool | int = ..., orn: bool | int = ..., sound: str = ..., s: str = ..., startTime: int | float = ..., st: int | float = ..., throwOnError: bool | int = ..., toe: bool | int = ..., useTraxSounds: bool | int = ..., uts: bool | int = ..., viewer: bool | int = ..., v: bool | int = ..., width: int = ..., w: int = ..., widthHeight: tuple[int, int] = ..., wh: tuple[int, int] = ...) -> Any: ...
def pluginDisplayFilter(*args, classification: bool | int | str = ..., cls: bool | int | str = ..., deregister: bool | int = ..., dr: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., listFilters: bool | int = ..., lf: bool | int = ..., query: bool | int = ..., q: bool | int = ..., register: bool | int = ..., r: bool | int = ...) -> Any: ...
def pluginInfo(*args, activeFile: bool | int = ..., af: bool | int = ..., allEvaluators: bool | int = ..., ae: bool | int = ..., animCurveInterp: bool | int | str = ..., aci: bool | int | str = ..., apiVersion: bool | int = ..., av: bool | int = ..., autoload: bool | int = ..., a: bool | int = ..., cacheFormat: bool | int = ..., cf: bool | int = ..., changedCommand: str | Callable = ..., cc: str | Callable = ..., command: bool | int | str | list[str] = ..., c: bool | int | str | list[str] = ..., constraintCommand: bool | int = ..., cnc: bool | int = ..., controlCommand: bool | int = ..., ctc: bool | int = ..., data: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., d: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., dependNode: bool | int | bool | int | list[bool | int] = ..., dn: bool | int | bool | int | list[bool | int] = ..., dependNodeByType: bool | int | str = ..., dnt: bool | int | str = ..., dependNodeId: bool | int | str = ..., dni: bool | int | str = ..., device: bool | int = ..., dv: bool | int = ..., dragAndDropBehavior: bool | int = ..., ddb: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., evaluator: bool | int = ..., iksolver: bool | int = ..., ik: bool | int = ..., listPlugins: bool | int = ..., ls: bool | int = ..., listPluginsPath: bool | int = ..., lsp: bool | int = ..., loadPluginPrefs: bool | int = ..., lpp: bool | int = ..., loaded: bool | int = ..., l: bool | int = ..., modelEditorCommand: bool | int = ..., mec: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., path: bool | int | str = ..., p: bool | int | str = ..., pluginsInUse: bool | int = ..., pu: bool | int = ..., query: bool | int = ..., q: bool | int = ..., referenceTranslators: bool | int = ..., rtr: bool | int = ..., registered: bool | int = ..., r: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., renderer: bool | int = ..., rdr: bool | int = ..., savePluginPrefs: bool | int = ..., spp: bool | int = ..., serviceDescriptions: bool | int = ..., sd: bool | int = ..., settings: bool | int = ..., set: bool | int = ..., tool: bool | int | str | list[str] = ..., t: bool | int | str | list[str] = ..., translator: bool | int = ..., tr: bool | int = ..., unloadOk: bool | int = ..., uo: bool | int = ..., userNamed: bool | int = ..., u: bool | int = ..., vendor: bool | int | str = ..., vd: bool | int | str = ..., version: bool | int = ..., v: bool | int = ..., writeRequires: bool | int = ..., wr: bool | int = ...) -> Any: ...
def pointConstraint(*args, edit: bool | int = ..., e: bool | int = ..., layer: str = ..., l: str = ..., maintainOffset: bool | int = ..., mo: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., offset: bool | int | tuple[float, float, float] = ..., o: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., skip: str | list[str] = ..., sk: str | list[str] = ..., targetList: bool | int = ..., tl: bool | int = ..., weight: bool | int | float = ..., w: bool | int | float = ..., weightAliasList: bool | int = ..., wal: bool | int = ...) -> Any: ...
def pointCurveConstraint(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pointConstraintUVW: bool | int | tuple[float, float, float] = ..., puv: bool | int | tuple[float, float, float] = ..., pointWeight: bool | int | float = ..., pw: bool | int | float = ..., position: tuple[float, float, float] = ..., p: tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., weight: float = ..., w: float = ...) -> Any: ...
def pointLight(*args, decayRate: bool | int | int = ..., d: bool | int | int = ..., discRadius: bool | int | float = ..., drs: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int = ..., exc: bool | int = ..., intensity: bool | int | float = ..., i: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., position: bool | int | tuple[float, float, float] = ..., pos: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., rgb: bool | int | tuple[float, float, float] = ..., rotation: bool | int | tuple[float, float, float] = ..., rot: bool | int | tuple[float, float, float] = ..., shadowColor: bool | int | tuple[float, float, float] = ..., sc: bool | int | tuple[float, float, float] = ..., shadowDither: bool | int | float = ..., sd: bool | int | float = ..., shadowSamples: bool | int | int = ..., sh: bool | int | int = ..., softShadow: bool | int = ..., ss: bool | int = ..., useRayTraceShadows: bool | int = ..., rs: bool | int = ...) -> Any: ...
def pointOnCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvatureCenter: bool | int = ..., cc: bool | int = ..., curvatureRadius: bool | int = ..., cr: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normal: bool | int = ..., no: bool | int = ..., normalizedNormal: bool | int = ..., nn: bool | int = ..., normalizedTangent: bool | int = ..., nt: bool | int = ..., parameter: bool | int | float = ..., pr: bool | int | float = ..., position: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tangent: bool | int = ..., t: bool | int = ..., turnOnPercentage: bool | int = ..., top: bool | int = ...) -> Any: ...
def pointOnPolyConstraint(*args, edit: bool | int = ..., e: bool | int = ..., layer: str = ..., l: str = ..., maintainOffset: bool | int = ..., mo: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., offset: bool | int | tuple[float, float, float] = ..., o: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., skip: str | list[str] = ..., sk: str | list[str] = ..., targetList: bool | int = ..., tl: bool | int = ..., weight: bool | int | float = ..., w: bool | int | float = ..., weightAliasList: bool | int = ..., wal: bool | int = ...) -> Any: ...
def pointOnSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normal: bool | int = ..., no: bool | int = ..., normalizedNormal: bool | int = ..., nn: bool | int = ..., normalizedTangentU: bool | int = ..., ntu: bool | int = ..., normalizedTangentV: bool | int = ..., ntv: bool | int = ..., parameterU: bool | int | float = ..., u: bool | int | float = ..., parameterV: bool | int | float = ..., v: bool | int | float = ..., position: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tangentU: bool | int = ..., tu: bool | int = ..., tangentV: bool | int = ..., tv: bool | int = ..., turnOnPercentage: bool | int = ..., top: bool | int = ...) -> Any: ...
def pointPosition(*args, local: bool | int = ..., l: bool | int = ..., world: bool | int = ..., w: bool | int = ...) -> Any: ...
def poleVectorConstraint(*args, edit: bool | int = ..., e: bool | int = ..., layer: str = ..., l: str = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., targetList: bool | int = ..., tl: bool | int = ..., weight: bool | int | float = ..., w: bool | int | float = ..., weightAliasList: bool | int = ..., wal: bool | int = ...) -> Any: ...
def polyAppend(*args, append: tuple[float, float, float] | list[tuple[float, float, float]] = ..., a: tuple[float, float, float] | list[tuple[float, float, float]] = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edge: int | list[int] = ..., ed: int | list[int] = ..., edit: bool | int = ..., e: bool | int = ..., hole: bool | int | list[bool | int] = ..., hl: bool | int | list[bool | int] = ..., name: str = ..., n: str = ..., point: tuple[float, float, float] | list[tuple[float, float, float]] = ..., p: tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., subdivision: bool | int | int = ..., s: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ...) -> Any: ...
def polyAppendFacetCtx(*args, append: bool | int = ..., ap: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., isRotateAvailable: bool | int = ..., isr: bool | int = ..., maximumNumberOfPoints: bool | int | int = ..., mp: bool | int | int = ..., planarConstraint: bool | int = ..., pc: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rotate: bool | int | float = ..., r: bool | int | float = ..., subdivision: bool | int | int = ..., s: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ...) -> Any: ...
def polyAppendVertex(*args, append: tuple[float, float, float] | list[tuple[float, float, float]] = ..., a: tuple[float, float, float] | list[tuple[float, float, float]] = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., hole: bool | int | list[bool | int] = ..., h: bool | int | list[bool | int] = ..., name: str = ..., n: str = ..., point: tuple[float, float, float] | list[tuple[float, float, float]] = ..., p: tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ..., vertex: int | list[int] = ..., v: int | list[int] = ...) -> Any: ...
def polyAutoProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., layout: bool | int | int = ..., l: bool | int | int = ..., layoutMethod: bool | int | int = ..., lm: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., optimize: bool | int | int = ..., o: bool | int | int = ..., percentageSpace: bool | int | float = ..., ps: bool | int | float = ..., pivot: bool | int | tuple[float, float, float] = ..., pvt: bool | int | tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., planes: bool | int | int = ..., p: bool | int | int = ..., projectBothDirections: bool | int = ..., pb: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rotate: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | tuple[float, float, float] = ..., s: bool | int | tuple[float, float, float] = ..., scaleMode: bool | int | int = ..., sc: bool | int | int = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., skipIntersect: bool | int = ..., si: bool | int = ..., translate: bool | int | tuple[float, float, float] = ..., t: bool | int | tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., uvSetName: str = ..., uvs: str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyAverageNormal(*args, allowZeroNormal: bool | int = ..., azn: bool | int = ..., distance: float = ..., d: float = ..., postnormalize: bool | int = ..., pon: bool | int = ..., prenormalize: bool | int = ..., prn: bool | int = ..., replaceNormalXYZ: tuple[float, float, float] = ..., xyz: tuple[float, float, float] = ...) -> Any: ...
def polyAverageVertex(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., iterations: bool | int | int = ..., i: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyAxis(*args, **kwargs): ...
def polyBevel(*args, angleTolerance: bool | int | float = ..., at: bool | int | float = ..., autoFit: bool | int = ..., af: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., fillNgons: bool | int = ..., fn: bool | int = ..., fraction: float = ..., f: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., maya2015: bool | int = ..., m15: bool | int = ..., mergeVertexTolerance: bool | int | float = ..., mvt: bool | int | float = ..., mergeVertices: bool | int = ..., mv: bool | int = ..., miteringAngle: bool | int | float = ..., ma: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., o: bool | int | float = ..., offsetAsFraction: bool | int = ..., oaf: bool | int = ..., query: bool | int = ..., q: bool | int = ..., roundness: bool | int | float = ..., r: bool | int | float = ..., segments: bool | int | int = ..., sg: bool | int | int = ..., smoothingAngle: bool | int | float = ..., sa: bool | int | float = ..., subdivideNgons: bool | int = ..., sn: bool | int = ..., useLegacyBevelAlgorithm: bool | int = ..., com: bool | int = ..., uvAssignment: bool | int | int = ..., ua: bool | int | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyBevel3(*args, angleTolerance: bool | int | float = ..., at: bool | int | float = ..., autoFit: bool | int = ..., af: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., chamfer: bool | int = ..., c: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., depth: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., fillNgons: bool | int = ..., fn: bool | int = ..., forceParallel: bool | int = ..., fp: bool | int = ..., fraction: float = ..., f: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., maya2015: bool | int = ..., m15: bool | int = ..., maya2016SP3: bool | int = ..., m16: bool | int = ..., maya2017Update1: bool | int = ..., m17: bool | int = ..., mergeVertexTolerance: bool | int | float = ..., mvt: bool | int | float = ..., mergeVertices: bool | int = ..., mv: bool | int = ..., miterAlong: bool | int | int = ..., mia: bool | int | int = ..., mitering: bool | int | int = ..., m: bool | int | int = ..., miteringAngle: bool | int | float = ..., ma: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., o: bool | int | float = ..., offsetAsFraction: bool | int = ..., oaf: bool | int = ..., query: bool | int = ..., q: bool | int = ..., roundness: bool | int | float = ..., r: bool | int | float = ..., segments: bool | int | int = ..., sg: bool | int | int = ..., smoothingAngle: bool | int | float = ..., sa: bool | int | float = ..., subdivideNgons: bool | int = ..., sn: bool | int = ..., uvAssignment: bool | int | int = ..., ua: bool | int | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyBevelCutback(*args, **kwargs): ...
def polyBlendColor(*args, baseColorName: bool | int | str = ..., bcn: bool | int | str = ..., blendFunc: bool | int | int = ..., bfn: bool | int | int = ..., blendWeightA: bool | int | float = ..., bwa: bool | int | float = ..., blendWeightB: bool | int | float = ..., bwb: bool | int | float = ..., blendWeightC: bool | int | float = ..., bwc: bool | int | float = ..., blendWeightD: bool | int | float = ..., bwd: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., dstColorName: bool | int | str = ..., dst: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., srcColorName: bool | int | str = ..., src: bool | int | str = ...) -> Any: ...
def polyBlindData(*args, associationType: str = ..., at: str = ..., binaryData: str | list[str] = ..., bnd: str | list[str] = ..., booleanData: bool | int | list[bool | int] = ..., bd: bool | int | list[bool | int] = ..., delete: bool | int = ..., doubleData: float | list[float] = ..., dbd: float | list[float] = ..., edit: bool | int = ..., e: bool | int = ..., int64Data: int | list[int] = ..., lid: int | list[int] = ..., intData: int | list[int] = ..., ind: int | list[int] = ..., longDataName: str | list[str] = ..., ldn: str | list[str] = ..., rescan: bool | int = ..., res: bool | int = ..., reset: bool | int = ..., rst: bool | int = ..., shape: bool | int = ..., sh: bool | int = ..., shortDataName: str | list[str] = ..., sdn: str | list[str] = ..., stringData: str | list[str] = ..., sd: str | list[str] = ..., typeId: int = ..., id: int = ...) -> Any: ...
def polyBoolOp(*args, caching: bool | int = ..., cch: bool | int = ..., classification: int = ..., cls: int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., faceAreaThreshold: bool | int | float = ..., fat: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeUVSets: bool | int | int = ..., muv: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., preserveColor: bool | int = ..., pcr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., useThresholds: bool | int = ..., uth: bool | int = ..., vertexDistanceThreshold: bool | int | float = ..., vdt: bool | int | float = ...) -> Any: ...
def polyBridgeEdge(*args, bridgeOffset: bool | int | int = ..., bo: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveType: bool | int | int = ..., ctp: bool | int | int = ..., direction: int = ..., d: int = ..., divisions: bool | int | int = ..., dv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inputCurve: str = ..., inc: str = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., reverse: bool | int = ..., rev: bool | int = ..., smoothingAngle: bool | int | float = ..., sma: bool | int | float = ..., sourceDirection: int = ..., sd: int = ..., startVert1: bool | int | int = ..., sv1: bool | int | int = ..., startVert2: bool | int | int = ..., sv2: bool | int | int = ..., taper: bool | int | float = ..., tp: bool | int | float = ..., taperCurve_FloatValue: bool | int | float = ..., cfv: bool | int | float = ..., taperCurve_Interp: bool | int | int = ..., ci: bool | int | int = ..., taperCurve_Position: bool | int | float = ..., cp: bool | int | float = ..., targetDirection: int = ..., td: int = ..., twist: bool | int | float = ..., twt: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyCBoolOp(*args, caching: bool | int = ..., cch: bool | int = ..., classification: bool | int | int = ..., cls: bool | int | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edgeInterpolation: bool | int = ..., eit: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., faceAreaThreshold: bool | int | float = ..., fat: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeUVSets: bool | int | int = ..., muv: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., planarTolerance: float = ..., ptl: float = ..., preserveColor: bool | int = ..., pcr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sortOutput: bool | int = ..., sop: bool | int = ..., tagIntersection: bool | int = ..., ti: bool | int = ..., useCarveBooleans: bool | int = ..., ucb: bool | int = ..., useThresholds: bool | int = ..., uth: bool | int = ..., vertexDistanceThreshold: bool | int | float = ..., vdt: bool | int | float = ...) -> Any: ...
def polyCacheMonitor(*args, cacheValue: bool | int = ..., chv: bool | int = ..., nodeName: str = ..., nm: str = ...) -> Any: ...
def polyCanBridgeEdge(*args) -> Any: ...
def polyCheck(*args, edge: bool | int = ..., e: bool | int = ..., face: bool | int = ..., f: bool | int = ..., faceOffset: bool | int = ..., fo: bool | int = ..., openFile: str = ..., of: str = ...) -> Any: ...
def polyChipOff(*args, attraction: bool | int | float = ..., att: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., duplicate: bool | int = ..., dup: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | list[float] = ..., ga: bool | int | float | list[float] = ..., gravity: bool | int | tuple[float, float, float] = ..., g: bool | int | tuple[float, float, float] = ..., gravityX: bool | int | float = ..., gx: bool | int | float = ..., gravityY: bool | int | float = ..., gy: bool | int | float = ..., gravityZ: bool | int | float = ..., gz: bool | int | float = ..., keepFacesTogether: bool | int = ..., kft: bool | int = ..., keepFacetTogether: bool | int = ..., xft: bool | int = ..., localCenter: bool | int | int = ..., lc: bool | int | int = ..., localDirection: bool | int | tuple[float, float, float] = ..., ld: bool | int | tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localRotate: bool | int | tuple[float, float, float] = ..., lr: bool | int | tuple[float, float, float] = ..., localRotateX: bool | int | float = ..., lrx: bool | int | float = ..., localRotateY: bool | int | float = ..., lry: bool | int | float = ..., localRotateZ: bool | int | float = ..., lrz: bool | int | float = ..., localScale: bool | int | tuple[float, float, float] = ..., ls: bool | int | tuple[float, float, float] = ..., localScaleX: bool | int | float = ..., lsx: bool | int | float = ..., localScaleY: bool | int | float = ..., lsy: bool | int | float = ..., localScaleZ: bool | int | float = ..., lsz: bool | int | float = ..., localTranslate: bool | int | tuple[float, float, float] = ..., lt: bool | int | tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., magnX: bool | int | float = ..., mx: bool | int | float = ..., magnY: bool | int | float = ..., my: bool | int | float = ..., magnZ: bool | int | float = ..., mz: bool | int | float = ..., magnet: bool | int | tuple[float, float, float] = ..., m: bool | int | tuple[float, float, float] = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., off: bool | int | float = ..., pivot: bool | int | tuple[float, float, float] = ..., pvt: bool | int | tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotate: tuple[float, float, float] = ..., ro: tuple[float, float, float] = ..., rotateX: float = ..., rx: float = ..., rotateY: float = ..., ry: float = ..., rotateZ: float = ..., rz: float = ..., scale: bool | int | tuple[float, float, float] = ..., s: bool | int | tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., translate: bool | int | tuple[float, float, float] = ..., t: bool | int | tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., weight: bool | int | float = ..., w: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyCircularize(*args, alignment: bool | int | int = ..., al: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCurve: bool | int = ..., cc: bool | int = ..., divisions: int = ..., d: int = ..., edit: bool | int = ..., e: bool | int = ..., evenlyDistribute: bool | int = ..., ed: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inputCurve: str = ..., inc: str = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalOffset: float = ..., no: float = ..., normalOrientation: bool | int | int = ..., nor: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., radialOffset: bool | int | float = ..., ro: bool | int | float = ..., relaxInterior: float = ..., ri: float = ..., smoothingAngle: bool | int | float = ..., sa: bool | int | float = ..., supportingEdges: int = ..., se: int = ..., twist: float = ..., t: float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyCircularizeEdge(*args, alignment: bool | int | int = ..., al: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCurve: bool | int = ..., cc: bool | int = ..., divisions: int = ..., d: int = ..., edit: bool | int = ..., e: bool | int = ..., evenlyDistribute: bool | int = ..., ed: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inputCurve: str = ..., inc: str = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalOffset: float = ..., no: float = ..., normalOrientation: bool | int | int = ..., nor: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., radialOffset: bool | int | float = ..., ro: bool | int | float = ..., relaxInterior: float = ..., ri: float = ..., smoothingAngle: bool | int | float = ..., sa: bool | int | float = ..., supportingEdges: int = ..., se: int = ..., twist: float = ..., t: float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyCircularizeFace(*args, alignment: bool | int | int = ..., al: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCurve: bool | int = ..., cc: bool | int = ..., divisions: int = ..., d: int = ..., edit: bool | int = ..., e: bool | int = ..., evenlyDistribute: bool | int = ..., ed: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inputCurve: str = ..., inc: str = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalOffset: float = ..., no: float = ..., normalOrientation: bool | int | int = ..., nor: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., radialOffset: bool | int | float = ..., ro: bool | int | float = ..., relaxInterior: float = ..., ri: float = ..., smoothingAngle: bool | int | float = ..., sa: bool | int | float = ..., supportingEdges: int = ..., se: int = ..., twist: float = ..., t: float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyClean(*args, caching: bool | int = ..., cch: bool | int = ..., cleanEdges: bool | int = ..., ce: bool | int = ..., cleanPartialUVMapping: bool | int = ..., cpm: bool | int = ..., cleanUVs: bool | int = ..., cuv: bool | int = ..., cleanVertices: bool | int = ..., cv: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyClipboard(*args, clear: bool | int = ..., cl: bool | int = ..., color: bool | int = ..., clr: bool | int = ..., copy: bool | int = ..., cp: bool | int = ..., paste: bool | int = ..., ps: bool | int = ..., shader: bool | int = ..., sh: bool | int = ..., uvCoordinates: bool | int = ..., uv: bool | int = ...) -> Any: ...
def polyCloseBorder(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyCollapseEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyCollapseFacet(*args, areaThreshold: bool | int | float = ..., at: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., useAreaThreshold: bool | int = ..., uat: bool | int = ...) -> Any: ...
def polyCollapseTweaks(*args, hasVertexTweaks: bool | int = ..., hvt: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyColorBlindData(*args, aboveMaxColorBlue: float | list[float] = ..., amb: float | list[float] = ..., aboveMaxColorGreen: float | list[float] = ..., amg: float | list[float] = ..., aboveMaxColorRed: float | list[float] = ..., amr: float | list[float] = ..., attrName: str | list[str] = ..., n: str | list[str] = ..., belowMinColorBlue: float | list[float] = ..., bmb: float | list[float] = ..., belowMinColorGreen: float | list[float] = ..., bmg: float | list[float] = ..., belowMinColorRed: float | list[float] = ..., bmr: float | list[float] = ..., clashColorBlue: float = ..., ccb: float = ..., clashColorGreen: float = ..., ccg: float = ..., clashColorRed: float = ..., ccr: float = ..., colorBlue: float | list[float] = ..., cb: float | list[float] = ..., colorGreen: float | list[float] = ..., cg: float | list[float] = ..., colorRed: float | list[float] = ..., cr: float | list[float] = ..., dataType: str | list[str] = ..., dt: str | list[str] = ..., enableFalseColor: bool | int = ..., efc: bool | int = ..., maxColorBlue: float | list[float] = ..., mxb: float | list[float] = ..., maxColorGreen: float | list[float] = ..., mxg: float | list[float] = ..., maxColorRed: float | list[float] = ..., mxr: float | list[float] = ..., maxValue: float | list[float] = ..., mxv: float | list[float] = ..., minColorBlue: float | list[float] = ..., mnb: float | list[float] = ..., minColorGreen: float | list[float] = ..., mng: float | list[float] = ..., minColorRed: float | list[float] = ..., mnr: float | list[float] = ..., minValue: float | list[float] = ..., mnv: float | list[float] = ..., mode: int | list[int] = ..., m: int | list[int] = ..., noColorBlue: float = ..., ncb: float = ..., noColorGreen: float = ..., ncg: float = ..., noColorRed: float = ..., ncr: float = ..., numIdTypes: int | list[int] = ..., num: int | list[int] = ..., queryMode: bool | int = ..., q: bool | int = ..., typeId: int | list[int] = ..., id: int | list[int] = ..., useMax: bool | int | list[bool | int] = ..., umx: bool | int | list[bool | int] = ..., useMin: bool | int | list[bool | int] = ..., umn: bool | int | list[bool | int] = ..., value: str | list[str] = ..., v: str | list[str] = ...) -> Any: ...
def polyColorDel(*args, caching: bool | int = ..., cch: bool | int = ..., colorSetName: bool | int | str = ..., cls: bool | int | str = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyColorMod(*args, alphaScale_FloatValue: bool | int | float = ..., afv: bool | int | float = ..., alphaScale_Interp: bool | int | int = ..., ai: bool | int | int = ..., alphaScale_Position: bool | int | float = ..., ap: bool | int | float = ..., baseColorName: str = ..., bcn: str = ..., blueScale_FloatValue: bool | int | float = ..., bfv: bool | int | float = ..., blueScale_Interp: bool | int | int = ..., bi: bool | int | int = ..., blueScale_Position: bool | int | float = ..., bp: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., greenScale_FloatValue: bool | int | float = ..., gfv: bool | int | float = ..., greenScale_Interp: bool | int | int = ..., gi: bool | int | int = ..., greenScale_Position: bool | int | float = ..., gp: bool | int | float = ..., huev: bool | int | float = ..., h: bool | int | float = ..., intensityScale_FloatValue: bool | int | float = ..., nfv: bool | int | float = ..., intensityScale_Interp: bool | int | int = ..., ni: bool | int | int = ..., intensityScale_Position: bool | int | float = ..., np: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., redScale_FloatValue: bool | int | float = ..., rfv: bool | int | float = ..., redScale_Interp: bool | int | int = ..., ri: bool | int | int = ..., redScale_Position: bool | int | float = ..., rp: bool | int | float = ..., satv: bool | int | float = ..., s: bool | int | float = ..., value: bool | int | float = ..., v: bool | int | float = ...) -> Any: ...
def polyColorPerVertex(*args, alpha: bool | int | float = ..., a: bool | int | float = ..., clamped: bool | int = ..., cla: bool | int = ..., colorB: bool | int | float = ..., b: bool | int | float = ..., colorDisplayOption: bool | int = ..., cdo: bool | int = ..., colorG: bool | int | float = ..., g: bool | int | float = ..., colorR: bool | int | float = ..., r: bool | int | float = ..., colorRGB: bool | int | tuple[float, float, float] = ..., rgb: bool | int | tuple[float, float, float] = ..., edit: bool | int = ..., e: bool | int = ..., notUndoable: bool | int = ..., nun: bool | int = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., rel: bool | int = ..., remove: bool | int = ..., rem: bool | int = ..., representation: bool | int | int = ..., rpt: bool | int | int = ...) -> Any: ...
def polyColorSet(*args, allColorSets: bool | int = ..., acs: bool | int = ..., clamped: bool | int = ..., cla: bool | int = ..., colorSet: bool | int | str = ..., cs: bool | int | str = ..., copy: bool | int = ..., cp: bool | int = ..., create: bool | int = ..., cr: bool | int = ..., currentColorSet: bool | int = ..., ccs: bool | int = ..., currentPerInstanceSet: bool | int = ..., cpi: bool | int = ..., delete: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., newColorSet: bool | int | str = ..., nc: bool | int | str = ..., perInstance: bool | int = ..., pi: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rename: bool | int = ..., rn: bool | int = ..., representation: bool | int | str = ..., rpt: bool | int | str = ..., shareInstances: bool | int = ..., si: bool | int = ..., unshared: bool | int = ..., us: bool | int = ...) -> Any: ...
def polyColorSetCmdWrapper(*args) -> Any: ...
def polyCompare(*args, colorSetIndices: bool | int = ..., ic: bool | int = ..., colorSets: bool | int = ..., c: bool | int = ..., edges: bool | int = ..., e: bool | int = ..., faceDesc: bool | int = ..., fd: bool | int = ..., userNormals: bool | int = ..., un: bool | int = ..., uvSetIndices: bool | int = ..., iuv: bool | int = ..., uvSets: bool | int = ..., uv: bool | int = ..., vertices: bool | int = ..., v: bool | int = ...) -> Any: ...
def polyCone(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., roundCap: bool | int = ..., rcp: bool | int = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsCap: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., subdivisionsZ: bool | int | int = ..., sz: bool | int | int = ..., texture: bool | int = ..., tx: bool | int = ...) -> Any: ...
def polyConnectComponents(*args, adjustEdgeFlow: bool | int | float = ..., aef: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertWithEdgeFlow: bool | int = ..., ief: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyContourProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., flipRails: bool | int = ..., fr: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., method: bool | int | int = ..., m: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset0: bool | int | float = ..., o0: bool | int | float = ..., offset1: bool | int | float = ..., o1: bool | int | float = ..., offset2: bool | int | float = ..., o2: bool | int | float = ..., offset3: bool | int | float = ..., o3: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., reduceShear: bool | int | float = ..., rs: bool | int | float = ..., smoothness0: bool | int | float = ..., s0: bool | int | float = ..., smoothness1: bool | int | float = ..., s1: bool | int | float = ..., smoothness2: bool | int | float = ..., s2: bool | int | float = ..., smoothness3: bool | int | float = ..., s3: bool | int | float = ..., userDefinedCorners: bool | int = ..., udc: bool | int = ..., uvSetName: str = ..., uvs: str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyCopyUV(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., uvSetName: str = ..., uvs: str = ..., uvSetNameInput: bool | int | str = ..., uvi: bool | int | str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyCrease(*args, createHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., relativeValue: bool | int | float = ..., rv: bool | int | float = ..., value: bool | int | float | list[float] = ..., v: bool | int | float | list[float] = ..., vertexValue: bool | int | float | list[float] = ..., vv: bool | int | float | list[float] = ...) -> Any: ...
def polyCreaseCtx(*args, createSet: str = ..., cs: str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extendSelection: bool | int = ..., es: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ...) -> Any: ...
def polyCreateFacet(*args, constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., hole: bool | int | list[bool | int] = ..., hl: bool | int | list[bool | int] = ..., name: str = ..., n: str = ..., point: tuple[float, float, float] | list[tuple[float, float, float]] = ..., p: tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., subdivision: bool | int | int = ..., s: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ...) -> Any: ...
def polyCreateFacetCtx(*args, append: bool | int = ..., ap: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., maximumNumberOfPoints: bool | int | int = ..., mp: bool | int | int = ..., planarConstraint: bool | int = ..., pc: bool | int = ..., query: bool | int = ..., q: bool | int = ..., subdivision: bool | int | int = ..., s: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ...) -> Any: ...
def polyCube(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., depth: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., subdivisionsDepth: bool | int | int = ..., sd: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsWidth: bool | int | int = ..., sw: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., subdivisionsZ: bool | int | int = ..., sz: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ..., width: bool | int | float = ..., w: bool | int | float = ...) -> Any: ...
def polyCut(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cutPlaneCenter: bool | int | tuple[float, float, float] = ..., pc: bool | int | tuple[float, float, float] = ..., cutPlaneCenterX: bool | int | float = ..., pcx: bool | int | float = ..., cutPlaneCenterY: bool | int | float = ..., pcy: bool | int | float = ..., cutPlaneCenterZ: bool | int | float = ..., pcz: bool | int | float = ..., cutPlaneHeight: bool | int | float = ..., ph: bool | int | float = ..., cutPlaneRotate: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., cutPlaneRotateX: bool | int | float = ..., rx: bool | int | float = ..., cutPlaneRotateY: bool | int | float = ..., ry: bool | int | float = ..., cutPlaneRotateZ: bool | int | float = ..., rz: bool | int | float = ..., cutPlaneSize: bool | int | tuple[float, float] = ..., ps: bool | int | tuple[float, float] = ..., cutPlaneWidth: bool | int | float = ..., pw: bool | int | float = ..., cuttingDirection: str = ..., cd: str = ..., deleteFaces: bool | int = ..., df: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., extractFaces: bool | int = ..., ef: bool | int = ..., extractOffset: bool | int | tuple[float, float, float] = ..., eo: bool | int | tuple[float, float, float] = ..., extractOffsetX: bool | int | float = ..., eox: bool | int | float = ..., extractOffsetY: bool | int | float = ..., eoy: bool | int | float = ..., extractOffsetZ: bool | int | float = ..., eoz: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., onObject: bool | int = ..., oo: bool | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyCutCtx(*args, deleteFaces: bool | int = ..., df: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extractFaces: bool | int = ..., ef: bool | int = ..., extractOffset: bool | int | tuple[float, float, float] = ..., eo: bool | int | tuple[float, float, float] = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyCutUVCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., loopSpeed: bool | int | int = ..., ls: bool | int | int = ..., mapBordersColor: bool | int | tuple[float, float, float] = ..., mbc: bool | int | tuple[float, float, float] = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., showCheckerMap: bool | int = ..., scm: bool | int = ..., showTextureBorders: bool | int = ..., stb: bool | int = ..., showUVShellColoring: bool | int = ..., ssc: bool | int = ..., steadyStroke: bool | int = ..., ss: bool | int = ..., steadyStrokeDistance: bool | int | float = ..., ssd: bool | int | float = ..., symmetry: bool | int | int = ..., sym: bool | int | int = ...) -> Any: ...
def polyCylinder(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., roundCap: bool | int = ..., rcp: bool | int = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsCaps: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., subdivisionsZ: bool | int | int = ..., sz: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ...) -> Any: ...
def polyCylindricalProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., imageCenter: bool | int | tuple[float, float] = ..., ic: bool | int | tuple[float, float] = ..., imageCenterX: bool | int | float = ..., icx: bool | int | float = ..., imageCenterY: bool | int | float = ..., icy: bool | int | float = ..., imageScale: bool | int | tuple[float, float] = ..., imageScaleU: bool | int | float = ..., isu: bool | int | float = ..., imageScaleV: bool | int | float = ..., isv: bool | int | float = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., keepImageRatio: bool | int = ..., kir: bool | int = ..., mapDirection: str = ..., md: str = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., perInstance: bool | int = ..., pi: bool | int = ..., projectionCenter: bool | int | tuple[float, float, float] = ..., pc: bool | int | tuple[float, float, float] = ..., projectionCenterX: bool | int | float = ..., pcx: bool | int | float = ..., projectionCenterY: bool | int | float = ..., pcy: bool | int | float = ..., projectionCenterZ: bool | int | float = ..., pcz: bool | int | float = ..., projectionHeight: bool | int | float = ..., ph: bool | int | float = ..., projectionHorizontalSweep: bool | int | float = ..., phs: bool | int | float = ..., projectionScale: bool | int | tuple[float, float] = ..., ps: bool | int | tuple[float, float] = ..., projectionScaleU: bool | int | float = ..., psu: bool | int | float = ..., projectionScaleV: bool | int | float = ..., psv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., rotate: tuple[float, float, float] = ..., ro: tuple[float, float, float] = ..., rotateX: float = ..., rx: float = ..., rotateY: float = ..., ry: float = ..., rotateZ: float = ..., rz: float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., seamCorrect: bool | int = ..., sc: bool | int = ..., smartFit: bool | int = ..., sf: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyDelEdge(*args, caching: bool | int = ..., cch: bool | int = ..., cleanVertices: bool | int = ..., cv: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyDelFacet(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyDelVertex(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyDuplicateAndConnect(*args, removeOriginalFromShaders: bool | int = ..., ros: bool | int = ..., renameChildren: bool | int = ..., rc: bool | int = ...) -> Any: ...
def polyDuplicateEdge(*args, adjustEdgeFlow: bool | int | float = ..., aef: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., deleteEdge: bool | int = ..., de: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endVertexOffset: bool | int | float = ..., evo: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertWithEdgeFlow: bool | int = ..., ief: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: float = ..., of: float = ..., query: bool | int = ..., q: bool | int = ..., smoothingAngle: bool | int | float = ..., sma: bool | int | float = ..., splitType: bool | int | int = ..., stp: bool | int | int = ..., startVertexOffset: bool | int | float = ..., svo: bool | int | float = ...) -> Any: ...
def polyEditEdgeFlow(*args, adjustEdgeFlow: float = ..., aef: float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edgeFlow: bool | int = ..., ef: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyEditUV(*args, angle: bool | int | float = ..., a: bool | int | float = ..., pivotU: bool | int | float = ..., pu: bool | int | float = ..., pivotV: bool | int | float = ..., pv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., rotateRatio: bool | int | float = ..., rr: bool | int | float = ..., rotation: bool | int = ..., rot: bool | int = ..., scale: bool | int = ..., s: bool | int = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., uValue: bool | int | float = ..., u: bool | int | float = ..., uvSetName: bool | int | str = ..., uvs: bool | int | str = ..., vValue: bool | int | float = ..., v: bool | int | float = ...) -> Any: ...
def polyEditUVShell(*args, angle: bool | int | float = ..., a: bool | int | float = ..., pivotU: bool | int | float = ..., pu: bool | int | float = ..., pivotV: bool | int | float = ..., pv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., rotateRatio: bool | int | float = ..., rr: bool | int | float = ..., rotation: bool | int = ..., rot: bool | int = ..., scale: bool | int = ..., s: bool | int = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., uValue: bool | int | float = ..., u: bool | int | float = ..., uvSetName: bool | int | str = ..., uvs: bool | int | str = ..., vValue: bool | int | float = ..., v: bool | int | float = ...) -> Any: ...
def polyEvaluate(*args, accurateEvaluation: bool | int = ..., ae: bool | int = ..., activeShells: bool | int = ..., activeUVShells: bool | int = ..., aus: bool | int = ..., area: bool | int = ..., a: bool | int = ..., boundingBox: bool | int = ..., b: bool | int = ..., boundingBox2d: bool | int = ..., b2: bool | int = ..., boundingBoxComponent: bool | int = ..., bc: bool | int = ..., boundingBoxComponent2d: bool | int = ..., bc2: bool | int = ..., displayStats: bool | int = ..., ds: bool | int = ..., edge: bool | int = ..., e: bool | int = ..., edgeComponent: bool | int = ..., ec: bool | int = ..., face: bool | int = ..., f: bool | int = ..., faceArea: bool | int = ..., fa: bool | int = ..., faceComponent: bool | int = ..., fc: bool | int = ..., format: bool | int = ..., fmt: bool | int = ..., shell: bool | int = ..., s: bool | int = ..., triangle: bool | int = ..., t: bool | int = ..., triangleComponent: bool | int = ..., tc: bool | int = ..., uvArea: bool | int = ..., uva: bool | int = ..., uvComponent: bool | int = ..., uvc: bool | int = ..., uvEdgePairs: bool | int = ..., uep: bool | int = ..., uvFaceArea: bool | int = ..., ufa: bool | int = ..., uvSetName: str = ..., uvs: str = ..., uvShell: bool | int = ..., us: bool | int = ..., uvShellIds: bool | int = ..., usi: bool | int = ..., uvcoord: bool | int = ..., uv: bool | int = ..., uvsInShell: int = ..., uis: int = ..., vertex: bool | int = ..., v: bool | int = ..., vertexComponent: bool | int = ..., vc: bool | int = ..., worldArea: bool | int = ..., wa: bool | int = ..., worldFaceArea: bool | int = ..., wfa: bool | int = ...) -> Any: ...
def polyExtrudeEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCurve: bool | int = ..., cc: bool | int = ..., divisions: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | list[float] = ..., ga: bool | int | float | list[float] = ..., inputCurve: str = ..., inc: str = ..., keepFacesTogether: bool | int = ..., kft: bool | int = ..., localCenter: bool | int | int = ..., lc: bool | int | int = ..., localDirection: bool | int | tuple[float, float, float] = ..., ld: bool | int | tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localRotate: bool | int | tuple[float, float, float] = ..., lr: bool | int | tuple[float, float, float] = ..., localRotateX: bool | int | float = ..., lrx: bool | int | float = ..., localRotateY: bool | int | float = ..., lry: bool | int | float = ..., localRotateZ: bool | int | float = ..., lrz: bool | int | float = ..., localScale: bool | int | tuple[float, float, float] = ..., ls: bool | int | tuple[float, float, float] = ..., localScaleX: bool | int | float = ..., lsx: bool | int | float = ..., localScaleY: bool | int | float = ..., lsy: bool | int | float = ..., localScaleZ: bool | int | float = ..., lsz: bool | int | float = ..., localTranslate: bool | int | tuple[float, float, float] = ..., lt: bool | int | tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., off: bool | int | float = ..., pivot: bool | int | tuple[float, float, float] = ..., pvt: bool | int | tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotate: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | tuple[float, float, float] = ..., s: bool | int | tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., smoothingAngle: bool | int | float = ..., sma: bool | int | float = ..., taper: bool | int | float = ..., tp: bool | int | float = ..., taperCurve_FloatValue: bool | int | float = ..., cfv: bool | int | float = ..., taperCurve_Interp: bool | int | int = ..., ci: bool | int | int = ..., taperCurve_Position: bool | int | float = ..., cp: bool | int | float = ..., thickness: bool | int | float = ..., tk: bool | int | float = ..., translate: bool | int | tuple[float, float, float] = ..., t: bool | int | tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., twist: bool | int | float = ..., twt: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyExtrudeFacet(*args, attraction: bool | int | float = ..., att: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createCurve: bool | int = ..., cc: bool | int = ..., divisions: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | list[float] = ..., ga: bool | int | float | list[float] = ..., gravity: bool | int | tuple[float, float, float] = ..., g: bool | int | tuple[float, float, float] = ..., gravityX: bool | int | float = ..., gx: bool | int | float = ..., gravityY: bool | int | float = ..., gy: bool | int | float = ..., gravityZ: bool | int | float = ..., gz: bool | int | float = ..., inputCurve: str = ..., inc: str = ..., keepFacesTogether: bool | int = ..., kft: bool | int = ..., keepFacetTogether: bool | int = ..., xft: bool | int = ..., localCenter: bool | int | int = ..., lc: bool | int | int = ..., localDirection: bool | int | tuple[float, float, float] = ..., ld: bool | int | tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localRotate: bool | int | tuple[float, float, float] = ..., lr: bool | int | tuple[float, float, float] = ..., localRotateX: bool | int | float = ..., lrx: bool | int | float = ..., localRotateY: bool | int | float = ..., lry: bool | int | float = ..., localRotateZ: bool | int | float = ..., lrz: bool | int | float = ..., localScale: bool | int | tuple[float, float, float] = ..., ls: bool | int | tuple[float, float, float] = ..., localScaleX: bool | int | float = ..., lsx: bool | int | float = ..., localScaleY: bool | int | float = ..., lsy: bool | int | float = ..., localScaleZ: bool | int | float = ..., lsz: bool | int | float = ..., localTranslate: bool | int | tuple[float, float, float] = ..., lt: bool | int | tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., magnX: bool | int | float = ..., mx: bool | int | float = ..., magnY: bool | int | float = ..., my: bool | int | float = ..., magnZ: bool | int | float = ..., mz: bool | int | float = ..., magnet: bool | int | tuple[float, float, float] = ..., m: bool | int | tuple[float, float, float] = ..., maya2012: bool | int = ..., m12: bool | int = ..., maya2018: bool | int = ..., m18: bool | int = ..., name: str = ..., n: str = ..., newThickness: bool | int = ..., ntk: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., off: bool | int | float = ..., pivot: bool | int | tuple[float, float, float] = ..., pvt: bool | int | tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., reverseAllFaces: bool | int = ..., raf: bool | int = ..., rotate: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | tuple[float, float, float] = ..., s: bool | int | tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., smoothingAngle: bool | int | float = ..., sma: bool | int | float = ..., taper: bool | int | float = ..., tp: bool | int | float = ..., taperCurve_FloatValue: bool | int | float = ..., cfv: bool | int | float = ..., taperCurve_Interp: bool | int | int = ..., ci: bool | int | int = ..., taperCurve_Position: bool | int | float = ..., cp: bool | int | float = ..., thickness: bool | int | float = ..., tk: bool | int | float = ..., translate: bool | int | tuple[float, float, float] = ..., t: bool | int | tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., twist: bool | int | float = ..., twt: bool | int | float = ..., weight: bool | int | float = ..., w: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyExtrudeVertex(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., divisions: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., length: bool | int | float = ..., l: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., width: bool | int | float = ..., w: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyFlipEdge(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyFlipUV(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., cutUV: bool | int = ..., cut: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., flipType: bool | int | int = ..., ft: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., local: bool | int = ..., l: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivotU: bool | int | float = ..., pu: bool | int | float = ..., pivotV: bool | int | float = ..., pv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., usePivot: bool | int = ..., up: bool | int = ..., uvSetName: str = ..., uvs: str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyForceUV(*args, cameraProjection: bool | int = ..., cp: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., flipHorizontal: bool | int = ..., fh: bool | int = ..., flipVertical: bool | int = ..., fv: bool | int = ..., g: bool | int = ..., local: bool | int = ..., l: bool | int = ..., normalize: str = ..., nor: str = ..., numItems: int = ..., ni: int = ..., preserveAspectRatio: bool | int = ..., par: bool | int = ..., unitize: bool | int = ..., uni: bool | int = ..., unshare: bool | int = ..., u: bool | int = ..., uvSetName: str = ..., uvs: str = ...) -> Any: ...
def polyGeoSampler(*args, alphaBlend: str = ..., abl: str = ..., averageColor: bool | int = ..., ac: bool | int = ..., clampAlphaMax: float = ..., amx: float = ..., clampAlphaMin: float = ..., amn: float = ..., clampRGBMax: tuple[float, float, float] = ..., cmx: tuple[float, float, float] = ..., clampRGBMin: tuple[float, float, float] = ..., cmn: tuple[float, float, float] = ..., colorBlend: str = ..., cbl: str = ..., colorDisplayOption: bool | int = ..., cdo: bool | int = ..., computeShadows: bool | int = ..., cs: bool | int = ..., displaceGeometry: bool | int = ..., dg: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., flatShading: bool | int = ..., fs: bool | int = ..., ignoreDoubleSided: bool | int = ..., ids: bool | int = ..., lightingOnly: bool | int = ..., lo: bool | int = ..., reuseShadows: bool | int = ..., rs: bool | int = ..., sampleByFace: bool | int = ..., bf: bool | int = ..., scaleFactor: float = ..., sf: float = ..., shareUV: bool | int = ..., su: bool | int = ..., useLightShadows: bool | int = ..., ul: bool | int = ...) -> Any: ...
def polyHelix(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., coils: bool | int | float = ..., c: bool | int | float = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., roundCap: bool | int = ..., rcp: bool | int = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsCaps: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsCoil: bool | int | int = ..., sco: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ..., useOldInitBehaviour: bool | int = ..., oib: bool | int = ..., width: bool | int | float = ..., w: bool | int | float = ...) -> Any: ...
def polyHole(*args, assignHole: bool | int = ..., ah: bool | int = ..., createHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyInfo(*args, edgeToFace: bool | int = ..., ef: bool | int = ..., edgeToVertex: bool | int = ..., ev: bool | int = ..., faceNormals: bool | int = ..., fn: bool | int = ..., faceToEdge: bool | int = ..., fe: bool | int = ..., faceToVertex: bool | int = ..., fv: bool | int = ..., invalidEdges: bool | int = ..., ie: bool | int = ..., invalidVertices: bool | int = ..., iv: bool | int = ..., laminaFaces: bool | int = ..., lf: bool | int = ..., nonManifoldEdges: bool | int = ..., nme: bool | int = ..., nonManifoldUVEdges: bool | int = ..., nue: bool | int = ..., nonManifoldUVs: bool | int = ..., nuv: bool | int = ..., nonManifoldVertices: bool | int = ..., nmv: bool | int = ..., vertexToEdge: bool | int = ..., ve: bool | int = ..., vertexToFace: bool | int = ..., vf: bool | int = ...) -> Any: ...
def polyInstallAction(*args, commandName: bool | int = ..., cn: bool | int = ..., convertSelection: bool | int = ..., cs: bool | int = ..., installConstraint: bool | int = ..., ic: bool | int = ..., installDisplay: bool | int = ..., id: bool | int = ..., keepInstances: bool | int = ..., ki: bool | int = ..., query: bool | int = ..., q: bool | int = ..., uninstallConstraint: bool | int = ..., uc: bool | int = ..., uninstallDisplay: bool | int = ..., ud: bool | int = ...) -> Any: ...
def polyLayoutUV(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., flipReversed: bool | int = ..., fr: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gridU: int = ..., gu: int = ..., gridV: int = ..., gv: int = ..., layout: bool | int | int = ..., l: bool | int | int = ..., layoutMethod: bool | int | int = ..., lm: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., percentageSpace: bool | int | float = ..., ps: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., rotateForBestFit: bool | int | int = ..., rbf: bool | int | int = ..., scale: bool | int | int = ..., sc: bool | int | int = ..., separate: bool | int | int = ..., se: bool | int | int = ..., uvSetName: str = ..., uvs: str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyListComponentConversion(*args, border: bool | int = ..., bo: bool | int = ..., fromEdge: bool | int = ..., fe: bool | int = ..., fromFace: bool | int = ..., ff: bool | int = ..., fromUV: bool | int = ..., fuv: bool | int = ..., fromVertex: bool | int = ..., fv: bool | int = ..., fromVertexFace: bool | int = ..., fvf: bool | int = ..., internal: bool | int = ..., toEdge: bool | int = ..., te: bool | int = ..., toFace: bool | int = ..., tf: bool | int = ..., toUV: bool | int = ..., tuv: bool | int = ..., toVertex: bool | int = ..., tv: bool | int = ..., toVertexFace: bool | int = ..., tvf: bool | int = ..., uvShell: bool | int = ..., uvs: bool | int = ..., vertexFaceAllEdges: bool | int = ..., vfa: bool | int = ...) -> Any: ...
def polyMapCut(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., moveRatio: float = ..., mr: float = ..., moveratio: bool | int | float = ..., mvr: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., usePinning: bool | int = ..., pin: bool | int = ...) -> Any: ...
def polyMapDel(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyMapSew(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., usePinning: bool | int = ..., pin: bool | int = ...) -> Any: ...
def polyMapSewMove(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., limitPieceSize: bool | int = ..., lps: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberFaces: bool | int | int = ..., nf: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., uvSetName: str = ..., uvs: str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyMergeEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., firstEdge: bool | int | int = ..., fe: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeMode: bool | int | int = ..., mm: bool | int | int = ..., mergeTexture: bool | int = ..., mt: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., secondEdge: bool | int | int = ..., se: bool | int | int = ...) -> Any: ...
def polyMergeEdgeCtx(*args, activeNodes: bool | int = ..., anq: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., firstEdge: bool | int | int = ..., fe: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., immediate: bool | int = ..., im: bool | int = ..., mergeMode: bool | int | int = ..., mm: bool | int | int = ..., mergeTexture: bool | int = ..., mt: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., previous: bool | int = ..., pv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., rs: bool | int = ..., secondEdge: bool | int | int = ..., se: bool | int | int = ..., toolNode: bool | int = ..., tnq: bool | int = ...) -> Any: ...
def polyMergeFacet(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., firstFacet: bool | int | int = ..., ff: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeMode: bool | int | int = ..., mm: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., secondFacet: bool | int | int = ..., sf: bool | int | int = ...) -> Any: ...
def polyMergeFacetCtx(*args, activeNodes: bool | int = ..., anq: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., firstFacet: bool | int | int = ..., ff: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., immediate: bool | int = ..., im: bool | int = ..., mergeMode: bool | int | int = ..., mm: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., previous: bool | int = ..., pv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., rs: bool | int = ..., secondFacet: bool | int | int = ..., sf: bool | int | int = ..., toolNode: bool | int = ..., tnq: bool | int = ...) -> Any: ...
def polyMergeUV(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., uvSetName: str = ..., uvs: str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyMergeVertex(*args, alwaysMergeTwoVertices: bool | int = ..., am: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., distance: bool | int | float = ..., d: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeToComponents: bool | int | str = ..., mtc: bool | int | str = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., texture: bool | int = ..., tx: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyMirrorFace(*args, axis: bool | int | int = ..., a: bool | int | int = ..., axisDirection: bool | int | int = ..., ad: bool | int | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cutMesh: bool | int = ..., cm: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., firstNewFace: int = ..., fnf: int = ..., flipUVs: int = ..., fuv: int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepVertexIDs: bool | int = ..., kv: bool | int = ..., lastNewFace: int = ..., lnf: int = ..., mergeMode: bool | int | int = ..., mm: bool | int | int = ..., mergeThreshold: bool | int | float = ..., mt: bool | int | float = ..., mergeThresholdType: bool | int | int = ..., mtt: bool | int | int = ..., mirrorAxis: bool | int | int = ..., ma: bool | int | int = ..., mirrorPlaneCenter: tuple[float, float, float] = ..., pc: tuple[float, float, float] = ..., mirrorPlaneCenterX: float = ..., pcx: float = ..., mirrorPlaneCenterY: float = ..., pcy: float = ..., mirrorPlaneCenterZ: float = ..., pcz: float = ..., mirrorPlaneRotate: tuple[float, float, float] = ..., ro: tuple[float, float, float] = ..., mirrorPlaneRotateX: float = ..., rx: float = ..., mirrorPlaneRotateY: float = ..., ry: float = ..., mirrorPlaneRotateZ: float = ..., rz: float = ..., mirrorPosition: bool | int | float = ..., mps: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivot: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., pivotX: bool | int | float = ..., px: bool | int | float = ..., pivotY: bool | int | float = ..., py: bool | int | float = ..., pivotZ: bool | int | float = ..., pz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., scalePivotX: float = ..., spx: float = ..., scalePivotY: float = ..., spy: float = ..., scalePivotZ: float = ..., spz: float = ..., smoothingAngle: float = ..., sa: float = ..., userSpecifiedPivot: bool | int = ..., pu: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyMoveEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | list[float] = ..., ga: bool | int | float | list[float] = ..., localCenter: bool | int | int = ..., lc: bool | int | int = ..., localDirection: bool | int | tuple[float, float, float] = ..., ld: bool | int | tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localRotate: bool | int | tuple[float, float, float] = ..., lr: bool | int | tuple[float, float, float] = ..., localRotateX: bool | int | float = ..., lrx: bool | int | float = ..., localRotateY: bool | int | float = ..., lry: bool | int | float = ..., localRotateZ: bool | int | float = ..., lrz: bool | int | float = ..., localScale: bool | int | tuple[float, float, float] = ..., ls: bool | int | tuple[float, float, float] = ..., localScaleX: bool | int | float = ..., lsx: bool | int | float = ..., localScaleY: bool | int | float = ..., lsy: bool | int | float = ..., localScaleZ: bool | int | float = ..., lsz: bool | int | float = ..., localTranslate: bool | int | tuple[float, float, float] = ..., lt: bool | int | tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivot: bool | int | tuple[float, float, float] = ..., pvt: bool | int | tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotate: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | tuple[float, float, float] = ..., s: bool | int | tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., translate: bool | int | tuple[float, float, float] = ..., t: bool | int | tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyMoveFacet(*args, attraction: bool | int | float = ..., att: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | list[float] = ..., ga: bool | int | float | list[float] = ..., gravity: bool | int | tuple[float, float, float] = ..., g: bool | int | tuple[float, float, float] = ..., gravityX: bool | int | float = ..., gx: bool | int | float = ..., gravityY: bool | int | float = ..., gy: bool | int | float = ..., gravityZ: bool | int | float = ..., gz: bool | int | float = ..., localCenter: bool | int | int = ..., lc: bool | int | int = ..., localDirection: bool | int | tuple[float, float, float] = ..., ld: bool | int | tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localRotate: bool | int | tuple[float, float, float] = ..., lr: bool | int | tuple[float, float, float] = ..., localRotateX: bool | int | float = ..., lrx: bool | int | float = ..., localRotateY: bool | int | float = ..., lry: bool | int | float = ..., localRotateZ: bool | int | float = ..., lrz: bool | int | float = ..., localScale: bool | int | tuple[float, float, float] = ..., ls: bool | int | tuple[float, float, float] = ..., localScaleX: bool | int | float = ..., lsx: bool | int | float = ..., localScaleY: bool | int | float = ..., lsy: bool | int | float = ..., localScaleZ: bool | int | float = ..., lsz: bool | int | float = ..., localTranslate: bool | int | tuple[float, float, float] = ..., lt: bool | int | tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., magnX: bool | int | float = ..., mx: bool | int | float = ..., magnY: bool | int | float = ..., my: bool | int | float = ..., magnZ: bool | int | float = ..., mz: bool | int | float = ..., magnet: bool | int | tuple[float, float, float] = ..., m: bool | int | tuple[float, float, float] = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., offset: bool | int | float = ..., off: bool | int | float = ..., pivot: bool | int | tuple[float, float, float] = ..., pvt: bool | int | tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotate: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | tuple[float, float, float] = ..., s: bool | int | tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., translate: bool | int | tuple[float, float, float] = ..., t: bool | int | tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., weight: bool | int | float = ..., w: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyMoveFacetUV(*args, axisLen: bool | int | tuple[float, float] = ..., l: bool | int | tuple[float, float] = ..., axisLenX: bool | int | float = ..., lx: bool | int | float = ..., axisLenY: bool | int | float = ..., ly: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivot: bool | int | tuple[float, float] = ..., pvt: bool | int | tuple[float, float] = ..., pivotU: bool | int | float = ..., pvu: bool | int | float = ..., pivotV: bool | int | float = ..., pvv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., scale: bool | int | tuple[float, float] = ..., s: bool | int | tuple[float, float] = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., translate: bool | int | tuple[float, float] = ..., t: bool | int | tuple[float, float] = ..., translateU: bool | int | float = ..., tu: bool | int | float = ..., translateV: bool | int | float = ..., tv: bool | int | float = ...) -> Any: ...
def polyMoveUV(*args, axisLen: bool | int | tuple[float, float] = ..., l: bool | int | tuple[float, float] = ..., axisLenX: bool | int | float = ..., lx: bool | int | float = ..., axisLenY: bool | int | float = ..., ly: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivot: bool | int | tuple[float, float] = ..., pvt: bool | int | tuple[float, float] = ..., pivotU: bool | int | float = ..., pvu: bool | int | float = ..., pivotV: bool | int | float = ..., pvv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., scale: bool | int | tuple[float, float] = ..., s: bool | int | tuple[float, float] = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., translate: bool | int | tuple[float, float] = ..., t: bool | int | tuple[float, float] = ..., translateU: bool | int | float = ..., tu: bool | int | float = ..., translateV: bool | int | float = ..., tv: bool | int | float = ...) -> Any: ...
def polyMoveVertex(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gain: bool | int | float | list[float] = ..., ga: bool | int | float | list[float] = ..., localDirection: bool | int | tuple[float, float, float] = ..., ld: bool | int | tuple[float, float, float] = ..., localDirectionX: bool | int | float = ..., ldx: bool | int | float = ..., localDirectionY: bool | int | float = ..., ldy: bool | int | float = ..., localDirectionZ: bool | int | float = ..., ldz: bool | int | float = ..., localTranslate: bool | int | tuple[float, float, float] = ..., lt: bool | int | tuple[float, float, float] = ..., localTranslateX: bool | int | float = ..., ltx: bool | int | float = ..., localTranslateY: bool | int | float = ..., lty: bool | int | float = ..., localTranslateZ: bool | int | float = ..., ltz: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., pivot: bool | int | tuple[float, float, float] = ..., pvt: bool | int | tuple[float, float, float] = ..., pivotX: bool | int | float = ..., pvx: bool | int | float = ..., pivotY: bool | int | float = ..., pvy: bool | int | float = ..., pivotZ: bool | int | float = ..., pvz: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | float = ..., ran: bool | int | float = ..., rotate: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., scale: bool | int | tuple[float, float, float] = ..., s: bool | int | tuple[float, float, float] = ..., scaleX: bool | int | float = ..., sx: bool | int | float = ..., scaleY: bool | int | float = ..., sy: bool | int | float = ..., scaleZ: bool | int | float = ..., sz: bool | int | float = ..., translate: bool | int | tuple[float, float, float] = ..., t: bool | int | tuple[float, float, float] = ..., translateX: bool | int | float = ..., tx: bool | int | float = ..., translateY: bool | int | float = ..., ty: bool | int | float = ..., translateZ: bool | int | float = ..., tz: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyMultiLayoutUV(*args, flipReversed: bool | int = ..., fr: bool | int = ..., gridU: int = ..., gu: int = ..., gridV: int = ..., gv: int = ..., layout: int = ..., l: int = ..., layoutMethod: int = ..., lm: int = ..., offsetU: float = ..., ou: float = ..., offsetV: float = ..., ov: float = ..., percentageSpace: float = ..., ps: float = ..., prescale: int = ..., psc: int = ..., rotateForBestFit: int = ..., rbf: int = ..., scale: int = ..., sc: int = ..., sizeU: float = ..., su: float = ..., sizeV: float = ..., sv: float = ..., uvSetName: str = ..., uvs: str = ...) -> Any: ...
def polyNormal(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalMode: bool | int | int = ..., nm: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., userNormalMode: bool | int = ..., unm: bool | int = ...) -> Any: ...
def polyNormalPerVertex(*args, allLocked: bool | int = ..., al: bool | int = ..., deformable: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., freezeNormal: bool | int = ..., fn: bool | int = ..., normalX: bool | int | float = ..., x: bool | int | float = ..., normalXYZ: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., xyz: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., normalY: bool | int | float = ..., y: bool | int | float = ..., normalZ: bool | int | float = ..., z: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., rel: bool | int = ..., unFreezeNormal: bool | int = ..., ufn: bool | int = ...) -> Any: ...
def polyNormalizeUV(*args, caching: bool | int = ..., cch: bool | int = ..., centerOnTile: bool | int = ..., cot: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., normalizeDirection: bool | int | int = ..., nd: bool | int | int = ..., normalizeType: bool | int | int = ..., nt: bool | int | int = ..., preserveAspectRatio: bool | int = ..., pa: bool | int = ..., query: bool | int = ..., q: bool | int = ..., uvSetName: str = ..., uvs: str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyOptUvs(*args, applyToShell: bool | int = ..., areaWeight: float = ..., aw: float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., globalBlend: float = ..., gb: float = ..., globalMethodBlend: float = ..., gmb: float = ..., iterations: int = ..., i: int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., optimizeAxis: int = ..., oa: int = ..., pinSelected: bool | int = ..., ps: bool | int = ..., pinUvBorder: bool | int = ..., pub: bool | int = ..., query: bool | int = ..., q: bool | int = ..., scale: float = ..., s: float = ..., stoppingThreshold: float = ..., ss: float = ..., useScale: bool | int = ..., us: bool | int = ..., uvSetName: str = ..., uvs: str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyOptions(*args, activeObjects: bool | int = ..., ao: bool | int = ..., allEdges: bool | int = ..., ae: bool | int = ..., backCullVertex: bool | int = ..., bcv: bool | int = ..., backCulling: bool | int = ..., bc: bool | int = ..., colorMaterialChannel: bool | int | str = ..., cm: bool | int | str = ..., colorShadedDisplay: bool | int = ..., cs: bool | int = ..., displayAlphaAsGreyScale: bool | int = ..., dal: bool | int = ..., displayBlueChannel: bool | int = ..., dbc: bool | int = ..., displayBorder: bool | int = ..., db: bool | int = ..., displayCenter: bool | int = ..., dc: bool | int = ..., displayCreaseEdge: bool | int = ..., dce: bool | int = ..., displayCreaseVertex: bool | int = ..., dcv: bool | int = ..., displayGeometry: bool | int = ..., dg: bool | int = ..., displayGreenChannel: bool | int = ..., dgc: bool | int = ..., displayInvisibleFaces: bool | int = ..., dif: bool | int = ..., displayItemNumbers: bool | int | tuple[bool | int, bool | int, bool | int, bool | int] = ..., din: bool | int | tuple[bool | int, bool | int, bool | int, bool | int] = ..., displayMapBorder: bool | int = ..., dmb: bool | int = ..., displayMetadata: bool | int | tuple[bool | int, bool | int, bool | int] = ..., dmt: bool | int | tuple[bool | int, bool | int, bool | int] = ..., displayNormal: bool | int = ..., dn: bool | int = ..., displayRedChannel: bool | int = ..., drc: bool | int = ..., displayShellBorder: bool | int = ..., dsb: bool | int = ..., displaySubdComps: bool | int = ..., dsc: bool | int = ..., displayTangent: bool | int = ..., dtn: bool | int = ..., displayTriangle: bool | int = ..., dt: bool | int = ..., displayUVTopology: bool | int = ..., uvt: bool | int = ..., displayUVs: bool | int = ..., duv: bool | int = ..., displayVertex: bool | int = ..., dv: bool | int = ..., displayWarp: bool | int = ..., dw: bool | int = ..., facet: bool | int = ..., f: bool | int = ..., fullBack: bool | int = ..., fb: bool | int = ..., gl: bool | int = ..., hardBack: bool | int = ..., hb: bool | int = ..., hardEdge: bool | int = ..., he: bool | int = ..., hardEdgeColor: bool | int = ..., hec: bool | int = ..., materialBlend: bool | int | str = ..., mb: bool | int | str = ..., newPolymesh: bool | int = ..., np: bool | int = ..., point: bool | int = ..., pt: bool | int = ..., pointFacet: bool | int = ..., pf: bool | int = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., reuseTriangles: bool | int = ..., rt: bool | int = ..., sizeBorder: bool | int | float = ..., sb: bool | int | float = ..., sizeNormal: bool | int | float = ..., sn: bool | int | float = ..., sizeUV: bool | int | float = ..., suv: bool | int | float = ..., sizeVertex: bool | int | float = ..., sv: bool | int | float = ..., smoothDrawType: bool | int | int = ..., sdt: bool | int | int = ..., softEdge: bool | int = ..., se: bool | int = ..., vertexNormalMethod: bool | int | int = ..., vnm: bool | int | int = ..., wireBackCulling: bool | int = ..., wbc: bool | int = ...) -> Any: ...
def polyOutput(*args, allValues: bool | int = ..., a: bool | int = ..., color: bool | int = ..., c: bool | int = ..., colorDesc: bool | int = ..., cd: bool | int = ..., edge: bool | int = ..., e: bool | int = ..., edgeFace: bool | int = ..., ef: bool | int = ..., face: bool | int = ..., f: bool | int = ..., faceNorm: bool | int = ..., fn: bool | int = ..., force: bool | int = ..., fo: bool | int = ..., group: bool | int = ..., g: bool | int = ..., noOutput: bool | int = ..., no: bool | int = ..., normDesc: bool | int = ..., nd: bool | int = ..., outputFile: str = ..., of: str = ..., triangle: bool | int = ..., t: bool | int = ..., uvDesc: bool | int = ..., uvd: bool | int = ..., uvValue: bool | int = ..., uv: bool | int = ..., vert: bool | int = ..., v: bool | int = ..., vertEdge: bool | int = ..., ve: bool | int = ..., vertNorm: bool | int = ..., vn: bool | int = ...) -> Any: ...
def polyPinUV(*args, createHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., unpinned: bool | int = ..., unp: bool | int = ..., uvSetName: bool | int | str = ..., uvs: bool | int | str = ..., value: bool | int | float | list[float] = ..., v: bool | int | float | list[float] = ...) -> Any: ...
def polyPipe(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int = ..., cuv: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., roundCap: bool | int = ..., rcp: bool | int = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsCaps: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., texture: bool | int = ..., tx: bool | int = ..., thickness: bool | int | float = ..., t: bool | int | float = ...) -> Any: ...
def polyPlanarProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., imageCenter: bool | int | tuple[float, float] = ..., ic: bool | int | tuple[float, float] = ..., imageCenterX: bool | int | float = ..., icx: bool | int | float = ..., imageCenterY: bool | int | float = ..., icy: bool | int | float = ..., imageScale: bool | int | tuple[float, float] = ..., imageScaleU: bool | int | float = ..., isu: bool | int | float = ..., imageScaleV: bool | int | float = ..., isv: bool | int | float = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., keepImageRatio: bool | int = ..., kir: bool | int = ..., mapDirection: str = ..., md: str = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., perInstance: bool | int = ..., pi: bool | int = ..., projectionCenter: bool | int | tuple[float, float, float] = ..., pc: bool | int | tuple[float, float, float] = ..., projectionCenterX: bool | int | float = ..., pcx: bool | int | float = ..., projectionCenterY: bool | int | float = ..., pcy: bool | int | float = ..., projectionCenterZ: bool | int | float = ..., pcz: bool | int | float = ..., projectionHeight: bool | int | float = ..., ph: bool | int | float = ..., projectionHorizontalSweep: bool | int | float = ..., phs: bool | int | float = ..., projectionScale: bool | int | tuple[float, float] = ..., ps: bool | int | tuple[float, float] = ..., projectionScaleU: float = ..., psu: float = ..., projectionScaleV: float = ..., psv: float = ..., query: bool | int = ..., q: bool | int = ..., radius: float = ..., r: float = ..., rotate: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., seamCorrect: bool | int = ..., sc: bool | int = ..., smartFit: bool | int = ..., sf: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyPlane(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., height: bool | int | float = ..., h: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsWidth: bool | int | int = ..., sw: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ..., width: bool | int | float = ..., w: bool | int | float = ...) -> Any: ...
def polyPlatonicSolid(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: int = ..., cuv: int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sideLength: bool | int | float = ..., l: bool | int | float = ..., solidType: int = ..., st: int = ..., texture: int = ..., tx: int = ...) -> Any: ...
def polyPoke(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., localTranslate: tuple[float, float, float] = ..., lt: tuple[float, float, float] = ..., localTranslateX: float = ..., ltx: float = ..., localTranslateY: float = ..., lty: float = ..., localTranslateZ: float = ..., ltz: float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., translate: tuple[float, float, float] = ..., t: tuple[float, float, float] = ..., translateX: float = ..., tx: float = ..., translateY: float = ..., ty: float = ..., translateZ: float = ..., tz: float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyPrimitive(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polyType: int = ..., pt: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sideLength: bool | int | float = ..., l: bool | int | float = ..., texture: bool | int | int = ..., tx: bool | int | int = ...) -> Any: ...
def polyPrism(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: int = ..., cuv: int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., length: bool | int | float = ..., l: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfSides: bool | int | int = ..., ns: bool | int | int = ..., numderOfSides: bool | int | int = ..., nsi: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sideLength: bool | int | float = ..., w: bool | int | float = ..., subdivisionsCaps: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., texture: int = ..., tx: int = ...) -> Any: ...
def polyProjectCurve(*args, addUnderTransform: bool | int = ..., aut: bool | int = ..., automatic: bool | int = ..., baryCoord: tuple[float, float, float] = ..., bc: tuple[float, float, float] = ..., baryCoord1: float = ..., bc1: float = ..., baryCoord2: float = ..., bc2: float = ..., baryCoord3: float = ..., bc3: float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveSamples: int = ..., cs: int = ..., direction: bool | int | tuple[float, float, float] = ..., d: bool | int | tuple[float, float, float] = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., face: int = ..., f: int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pointsOnEdges: bool | int = ..., poe: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., triangle: int = ..., t: int = ...) -> Any: ...
def polyProjection(*args, constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., imageCenterX: float = ..., icx: float = ..., imageCenterY: float = ..., icy: float = ..., imageScaleU: float = ..., isu: float = ..., imageScaleV: float = ..., isv: float = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., keepImageRatio: bool | int = ..., kir: bool | int = ..., mapDirection: str = ..., md: str = ..., projectionCenterX: float = ..., pcx: float = ..., projectionCenterY: float = ..., pcy: float = ..., projectionCenterZ: float = ..., pcz: float = ..., projectionScaleU: float = ..., psu: float = ..., projectionScaleV: float = ..., psv: float = ..., rotateX: float = ..., rx: float = ..., rotateY: float = ..., ry: float = ..., rotateZ: float = ..., rz: float = ..., rotationAngle: float = ..., ra: float = ..., seamCorrect: bool | int = ..., sc: bool | int = ..., smartFit: bool | int = ..., sf: bool | int = ..., type: str = ..., t: str = ..., uvSetName: str = ..., uvs: str = ...) -> Any: ...
def polyPyramid(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int | int = ..., cuv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfSides: bool | int | int = ..., ns: bool | int | int = ..., numderOfSides: bool | int | int = ..., nsi: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sideLength: bool | int | float = ..., w: bool | int | float = ..., subdivisionsCaps: bool | int | int = ..., sc: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., texture: bool | int = ..., tx: bool | int = ...) -> Any: ...
def polyQuad(*args, angle: bool | int | float = ..., a: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepGroupBorder: bool | int = ..., kgb: bool | int = ..., keepHardEdges: bool | int = ..., khe: bool | int = ..., keepTextureBorders: bool | int = ..., ktb: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyQueryBlindData(*args, associationType: str = ..., at: str = ..., binaryData: str = ..., bnd: str = ..., booleanData: bool | int = ..., bd: bool | int = ..., doubleData: float = ..., dbd: float = ..., intData: int = ..., ind: int = ..., longDataName: str | list[str] = ..., ldn: str | list[str] = ..., maxValue: float = ..., max: float = ..., minValue: float = ..., min: float = ..., shortDataName: str | list[str] = ..., sdn: str | list[str] = ..., showComp: bool | int = ..., sc: bool | int = ..., stringData: str = ..., sd: str = ..., subString: str = ..., ss: str = ..., typeId: int = ..., id: int = ...) -> Any: ...
def polyReduce(*args, border: float = ..., b: float = ..., caching: bool | int = ..., cch: bool | int = ..., cachingReduce: bool | int = ..., cr: bool | int = ..., colorWeights: bool | int | float = ..., cwt: bool | int | float = ..., compactness: bool | int | float = ..., com: bool | int | float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., detail: float = ..., d: float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., geomWeights: bool | int | float = ..., gwt: bool | int | float = ..., invertVertexWeights: bool | int = ..., iwt: bool | int = ..., keepBorder: bool | int = ..., kb: bool | int = ..., keepBorderWeight: bool | int | float = ..., kbw: bool | int | float = ..., keepColorBorder: bool | int = ..., kcb: bool | int = ..., keepColorBorderWeight: bool | int | float = ..., kcw: bool | int | float = ..., keepCreaseEdge: bool | int = ..., kce: bool | int = ..., keepCreaseEdgeWeight: bool | int | float = ..., cew: bool | int | float = ..., keepFaceGroupBorder: bool | int = ..., kfb: bool | int = ..., keepFaceGroupBorderWeight: bool | int | float = ..., kfw: bool | int | float = ..., keepHardEdge: bool | int = ..., khe: bool | int = ..., keepHardEdgeWeight: bool | int | float = ..., khw: bool | int | float = ..., keepMapBorder: bool | int = ..., kmb: bool | int = ..., keepMapBorderWeight: bool | int | float = ..., kmw: bool | int | float = ..., keepOriginalVertices: bool | int = ..., kev: bool | int = ..., keepQuadsWeight: bool | int | float = ..., kqw: bool | int | float = ..., line: float = ..., l: float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., percentage: bool | int | float = ..., p: bool | int | float = ..., preserveLocation: bool | int = ..., pl: bool | int = ..., preserveTopology: bool | int = ..., top: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., sharpness: bool | int | float = ..., shp: bool | int | float = ..., symmetryPlane: tuple[float, float, float, float] = ..., sym: tuple[float, float, float, float] = ..., symmetryPlaneW: bool | int | float = ..., sw: bool | int | float = ..., symmetryPlaneX: bool | int | float = ..., sx: bool | int | float = ..., symmetryPlaneY: bool | int | float = ..., sy: bool | int | float = ..., symmetryPlaneZ: bool | int | float = ..., sz: bool | int | float = ..., symmetryTolerance: bool | int | float = ..., stl: bool | int | float = ..., termination: bool | int | int = ..., trm: bool | int | int = ..., triangleCount: bool | int | int = ..., tct: bool | int | int = ..., triangulate: bool | int = ..., t: bool | int = ..., useVirtualSymmetry: bool | int | int = ..., uvs: bool | int | int = ..., uvWeights: bool | int | float = ..., uwt: bool | int | float = ..., version: bool | int | int = ..., ver: bool | int | int = ..., vertexCount: bool | int | int = ..., vct: bool | int | int = ..., vertexMapName: bool | int | str = ..., vmp: bool | int | str = ..., vertexWeightCoefficient: bool | int | float = ..., vwc: bool | int | float = ..., weightCoefficient: bool | int | float = ..., wc: bool | int | float = ...) -> Any: ...
def polyRemesh(*args, caching: bool | int = ..., cch: bool | int = ..., collapseThreshold: bool | int | float = ..., cot: bool | int | float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., interpolationType: bool | int | int = ..., ipt: bool | int | int = ..., maxEdgeLength: bool | int | float = ..., mel: bool | int | float = ..., maxTriangleCount: int = ..., mtc: int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., smoothStrength: bool | int | float = ..., smt: bool | int | float = ..., tessellateBorders: bool | int = ..., tsb: bool | int = ..., useRelativeValues: bool | int = ..., urv: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyRetopo(*args, anisotropy: float = ..., a: float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveInfluenceDirection: float = ..., cid: float = ..., curveSingularitySeparation: float = ..., css: float = ..., edit: bool | int = ..., e: bool | int = ..., faceUniformity: float = ..., fun: float = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., preserveHardEdges: bool | int = ..., phe: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., targetEdgeDeviation: float = ..., ted: float = ..., targetFaceCount: int = ..., tfc: int = ..., targetFaceCountTolerance: int = ..., tft: int = ..., topologyRegularity: float = ..., trg: float = ...) -> Any: ...
def polyRetopoCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polySelect(*args, add: bool | int = ..., addFirst: bool | int = ..., af: bool | int = ..., asSelectString: bool | int = ..., ass: bool | int = ..., deselect: bool | int = ..., d: bool | int = ..., edgeBorder: bool | int | int | list[int] = ..., eb: bool | int | int | list[int] = ..., edgeBorderPath: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., ebp: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., edgeBorderPattern: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., bpt: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., edgeLoop: bool | int | int | list[int] = ..., el: bool | int | int | list[int] = ..., edgeLoopOrBorder: bool | int | int | list[int] = ..., elb: bool | int | int | list[int] = ..., edgeLoopOrBorderPattern: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., lbp: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., edgeLoopPath: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., elp: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., edgeLoopPattern: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., lpt: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., edgeRing: bool | int | int | list[int] = ..., er: bool | int | int | list[int] = ..., edgeRingPath: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., erp: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., edgeRingPattern: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., rpt: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., edgeUVLoopOrBorder: bool | int | int | list[int] = ..., euv: bool | int | int | list[int] = ..., everyN: int = ..., en: int = ..., extendToShell: bool | int | int | list[int] = ..., ets: bool | int | int | list[int] = ..., noSelection: bool | int = ..., ns: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replace: bool | int = ..., r: bool | int = ..., shortestEdgePath: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., sep: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., shortestEdgePathUV: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., spu: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., shortestFacePath: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., sfp: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., toggle: bool | int = ..., tgl: bool | int = ...) -> Any: ...
def polySelectConstraint(*args, angle: bool | int | int = ..., a: bool | int | int = ..., anglePropagation: bool | int = ..., ap: bool | int = ..., angleTolerance: bool | int | float = ..., at: bool | int | float = ..., anglebound: bool | int | tuple[float, float] = ..., ab: bool | int | tuple[float, float] = ..., border: bool | int = ..., bo: bool | int = ..., borderPropagation: bool | int = ..., bp: bool | int = ..., convexity: bool | int | int = ..., c: bool | int | int = ..., crease: bool | int = ..., cr: bool | int = ..., disable: bool | int = ..., dis: bool | int = ..., dist: bool | int | int = ..., d: bool | int | int = ..., distaxis: bool | int | tuple[float, float, float] = ..., da: bool | int | tuple[float, float, float] = ..., distbound: bool | int | tuple[float, float] = ..., db: bool | int | tuple[float, float] = ..., distpoint: bool | int | tuple[float, float, float] = ..., dp: bool | int | tuple[float, float, float] = ..., edgeDistance: int = ..., ed: int = ..., geometricarea: bool | int | int = ..., ga: bool | int | int = ..., geometricareabound: bool | int | tuple[float, float] = ..., gab: bool | int | tuple[float, float] = ..., holes: bool | int | int = ..., h: bool | int | int = ..., length: bool | int | int = ..., l: bool | int | int = ..., lengthbound: bool | int | tuple[float, float] = ..., lb: bool | int | tuple[float, float] = ..., loopPropagation: bool | int = ..., lp: bool | int = ..., max2dAngle: float = ..., m2a: float = ..., max3dAngle: float = ..., m3a: float = ..., mode: bool | int | int = ..., m: bool | int | int = ..., nonmanifold: bool | int | int = ..., nm: bool | int | int = ..., oppositeEdges: bool | int = ..., oe: bool | int = ..., order: bool | int | int = ..., orderbound: bool | int | tuple[int, int] = ..., orb: bool | int | tuple[int, int] = ..., orient: bool | int | int = ..., o: bool | int | int = ..., orientaxis: bool | int | tuple[float, float, float] = ..., oa: bool | int | tuple[float, float, float] = ..., orientbound: bool | int | tuple[float, float] = ..., ob: bool | int | tuple[float, float] = ..., planarity: bool | int | int = ..., p: bool | int | int = ..., propagate: bool | int | int = ..., pp: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., random: bool | int | int = ..., r: bool | int | int = ..., randomratio: bool | int | float = ..., rr: bool | int | float = ..., returnSelection: bool | int = ..., rs: bool | int = ..., ringPropagation: bool | int = ..., rp: bool | int = ..., shell: bool | int = ..., sh: bool | int = ..., size: bool | int | int = ..., sz: bool | int | int = ..., smoothness: bool | int | int = ..., sm: bool | int | int = ..., stateString: bool | int = ..., sts: bool | int = ..., textured: bool | int | int = ..., tx: bool | int | int = ..., texturedarea: bool | int | int = ..., ta: bool | int | int = ..., texturedareabound: bool | int | tuple[float, float] = ..., tab: bool | int | tuple[float, float] = ..., textureshared: bool | int | int = ..., ts: bool | int | int = ..., topology: bool | int | int = ..., tp: bool | int | int = ..., type: bool | int | int = ..., t: bool | int | int = ..., uvBorderSelection: bool | int = ..., ubs: bool | int = ..., uvConstraint: bool | int = ..., uvc: bool | int = ..., uvEdgeLoopPropagation: bool | int = ..., ulp: bool | int = ..., uvEdgeRingPropagation: bool | int = ..., urp: bool | int = ..., uvFaceOrientation: bool | int | int = ..., ufo: bool | int | int = ..., uvShell: bool | int = ..., uv: bool | int = ..., visibility: bool | int | int = ..., v: bool | int | int = ..., visibilityangle: bool | int | float = ..., va: bool | int | float = ..., visibilitypoint: bool | int | tuple[float, float, float] = ..., vp: bool | int | tuple[float, float, float] = ..., where: bool | int | int = ..., w: bool | int | int = ..., wholeSensitive: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polySelectConstraintMonitor(*args, changeCommand: tuple[str, str] = ..., cc: tuple[str, str] = ..., create: bool | int = ..., c: bool | int = ..., delete: bool | int = ..., d: bool | int = ...) -> Any: ...
def polySelectCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., mode: bool | int | int = ..., m: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polySelectEditCtx(*args, absoluteOffset: bool | int = ..., abo: bool | int = ..., adjustEdgeFlow: bool | int | float = ..., aef: bool | int | float = ..., autoComplete: bool | int = ..., ac: bool | int = ..., deleteEdge: bool | int = ..., de: bool | int = ..., divisions: bool | int | int = ..., div: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endVertexOffset: bool | int | float = ..., evo: bool | int | float = ..., exists: bool | int = ..., ex: bool | int = ..., fixQuads: bool | int = ..., fq: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., insertWithEdgeFlow: bool | int = ..., ief: bool | int = ..., mode: bool | int | int = ..., m: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., smoothingAngle: bool | int | float = ..., sma: bool | int | float = ..., splitType: bool | int | int = ..., stp: bool | int | int = ..., startVertexOffset: bool | int | float = ..., svo: bool | int | float = ..., useEqualMultiplier: bool | int = ..., uem: bool | int = ...) -> Any: ...
def polySelectSp(*args, loop: bool | int = ..., l: bool | int = ..., query: bool | int = ..., q: bool | int = ..., ring: bool | int = ..., r: bool | int = ...) -> Any: ...
def polySeparate(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endFace: int = ..., ef: int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inPlace: bool | int = ..., inp: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeShells: bool | int = ..., rs: bool | int = ..., separateSpecificShell: int | list[int] = ..., sss: int | list[int] = ..., startFace: int = ..., sf: int = ..., userSpecifiedShells: bool | int = ..., uss: bool | int = ...) -> Any: ...
def polySetToFaceNormal(*args, setUserNormal: bool | int = ..., su: bool | int = ...) -> Any: ...
def polySetVertices(*args) -> Any: ...
def polySewEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., texture: bool | int = ..., tx: bool | int = ..., tolerance: bool | int | float = ..., t: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyShortestPathCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polySlideEdge(*args, absolute: bool | int = ..., a: bool | int = ..., direction: int = ..., d: int = ..., edgeDirection: float = ..., ed: float = ..., symmetry: bool | int = ..., sym: bool | int = ...) -> Any: ...
def polySlideEdgeCtx(*args, absolute: bool | int = ..., a: bool | int = ..., direction: int = ..., d: int = ..., edgeDirection: float = ..., ed: float = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., snappingPoints: int = ..., sp: int = ..., snappingTolerance: float = ..., st: float = ..., useSnapping: bool | int = ..., us: bool | int = ...) -> Any: ...
def polySmartExtrude(*args, **kwargs): ...
def polySmooth(*args, boundaryRule: int = ..., bnr: int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., continuity: bool | int | float = ..., c: bool | int | float = ..., degree: int = ..., deg: int = ..., divisions: bool | int | int = ..., dv: bool | int | int = ..., divisionsPerEdge: int = ..., dpe: int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepBorder: bool | int = ..., kb: bool | int = ..., keepHardEdge: bool | int = ..., khe: bool | int = ..., keepMapBorders: int = ..., kmb: int = ..., keepSelectionBorder: bool | int = ..., ksb: bool | int = ..., keepTesselation: bool | int = ..., xkt: bool | int = ..., keepTessellation: bool | int = ..., kt: bool | int = ..., method: int = ..., mth: int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., osdCreaseMethod: bool | int | int = ..., ocr: bool | int | int = ..., osdFvarBoundary: bool | int | int = ..., ofb: bool | int | int = ..., osdFvarPropagateCorners: bool | int = ..., ofc: bool | int = ..., osdSmoothTriangles: bool | int = ..., ost: bool | int = ..., osdVertBoundary: bool | int | int = ..., ovb: bool | int | int = ..., propagateEdgeHardness: bool | int = ..., peh: bool | int = ..., pushStrength: float = ..., ps: float = ..., query: bool | int = ..., q: bool | int = ..., roundness: float = ..., ro: float = ..., smoothUVs: bool | int = ..., suv: bool | int = ..., subdivisionLevels: int = ..., sl: int = ..., subdivisionType: bool | int | int = ..., sdt: bool | int | int = ...) -> Any: ...
def polySoftEdge(*args, angle: bool | int | float = ..., a: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polySphere(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: int = ..., cuv: int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., texture: int = ..., tx: int = ...) -> Any: ...
def polySphericalProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., imageCenter: bool | int | tuple[float, float] = ..., ic: bool | int | tuple[float, float] = ..., imageCenterX: bool | int | float = ..., icx: bool | int | float = ..., imageCenterY: bool | int | float = ..., icy: bool | int | float = ..., imageScale: bool | int | tuple[float, float] = ..., imageScaleU: bool | int | float = ..., isu: bool | int | float = ..., imageScaleV: bool | int | float = ..., isv: bool | int | float = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., keepImageRatio: bool | int = ..., kir: bool | int = ..., mapDirection: str = ..., md: str = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., perInstance: bool | int = ..., pi: bool | int = ..., projectionCenter: bool | int | tuple[float, float, float] = ..., pc: bool | int | tuple[float, float, float] = ..., projectionCenterX: bool | int | float = ..., pcx: bool | int | float = ..., projectionCenterY: bool | int | float = ..., pcy: bool | int | float = ..., projectionCenterZ: bool | int | float = ..., pcz: bool | int | float = ..., projectionHeight: float = ..., ph: float = ..., projectionHorizontalSweep: bool | int | float = ..., phs: bool | int | float = ..., projectionScale: bool | int | tuple[float, float] = ..., ps: bool | int | tuple[float, float] = ..., projectionScaleU: bool | int | float = ..., psu: bool | int | float = ..., projectionScaleV: bool | int | float = ..., psv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., rotate: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., seamCorrect: bool | int = ..., sc: bool | int = ..., smartFit: bool | int = ..., sf: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polySpinEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., offset: int = ..., off: int = ..., query: bool | int = ..., q: bool | int = ..., reverse: bool | int = ..., rev: bool | int = ...) -> Any: ...
def polySplit(*args, adjustEdgeFlow: bool | int | float = ..., aef: bool | int | float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., detachEdges: bool | int = ..., de: bool | int = ..., edgepoint: tuple[int, float] | list[tuple[int, float]] = ..., ep: tuple[int, float] | list[tuple[int, float]] = ..., edit: bool | int = ..., e: bool | int = ..., facepoint: tuple[int, float, float, float] | list[tuple[int, float, float, float]] = ..., fp: tuple[int, float, float, float] | list[tuple[int, float, float, float]] = ..., insertWithEdgeFlow: bool | int = ..., ief: bool | int = ..., insertpoint: tuple[int, float, float, float] | list[tuple[int, float, float, float]] = ..., ip: tuple[int, float, float, float] | list[tuple[int, float, float, float]] = ..., name: str = ..., n: str = ..., projectedCurve: str | list[str] = ..., pc: str | list[str] = ..., projectedCurveTolerance: float = ..., pct: float = ..., query: bool | int = ..., q: bool | int = ..., smoothingangle: float = ..., sma: float = ..., subdivision: bool | int | int = ..., s: bool | int | int = ...) -> Any: ...
def polySplitCtx(*args, edit: bool | int = ..., e: bool | int = ..., enablesnap: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., magnetsnap: bool | int | int = ..., ms: bool | int | int = ..., precsnap: bool | int | float = ..., ps: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., smoothingangle: bool | int | float = ..., sma: bool | int | float = ..., snaptoedge: bool | int = ..., ste: bool | int = ..., subdivision: bool | int | int = ..., s: bool | int | int = ...) -> Any: ...
def polySplitCtx2(*args, adjustEdgeFlow: bool | int | float = ..., aef: bool | int | float = ..., constrainToEdges: bool | int = ..., cte: bool | int = ..., detachEdges: bool | int = ..., de: bool | int = ..., edgeMagnets: bool | int | int = ..., em: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., highlightPointColor: tuple[float, float, float] = ..., hpc: tuple[float, float, float] = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., insertWithEdgeFlow: bool | int = ..., ief: bool | int = ..., query: bool | int = ..., q: bool | int = ..., snapTolerance: bool | int | float = ..., st: bool | int | float = ..., snappedToEdgeColor: bool | int | tuple[float, float, float] = ..., sec: bool | int | tuple[float, float, float] = ..., snappedToFaceColor: bool | int | tuple[float, float, float] = ..., sfc: bool | int | tuple[float, float, float] = ..., snappedToMagnetColor: bool | int | tuple[float, float, float] = ..., smc: bool | int | tuple[float, float, float] = ..., snappedToVertexColor: bool | int | tuple[float, float, float] = ..., svc: bool | int | tuple[float, float, float] = ..., snappingTolerance: float = ..., splitLineColor: tuple[float, float, float] = ..., slc: tuple[float, float, float] = ...) -> Any: ...
def polySplitEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., operation: bool | int | int = ..., op: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polySplitRing(*args, adjustEdgeFlow: bool | int | float = ..., aef: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int = ..., dr: bool | int = ..., divisions: bool | int | int = ..., div: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., enableProfileCurve: bool | int = ..., epc: bool | int = ..., fixQuads: bool | int = ..., fq: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., insertWithEdgeFlow: bool | int = ..., ief: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., profileCurveInputOffset: bool | int | float = ..., pio: bool | int | float = ..., profileCurveInputScale: bool | int | float = ..., pis: bool | int | float = ..., profileCurve_FloatValue: bool | int | float = ..., pfv: bool | int | float = ..., profileCurve_Interp: bool | int | int = ..., pi: bool | int | int = ..., profileCurve_Position: bool | int | float = ..., pp: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., rootEdge: bool | int | int = ..., re: bool | int | int = ..., smoothingAngle: bool | int | float = ..., sma: bool | int | float = ..., splitType: bool | int | int = ..., stp: bool | int | int = ..., useEqualMultiplier: bool | int = ..., uem: bool | int = ..., useFaceNormalsAtEnds: bool | int = ..., fne: bool | int = ..., weight: bool | int | float = ..., wt: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polySplitVertex(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polyStraightenUVBorder(*args, blendOriginal: bool | int | float = ..., bo: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvature: bool | int | float = ..., c: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., gapTolerance: bool | int | int = ..., gt: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., preserveLength: bool | int | float = ..., pl: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., uvSetName: str = ..., uvs: str = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polySubdivideEdge(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., divisions: bool | int | int = ..., dv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., size: bool | int | float = ..., s: bool | int | float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def polySubdivideFacet(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., divisions: bool | int | int = ..., dv: bool | int | int = ..., divisionsU: bool | int | int = ..., duv: bool | int | int = ..., divisionsV: bool | int | int = ..., dvv: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., mode: bool | int | int = ..., m: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., subdMethod: bool | int | int = ..., sbm: bool | int | int = ...) -> Any: ...
def polySuperCtx(*args, attach: str | list[str] = ..., a: str | list[str] = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyToCurve(*args, addUnderTransform: bool | int = ..., aut: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., conformToSmoothMeshPreview: bool | int = ..., usm: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: int = ..., dg: int = ..., displaySmoothMesh: int = ..., dsm: int = ..., edit: bool | int = ..., e: bool | int = ..., form: int = ..., f: int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyToSubdiv(*args, absolutePosition: bool | int = ..., ap: bool | int = ..., addUnderTransform: bool | int = ..., aut: bool | int = ..., applyMatrixToResult: bool | int = ..., amr: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., maxEdgesPerVert: bool | int | int = ..., me: bool | int | int = ..., maxPolyCount: bool | int | int = ..., mpc: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., preserveVertexOrdering: bool | int = ..., pvo: bool | int = ..., query: bool | int = ..., q: bool | int = ..., quickConvert: bool | int = ..., qc: bool | int = ..., uvPoints: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., uvp: bool | int | tuple[float, float] | list[tuple[float, float]] = ..., uvPointsU: bool | int | float = ..., uvu: bool | int | float = ..., uvPointsV: bool | int | float = ..., uvv: bool | int | float = ..., uvTreatment: bool | int | int = ..., uvt: bool | int | int = ...) -> Any: ...
def polyTorus(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., componentTagCreate: bool | int = ..., ctc: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createUVs: bool | int = ..., cuv: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sectionRadius: bool | int | float = ..., sr: bool | int | float = ..., subdivisionsAxis: bool | int | int = ..., sa: bool | int | int = ..., subdivisionsHeight: bool | int | int = ..., sh: bool | int | int = ..., subdivisionsX: bool | int | int = ..., sx: bool | int | int = ..., subdivisionsY: bool | int | int = ..., sy: bool | int | int = ..., texture: bool | int = ..., tx: bool | int = ..., twist: bool | int | float = ..., tw: bool | int | float = ...) -> Any: ...
def polyTransfer(*args, alternateObject: bool | int | str = ..., ao: bool | int | str = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., uvSets: bool | int = ..., uv: bool | int = ..., vertexColor: bool | int = ..., vc: bool | int = ..., vertices: bool | int = ..., v: bool | int = ...) -> Any: ...
def polyTriangulate(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyUVCoverage(*args, uvRange: tuple[float, float, float, float] = ..., ur: tuple[float, float, float, float] = ...) -> Any: ...
def polyUVOverlap(*args, nonOverlappingComponents: bool | int = ..., noc: bool | int = ..., overlappingComponents: bool | int = ..., oc: bool | int = ...) -> Any: ...
def polyUVRectangle(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyUVSet(*args, allUVSets: bool | int = ..., auv: bool | int = ..., allUVSetsIndices: bool | int = ..., uvn: bool | int = ..., allUVSetsWithCount: bool | int = ..., awc: bool | int = ..., copy: bool | int = ..., cp: bool | int = ..., create: bool | int = ..., cr: bool | int = ..., currentLastUVSet: bool | int = ..., luv: bool | int = ..., currentPerInstanceUVSet: bool | int = ..., cpi: bool | int = ..., currentUVSet: bool | int = ..., cuv: bool | int = ..., delete: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., genNewUVSet: bool | int = ..., gen: bool | int = ..., newUVSet: bool | int | str = ..., nuv: bool | int | str = ..., perInstance: bool | int = ..., pi: bool | int = ..., projections: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rename: bool | int = ..., rn: bool | int = ..., reorder: bool | int = ..., ro: bool | int = ..., shareInstances: bool | int = ..., si: bool | int = ..., unshared: bool | int = ..., us: bool | int = ..., uvSet: bool | int | str = ..., uvs: bool | int | str = ...) -> Any: ...
def polyUVStackSimilarShells(*args, onlyMatch: bool | int = ..., om: bool | int = ..., tolerance: float = ..., to: float = ...) -> Any: ...
def polyUnite(*args, caching: bool | int = ..., cch: bool | int = ..., centerPivot: bool | int = ..., cp: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeUVSets: int = ..., muv: int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., objectPivot: bool | int = ..., op: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyUniteSkinned(*args, centerPivot: bool | int = ..., cp: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., mergeUVSets: bool | int | int = ..., muv: bool | int | int = ..., objectPivot: bool | int = ..., op: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def polyUnsmooth(*args, **kwargs): ...
def polyVertexNormalCtx(*args, deformmode: bool | int = ..., dm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., lockmode: int = ..., lm: int = ..., query: bool | int = ..., q: bool | int = ..., relativemode: int = ..., rm: int = ..., rotatemode: int = ..., rot: int = ...) -> Any: ...
def polyWarpImage(*args, background: tuple[int, int, int] = ..., bg: tuple[int, int, int] = ..., bilinear: bool | int = ..., b: bool | int = ..., fileFormat: str = ..., ff: str = ..., inputName: str = ..., inputUvSetName: str = ..., iuv: str = ..., noAlpha: bool | int = ..., na: bool | int = ..., outputName: str = ..., on: str = ..., outputUvSetName: str = ..., ouv: str = ..., overwrite: bool | int = ..., o: bool | int = ..., tiled: bool | int = ..., t: bool | int = ..., xResolution: int = ..., xr: int = ..., yResolution: int = ..., yr: int = ...) -> Any: ...
def polyWedgeFace(*args, axis: tuple[float, float, float] = ..., ax: tuple[float, float, float] = ..., axisX: float = ..., asx: float = ..., axisY: float = ..., asy: float = ..., axisZ: float = ..., asz: float = ..., caching: bool | int = ..., cch: bool | int = ..., center: tuple[float, float, float] = ..., cen: tuple[float, float, float] = ..., centerX: float = ..., ctx: float = ..., centerY: float = ..., cty: float = ..., centerZ: float = ..., ctz: float = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., divisions: int = ..., d: int = ..., edge: int | list[int] = ..., ed: int | list[int] = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., wedgeAngle: float = ..., wa: float = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...

popListItem: Callable
def popupMenu(*args, allowOptionBoxes: bool | int = ..., aob: bool | int = ..., altModifier: bool | int = ..., alt: bool | int = ..., button: bool | int | int = ..., b: bool | int | int = ..., ctrlModifier: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., deleteAllItems: bool | int = ..., dai: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., itemArray: bool | int = ..., ia: bool | int = ..., markingMenu: bool | int = ..., mm: bool | int = ..., numberOfItems: bool | int = ..., ni: bool | int = ..., parent: str = ..., p: str = ..., postMenuCommand: str | Callable = ..., pmc: str | Callable = ..., postMenuCommandOnce: bool | int = ..., pmo: bool | int = ..., query: bool | int = ..., q: bool | int = ..., shiftModifier: bool | int = ..., sh: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def pose(*args, allPoses: bool | int = ..., ap: bool | int = ..., apply: bool | int = ..., a: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def poseEditor(*args, control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., stateString: bool | int = ..., sts: bool | int = ..., targetControlList: bool | int = ..., tcl: bool | int = ..., targetList: bool | int = ..., tl: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def posePanel(*args, control: bool | int = ..., ctl: bool | int = ..., copy: str = ..., cp: str = ..., createString: bool | int = ..., cs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., editString: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., init: bool | int = ..., isUnique: bool | int = ..., iu: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., menuBarRepeatLast: bool | int = ..., mrl: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., needsInit: bool | int = ..., ni: bool | int = ..., parent: str = ..., p: str = ..., popupMenuProcedure: bool | int | str | Callable = ..., pmp: bool | int | str | Callable = ..., poseEditor: bool | int = ..., pe: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replacePanel: str = ..., rp: str = ..., tearOff: bool | int = ..., to: bool | int = ..., tearOffCopy: str = ..., toc: str = ..., tearOffRestore: bool | int = ..., tor: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def preferredRenderer(*args, fallback: bool | int | str = ..., f: bool | int | str = ..., makeCurrent: bool | int = ..., mc: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def preloadRefEd(*args, control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., selectCommand: bool | int | str | Callable = ..., sc: bool | int | str | Callable = ..., selectFileNode: bool | int = ..., sf: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., stateString: bool | int = ..., sts: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def prepareRender(*args, defaultTraversalSet: bool | int | str = ..., dt: bool | int | str = ..., deregister: str = ..., d: str = ..., edit: bool | int = ..., e: bool | int = ..., invokePostRender: bool | int = ..., ior: bool | int = ..., invokePostRenderFrame: bool | int = ..., iof: bool | int = ..., invokePostRenderLayer: bool | int = ..., iol: bool | int = ..., invokePreRender: bool | int = ..., irr: bool | int = ..., invokePreRenderFrame: bool | int = ..., irf: bool | int = ..., invokePreRenderLayer: bool | int = ..., irl: bool | int = ..., invokeSettingsUI: bool | int = ..., isu: bool | int = ..., label: bool | int | str = ..., lbl: bool | int | str = ..., listTraversalSets: bool | int = ..., lt: bool | int = ..., postRender: bool | int | str | Callable = ..., por: bool | int | str | Callable = ..., postRenderFrame: bool | int | str | Callable = ..., pof: bool | int | str | Callable = ..., postRenderLayer: bool | int | str | Callable = ..., pol: bool | int | str | Callable = ..., preRender: bool | int | str | Callable = ..., prr: bool | int | str | Callable = ..., preRenderFrame: bool | int | str | Callable = ..., prf: bool | int | str | Callable = ..., preRenderLayer: bool | int | str | Callable = ..., prl: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., restore: bool | int = ..., rtr: bool | int = ..., saveAssemblyConfig: bool | int = ..., sac: bool | int = ..., settingsUI: bool | int | str | Callable = ..., sui: bool | int | str | Callable = ..., setup: bool | int = ..., stp: bool | int = ..., traversalSet: bool | int | str = ..., ts: bool | int | str = ..., traversalSetInit: bool | int | str | Callable = ..., tsi: bool | int | str | Callable = ...) -> Any: ...

prependListItem: Callable
def profiler(*args, addCategory: str = ..., a: str = ..., allCategories: bool | int = ..., ac: bool | int = ..., bufferSize: bool | int | int = ..., b: bool | int | int = ..., categoryIndex: bool | int | int = ..., ci: bool | int | int = ..., categoryIndexToName: bool | int | int = ..., cin: bool | int | int = ..., categoryInfo: bool | int | str = ..., cf: bool | int | str = ..., categoryName: bool | int | str = ..., cn: bool | int | str = ..., categoryNameToIndex: bool | int | str = ..., cni: bool | int | str = ..., categoryRecording: bool | int = ..., cr: bool | int = ..., clearAllMelInstrumentation: bool | int = ..., cam: bool | int = ..., colorIndex: int = ..., coi: int = ..., eventCPUId: bool | int = ..., eci: bool | int = ..., eventCategory: bool | int = ..., eca: bool | int = ..., eventColor: bool | int = ..., eco: bool | int = ..., eventCount: bool | int = ..., ec: bool | int = ..., eventDescription: bool | int = ..., ed: bool | int = ..., eventDuration: bool | int = ..., edu: bool | int = ..., eventIndex: bool | int | int = ..., ei: bool | int | int = ..., eventName: bool | int = ..., en: bool | int = ..., eventStartTime: bool | int = ..., et: bool | int = ..., eventThreadId: bool | int = ..., eti: bool | int = ..., instrumentMel: bool | int = ..., load: bool | int | str = ..., l: bool | int | str = ..., output: bool | int | str = ..., o: bool | int | str = ..., procedureDescription: str = ..., pd: str = ..., procedureName: str = ..., pn: str = ..., query: bool | int = ..., q: bool | int = ..., removeCategory: str = ..., rc: str = ..., reset: bool | int = ..., r: bool | int = ..., sampling: bool | int = ..., s: bool | int = ..., signalEvent: bool | int = ..., sig: bool | int = ..., signalMelEvent: bool | int = ..., sim: bool | int = ...) -> Any: ...
def profilerTool(*args, categoryView: bool | int = ..., cat: bool | int = ..., collapseSelectedEvents: bool | int = ..., cs: bool | int = ..., collapseSelectedEventsRepetition: bool | int = ..., csr: bool | int = ..., cpuView: bool | int = ..., cpu: bool | int = ..., destroy: bool | int = ..., dtr: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., eventTypes: bool | int = ..., et: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., expandSelectedEvents: bool | int = ..., es: bool | int = ..., expandSelectedEventsRepetition: bool | int = ..., esr: bool | int = ..., findNext: bool | int = ..., fn: bool | int = ..., findPrevious: bool | int = ..., fp: bool | int = ..., frameAll: bool | int = ..., fa: bool | int = ..., frameSelected: bool | int = ..., fs: bool | int = ..., isolateSegment: int = ..., make: bool | int = ..., mk: bool | int = ..., matchWholeWord: bool | int = ..., mww: bool | int = ..., query: bool | int = ..., q: bool | int = ..., searchEvent: bool | int | str = ..., se: bool | int | str = ..., segmentCount: bool | int = ..., sc: bool | int = ..., showAllEvent: bool | int = ..., sa: bool | int = ..., showCriticalPath: bool | int = ..., scp: bool | int = ..., showHotspot: bool | int = ..., sh: bool | int = ..., showSelectedEvents: bool | int = ..., ss: bool | int = ..., showSelectedEventsRepetition: bool | int = ..., ssr: bool | int = ..., threadView: bool | int = ..., thd: bool | int = ..., unisolateSegment: bool | int = ..., uis: bool | int = ...) -> Any: ...
def progressBar(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., beginProgress: bool | int = ..., bp: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., endProgress: bool | int = ..., ep: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isCancelled: bool | int = ..., ic: bool | int = ..., isInterruptable: bool | int = ..., ii: bool | int = ..., isMainProgressBar: bool | int = ..., imp: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., maxValue: bool | int | int = ..., max: bool | int | int = ..., minValue: bool | int | int = ..., min: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., progress: bool | int | int = ..., pr: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., status: bool | int | str = ..., st: bool | int | str = ..., statusBarMessage: str = ..., sbm: str = ..., step: int = ..., s: int = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def progressWindow(*args, edit: bool | int = ..., e: bool | int = ..., endProgress: bool | int = ..., ep: bool | int = ..., isCancelled: bool | int = ..., ic: bool | int = ..., isInterruptable: bool | int = ..., ii: bool | int = ..., maxValue: bool | int | int = ..., max: bool | int | int = ..., minValue: bool | int | int = ..., min: bool | int | int = ..., progress: bool | int | int = ..., pr: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., status: bool | int | str = ..., st: bool | int | str = ..., step: int = ..., s: int = ..., title: bool | int | str = ..., t: bool | int | str = ...) -> Any: ...
def projectCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | tuple[float, float, float] = ..., d: bool | int | tuple[float, float, float] = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useNormal: bool | int = ..., un: bool | int = ...) -> Any: ...
def projectTangent(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curvature: bool | int = ..., c: bool | int = ..., curvatureScale: bool | int | float = ..., cs: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., ignoreEdges: bool | int = ..., ie: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reverseTangent: bool | int = ..., rt: bool | int = ..., rotate: bool | int | float = ..., ro: bool | int | float = ..., tangentDirection: bool | int | int = ..., td: bool | int | int = ..., tangentScale: bool | int | float = ..., ts: bool | int | float = ...) -> Any: ...
def projectionContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def projectionManip(*args, fitBBox: bool | int = ..., fb: bool | int = ..., projType: int = ..., pt: int = ..., query: bool | int = ..., q: bool | int = ..., switchType: bool | int = ..., st: bool | int = ...) -> Any: ...
def promptDialog(*args, backgroundColor: tuple[float, float, float] = ..., bgc: tuple[float, float, float] = ..., button: str | list[str] = ..., b: str | list[str] = ..., cancelButton: str = ..., cb: str = ..., defaultButton: str = ..., db: str = ..., dismissString: str = ..., ds: str = ..., message: str = ..., m: str = ..., messageAlign: str = ..., ma: str = ..., parent: str = ..., p: str = ..., query: bool | int = ..., q: bool | int = ..., scrollableField: bool | int = ..., sf: bool | int = ..., style: str = ..., st: str = ..., text: bool | int | str = ..., tx: bool | int | str = ..., title: str = ..., t: str = ...) -> Any: ...
def propModCtx(*args, animCurve: bool | int | str = ..., ac: bool | int | str = ..., animCurveFalloff: bool | int | tuple[float, float] = ..., acf: bool | int | tuple[float, float] = ..., animCurveParam: bool | int | str = ..., acp: bool | int | str = ..., direction: bool | int | tuple[float, float, float] = ..., d: bool | int | tuple[float, float, float] = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., linear: bool | int | float = ..., l: bool | int | float = ..., linearParam: bool | int | tuple[float, float] = ..., lp: bool | int | tuple[float, float] = ..., nurbsCurve: bool | int | str = ..., nc: bool | int | str = ..., powerCutoff: bool | int | float = ..., pc: bool | int | float = ..., powerCutoffParam: bool | int | tuple[float, float] = ..., pcp: bool | int | tuple[float, float] = ..., powerDegree: bool | int | float = ..., pd: bool | int | float = ..., powerDegreeParam: bool | int | float = ..., pdp: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., script: bool | int | str = ..., s: bool | int | str = ..., scriptParam: bool | int | str = ..., sp: bool | int | str = ..., type: bool | int | int = ..., t: bool | int | int = ..., worldspace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def propMove(*args, percent: float | list[float] = ..., p: float | list[float] = ..., percentX: float | list[float] = ..., px: float | list[float] = ..., percentY: float | list[float] = ..., py: float | list[float] = ..., percentZ: float | list[float] = ..., pz: float | list[float] = ..., pivot: tuple[float, float, float] = ..., pi: tuple[float, float, float] = ..., rotate: tuple[float, float, float] = ..., r: tuple[float, float, float] = ..., scale: tuple[float, float, float] = ..., s: tuple[float, float, float] = ..., translate: tuple[float, float, float] = ..., t: tuple[float, float, float] = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def proximityWrap(*args, **kwargs): ...
def python(*args) -> Any: ...
def quit(*args, abort: bool | int = ..., a: bool | int = ..., exitCode: int = ..., ec: int = ..., force: bool | int = ..., f: bool | int = ...) -> Any: ...
def radial(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., type: bool | int | float = ..., typ: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | tuple[float, float, float] = ..., vof: bool | int | tuple[float, float, float] = ..., volumeShape: bool | int | str = ..., vsh: bool | int | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...
def radioButton(*args, align: bool | int | str = ..., al: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., collection: str = ..., cl: str = ..., data: bool | int | int = ..., da: bool | int | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., offCommand: str | Callable = ..., ofc: str | Callable = ..., onCommand: str | Callable = ..., onc: str | Callable = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., recomputeSize: bool | int = ..., rs: bool | int = ..., select: bool | int = ..., sl: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def radioButtonGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., annotation1: bool | int | str = ..., an1: bool | int | str = ..., annotation2: bool | int | str = ..., an2: bool | int | str = ..., annotation3: bool | int | str = ..., an3: bool | int | str = ..., annotation4: bool | int | str = ..., an4: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., changeCommand1: str | Callable = ..., cc1: str | Callable = ..., changeCommand2: str | Callable = ..., cc2: str | Callable = ..., changeCommand3: str | Callable = ..., cc3: str | Callable = ..., changeCommand4: str | Callable = ..., cc4: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., data1: bool | int | int = ..., da1: bool | int | int = ..., data2: bool | int | int = ..., da2: bool | int | int = ..., data3: bool | int | int = ..., da3: bool | int | int = ..., data4: bool | int | int = ..., da4: bool | int | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enable1: bool | int = ..., en1: bool | int = ..., enable2: bool | int = ..., en2: bool | int = ..., enable3: bool | int = ..., en3: bool | int = ..., enable4: bool | int = ..., en4: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., label1: bool | int | str = ..., l1: bool | int | str = ..., label2: bool | int | str = ..., l2: bool | int | str = ..., label3: bool | int | str = ..., l3: bool | int | str = ..., label4: bool | int | str = ..., l4: bool | int | str = ..., labelAnnotation: bool | int | str = ..., la: bool | int | str = ..., labelArray2: bool | int | tuple[str, str] = ..., la2: bool | int | tuple[str, str] = ..., labelArray3: bool | int | tuple[str, str, str] = ..., la3: bool | int | tuple[str, str, str] = ..., labelArray4: bool | int | tuple[str, str, str, str] = ..., la4: bool | int | tuple[str, str, str, str] = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., numberOfRadioButtons: int = ..., nrb: int = ..., offCommand: str | Callable = ..., ofc: str | Callable = ..., offCommand1: str | Callable = ..., of1: str | Callable = ..., offCommand2: str | Callable = ..., of2: str | Callable = ..., offCommand3: str | Callable = ..., of3: str | Callable = ..., offCommand4: str | Callable = ..., of4: str | Callable = ..., onCommand: str | Callable = ..., onc: str | Callable = ..., onCommand1: str | Callable = ..., on1: str | Callable = ..., onCommand2: str | Callable = ..., on2: str | Callable = ..., onCommand3: str | Callable = ..., on3: str | Callable = ..., onCommand4: str | Callable = ..., on4: str | Callable = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., select: bool | int | int = ..., sl: bool | int | int = ..., shareCollection: str = ..., scl: str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., vertical: bool | int = ..., vr: bool | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def radioCollection(*args, collectionItemArray: bool | int = ..., cia: bool | int = ..., defineTemplate: str = ..., dt: str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., gl: bool | int = ..., numberOfCollectionItems: bool | int = ..., nci: bool | int = ..., parent: str = ..., p: str = ..., query: bool | int = ..., q: bool | int = ..., select: bool | int | str = ..., sl: bool | int | str = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def radioMenuItemCollection(*args, defineTemplate: str = ..., dt: str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., gl: bool | int = ..., parent: str = ..., p: str = ..., query: bool | int = ..., q: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def rampColorPort(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., node: str = ..., n: str = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., selectedColorControl: str = ..., sc: str = ..., selectedInterpControl: str = ..., si: str = ..., selectedPositionControl: str = ..., sp: str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., verticalLayout: bool | int = ..., vl: bool | int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def rangeControl(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changedCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., maxRange: bool | int | int | float = ..., max: bool | int | int | float = ..., minRange: bool | int | int | float = ..., min: bool | int | int | float = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ..., widthHeight: tuple[int, int] = ..., wh: tuple[int, int] = ...) -> Any: ...
def readPDC(*args, file: str = ..., f: str = ..., test: bool | int = ..., t: bool | int = ...) -> Any: ...
def readTake(*args, angle: str = ..., a: str = ..., device: str = ..., d: str = ..., frequency: float = ..., f: float = ..., linear: str = ..., l: str = ..., noTime: bool | int = ..., nt: bool | int = ..., take: str = ..., t: str = ...) -> Any: ...
def rebuildCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endKnots: bool | int | int = ..., end: bool | int | int = ..., fitRebuild: bool | int = ..., fr: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepControlPoints: bool | int = ..., kcp: bool | int = ..., keepEndPoints: bool | int = ..., kep: bool | int = ..., keepRange: bool | int | int = ..., kr: bool | int | int = ..., keepTangents: bool | int = ..., kt: bool | int = ..., name: str = ..., n: str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., rebuildType: bool | int | int = ..., rt: bool | int | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., smartSurfaceCurveRebuild: bool | int = ..., scr: bool | int = ..., smooth: float = ..., sm: float = ..., spans: bool | int | int = ..., s: bool | int | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...) -> Any: ...
def rebuildSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degreeU: bool | int | int = ..., du: bool | int | int = ..., degreeV: bool | int | int = ..., dv: bool | int | int = ..., direction: bool | int | int = ..., dir: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endKnots: bool | int | int = ..., end: bool | int | int = ..., fitRebuild: bool | int | int = ..., fr: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepControlPoints: bool | int = ..., kcp: bool | int = ..., keepCorners: bool | int = ..., kc: bool | int = ..., keepRange: bool | int | int = ..., kr: bool | int | int = ..., name: str = ..., n: str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., rebuildType: bool | int | int = ..., rt: bool | int | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., spansU: bool | int | int = ..., su: bool | int | int = ..., spansV: bool | int | int = ..., sv: bool | int | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...) -> Any: ...
def recordAttr(*args, attribute: str | list[str] = ..., at: str | list[str] = ..., delete: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def recordDevice(*args, cleanup: bool | int = ..., c: bool | int = ..., data: bool | int = ..., da: bool | int = ..., device: str | list[str] = ..., d: str | list[str] = ..., duration: bool | int | int = ..., dr: bool | int | int = ..., playback: bool | int = ..., p: bool | int = ..., state: bool | int = ..., st: bool | int = ..., wait: bool | int = ..., w: bool | int = ...) -> Any: ...
def redo(*args) -> Any: ...
def reference(*args, connectionsBroken: bool | int = ..., cb: bool | int = ..., connectionsMade: bool | int = ..., cm: bool | int = ..., dagPath: bool | int = ..., dp: bool | int = ..., editCommand: str = ..., ec: str = ..., filename: str = ..., f: str = ..., isNodeReferenced: bool | int = ..., inr: bool | int = ..., longName: bool | int = ..., ln: bool | int = ..., node: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., referenceNode: str = ..., rfn: str = ..., shortName: bool | int = ..., sn: bool | int = ...) -> Any: ...
def referenceEdit(*args, applyFailedEdits: bool | int = ..., afe: bool | int = ..., changeEditTarget: tuple[str, str] = ..., cet: tuple[str, str] = ..., editCommand: bool | int | str | list[str] = ..., ec: bool | int | str | list[str] = ..., failedEdits: bool | int = ..., fld: bool | int = ..., onReferenceNode: bool | int | str | list[str] = ..., orn: bool | int | str | list[str] = ..., removeEdits: bool | int = ..., r: bool | int = ..., successfulEdits: bool | int = ..., scs: bool | int = ...) -> Any: ...
def referenceQuery(*args, child: bool | int = ..., ch: bool | int = ..., dagPath: bool | int = ..., dp: bool | int = ..., editAttrs: bool | int = ..., ea: bool | int = ..., editCommand: bool | int | str | list[str] = ..., ec: bool | int | str | list[str] = ..., editNodes: bool | int = ..., en: bool | int = ..., editStrings: bool | int = ..., es: bool | int = ..., failedEdits: bool | int = ..., fld: bool | int = ..., filename: bool | int = ..., f: bool | int = ..., isExportEdits: bool | int = ..., iee: bool | int = ..., isLoaded: bool | int = ..., il: bool | int = ..., isNodeReferenced: bool | int = ..., inr: bool | int = ..., isPreviewOnly: bool | int = ..., ipo: bool | int = ..., liveEdits: bool | int = ..., le: bool | int = ..., namespace: bool | int = ..., ns: bool | int = ..., nodes: bool | int = ..., n: bool | int = ..., onReferenceNode: bool | int | str | list[str] = ..., orn: bool | int | str | list[str] = ..., parent: bool | int = ..., p: bool | int = ..., parentNamespace: bool | int = ..., pns: bool | int = ..., referenceNode: bool | int = ..., rfn: bool | int = ..., shortName: bool | int = ..., shn: bool | int = ..., showDagPath: bool | int = ..., sdp: bool | int = ..., showNamespace: bool | int = ..., sns: bool | int = ..., successfulEdits: bool | int = ..., scs: bool | int = ..., topReference: bool | int = ..., tr: bool | int = ..., unresolvedName: bool | int = ..., un: bool | int = ..., withoutCopyNumber: bool | int = ..., wcn: bool | int = ...) -> Any: ...
def refresh(*args, currentView: bool | int = ..., cv: bool | int = ..., fileExtension: str = ..., fe: str = ..., filename: str = ..., fn: str = ..., force: bool | int = ..., f: bool | int = ..., suspend: bool | int = ..., su: bool | int = ...) -> Any: ...
def refreshEditorTemplates(*args) -> Any: ...
def regionSelectKeyCtx(*args, bottomManip: bool | int | float = ..., bot: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., leftManip: bool | int | float = ..., lft: bool | int | float = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., rightManip: bool | int | float = ..., rgt: bool | int | float = ..., topManip: bool | int | float = ..., top: bool | int | float = ...) -> Any: ...
def rehash(*args) -> Any: ...
def relationship(*args, b: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., relationshipData: bool | int | str | list[str] = ..., rd: bool | int | str | list[str] = ...) -> Any: ...
def reloadImage(*args) -> Any: ...
def rememberCtxSettings(*args) -> Any: ...
def removeJoint(*args) -> Any: ...

removeListItem: Callable
def removeMultiInstance(*args, allChildren: bool | int = ..., all: bool | int = ..., b: bool | int = ...) -> Any: ...
def rename(*args, ignoreShape: bool | int = ..., uuid: bool | int = ..., uid: bool | int = ...) -> Any: ...
def renameAttr(*args) -> Any: ...
def renameUI(*args) -> Any: ...
def render(*args, abortMissingTexture: bool | int = ..., amt: bool | int = ..., batch: bool | int = ..., b: bool | int = ..., keepPreImage: bool | int = ..., kpi: bool | int = ..., layer: str = ..., l: str = ..., nglowpass: bool | int = ..., ngl: bool | int = ..., nshadows: bool | int = ..., nsh: bool | int = ..., replace: bool | int = ..., rep: bool | int = ..., xresolution: int = ..., x: int = ..., yresolution: int = ..., y: int = ...) -> Any: ...
def renderGlobalsNode(*args, name: str = ..., n: str = ..., parent: str = ..., p: str = ..., renderQuality: str = ..., rq: str = ..., renderResolution: str = ..., rr: str = ..., shared: bool | int = ..., s: bool | int = ..., skipSelect: bool | int = ..., ss: bool | int = ...) -> Any: ...
def renderInfo(*args, castShadows: bool | int = ..., cs: bool | int = ..., chordHeight: float = ..., ch: float = ..., chordHeightRatio: float = ..., chr: float = ..., doubleSided: bool | int = ..., ds: bool | int = ..., edgeSwap: bool | int = ..., es: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., minScreen: float = ..., ms: float = ..., name: str = ..., n: str = ..., opposite: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., smoothShading: bool | int = ..., ss: bool | int = ..., unum: int = ..., un: int = ..., useChordHeight: bool | int = ..., uch: bool | int = ..., useChordHeightRatio: bool | int = ..., ucr: bool | int = ..., useDefaultLights: bool | int = ..., udl: bool | int = ..., useMinScreen: bool | int = ..., ums: bool | int = ..., utype: int = ..., ut: int = ..., vnum: int = ..., vn: int = ..., vtype: int = ..., vt: int = ...) -> Any: ...

renderLayerMembers: Callable
def renderLayerPostProcess(*args, keepImages: bool | int = ..., ki: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sceneName: bool | int | str = ..., sn: bool | int | str = ...) -> Any: ...
def renderManip(*args, camera: bool | int | tuple[bool | int, bool | int, bool | int, bool | int, bool | int] = ..., cam: bool | int | tuple[bool | int, bool | int, bool | int, bool | int, bool | int] = ..., edit: bool | int = ..., e: bool | int = ..., light: bool | int | tuple[bool | int, bool | int, bool | int] = ..., lt: bool | int | tuple[bool | int, bool | int, bool | int] = ..., query: bool | int = ..., q: bool | int = ..., spotLight: bool | int | tuple[bool | int, bool | int, bool | int, bool | int, bool | int, bool | int, bool | int] = ..., slt: bool | int | tuple[bool | int, bool | int, bool | int, bool | int, bool | int, bool | int, bool | int] = ..., state: bool | int = ..., st: bool | int = ...) -> Any: ...
def renderPartition(*args, query: bool | int = ..., q: bool | int = ...) -> Any: ...
def renderPassRegistry(*args, channels: int = ..., ch: int = ..., isPassSupported: bool | int = ..., ips: bool | int = ..., passID: str = ..., pi: str = ..., passName: bool | int = ..., pn: bool | int = ..., renderer: str = ..., r: str = ..., supportedChannelCounts: bool | int = ..., scc: bool | int = ..., supportedDataTypes: bool | int = ..., sdt: bool | int = ..., supportedPassSemantics: bool | int = ..., ps: bool | int = ..., supportedRenderPassNames: bool | int = ..., spn: bool | int = ..., supportedRenderPasses: bool | int = ..., srp: bool | int = ...) -> Any: ...
def renderQualityNode(*args, name: str = ..., n: str = ..., parent: str = ..., p: str = ..., shared: bool | int = ..., s: bool | int = ..., skipSelect: bool | int = ..., ss: bool | int = ...) -> Any: ...
def renderSettings(*args, camera: str = ..., cam: str = ..., customTokenString: str = ..., cts: str = ..., firstImageName: bool | int = ..., fin: bool | int = ..., fullPath: bool | int = ..., fp: bool | int = ..., fullPathTemp: bool | int = ..., fpt: bool | int = ..., genericFrameImageName: str = ..., gin: str = ..., imageGenericName: bool | int = ..., ign: bool | int = ..., lastImageName: bool | int = ..., lin: bool | int = ..., layer: str = ..., lyr: str = ..., leaveUnmatchedTokens: bool | int = ..., lut: bool | int = ...) -> Any: ...

renderSetup: Callable
renderSetupFind: Callable
renderSetupLegacyLayer: Callable
renderSetupLocalOverride: Callable
renderSetupPostApply: Callable
renderSetupSwitchVisibleRenderLayer: Callable
def renderThumbnailUpdate(*args, forceUpdate: str = ..., fu: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def renderWindowEditor(*args, autoResize: bool | int = ..., ar: bool | int = ..., blendMode: bool | int | int = ..., blm: bool | int | int = ..., caption: bool | int | str = ..., cap: bool | int | str = ..., changeCommand: bool | int | tuple[str, str, str, str] = ..., cc: bool | int | tuple[str, str, str, str] = ..., clear: bool | int | tuple[int, int, float, float, float] = ..., cl: bool | int | tuple[int, int, float, float, float] = ..., cmEnabled: bool | int = ..., cme: bool | int = ..., colorManage: bool | int = ..., com: bool | int = ..., compDisplay: bool | int | int = ..., cd: bool | int | int = ..., compImageFile: bool | int | str = ..., cif: bool | int | str = ..., control: bool | int = ..., ctl: bool | int = ..., currentCamera: bool | int | str = ..., crc: bool | int | str = ..., currentCameraRig: bool | int | str = ..., crg: bool | int | str = ..., defineTemplate: str = ..., dt: str = ..., displayImage: bool | int | int = ..., di: bool | int | int = ..., displayImageViewCount: bool | int | int = ..., dvc: bool | int | int = ..., displayStyle: bool | int | str = ..., dst: bool | int | str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., doubleBuffer: bool | int = ..., dbf: bool | int = ..., drawAxis: bool | int = ..., da: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., editorName: bool | int = ..., en: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., exposure: bool | int | float = ..., exp: bool | int | float = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., frameImage: bool | int = ..., fi: bool | int = ..., frameRegion: bool | int = ..., fr: bool | int = ..., gamma: bool | int | float = ..., ga: bool | int | float = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., loadImage: str = ..., li: str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., marquee: bool | int | tuple[float, float, float, float] = ..., mq: bool | int | tuple[float, float, float, float] = ..., nbImages: bool | int = ..., nim: bool | int = ..., nextViewImage: bool | int = ..., nvi: bool | int = ..., outputColorManage: bool | int = ..., ocm: bool | int = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., pcaption: bool | int | str = ..., pca: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., realSize: bool | int = ..., rs: bool | int = ..., refresh: bool | int = ..., ref: bool | int = ..., removeAllImages: bool | int = ..., ra: bool | int = ..., removeImage: bool | int = ..., ri: bool | int = ..., resetRegion: bool | int = ..., rr: bool | int = ..., resetViewImage: bool | int = ..., rvi: bool | int = ..., saveImage: bool | int = ..., si: bool | int = ..., scaleBlue: bool | int | float = ..., sb: bool | int | float = ..., scaleGreen: bool | int | float = ..., sg: bool | int | float = ..., scaleRed: bool | int | float = ..., sr: bool | int | float = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., showRegion: bool | int | tuple[int, int] = ..., srg: bool | int | tuple[int, int] = ..., singleBuffer: bool | int = ..., sbf: bool | int = ..., snapshot: bool | int | tuple[str, int, int] = ..., snp: bool | int | tuple[str, int, int] = ..., snapshotMode: bool | int = ..., snm: bool | int = ..., stateString: bool | int = ..., sts: bool | int = ..., stereo: bool | int | int = ..., s: bool | int | int = ..., stereoImageOrientation: bool | int | tuple[str, str] = ..., sio: bool | int | tuple[str, str] = ..., stereoMode: bool | int | str = ..., sm: bool | int | str = ..., toggle: bool | int = ..., tgl: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ..., viewImageCount: bool | int | int = ..., vic: bool | int | int = ..., viewTransformName: bool | int | str = ..., vtn: bool | int | str = ..., writeImage: str = ..., wi: str = ...) -> Any: ...
def renderWindowSelectContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def renderer(*args, addGlobalsNode: bool | int | str = ..., agn: bool | int | str = ..., addGlobalsTab: tuple[str, str, str] = ..., agt: tuple[str, str, str] = ..., batchRenderOptionsProcedure: bool | int | str = ..., bro: bool | int | str = ..., batchRenderOptionsStringProcedure: bool | int | str = ..., bso: bool | int | str = ..., batchRenderProcedure: bool | int | str = ..., br: bool | int | str = ..., cancelBatchRenderProcedure: bool | int | str = ..., cbr: bool | int | str = ..., changeIprRegionProcedure: bool | int | str = ..., cir: bool | int | str = ..., commandRenderProcedure: bool | int | str = ..., cr: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., globalsNodes: bool | int = ..., gn: bool | int = ..., globalsTabCreateProcNames: bool | int = ..., gtc: bool | int = ..., globalsTabLabels: bool | int = ..., gtl: bool | int = ..., globalsTabUpdateProcNames: bool | int = ..., gtu: bool | int = ..., iprOptionsMenuLabel: bool | int | str = ..., ipm: bool | int | str = ..., iprOptionsProcedure: bool | int | str = ..., io: bool | int | str = ..., iprOptionsSubMenuProcedure: bool | int | str = ..., ips: bool | int | str = ..., iprRenderProcedure: bool | int | str = ..., ipr: bool | int | str = ..., iprRenderSubMenuProcedure: bool | int | str = ..., irs: bool | int | str = ..., isRunningIprProcedure: bool | int | str = ..., isr: bool | int | str = ..., logoCallbackProcedure: bool | int | str = ..., lgc: bool | int | str = ..., logoImageName: bool | int | str = ..., log: bool | int | str = ..., materialViewRendererList: bool | int = ..., mvl: bool | int = ..., materialViewRendererPause: bool | int = ..., mvp: bool | int = ..., materialViewRendererSuspend: bool | int = ..., mvs: bool | int = ..., namesOfAvailableRenderers: bool | int = ..., ava: bool | int = ..., pauseIprRenderProcedure: bool | int | str = ..., psi: bool | int | str = ..., polyPrelightProcedure: bool | int | str = ..., pp: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., refreshIprRenderProcedure: bool | int | str = ..., rfi: bool | int | str = ..., renderDiagnosticsProcedure: bool | int | str = ..., rd: bool | int | str = ..., renderGlobalsProcedure: bool | int | str = ..., rg: bool | int | str = ..., renderMenuProcedure: bool | int | str = ..., rm: bool | int | str = ..., renderOptionsProcedure: bool | int | str = ..., ro: bool | int | str = ..., renderProcedure: bool | int | str = ..., r: bool | int | str = ..., renderRegionProcedure: bool | int | str = ..., rr: bool | int | str = ..., renderSequenceProcedure: bool | int | str = ..., rs: bool | int | str = ..., rendererUIName: bool | int | str = ..., ui: bool | int | str = ..., renderingEditorsSubMenuProcedure: bool | int | str = ..., res: bool | int | str = ..., showBatchRenderLogProcedure: bool | int | str = ..., brl: bool | int | str = ..., showBatchRenderProcedure: bool | int | str = ..., sbr: bool | int | str = ..., showRenderLogProcedure: bool | int | str = ..., srl: bool | int | str = ..., startIprRenderProcedure: bool | int | str = ..., sti: bool | int | str = ..., stopIprRenderProcedure: bool | int | str = ..., spi: bool | int | str = ..., supportColorManagement: bool | int = ..., scm: bool | int = ..., textureBakingProcedure: bool | int | str = ..., tb: bool | int | str = ..., unregisterRenderer: bool | int = ..., unr: bool | int = ...) -> Any: ...
def reorder(*args, back: bool | int = ..., b: bool | int = ..., front: bool | int = ..., f: bool | int = ..., relative: int = ..., r: int = ...) -> Any: ...
def reorderContainer(*args, back: bool | int = ..., b: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., front: bool | int = ..., f: bool | int = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int | int = ..., r: bool | int | int = ...) -> Any: ...
def reorderDeformers(*args, name: str = ..., n: str = ...) -> Any: ...
def repeatLast(*args, addCommand: str = ..., ac: str = ..., addCommandLabel: str = ..., acl: str = ..., commandList: int = ..., cl: int = ..., commandNameList: int = ..., cnl: int = ..., edit: bool | int = ..., e: bool | int = ..., historyLimit: int = ..., hl: int = ..., item: int = ..., i: int = ..., numberOfHistoryItems: bool | int = ..., nhi: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...

replaceCacheFrames: Callable
replaceCacheFramesOpt: Callable
def requires(*args, dataType: str | list[str] = ..., dt: str | list[str] = ..., nodeType: str | list[str] = ..., nt: str | list[str] = ...) -> Any: ...
def reroot(*args) -> Any: ...
def resampleFluid(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., resampleDepth: bool | int | int = ..., rd: bool | int | int = ..., resampleHeight: bool | int | int = ..., rh: bool | int | int = ..., resampleWidth: bool | int | int = ..., rw: bool | int | int = ...) -> Any: ...
def resetTool(*args) -> Any: ...
def resolutionNode(*args, name: str = ..., n: str = ..., parent: str = ..., p: str = ..., shared: bool | int = ..., s: bool | int = ..., skipSelect: bool | int = ..., ss: bool | int = ...) -> Any: ...
def resourceManager(*args, nameFilter: str = ..., nf: str = ..., saveAs: tuple[str, str] = ..., s: tuple[str, str] = ...) -> Any: ...
def retimeHelper(*args, deleteFrame: int = ..., df: int = ..., edit: bool | int = ..., e: bool | int = ..., frame: float = ..., f: float = ..., lockBar: tuple[int, int] = ..., lb: tuple[int, int] = ..., locks: int = ..., lk: int = ..., mouseOver: bool | int = ..., mo: bool | int = ..., moveFrame: tuple[int, float] = ..., mf: tuple[int, float] = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def retimeKeyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., moveByFrame: int = ..., mbf: int = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., snapOnFrame: bool | int = ..., sof: bool | int = ...) -> Any: ...
def reverseCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rn: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...) -> Any: ...
def reverseSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ...) -> Any: ...
def revolve(*args, autoCorrectNormal: bool | int = ..., acn: bool | int = ..., axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., axisChoice: bool | int | int = ..., aco: bool | int | int = ..., axisX: bool | int | float = ..., axx: bool | int | float = ..., axisY: bool | int | float = ..., axy: bool | int | float = ..., axisZ: bool | int | float = ..., axz: bool | int | float = ..., bridge: bool | int = ..., br: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., computePivotAndAxis: bool | int | int = ..., cpa: bool | int | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: bool | int | float = ..., esw: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., mergeItems: bool | int = ..., mi: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., pivotX: bool | int | float = ..., px: bool | int | float = ..., pivotY: bool | int | float = ..., py: bool | int | float = ..., pivotZ: bool | int | float = ..., pz: bool | int | float = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., radiusAnchor: bool | int | float = ..., ra: bool | int | float = ..., range: bool | int = ..., rn: bool | int = ..., rebuild: bool | int = ..., rb: bool | int = ..., sections: bool | int | int = ..., s: bool | int | int = ..., startSweep: bool | int | float = ..., ssw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useLocalPivot: bool | int = ..., ulp: bool | int = ..., useTolerance: bool | int = ..., ut: bool | int = ...) -> Any: ...
def rigidBody(*args, active: bool | int = ..., act: bool | int = ..., angularVelocity: bool | int = ..., av: bool | int = ..., applyForceAt: bool | int | str = ..., afa: bool | int | str = ..., bounciness: bool | int | float = ..., b: bool | int | float = ..., cache: bool | int = ..., c: bool | int = ..., centerOfMass: bool | int | tuple[float, float, float] = ..., com: bool | int | tuple[float, float, float] = ..., collisions: bool | int = ..., cl: bool | int = ..., contactCount: bool | int = ..., cc: bool | int = ..., contactName: bool | int = ..., cn: bool | int = ..., contactPosition: bool | int = ..., cp: bool | int = ..., damping: bool | int | float = ..., dp: bool | int | float = ..., deleteCache: bool | int = ..., dc: bool | int = ..., dynamicFriction: bool | int | float = ..., df: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., force: bool | int = ..., f: bool | int = ..., ignore: bool | int = ..., ig: bool | int = ..., impulse: tuple[float, float, float] = ..., i: tuple[float, float, float] = ..., impulsePosition: tuple[float, float, float] = ..., imp: tuple[float, float, float] = ..., initialAngularVelocity: bool | int | tuple[float, float, float] = ..., iav: bool | int | tuple[float, float, float] = ..., initialVelocity: bool | int | tuple[float, float, float] = ..., iv: bool | int | tuple[float, float, float] = ..., layer: bool | int | int = ..., l: bool | int | int = ..., lockCenterOfMass: bool | int = ..., lcm: bool | int = ..., mass: bool | int | float = ..., m: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., orientation: bool | int | tuple[float, float, float] = ..., o: bool | int | tuple[float, float, float] = ..., particleCollision: bool | int = ..., pc: bool | int = ..., passive: bool | int = ..., pas: bool | int = ..., position: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., removeShape: bool | int | str = ..., rs: bool | int | str = ..., solver: bool | int | str = ..., slv: bool | int | str = ..., spinImpulse: tuple[float, float, float] = ..., si: tuple[float, float, float] = ..., standInObject: bool | int | str = ..., sio: bool | int | str = ..., staticFriction: bool | int | float = ..., sf: bool | int | float = ..., tesselationFactor: bool | int | int = ..., tf: bool | int | int = ..., velocity: bool | int = ..., vel: bool | int = ...) -> Any: ...
def rigidSolver(*args, autoTolerances: bool | int = ..., at: bool | int = ..., bounciness: bool | int = ..., b: bool | int = ..., cacheData: bool | int = ..., cd: bool | int = ..., collide: bool | int = ..., c: bool | int = ..., collisionTolerance: bool | int | float = ..., ct: bool | int | float = ..., contactData: bool | int = ..., ctd: bool | int = ..., create: bool | int = ..., cr: bool | int = ..., current: bool | int = ..., cu: bool | int = ..., deleteCache: bool | int = ..., displayCenterOfMass: bool | int = ..., dcm: bool | int = ..., displayConstraint: bool | int = ..., dc: bool | int = ..., displayVelocity: bool | int = ..., dv: bool | int = ..., dynamics: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., friction: bool | int = ..., f: bool | int = ..., interpenetrate: bool | int = ..., i: bool | int = ..., interpenetrationCheck: bool | int = ..., ic: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., rigidBodies: bool | int = ..., rb: bool | int = ..., rigidBodyCount: bool | int = ..., rbc: bool | int = ..., showCollision: bool | int = ..., sc: bool | int = ..., showInterpenetration: bool | int = ..., si: bool | int = ..., solverMethod: bool | int | int = ..., sm: bool | int | int = ..., startTime: bool | int | float = ..., stt: bool | int | float = ..., state: bool | int = ..., st: bool | int = ..., statistics: bool | int = ..., sta: bool | int = ..., stepSize: bool | int | float = ..., s: bool | int | float = ..., velocityVectorScale: bool | int | float = ..., vs: bool | int | float = ...) -> Any: ...
def roll(*args, absolute: bool | int = ..., abs: bool | int = ..., degree: float = ..., d: float = ..., relative: bool | int = ..., rel: bool | int = ...) -> Any: ...
def rollCtx(*args, alternateContext: bool | int = ..., ac: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., rollScale: bool | int | float = ..., rs: bool | int | float = ..., toolName: bool | int | str = ..., tn: bool | int | str = ...) -> Any: ...
def rotate(*args, absolute: bool | int = ..., a: bool | int = ..., centerPivot: bool | int = ..., cp: bool | int = ..., componentSpace: bool | int = ..., cs: bool | int = ..., constrainAlongNormal: bool | int = ..., xn: bool | int = ..., deletePriorHistory: bool | int = ..., dph: bool | int = ..., euler: bool | int = ..., eu: bool | int = ..., forceOrderXYZ: bool | int = ..., fo: bool | int = ..., objectCenterPivot: bool | int = ..., ocp: bool | int = ..., objectSpace: bool | int = ..., os: bool | int = ..., orientAxes: tuple[float, float, float] = ..., oa: tuple[float, float, float] = ..., pivot: tuple[float, float, float] = ..., p: tuple[float, float, float] = ..., preserveChildPosition: bool | int = ..., pcp: bool | int = ..., preserveGeometryPosition: bool | int = ..., pgp: bool | int = ..., preserveUV: bool | int = ..., puv: bool | int = ..., reflection: bool | int = ..., rfl: bool | int = ..., reflectionAboutBBox: bool | int = ..., rab: bool | int = ..., reflectionAboutOrigin: bool | int = ..., rao: bool | int = ..., reflectionAboutX: bool | int = ..., rax: bool | int = ..., reflectionAboutY: bool | int = ..., ray: bool | int = ..., reflectionAboutZ: bool | int = ..., raz: bool | int = ..., reflectionTolerance: float = ..., rft: float = ..., relative: bool | int = ..., r: bool | int = ..., rotateX: bool | int = ..., x: bool | int = ..., rotateXY: bool | int = ..., xy: bool | int = ..., rotateXYZ: bool | int = ..., xyz: bool | int = ..., rotateXZ: bool | int = ..., xz: bool | int = ..., rotateY: bool | int = ..., y: bool | int = ..., rotateYZ: bool | int = ..., yz: bool | int = ..., rotateZ: bool | int = ..., z: bool | int = ..., symNegative: bool | int = ..., smn: bool | int = ..., translate: bool | int = ..., t: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ..., xformConstraint: str = ..., xc: str = ...) -> Any: ...
def rotationInterpolation(*args, convert: bool | int | str = ..., c: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def roundCRCtx(*args, activeNodes: bool | int = ..., anq: bool | int = ..., append: bool | int = ..., a: bool | int = ..., autoCreate: bool | int = ..., ac: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., currentEdge: bool | int = ..., ce: bool | int = ..., currentEdgeRadius: bool | int = ..., cer: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., immediate: bool | int = ..., im: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: float | list[float] = ..., r: float | list[float] = ..., radiusToUse: float = ..., rtu: float = ..., reset: bool | int = ..., rs: bool | int = ..., tolerance: float = ..., tol: float = ..., toolNode: bool | int = ..., tnq: bool | int = ..., useGlobalTolerance: bool | int = ..., ugt: bool | int = ...) -> Any: ...
def roundConstantRadius(*args, append: bool | int = ..., a: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., radius: float | list[float] = ..., r: float | list[float] = ..., radiuss: float | list[float] = ..., rad: float | list[float] = ..., side: tuple[str, int] | list[tuple[str, int]] = ..., s: tuple[str, int] | list[tuple[str, int]] = ..., sidea: int | list[int] = ..., sa: int | list[int] = ..., sideb: int | list[int] = ..., sb: int | list[int] = ..., tolerance: float = ..., tol: float = ...) -> Any: ...
def rowColumnLayout(*args, adjustableColumn: int = ..., adj: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., childArray: bool | int = ..., ca: bool | int = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnOffset: tuple[int, str, int] | list[tuple[int, str, int]] = ..., co: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnSpacing: tuple[int, int] | list[tuple[int, int]] = ..., cs: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfColumns: bool | int | int = ..., nc: bool | int | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., numberOfRows: bool | int | int = ..., nr: bool | int | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAlign: tuple[int, str] | list[tuple[int, str]] = ..., ral: tuple[int, str] | list[tuple[int, str]] = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rowHeight: tuple[int, int] | list[tuple[int, int]] = ..., rh: tuple[int, int] | list[tuple[int, int]] = ..., rowOffset: tuple[int, str, int] | list[tuple[int, str, int]] = ..., ro: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rowSpacing: tuple[int, int] | list[tuple[int, int]] = ..., rs: tuple[int, int] | list[tuple[int, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def rowLayout(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn1: int = ..., ad1: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., childArray: bool | int = ..., ca: bool | int = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign1: str = ..., cl1: str = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach1: str = ..., ct1: str = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset1: int = ..., co1: int = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfColumns: bool | int | int = ..., nc: bool | int | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def runTimeCommand(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., category: bool | int | str = ..., cat: bool | int | str = ..., categoryArray: bool | int = ..., caa: bool | int = ..., command: bool | int | str | Callable = ..., c: bool | int | str | Callable = ..., commandArray: bool | int = ..., ca: bool | int = ..., commandLanguage: bool | int | str = ..., cl: bool | int | str = ..., default: bool | int = ..., d: bool | int = ..., defaultCommandArray: bool | int = ..., dca: bool | int = ..., delete: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., hotkeyCtx: bool | int | str = ..., hc: bool | int | str = ..., image: bool | int | str = ..., i: bool | int | str = ..., keywords: bool | int | str = ..., k: bool | int | str = ..., label: bool | int | str = ..., l: bool | int | str = ..., longAnnotation: bool | int | str = ..., la: bool | int | str = ..., numberOfCommands: bool | int = ..., nc: bool | int = ..., numberOfDefaultCommands: bool | int = ..., ndc: bool | int = ..., numberOfUserCommands: bool | int = ..., nuc: bool | int = ..., plugin: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., save: bool | int = ..., s: bool | int = ..., showInHotkeyEditor: bool | int = ..., she: bool | int = ..., tags: bool | int | str = ..., t: bool | int | str = ..., userCommandArray: bool | int = ..., uca: bool | int = ...) -> Any: ...
def runup(*args, cache: bool | int = ..., cch: bool | int = ..., fromPreviousFrame: bool | int = ..., fpf: bool | int = ..., fromStartFrame: bool | int = ..., fsf: bool | int = ..., maxFrame: int | float = ..., mxf: int | float = ..., state: bool | int = ..., st: bool | int = ...) -> Any: ...
def safemodecheckhash(*args, co: bool | int = ..., pts: str = ..., wd: bool | int = ...) -> Any: ...
def sampleImage(*args, fastSample: bool | int = ..., f: bool | int = ..., resolution: tuple[int, str] = ..., r: tuple[int, str] = ...) -> Any: ...
def saveAllShelves(*args) -> Any: ...
def saveFluid(*args, currentTime: bool | int | int = ..., ct: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endTime: bool | int | int = ..., et: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., startTime: bool | int | int = ..., st: bool | int | int = ...) -> Any: ...
def saveImage(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., currentView: bool | int = ..., cv: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., image: bool | int | str = ..., i: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., objectThumbnail: str = ..., ot: str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sceneFile: str = ..., sf: str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def saveInitialState(*args, attribute: str | list[str] = ..., atr: str | list[str] = ..., saveall: bool | int = ..., all: bool | int = ...) -> Any: ...
def saveMenu(*args) -> Any: ...
def savePrefObjects(*args) -> Any: ...
def saveShelf(*args) -> Any: ...
def saveToolSettings(*args) -> Any: ...
def saveViewportSettings(*args) -> Any: ...
def scale(*args, absolute: bool | int = ..., a: bool | int = ..., centerPivot: bool | int = ..., cp: bool | int = ..., componentSpace: bool | int = ..., cs: bool | int = ..., constrainAlongNormal: bool | int = ..., xn: bool | int = ..., deletePriorHistory: bool | int = ..., dph: bool | int = ..., distanceOnly: bool | int = ..., dso: bool | int = ..., localSpace: bool | int = ..., ls: bool | int = ..., objectCenterPivot: bool | int = ..., ocp: bool | int = ..., objectSpace: bool | int = ..., os: bool | int = ..., orientAxes: tuple[float, float, float] = ..., oa: tuple[float, float, float] = ..., pivot: tuple[float, float, float] = ..., p: tuple[float, float, float] = ..., preserveChildPosition: bool | int = ..., pcp: bool | int = ..., preserveGeometryPosition: bool | int = ..., pgp: bool | int = ..., preserveUV: bool | int = ..., puv: bool | int = ..., reflection: bool | int = ..., rfl: bool | int = ..., reflectionAboutBBox: bool | int = ..., rab: bool | int = ..., reflectionAboutOrigin: bool | int = ..., rao: bool | int = ..., reflectionAboutX: bool | int = ..., rax: bool | int = ..., reflectionAboutY: bool | int = ..., ray: bool | int = ..., reflectionAboutZ: bool | int = ..., raz: bool | int = ..., reflectionTolerance: float = ..., rft: float = ..., relative: bool | int = ..., r: bool | int = ..., scaleX: bool | int = ..., x: bool | int = ..., scaleXY: bool | int = ..., xy: bool | int = ..., scaleXYZ: bool | int = ..., xyz: bool | int = ..., scaleXZ: bool | int = ..., xz: bool | int = ..., scaleY: bool | int = ..., y: bool | int = ..., scaleYZ: bool | int = ..., yz: bool | int = ..., scaleZ: bool | int = ..., z: bool | int = ..., symNegative: bool | int = ..., smn: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ..., xformConstraint: str = ..., xc: str = ...) -> Any: ...
def scaleComponents(*args, pivot: tuple[float, float, float] = ..., p: tuple[float, float, float] = ..., rotation: tuple[float, float, float] = ..., ro: tuple[float, float, float] = ...) -> Any: ...
def scaleConstraint(*args, edit: bool | int = ..., e: bool | int = ..., layer: str = ..., l: str = ..., maintainOffset: bool | int = ..., mo: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., offset: bool | int | tuple[float, float, float] = ..., o: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., scaleCompensate: bool | int = ..., sc: bool | int = ..., skip: str | list[str] = ..., sk: str | list[str] = ..., targetList: bool | int = ..., tl: bool | int = ..., weight: bool | int | float = ..., w: bool | int | float = ..., weightAliasList: bool | int = ..., wal: bool | int = ...) -> Any: ...
def scaleKey(*args, animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., autoSnap: bool | int = ..., asp: bool | int = ..., controlPoints: bool | int = ..., cp: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., floatPivot: float = ..., fp: float = ..., floatScale: float = ..., fs: float = ..., hierarchy: str = ..., hi: str = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., newEndFloat: float = ..., nef: float = ..., newEndTime: int | float = ..., net: int | float = ..., newStartFloat: float = ..., nsf: float = ..., newStartTime: int | float = ..., nst: int | float = ..., scaleSpecifiedKeys: bool | int = ..., ssk: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., timePivot: int | float = ..., tp: int | float = ..., timeScale: float = ..., ts: float = ..., valuePivot: float = ..., vp: float = ..., valueScale: float = ..., vs: float = ...) -> Any: ...
def scaleKeyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., scaleSpecifiedKeys: bool | int = ..., ssk: bool | int = ..., type: bool | int | str = ..., typ: bool | int | str = ...) -> Any: ...
def sceneEditor(*args, control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., onlyParents: bool | int = ..., op: bool | int = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., refreshReferences: bool | int = ..., rr: bool | int = ..., selectCommand: bool | int | str | Callable = ..., sc: bool | int | str | Callable = ..., selectItem: bool | int | int = ..., si: bool | int | int = ..., selectReference: bool | int | str = ..., sr: bool | int | str = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., shortName: bool | int = ..., shn: bool | int = ..., stateString: bool | int = ..., sts: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., unresolvedName: bool | int = ..., un: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ..., withoutCopyNumber: bool | int = ..., wcn: bool | int = ...) -> Any: ...
def sceneUIReplacement(*args, clear: bool | int = ..., cl: bool | int = ..., deleteRemaining: bool | int = ..., dr: bool | int = ..., getNextFilter: tuple[str, str] = ..., gf: tuple[str, str] = ..., getNextPanel: tuple[str, str] = ..., gp: tuple[str, str] = ..., getNextScriptedPanel: tuple[str, str] = ..., gsp: tuple[str, str] = ..., update: str = ..., u: str = ...) -> Any: ...
def scmh(*args, absolute: bool | int = ..., a: bool | int = ..., ignore: int | list[int] = ..., i: int | list[int] = ..., quiet: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ...) -> Any: ...
def scriptCtx(*args, allComponents: bool | int | bool | int | list[bool | int] = ..., alc: bool | int | bool | int | list[bool | int] = ..., allObjects: bool | int | bool | int | list[bool | int] = ..., alo: bool | int | bool | int | list[bool | int] = ..., animBreakdown: bool | int | bool | int | list[bool | int] = ..., abd: bool | int | bool | int | list[bool | int] = ..., animCurve: bool | int | bool | int | list[bool | int] = ..., ac: bool | int | bool | int | list[bool | int] = ..., animInTangent: bool | int | bool | int | list[bool | int] = ..., ait: bool | int | bool | int | list[bool | int] = ..., animKeyframe: bool | int | bool | int | list[bool | int] = ..., ak: bool | int | bool | int | list[bool | int] = ..., animOutTangent: bool | int | bool | int | list[bool | int] = ..., aot: bool | int | bool | int | list[bool | int] = ..., baseClassName: bool | int | str = ..., bcn: bool | int | str = ..., byName: tuple[str, int] | list[tuple[str, int]] = ..., bn: tuple[str, int] | list[tuple[str, int]] = ..., camera: bool | int | bool | int | list[bool | int] = ..., ca: bool | int | bool | int | list[bool | int] = ..., cluster: bool | int | bool | int | list[bool | int] = ..., cl: bool | int | bool | int | list[bool | int] = ..., collisionModel: bool | int | bool | int | list[bool | int] = ..., clm: bool | int | bool | int | list[bool | int] = ..., controlVertex: bool | int | bool | int | list[bool | int] = ..., cv: bool | int | bool | int | list[bool | int] = ..., cumulativeLists: bool | int = ..., cls: bool | int = ..., curve: bool | int | bool | int | list[bool | int] = ..., c: bool | int | bool | int | list[bool | int] = ..., curveKnot: bool | int | bool | int | list[bool | int] = ..., ck: bool | int | bool | int | list[bool | int] = ..., curveOnSurface: bool | int | bool | int | list[bool | int] = ..., cos: bool | int | bool | int | list[bool | int] = ..., curveParameterPoint: bool | int | bool | int | list[bool | int] = ..., cpp: bool | int | bool | int | list[bool | int] = ..., dimension: bool | int | bool | int | list[bool | int] = ..., dim: bool | int | bool | int | list[bool | int] = ..., dynamicConstraint: bool | int | bool | int | list[bool | int] = ..., dc: bool | int | bool | int | list[bool | int] = ..., edge: bool | int | bool | int | list[bool | int] = ..., eg: bool | int | bool | int | list[bool | int] = ..., edit: bool | int = ..., e: bool | int = ..., editPoint: bool | int | bool | int | list[bool | int] = ..., ep: bool | int | bool | int | list[bool | int] = ..., emitter: bool | int | bool | int | list[bool | int] = ..., em: bool | int | bool | int | list[bool | int] = ..., enableRootSelection: bool | int = ..., ers: bool | int = ..., escToQuit: bool | int = ..., esc: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., exitUponCompletion: bool | int = ..., euc: bool | int = ..., expandSelectionList: bool | int = ..., esl: bool | int = ..., facet: bool | int | bool | int | list[bool | int] = ..., fc: bool | int | bool | int | list[bool | int] = ..., field: bool | int | bool | int | list[bool | int] = ..., fi: bool | int | bool | int | list[bool | int] = ..., finalCommandScript: bool | int | str | Callable = ..., fcs: bool | int | str | Callable = ..., fluid: bool | int | bool | int | list[bool | int] = ..., fl: bool | int | bool | int | list[bool | int] = ..., follicle: bool | int | bool | int | list[bool | int] = ..., fo: bool | int | bool | int | list[bool | int] = ..., forceAddSelect: bool | int = ..., fas: bool | int = ..., hairSystem: bool | int | bool | int | list[bool | int] = ..., hs: bool | int | bool | int | list[bool | int] = ..., handle: bool | int | bool | int | list[bool | int] = ..., ha: bool | int | bool | int | list[bool | int] = ..., history: bool | int = ..., ch: bool | int = ..., hull: bool | int | bool | int | list[bool | int] = ..., hl: bool | int | bool | int | list[bool | int] = ..., ignoreInvalidItems: bool | int = ..., iii: bool | int = ..., ikEndEffector: bool | int | bool | int | list[bool | int] = ..., iee: bool | int | bool | int | list[bool | int] = ..., ikHandle: bool | int | bool | int | list[bool | int] = ..., ikh: bool | int | bool | int | list[bool | int] = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., imagePlane: bool | int | bool | int | list[bool | int] = ..., ip: bool | int | bool | int | list[bool | int] = ..., implicitGeometry: bool | int | bool | int | list[bool | int] = ..., ig: bool | int | bool | int | list[bool | int] = ..., isoparm: bool | int | bool | int | list[bool | int] = ..., iso: bool | int | bool | int | list[bool | int] = ..., joint: bool | int | bool | int | list[bool | int] = ..., j: bool | int | bool | int | list[bool | int] = ..., jointPivot: bool | int | bool | int | list[bool | int] = ..., jp: bool | int | bool | int | list[bool | int] = ..., lastAutoComplete: bool | int = ..., lac: bool | int = ..., lattice: bool | int | bool | int | list[bool | int] = ..., la: bool | int | bool | int | list[bool | int] = ..., latticePoint: bool | int | bool | int | list[bool | int] = ..., lp: bool | int | bool | int | list[bool | int] = ..., light: bool | int | bool | int | list[bool | int] = ..., lt: bool | int | bool | int | list[bool | int] = ..., localRotationAxis: bool | int | bool | int | list[bool | int] = ..., ra: bool | int | bool | int | list[bool | int] = ..., locator: bool | int | bool | int | list[bool | int] = ..., lc: bool | int | bool | int | list[bool | int] = ..., locatorUV: bool | int | bool | int | list[bool | int] = ..., luv: bool | int | bool | int | list[bool | int] = ..., locatorXYZ: bool | int | bool | int | list[bool | int] = ..., xyz: bool | int | bool | int | list[bool | int] = ..., meshComponents: bool | int | list[bool | int] = ..., mc: bool | int | list[bool | int] = ..., meshUVShell: bool | int | list[bool | int] = ..., msh: bool | int | list[bool | int] = ..., motionTrailPoint: bool | int | list[bool | int] = ..., mtp: bool | int | list[bool | int] = ..., motionTrailTangent: bool | int | list[bool | int] = ..., mtt: bool | int | list[bool | int] = ..., nCloth: bool | int | bool | int | list[bool | int] = ..., ncl: bool | int | bool | int | list[bool | int] = ..., nParticle: bool | int | bool | int | list[bool | int] = ..., npr: bool | int | bool | int | list[bool | int] = ..., nParticleShape: bool | int | bool | int | list[bool | int] = ..., nps: bool | int | bool | int | list[bool | int] = ..., nRigid: bool | int | bool | int | list[bool | int] = ..., nr: bool | int | bool | int | list[bool | int] = ..., name: str = ..., n: str = ..., nonlinear: bool | int | bool | int | list[bool | int] = ..., nl: bool | int | bool | int | list[bool | int] = ..., nurbsCurve: bool | int | bool | int | list[bool | int] = ..., nc: bool | int | bool | int | list[bool | int] = ..., nurbsSurface: bool | int | bool | int | list[bool | int] = ..., ns: bool | int | bool | int | list[bool | int] = ..., objectComponent: bool | int = ..., ocm: bool | int = ..., orientationLocator: bool | int | bool | int | list[bool | int] = ..., ol: bool | int | bool | int | list[bool | int] = ..., particle: bool | int | bool | int | list[bool | int] = ..., pr: bool | int | bool | int | list[bool | int] = ..., particleShape: bool | int | bool | int | list[bool | int] = ..., ps: bool | int | bool | int | list[bool | int] = ..., plane: bool | int | bool | int | list[bool | int] = ..., pl: bool | int | bool | int | list[bool | int] = ..., polymesh: bool | int | bool | int | list[bool | int] = ..., p: bool | int | bool | int | list[bool | int] = ..., polymeshEdge: bool | int | bool | int | list[bool | int] = ..., pe: bool | int | bool | int | list[bool | int] = ..., polymeshFace: bool | int | bool | int | list[bool | int] = ..., pf: bool | int | bool | int | list[bool | int] = ..., polymeshFreeEdge: bool | int | bool | int | list[bool | int] = ..., pfe: bool | int | bool | int | list[bool | int] = ..., polymeshUV: bool | int | bool | int | list[bool | int] = ..., puv: bool | int | bool | int | list[bool | int] = ..., polymeshVertex: bool | int | bool | int | list[bool | int] = ..., pv: bool | int | bool | int | list[bool | int] = ..., polymeshVtxFace: bool | int | bool | int | list[bool | int] = ..., pvf: bool | int | bool | int | list[bool | int] = ..., query: bool | int = ..., q: bool | int = ..., queryByName: str = ..., qbn: str = ..., rigidBody: bool | int | bool | int | list[bool | int] = ..., rb: bool | int | bool | int | list[bool | int] = ..., rigidConstraint: bool | int | bool | int | list[bool | int] = ..., rc: bool | int | bool | int | list[bool | int] = ..., rotatePivot: bool | int | bool | int | list[bool | int] = ..., rp: bool | int | bool | int | list[bool | int] = ..., scalePivot: bool | int | bool | int | list[bool | int] = ..., sp: bool | int | bool | int | list[bool | int] = ..., sculpt: bool | int | bool | int | list[bool | int] = ..., sc: bool | int | bool | int | list[bool | int] = ..., selectHandle: bool | int | bool | int | list[bool | int] = ..., sh: bool | int | bool | int | list[bool | int] = ..., setAllowExcessCount: bool | int | list[bool | int] = ..., sae: bool | int | list[bool | int] = ..., setAutoComplete: bool | int | list[bool | int] = ..., sac: bool | int | list[bool | int] = ..., setAutoToggleSelection: bool | int | list[bool | int] = ..., sat: bool | int | list[bool | int] = ..., setDoneSelectionPrompt: str | list[str] = ..., dsp: str | list[str] = ..., setNoSelectionHeadsUp: str | list[str] = ..., snh: str | list[str] = ..., setNoSelectionPrompt: str | list[str] = ..., snp: str | list[str] = ..., setSelectionCount: int | list[int] = ..., ssc: int | list[int] = ..., setSelectionHeadsUp: str | list[str] = ..., ssh: str | list[str] = ..., setSelectionPrompt: str | list[str] = ..., ssp: str | list[str] = ..., showManipulators: bool | int = ..., sm: bool | int = ..., spring: bool | int | bool | int | list[bool | int] = ..., spr: bool | int | bool | int | list[bool | int] = ..., springComponent: bool | int | bool | int | list[bool | int] = ..., spc: bool | int | bool | int | list[bool | int] = ..., stroke: bool | int | bool | int | list[bool | int] = ..., str: bool | int | bool | int | list[bool | int] = ..., subdiv: bool | int | bool | int | list[bool | int] = ..., sd: bool | int | bool | int | list[bool | int] = ..., subdivMeshEdge: bool | int | bool | int | list[bool | int] = ..., sme: bool | int | bool | int | list[bool | int] = ..., subdivMeshFace: bool | int | bool | int | list[bool | int] = ..., smf: bool | int | bool | int | list[bool | int] = ..., subdivMeshPoint: bool | int | bool | int | list[bool | int] = ..., smp: bool | int | bool | int | list[bool | int] = ..., subdivMeshUV: bool | int | bool | int | list[bool | int] = ..., smu: bool | int | bool | int | list[bool | int] = ..., surfaceEdge: bool | int | bool | int | list[bool | int] = ..., se: bool | int | bool | int | list[bool | int] = ..., surfaceFace: bool | int | bool | int | list[bool | int] = ..., sf: bool | int | bool | int | list[bool | int] = ..., surfaceKnot: bool | int | bool | int | list[bool | int] = ..., sk: bool | int | bool | int | list[bool | int] = ..., surfaceParameterPoint: bool | int | bool | int | list[bool | int] = ..., spp: bool | int | bool | int | list[bool | int] = ..., surfaceRange: bool | int | bool | int | list[bool | int] = ..., sr: bool | int | bool | int | list[bool | int] = ..., surfaceUV: bool | int | bool | int | list[bool | int] = ..., suv: bool | int | bool | int | list[bool | int] = ..., texture: bool | int | bool | int | list[bool | int] = ..., tx: bool | int | bool | int | list[bool | int] = ..., title: bool | int | str = ..., t: bool | int | str = ..., toolCursorType: bool | int | str = ..., tct: bool | int | str = ..., toolFinish: bool | int | str | Callable = ..., tf: bool | int | str | Callable = ..., toolStart: bool | int | str | Callable = ..., ts: bool | int | str | Callable = ..., totalSelectionSets: bool | int | int = ..., tss: bool | int | int = ..., vertex: bool | int | bool | int | list[bool | int] = ..., v: bool | int | bool | int | list[bool | int] = ...) -> Any: ...
def scriptEditorInfo(*args, clearHistory: bool | int = ..., ch: bool | int = ..., clearHistoryFile: bool | int = ..., chf: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., historyFilename: bool | int | str = ..., hfn: bool | int | str = ..., input: str = ..., i: str = ..., query: bool | int = ..., q: bool | int = ..., suppressErrors: bool | int = ..., se: bool | int = ..., suppressInfo: bool | int = ..., si: bool | int = ..., suppressResults: bool | int = ..., sr: bool | int = ..., suppressStackWindow: bool | int = ..., ssw: bool | int = ..., suppressWarnings: bool | int = ..., sw: bool | int = ..., writeHistory: bool | int = ..., wh: bool | int = ...) -> Any: ...
def scriptJob(*args, allChildren: bool | int = ..., alc: bool | int = ..., attributeAdded: tuple[str, str | Callable] = ..., aa: tuple[str, str | Callable] = ..., attributeChange: tuple[str, str | Callable] = ..., ac: tuple[str, str | Callable] = ..., attributeDeleted: tuple[str, str | Callable] = ..., ad: tuple[str, str | Callable] = ..., compressUndo: bool | int = ..., cu: bool | int = ..., conditionChange: tuple[str, str | Callable] = ..., cc: tuple[str, str | Callable] = ..., conditionFalse: tuple[str, str | Callable] = ..., cf: tuple[str, str | Callable] = ..., conditionTrue: tuple[str, str | Callable] = ..., ct: tuple[str, str | Callable] = ..., connectionChange: tuple[str, str | Callable] = ..., con: tuple[str, str | Callable] = ..., disregardIndex: bool | int = ..., dri: bool | int = ..., event: tuple[str, str | Callable] = ..., e: tuple[str, str | Callable] = ..., exists: int = ..., ex: int = ..., force: bool | int = ..., f: bool | int = ..., idleEvent: str | Callable = ..., ie: str | Callable = ..., kill: int | list[int] = ..., k: int | list[int] = ..., killAll: bool | int = ..., ka: bool | int = ..., killWithScene: bool | int = ..., kws: bool | int = ..., listConditions: bool | int = ..., lc: bool | int = ..., listEvents: bool | int = ..., le: bool | int = ..., listJobs: bool | int = ..., lj: bool | int = ..., nodeDeleted: tuple[str, str | Callable] = ..., nd: tuple[str, str | Callable] = ..., nodeNameChanged: tuple[str, str | Callable] = ..., nnc: tuple[str, str | Callable] = ..., optionVarChanged: tuple[str, str | Callable] = ..., ovc: tuple[str, str | Callable] = ..., parent: str = ..., p: str = ..., permanent: bool | int = ..., per: bool | int = ..., protected: bool | int = ..., pro: bool | int = ..., replacePrevious: bool | int = ..., rp: bool | int = ..., runOnce: bool | int = ..., ro: bool | int = ..., timeChange: str | Callable = ..., tc: str | Callable = ..., uiDeleted: tuple[str, str | Callable] = ..., uid: tuple[str, str | Callable] = ...) -> Any: ...
def scriptNode(*args, afterScript: bool | int | str = ..., beforeScript: bool | int | str = ..., bs: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., executeAfter: bool | int = ..., ea: bool | int = ..., executeBefore: bool | int = ..., eb: bool | int = ..., ignoreReferenceEdits: bool | int = ..., ire: bool | int = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., scriptType: bool | int | int = ..., st: bool | int | int = ..., sourceType: bool | int | str = ..., stp: bool | int | str = ...) -> Any: ...
def scriptTable(*args, afterCellChangedCmd: str | Callable = ..., acc: str | Callable = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., cellBackgroundColorCommand: str | Callable = ..., cbc: str | Callable = ..., cellChangedCmd: str | Callable = ..., ccc: str | Callable = ..., cellForegroundColorCommand: str | Callable = ..., cfc: str | Callable = ..., cellIndex: bool | int | tuple[int, int] = ..., ci: bool | int | tuple[int, int] = ..., cellValue: bool | int | str = ..., cv: bool | int | str = ..., clearRow: int = ..., cr: int = ..., clearTable: bool | int = ..., ct: bool | int = ..., columnFilter: tuple[int, str] = ..., cf: tuple[int, str] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columns: bool | int | int = ..., c: bool | int | int = ..., defineTemplate: str = ..., dt: str = ..., deleteRow: int = ..., dr: int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., excludingHeaders: bool | int = ..., eh: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., getCellCmd: str | Callable = ..., gcc: str | Callable = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., insertRow: int = ..., ir: int = ..., isObscured: bool | int = ..., io: bool | int = ..., label: tuple[int, str] | list[tuple[int, str]] = ..., l: tuple[int, str] | list[tuple[int, str]] = ..., manage: bool | int = ..., m: bool | int = ..., multiEditEnabled: bool | int = ..., mee: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowHeight: bool | int | int = ..., rh: bool | int | int = ..., rows: bool | int | int = ..., r: bool | int | int = ..., rowsRemovedCmd: str | Callable = ..., rrc: str | Callable = ..., rowsToBeRemovedCmd: str | Callable = ..., rtc: str | Callable = ..., selectedCells: bool | int | int = ..., sc: bool | int | int = ..., selectedColumns: bool | int | int = ..., scs: bool | int | int = ..., selectedRow: bool | int = ..., sr: bool | int = ..., selectedRows: bool | int | int = ..., srs: bool | int | int = ..., selectionBehavior: bool | int | int = ..., sb: bool | int | int = ..., selectionChangedCmd: str | Callable = ..., scc: str | Callable = ..., selectionMode: bool | int | int = ..., sm: bool | int | int = ..., sortEnabled: bool | int = ..., se: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., underPointerColumn: bool | int = ..., upc: bool | int = ..., underPointerRow: bool | int = ..., upr: bool | int = ..., useDoubleClickEdit: bool | int = ..., udc: bool | int = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def scriptedPanel(*args, control: bool | int = ..., ctl: bool | int = ..., copy: str = ..., cp: str = ..., createString: bool | int = ..., cs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., editString: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., init: bool | int = ..., isUnique: bool | int = ..., iu: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., menuBarRepeatLast: bool | int = ..., mrl: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., needsInit: bool | int = ..., ni: bool | int = ..., parent: str = ..., p: str = ..., popupMenuProcedure: bool | int | str | Callable = ..., pmp: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., replacePanel: str = ..., rp: str = ..., tearOff: bool | int = ..., to: bool | int = ..., tearOffCopy: str = ..., toc: str = ..., tearOffRestore: bool | int = ..., tor: bool | int = ..., type: bool | int | str = ..., typ: bool | int | str = ..., unParent: bool | int = ..., up: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def scriptedPanelType(*args, addCallback: bool | int | str = ..., acb: bool | int | str = ..., copyStateCallback: bool | int | str = ..., ocb: bool | int | str = ..., createCallback: bool | int | str = ..., ccb: bool | int | str = ..., customView: bool | int = ..., cv: bool | int = ..., defineTemplate: str = ..., dt: str = ..., deleteCallback: bool | int | str = ..., dcb: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., hotkeyCtxClient: bool | int | str = ..., hkc: bool | int | str = ..., initCallback: bool | int | str = ..., icb: bool | int | str = ..., label: bool | int | str = ..., l: bool | int | str = ..., obsolete: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeCallback: bool | int | str = ..., rcb: bool | int | str = ..., retainOnFileOpen: bool | int = ..., rfo: bool | int = ..., saveStateCallback: bool | int | str = ..., scb: bool | int | str = ..., unique: bool | int = ..., u: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def scrollField(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., clear: bool | int = ..., cl: bool | int = ..., command: str = ..., c: str = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., enterCommand: str | Callable = ..., ec: str | Callable = ..., exists: bool | int = ..., ex: bool | int = ..., font: bool | int | str = ..., fn: bool | int | str = ..., fontPointSize: bool | int | int = ..., fns: bool | int | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., insertText: str = ..., it: str = ..., insertionPosition: bool | int | int = ..., ip: bool | int | int = ..., isObscured: bool | int = ..., io: bool | int = ..., keyPressCommand: str | Callable = ..., kpc: str | Callable = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfLines: bool | int | int = ..., nl: bool | int | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., selection: bool | int = ..., sl: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., text: bool | int | str = ..., tx: bool | int | str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ..., wordWrap: bool | int = ..., ww: bool | int = ...) -> Any: ...
def scrollLayout(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., borderVisible: bool | int = ..., bv: bool | int = ..., childArray: bool | int = ..., ca: bool | int = ..., childResizable: bool | int = ..., cr: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., horizontalScrollBarThickness: int = ..., hst: int = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., minChildWidth: bool | int | int = ..., mcw: bool | int | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., panEnabled: bool | int = ..., pe: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., resizeCommand: str | Callable = ..., rc: str | Callable = ..., scrollAreaHeight: bool | int = ..., sah: bool | int = ..., scrollAreaValue: bool | int = ..., sav: bool | int = ..., scrollAreaWidth: bool | int = ..., saw: bool | int = ..., scrollByPixel: tuple[str, int] = ..., sbp: tuple[str, int] = ..., scrollPage: str = ..., sp: str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., verticalScrollBarAlwaysVisible: bool | int = ..., vsb: bool | int = ..., verticalScrollBarThickness: int = ..., vst: int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def sculpt(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., dropoffDistance: bool | int | float = ..., dds: bool | int | float = ..., dropoffType: bool | int | str = ..., drt: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., groupWithLocator: bool | int = ..., gwl: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., insideMode: bool | int | str = ..., im: bool | int | str = ..., maxDisplacement: bool | int | float = ..., mxd: bool | int | float = ..., mode: bool | int | str = ..., m: bool | int | str = ..., name: str = ..., n: str = ..., objectCentered: bool | int = ..., oc: bool | int = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., sculptTool: str = ..., st: str = ..., split: bool | int = ..., sp: bool | int = ..., useComponentTags: bool | int = ..., uct: bool | int = ...) -> Any: ...
def sculptKeyCtx(*args, **kwargs): ...
def sculptMeshCacheChangeCloneSource(*args, blendShape: bool | int | str = ..., bs: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., target: bool | int | str = ..., t: bool | int | str = ...) -> Any: ...
def sculptMeshCacheCtx(*args, adjustSize: bool | int = ..., asz: bool | int = ..., adjustStrength: bool | int = ..., ast: bool | int = ..., affectAllLayers: bool | int = ..., aal: bool | int = ..., brushDirection: bool | int | int = ..., bd: bool | int | int = ..., brushSize: bool | int | float = ..., bsz: bool | int | float = ..., brushStrength: bool | int | float = ..., bst: bool | int | float = ..., buildUpRate: bool | int | float = ..., bur: bool | int | float = ..., cloneHideSource: bool | int = ..., chs: bool | int = ..., cloneMethod: bool | int | int = ..., cm: bool | int | int = ..., cloneShapeSource: bool | int | str = ..., css: bool | int | str = ..., cloneTargetSource: bool | int | str = ..., cas: bool | int | str = ..., constrainToSurface: bool | int = ..., cts: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., displayFrozen: bool | int = ..., df: bool | int = ..., displayMask: bool | int = ..., dm: bool | int = ..., displayWireframe: bool | int = ..., dw: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., falloffType: bool | int | int = ..., ft: bool | int | int = ..., flood: float = ..., fl: float = ..., floodFreeze: float = ..., ff: float = ..., frame: bool | int = ..., frm: bool | int = ..., freezeSelection: bool | int = ..., fsl: bool | int = ..., freezesmooth: bool | int = ..., fs: bool | int = ..., freezesmoothandpaint: bool | int = ..., fsp: bool | int = ..., grabFollowPath: bool | int = ..., gfp: bool | int = ..., grabSilhouette: bool | int = ..., gs: bool | int = ..., grabTwist: bool | int = ..., gtw: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., inverted: bool | int = ..., inv: bool | int = ..., lastMode: bool | int | str = ..., lm: bool | int | str = ..., lockShellBorder: bool | int = ..., lsb: bool | int = ..., makeStroke: tuple[int, int, int, float, float] | list[tuple[int, int, int, float, float]] = ..., mt: tuple[int, int, int, float, float] | list[tuple[int, int, int, float, float]] = ..., minSize: bool | int | float = ..., msz: bool | int | float = ..., minStrength: bool | int | float = ..., mst: bool | int | float = ..., mirror: bool | int | int = ..., mr: bool | int | int = ..., mode: bool | int | str = ..., m: bool | int | str = ..., name: str = ..., n: str = ..., orientToSurface: bool | int = ..., ots: bool | int = ..., query: bool | int = ..., q: bool | int = ..., recordStroke: bool | int = ..., rcs: bool | int = ..., sculptFalloffCurve: bool | int | str = ..., sfc: bool | int | str = ..., size: bool | int | float = ..., sz: bool | int | float = ..., stampDistance: bool | int | float = ..., s: bool | int | float = ..., stampFile: bool | int | str = ..., stp: bool | int | str = ..., stampFlipX: bool | int = ..., sfx: bool | int = ..., stampFlipY: bool | int = ..., sfy: bool | int = ..., stampOrientToStroke: bool | int = ..., sos: bool | int = ..., stampPlacement: bool | int | int = ..., sp: bool | int | int = ..., stampRandomization: bool | int = ..., srd: bool | int = ..., stampRandomizationSeed: int = ..., sre: int = ..., stampRandomizeFlipX: bool | int = ..., srx: bool | int = ..., stampRandomizeFlipY: bool | int = ..., sry: bool | int = ..., stampRandomizePosX: bool | int | float = ..., spx: bool | int | float = ..., stampRandomizePosY: bool | int | float = ..., spy: bool | int | float = ..., stampRandomizeRotation: bool | int | float = ..., srr: bool | int | float = ..., stampRandomizeScale: bool | int | float = ..., src: bool | int | float = ..., stampRandomizeStrength: bool | int | float = ..., srs: bool | int | float = ..., stampRotation: bool | int | float = ..., sr: bool | int | float = ..., steadyStrokeDistance: bool | int | float = ..., ssd: bool | int | float = ..., strength: bool | int | float = ..., st: bool | int | float = ..., updatePlane: bool | int = ..., upl: bool | int = ..., useGlobalSize: bool | int = ..., ugs: bool | int = ..., useScreenSpace: bool | int = ..., ssp: bool | int = ..., useStampDistance: bool | int = ..., usd: bool | int = ..., useStampImage: bool | int = ..., usi: bool | int = ..., useSteadyStroke: bool | int = ..., uss: bool | int = ..., wholeStroke: bool | int = ..., wst: bool | int = ..., wireframeAlpha: bool | int | float = ..., wa: bool | int | float = ..., wireframeColor: bool | int | tuple[float, float, float] = ..., wc: bool | int | tuple[float, float, float] = ...) -> Any: ...
def sculptTarget(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: str = ..., ex: str = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: str | list[str] = ..., g: str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., inbetweenWeight: float = ..., ibw: float = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., name: str = ..., n: str = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., regenerate: bool | int = ..., r: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., snapshot: int = ..., s: int = ..., split: bool | int = ..., sp: bool | int = ..., target: int = ..., t: int = ..., useComponentTags: bool | int = ..., uct: bool | int = ...) -> Any: ...
def selLoadSettings(*args, activeProxy: bool | int | str = ..., ap: bool | int | str = ..., deferReference: bool | int = ..., dr: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., fileName: bool | int | str = ..., fn: bool | int | str = ..., numSettings: bool | int | int = ..., ns: bool | int | int = ..., proxyManager: bool | int | str = ..., pm: bool | int | str = ..., proxySetFiles: bool | int | str = ..., psf: bool | int | str = ..., proxySetTags: bool | int | str = ..., pst: bool | int | str = ..., proxyTag: bool | int | str = ..., pt: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., referenceNode: bool | int | str = ..., rfn: bool | int | str = ..., shortName: bool | int = ..., shn: bool | int = ..., unresolvedName: bool | int = ..., un: bool | int = ...) -> Any: ...
def select(*args, add: bool | int = ..., addFirst: bool | int = ..., af: bool | int = ..., all: bool | int = ..., allDagObjects: bool | int = ..., ado: bool | int = ..., allDependencyNodes: bool | int = ..., adn: bool | int = ..., clear: bool | int = ..., cl: bool | int = ..., containerCentric: bool | int = ..., cc: bool | int = ..., deselect: bool | int = ..., d: bool | int = ..., hierarchy: bool | int = ..., hi: bool | int = ..., noExpand: bool | int = ..., ne: bool | int = ..., replace: bool | int = ..., r: bool | int = ..., symmetry: bool | int = ..., sym: bool | int = ..., symmetrySide: int = ..., sys: int = ..., toggle: bool | int = ..., tgl: bool | int = ..., visible: bool | int = ..., vis: bool | int = ...) -> Any: ...
def selectContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def selectKey(*args, addTo: bool | int = ..., add: bool | int = ..., animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., clear: bool | int = ..., cl: bool | int = ..., controlPoints: bool | int = ..., cp: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., hierarchy: str = ..., hi: str = ..., inTangent: bool | int = ..., it: bool | int = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., keyframe: bool | int = ..., k: bool | int = ..., outTangent: bool | int = ..., ot: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., replace: bool | int = ..., r: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., toggle: bool | int = ..., tgl: bool | int = ..., unsnappedKeys: float = ..., uk: float = ...) -> Any: ...
def selectKeyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def selectKeyframe(*args, animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., controlPoints: bool | int = ..., cp: bool | int = ..., float: None | list[None] = ..., f: None | list[None] = ..., hierarchy: str = ..., hi: str = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: None | list[None] = ..., selectionWindow: tuple[float, float, float, float] = ..., sel: tuple[float, float, float, float] = ..., shape: bool | int = ..., s: bool | int = ..., time: None | list[None] = ..., t: None | list[None] = ...) -> Any: ...
def selectKeyframeRegionCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def selectMode(*args, component: bool | int = ..., co: bool | int = ..., hierarchical: bool | int = ..., h: bool | int = ..., leaf: bool | int = ..., l: bool | int = ..., object: bool | int = ..., o: bool | int = ..., preset: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., root: bool | int = ..., r: bool | int = ..., template: bool | int = ..., t: bool | int = ...) -> Any: ...
def selectPref(*args, affectsActive: bool | int = ..., aa: bool | int = ..., allowHiliteSelection: bool | int = ..., ahs: bool | int = ..., autoSelectContainer: bool | int = ..., asc: bool | int = ..., autoSelectOutlinerSetMembers: bool | int = ..., asm: bool | int = ..., autoUseDepth: bool | int = ..., aud: bool | int = ..., clickBoxSize: bool | int | int = ..., cbs: bool | int | int = ..., clickDrag: bool | int = ..., cld: bool | int = ..., containerCentricSelection: bool | int = ..., ccs: bool | int = ..., disableComponentPopups: bool | int = ..., dcp: bool | int = ..., expandPopupList: bool | int = ..., epl: bool | int = ..., ignoreSelectionPriority: bool | int = ..., isp: bool | int = ..., manipClickBoxSize: bool | int | int = ..., mcb: bool | int | int = ..., paintSelect: bool | int = ..., ps: bool | int = ..., paintSelectRefine: bool | int = ..., psf: bool | int = ..., paintSelectWithDepth: bool | int = ..., psd: bool | int = ..., popupMenuSelection: bool | int = ..., pms: bool | int = ..., preSelectBackfacing: bool | int = ..., psb: bool | int = ..., preSelectClosest: bool | int = ..., psc: bool | int = ..., preSelectDeadSpace: bool | int | int = ..., pds: bool | int | int = ..., preSelectHilite: bool | int = ..., psh: bool | int = ..., preSelectHiliteSize: bool | int | float = ..., phs: bool | int | float = ..., preSelectSize: int = ..., pss: int = ..., preSelectTweakDeadSpace: bool | int | int = ..., pdt: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., selectTypeChangeAffectsActive: bool | int = ..., stc: bool | int = ..., selectionChildHighlightMode: bool | int | int = ..., sch: bool | int | int = ..., singleBoxSelection: bool | int = ..., sbs: bool | int = ..., straightLineDistance: bool | int = ..., sld: bool | int = ..., trackSelectionOrder: bool | int = ..., tso: bool | int = ..., useDepth: bool | int = ..., ud: bool | int = ..., xformNoSelect: bool | int = ..., xns: bool | int = ...) -> Any: ...
def selectPriority(*args, allComponents: bool | int | int = ..., alc: bool | int | int = ..., allObjects: bool | int | int = ..., alo: bool | int | int = ..., animBreakdown: bool | int | int = ..., abd: bool | int | int = ..., animCurve: bool | int | int = ..., ac: bool | int | int = ..., animInTangent: bool | int | int = ..., ait: bool | int | int = ..., animKeyframe: bool | int | int = ..., ak: bool | int | int = ..., animOutTangent: bool | int | int = ..., aot: bool | int | int = ..., byName: tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., bn: tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., camera: bool | int | int = ..., ca: bool | int | int = ..., cluster: bool | int | int = ..., cl: bool | int | int = ..., collisionModel: bool | int | int = ..., clm: bool | int | int = ..., controlVertex: bool | int | int = ..., cv: bool | int | int = ..., curve: bool | int | int = ..., c: bool | int | int = ..., curveKnot: bool | int | int = ..., ck: bool | int | int = ..., curveOnSurface: bool | int | int = ..., cos: bool | int | int = ..., curveParameterPoint: bool | int | int = ..., cpp: bool | int | int = ..., dimension: bool | int | int = ..., dim: bool | int | int = ..., dynamicConstraint: bool | int | int = ..., dc: bool | int | int = ..., edge: bool | int | int = ..., eg: bool | int | int = ..., editPoint: bool | int | int = ..., ep: bool | int | int = ..., emitter: bool | int | int = ..., em: bool | int | int = ..., facet: bool | int | int = ..., fc: bool | int | int = ..., field: bool | int | int = ..., fi: bool | int | int = ..., fluid: bool | int | int = ..., fl: bool | int | int = ..., follicle: bool | int | int = ..., fo: bool | int | int = ..., hairSystem: bool | int | int = ..., hs: bool | int | int = ..., handle: bool | int | int = ..., ha: bool | int | int = ..., hull: bool | int | int = ..., hl: bool | int | int = ..., ikEndEffector: bool | int | int = ..., iee: bool | int | int = ..., ikHandle: bool | int | int = ..., ikh: bool | int | int = ..., imagePlane: bool | int | int = ..., ip: bool | int | int = ..., implicitGeometry: bool | int | int = ..., ig: bool | int | int = ..., isoparm: bool | int | int = ..., iso: bool | int | int = ..., joint: bool | int | int = ..., j: bool | int | int = ..., jointPivot: bool | int | int = ..., jp: bool | int | int = ..., lattice: bool | int | int = ..., la: bool | int | int = ..., latticePoint: bool | int | int = ..., lp: bool | int | int = ..., light: bool | int | int = ..., lt: bool | int | int = ..., localRotationAxis: bool | int | int = ..., ra: bool | int | int = ..., locator: bool | int | int = ..., lc: bool | int | int = ..., locatorUV: bool | int | int = ..., luv: bool | int | int = ..., locatorXYZ: bool | int | int = ..., xyz: bool | int | int = ..., meshUVShell: bool | int | int = ..., msh: bool | int | int = ..., motionTrailPoint: bool | int | int = ..., mtp: bool | int | int = ..., motionTrailTangent: bool | int | int = ..., mtt: bool | int | int = ..., nCloth: bool | int | int = ..., ncl: bool | int | int = ..., nParticle: bool | int | int = ..., npr: bool | int | int = ..., nParticleShape: bool | int | int = ..., nps: bool | int | int = ..., nRigid: bool | int | int = ..., nr: bool | int | int = ..., nonlinear: bool | int | int = ..., nl: bool | int | int = ..., nurbsCurve: bool | int | int = ..., nc: bool | int | int = ..., nurbsSurface: bool | int | int = ..., ns: bool | int | int = ..., orientationLocator: bool | int | int = ..., ol: bool | int | int = ..., particle: bool | int | int = ..., pr: bool | int | int = ..., particleShape: bool | int | int = ..., ps: bool | int | int = ..., plane: bool | int | int = ..., pl: bool | int | int = ..., polymesh: bool | int | int = ..., p: bool | int | int = ..., polymeshEdge: bool | int | int = ..., pe: bool | int | int = ..., polymeshFace: bool | int | int = ..., pf: bool | int | int = ..., polymeshFreeEdge: bool | int | int = ..., pfe: bool | int | int = ..., polymeshUV: bool | int | int = ..., puv: bool | int | int = ..., polymeshVertex: bool | int | int = ..., pv: bool | int | int = ..., polymeshVtxFace: bool | int | int = ..., pvf: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., queryByName: bool | int | str = ..., qbn: bool | int | str = ..., rigidBody: bool | int | int = ..., rb: bool | int | int = ..., rigidConstraint: bool | int | int = ..., rc: bool | int | int = ..., rotatePivot: bool | int | int = ..., rp: bool | int | int = ..., scalePivot: bool | int | int = ..., sp: bool | int | int = ..., sculpt: bool | int | int = ..., sc: bool | int | int = ..., selectHandle: bool | int | int = ..., sh: bool | int | int = ..., spring: bool | int | int = ..., spr: bool | int | int = ..., springComponent: bool | int | int = ..., spc: bool | int | int = ..., stroke: bool | int | int = ..., str: bool | int | int = ..., subdiv: bool | int | int = ..., sd: bool | int | int = ..., subdivMeshEdge: bool | int | int = ..., sme: bool | int | int = ..., subdivMeshFace: bool | int | int = ..., smf: bool | int | int = ..., subdivMeshPoint: bool | int | int = ..., smp: bool | int | int = ..., subdivMeshUV: bool | int | int = ..., smu: bool | int | int = ..., surfaceEdge: bool | int | int = ..., se: bool | int | int = ..., surfaceFace: bool | int | int = ..., sf: bool | int | int = ..., surfaceKnot: bool | int | int = ..., sk: bool | int | int = ..., surfaceParameterPoint: bool | int | int = ..., spp: bool | int | int = ..., surfaceRange: bool | int | int = ..., sr: bool | int | int = ..., texture: bool | int | int = ..., tx: bool | int | int = ..., vertex: bool | int | int = ..., v: bool | int | int = ...) -> Any: ...
def selectType(*args, allComponents: bool | int = ..., alc: bool | int = ..., allObjects: bool | int = ..., alo: bool | int = ..., animBreakdown: bool | int = ..., abd: bool | int = ..., animCurve: bool | int = ..., ac: bool | int = ..., animInTangent: bool | int = ..., ait: bool | int = ..., animKeyframe: bool | int = ..., ak: bool | int = ..., animOutTangent: bool | int = ..., aot: bool | int = ..., byName: tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., bn: tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., camera: bool | int = ..., ca: bool | int = ..., cluster: bool | int = ..., cl: bool | int = ..., collisionModel: bool | int = ..., clm: bool | int = ..., controlVertex: bool | int = ..., cv: bool | int = ..., curve: bool | int = ..., c: bool | int = ..., curveKnot: bool | int = ..., ck: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., curveParameterPoint: bool | int = ..., cpp: bool | int = ..., dimension: bool | int = ..., dim: bool | int = ..., dynamicConstraint: bool | int = ..., dc: bool | int = ..., edge: bool | int = ..., eg: bool | int = ..., editPoint: bool | int = ..., ep: bool | int = ..., emitter: bool | int = ..., em: bool | int = ..., facet: bool | int = ..., fc: bool | int = ..., field: bool | int = ..., fi: bool | int = ..., fluid: bool | int = ..., fl: bool | int = ..., follicle: bool | int = ..., fo: bool | int = ..., hairSystem: bool | int = ..., hs: bool | int = ..., handle: bool | int = ..., ha: bool | int = ..., hull: bool | int = ..., hl: bool | int = ..., ikEndEffector: bool | int = ..., iee: bool | int = ..., ikHandle: bool | int = ..., ikh: bool | int = ..., imagePlane: bool | int = ..., ip: bool | int = ..., implicitGeometry: bool | int = ..., ig: bool | int = ..., isoparm: bool | int = ..., iso: bool | int = ..., joint: bool | int = ..., j: bool | int = ..., jointPivot: bool | int = ..., jp: bool | int = ..., lattice: bool | int = ..., la: bool | int = ..., latticePoint: bool | int = ..., lp: bool | int = ..., light: bool | int = ..., lt: bool | int = ..., localRotationAxis: bool | int = ..., ra: bool | int = ..., locator: bool | int = ..., lc: bool | int = ..., locatorUV: bool | int = ..., luv: bool | int = ..., locatorXYZ: bool | int = ..., xyz: bool | int = ..., meshComponents: bool | int = ..., mc: bool | int = ..., meshUVShell: bool | int = ..., msh: bool | int = ..., motionTrailPoint: bool | int = ..., mtp: bool | int = ..., motionTrailTangent: bool | int = ..., mtt: bool | int = ..., nCloth: bool | int = ..., ncl: bool | int = ..., nParticle: bool | int = ..., npr: bool | int = ..., nParticleShape: bool | int = ..., nps: bool | int = ..., nRigid: bool | int = ..., nr: bool | int = ..., nonlinear: bool | int = ..., nl: bool | int = ..., nurbsCurve: bool | int = ..., nc: bool | int = ..., nurbsSurface: bool | int = ..., ns: bool | int = ..., objectComponent: bool | int = ..., ocm: bool | int = ..., orientationLocator: bool | int = ..., ol: bool | int = ..., particle: bool | int = ..., pr: bool | int = ..., particleShape: bool | int = ..., ps: bool | int = ..., plane: bool | int = ..., pl: bool | int = ..., polymesh: bool | int = ..., p: bool | int = ..., polymeshEdge: bool | int = ..., pe: bool | int = ..., polymeshFace: bool | int = ..., pf: bool | int = ..., polymeshFreeEdge: bool | int = ..., pfe: bool | int = ..., polymeshUV: bool | int = ..., puv: bool | int = ..., polymeshVertex: bool | int = ..., pv: bool | int = ..., polymeshVtxFace: bool | int = ..., pvf: bool | int = ..., query: bool | int = ..., q: bool | int = ..., queryByName: bool | int | str = ..., qbn: bool | int | str = ..., rigidBody: bool | int = ..., rb: bool | int = ..., rigidConstraint: bool | int = ..., rc: bool | int = ..., rotatePivot: bool | int = ..., rp: bool | int = ..., scalePivot: bool | int = ..., sp: bool | int = ..., sculpt: bool | int = ..., sc: bool | int = ..., selectHandle: bool | int = ..., sh: bool | int = ..., spring: bool | int = ..., spr: bool | int = ..., springComponent: bool | int = ..., spc: bool | int = ..., stroke: bool | int = ..., str: bool | int = ..., subdiv: bool | int = ..., sd: bool | int = ..., subdivMeshEdge: bool | int = ..., sme: bool | int = ..., subdivMeshFace: bool | int = ..., smf: bool | int = ..., subdivMeshPoint: bool | int = ..., smp: bool | int = ..., subdivMeshUV: bool | int = ..., smu: bool | int = ..., surfaceEdge: bool | int = ..., se: bool | int = ..., surfaceFace: bool | int = ..., sf: bool | int = ..., surfaceKnot: bool | int = ..., sk: bool | int = ..., surfaceParameterPoint: bool | int = ..., spp: bool | int = ..., surfaceRange: bool | int = ..., sr: bool | int = ..., surfaceUV: bool | int = ..., suv: bool | int = ..., texture: bool | int = ..., tx: bool | int = ..., vertex: bool | int = ..., v: bool | int = ...) -> Any: ...
def selectedNodes(*args, dagObjects: bool | int = ..., do: bool | int = ...) -> Any: ...
def selectionConnection(*args, activeCacheList: bool | int = ..., atc: bool | int = ..., activeCharacterList: bool | int = ..., acl: bool | int = ..., activeList: bool | int = ..., act: bool | int = ..., addScript: bool | int | str | Callable = ..., addTo: str = ..., add: str = ..., characterList: bool | int = ..., cl: bool | int = ..., clear: bool | int = ..., clr: bool | int = ..., connectionList: bool | int = ..., lst: bool | int = ..., defineTemplate: str = ..., dt: str = ..., deselect: str = ..., d: str = ..., edit: bool | int = ..., e: bool | int = ..., editor: bool | int | str = ..., ed: bool | int | str = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., findObject: bool | int | str = ..., fo: bool | int | str = ..., g: bool | int = ..., highlightList: bool | int = ..., hl: bool | int = ..., identify: bool | int = ..., id: bool | int = ..., keyframeList: bool | int = ..., key: bool | int = ..., lock: bool | int = ..., lck: bool | int = ..., modelList: bool | int = ..., mdl: bool | int = ..., object: bool | int | str = ..., obj: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., remove: str = ..., rm: str = ..., removeScript: bool | int | str | Callable = ..., rs: bool | int | str | Callable = ..., select: str = ..., s: str = ..., setList: bool | int = ..., sl: bool | int = ..., switch: bool | int = ..., sw: bool | int = ..., useTemplate: str = ..., ut: str = ..., worldList: bool | int = ..., wl: bool | int = ...) -> Any: ...
def separator(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., horizontal: bool | int = ..., hr: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., style: bool | int | str = ..., st: bool | int | str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def sequenceManager(*args, addSequencerAudio: str = ..., asa: str = ..., attachSequencerAudio: str = ..., ata: str = ..., currentShot: bool | int | str = ..., cs: bool | int | str = ..., currentTime: bool | int | int | float = ..., ct: bool | int | int | float = ..., edit: bool | int = ..., e: bool | int = ..., listSequencerAudio: str = ..., lsa: str = ..., listShots: bool | int = ..., lsh: bool | int = ..., modelPanel: bool | int | str = ..., mp: bool | int | str = ..., node: bool | int | str = ..., nd: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., writableSequencer: bool | int | str = ..., ws: bool | int | str = ...) -> Any: ...
def setAttr(*args, alteredValue: bool | int = ..., av: bool | int = ..., caching: bool | int = ..., ca: bool | int = ..., capacityHint: int = ..., ch: int = ..., channelBox: bool | int = ..., cb: bool | int = ..., clamp: bool | int = ..., c: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., keyable: bool | int = ..., k: bool | int = ..., lock: bool | int = ..., l: bool | int = ..., query: bool | int = ..., q: bool | int = ..., size: int = ..., s: int = ..., type: str = ..., typ: str = ...) -> Any: ...
def setAttrMapping(*args, absolute: bool | int = ..., a: bool | int = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., axis: str = ..., ax: str = ..., clutch: str = ..., c: str = ..., device: str = ..., d: str = ..., offset: float = ..., o: float = ..., relative: bool | int = ..., r: bool | int = ..., scale: float = ..., s: float = ..., selection: bool | int = ..., sl: bool | int = ...) -> Any: ...
def setDefaultShadingGroup(*args, query: bool | int = ..., q: bool | int = ...) -> Any: ...
def setDrivenKeyframe(*args, attribute: str | list[str] = ..., at: str | list[str] = ..., controlPoints: bool | int = ..., cp: bool | int = ..., count: bool | int = ..., cnt: bool | int = ..., currentDriver: bool | int | str = ..., cd: bool | int | str = ..., driven: bool | int = ..., dn: bool | int = ..., driver: bool | int = ..., dr: bool | int = ..., driverValue: float | list[float] = ..., dv: float | list[float] = ..., edit: bool | int = ..., e: bool | int = ..., hierarchy: str = ..., hi: str = ..., inTangentType: str = ..., itt: str = ..., insert: bool | int = ..., i: bool | int = ..., insertBlend: bool | int = ..., ib: bool | int = ..., outTangentType: str = ..., ott: str = ..., query: bool | int = ..., q: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., value: float = ..., v: float = ...) -> Any: ...

setDynStartState: Callable
def setDynamic(*args, allOnWhenRun: bool | int = ..., awr: bool | int = ..., disableAllOnWhenRun: bool | int = ..., dwr: bool | int = ..., setAll: bool | int = ..., all: bool | int = ..., setOff: bool | int = ..., off: bool | int = ..., setOn: bool | int = ..., on: bool | int = ...) -> Any: ...
def setEditCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def setFluidAttr(*args, addValue: bool | int = ..., ad: bool | int = ..., attribute: str = ..., at: str = ..., clear: bool | int = ..., cl: bool | int = ..., floatRandom: float = ..., fr: float = ..., floatValue: float = ..., fv: float = ..., lowerFace: bool | int = ..., lf: bool | int = ..., reset: bool | int = ..., re: bool | int = ..., vectorRandom: tuple[float, float, float] = ..., vr: tuple[float, float, float] = ..., vectorValue: tuple[float, float, float] = ..., vv: tuple[float, float, float] = ..., xIndex: int = ..., xi: int = ..., xvalue: bool | int = ..., x: bool | int = ..., yIndex: int = ..., yi: int = ..., yvalue: bool | int = ..., y: bool | int = ..., zIndex: int = ..., zi: int = ..., zvalue: bool | int = ..., z: bool | int = ...) -> Any: ...
def setFocus(*args) -> Any: ...
def setInfinity(*args, attribute: str | list[str] = ..., at: str | list[str] = ..., controlPoints: bool | int = ..., cp: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., hierarchy: str = ..., hi: str = ..., postInfinite: bool | int | str = ..., poi: bool | int | str = ..., preInfinite: bool | int | str = ..., pri: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., shape: bool | int = ..., s: bool | int = ...) -> Any: ...
def setInputDeviceMapping(*args, absolute: bool | int = ..., a: bool | int = ..., axis: str | list[str] = ..., ax: str | list[str] = ..., device: str = ..., d: str = ..., offset: float = ..., o: float = ..., relative: bool | int = ..., r: bool | int = ..., scale: float = ..., s: float = ..., view: bool | int = ..., v: bool | int = ..., world: bool | int = ..., w: bool | int = ...) -> Any: ...
def setKeyCtx(*args, breakdown: bool | int = ..., bd: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., preserveTangent: bool | int = ..., pt: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def setKeyPath(*args) -> Any: ...
def setKeyframe(*args, adjustTangent: bool | int = ..., adt: bool | int = ..., animLayer: str = ..., al: str = ..., animated: bool | int = ..., an: bool | int = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., breakdown: bool | int = ..., bd: bool | int = ..., clip: str = ..., c: str = ..., controlPoints: bool | int = ..., cp: bool | int = ..., dirtyDG: bool | int = ..., dd: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., float: float | list[float] = ..., f: float | list[float] = ..., hierarchy: str = ..., hi: str = ..., identity: bool | int = ..., id: bool | int = ..., inTangentType: str = ..., itt: str = ..., insert: bool | int = ..., i: bool | int = ..., insertBlend: bool | int = ..., ib: bool | int = ..., minimizeRotation: bool | int = ..., mr: bool | int = ..., noResolve: bool | int = ..., nr: bool | int = ..., outTangentType: str = ..., ott: str = ..., preserveCurveShape: bool | int = ..., pcs: bool | int = ..., query: bool | int = ..., q: bool | int = ..., respectKeyable: bool | int = ..., rk: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., time: int | float | list[int | float] = ..., t: int | float | list[int | float] = ..., useCurrentLockedWeights: bool | int = ..., lw: bool | int = ..., value: float = ..., v: float = ...) -> Any: ...
def setKeyframeBlendshapeTargetWts(*args) -> Any: ...
def setMenuMode(*args) -> Any: ...

setNClothStartState: Callable
def setNodeTypeFlag(*args, display: bool | int = ..., dsp: bool | int = ..., query: bool | int = ..., q: bool | int = ..., threadSafe: bool | int = ..., ts: bool | int = ...) -> Any: ...
def setParent(*args, defineTemplate: str = ..., dt: str = ..., menu: bool | int = ..., m: bool | int = ..., query: bool | int = ..., q: bool | int = ..., topLevel: bool | int = ..., top: bool | int = ..., upLevel: bool | int = ..., u: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def setParticleAttr(*args, attribute: str = ..., at: str = ..., floatValue: float = ..., fv: float = ..., object: str = ..., o: str = ..., randomFloat: float = ..., rf: float = ..., randomVector: tuple[float, float, float] = ..., rv: tuple[float, float, float] = ..., relative: bool | int = ..., r: bool | int = ..., vectorValue: tuple[float, float, float] = ..., vv: tuple[float, float, float] = ...) -> Any: ...
def setRenderPassType(*args, defaultDataType: bool | int = ..., d: bool | int = ..., numChannels: int = ..., n: int = ..., type: str = ..., t: str = ...) -> Any: ...
def setStartupMessage(*args) -> Any: ...
def setToolTo(*args) -> Any: ...
def setUITemplate(*args, popTemplate: bool | int = ..., ppt: bool | int = ..., pushTemplate: bool | int = ..., pst: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def sets(*args, addElement: str = ..., add: str = ..., afterFilters: bool | int = ..., af: bool | int = ..., anyMember: str = ..., am: str = ..., clear: str = ..., cl: str = ..., color: bool | int | int = ..., co: bool | int | int = ..., copy: str = ..., cp: str = ..., edges: bool | int = ..., eg: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., editPoints: bool | int = ..., ep: bool | int = ..., empty: bool | int = ..., em: bool | int = ..., facets: bool | int = ..., fc: bool | int = ..., flatten: str = ..., fl: str = ..., forceElement: str = ..., fe: str = ..., include: str = ..., intersection: str = ..., int: str = ..., isIntersecting: str = ..., ii: str = ..., isMember: str = ..., im: str = ..., layer: bool | int = ..., l: bool | int = ..., name: str = ..., n: str = ..., noIntermediate: bool | int = ..., ni: bool | int = ..., noSurfaceShader: bool | int = ..., nss: bool | int = ..., noWarnings: bool | int = ..., nw: bool | int = ..., nodesOnly: bool | int = ..., no: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: str = ..., rm: str = ..., renderable: bool | int = ..., r: bool | int = ..., size: bool | int = ..., s: bool | int = ..., split: str = ..., sp: str = ..., subtract: str = ..., sub: str = ..., text: bool | int | str = ..., t: bool | int | str = ..., union: str = ..., un: str = ..., vertices: bool | int = ..., v: bool | int = ...) -> Any: ...
def shadingConnection(*args, connectionState: bool | int = ..., cs: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def shadingGeometryRelCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., offCommand: bool | int | str = ..., ofc: bool | int | str = ..., onCommand: bool | int | str = ..., onc: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., shadingCentric: bool | int = ..., s: bool | int = ...) -> Any: ...
def shadingLightRelCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., offCommand: bool | int | str = ..., ofc: bool | int | str = ..., onCommand: bool | int | str = ..., onc: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., shadingCentric: bool | int = ..., s: bool | int = ...) -> Any: ...
def shadingNetworkCompare(*args, byName: bool | int = ..., nam: bool | int = ..., byValue: bool | int = ..., val: bool | int = ..., delete: bool | int = ..., equivalent: bool | int = ..., eq: bool | int = ..., network1: bool | int = ..., n1: bool | int = ..., network2: bool | int = ..., n2: bool | int = ..., query: bool | int = ..., q: bool | int = ..., upstreamOnly: bool | int = ..., up: bool | int = ...) -> Any: ...
def shadingNode(*args, asLight: bool | int = ..., al: bool | int = ..., asPostProcess: bool | int = ..., app: bool | int = ..., asRendering: bool | int = ..., ar: bool | int = ..., asShader: bool | int = ..., asTexture: bool | int = ..., at: bool | int = ..., asUtility: bool | int = ..., au: bool | int = ..., isColorManaged: bool | int = ..., icm: bool | int = ..., name: str = ..., n: str = ..., parent: str = ..., p: str = ..., shared: bool | int = ..., s: bool | int = ..., skipSelect: bool | int = ..., ss: bool | int = ...) -> Any: ...
def shapeCompare(*args) -> Any: ...
def shapeEditor(*args, clearSelection: bool | int = ..., cs: bool | int = ..., control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., lowestSelection: bool | int = ..., ls: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., stateString: bool | int = ..., sts: bool | int = ..., targetControlList: bool | int = ..., tcl: bool | int = ..., targetList: bool | int = ..., tl: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ..., verticalSliders: bool | int = ..., vs: bool | int = ...) -> Any: ...
def shapePanel(*args, control: bool | int = ..., ctl: bool | int = ..., copy: str = ..., cp: str = ..., createString: bool | int = ..., cs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., editString: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., init: bool | int = ..., isUnique: bool | int = ..., iu: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., menuBarRepeatLast: bool | int = ..., mrl: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., needsInit: bool | int = ..., ni: bool | int = ..., parent: str = ..., p: str = ..., popupMenuProcedure: bool | int | str | Callable = ..., pmp: bool | int | str | Callable = ..., query: bool | int = ..., q: bool | int = ..., replacePanel: str = ..., rp: str = ..., shapeEditor: bool | int = ..., se: bool | int = ..., tearOff: bool | int = ..., to: bool | int = ..., tearOffCopy: str = ..., toc: str = ..., tearOffRestore: bool | int = ..., tor: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def shelfButton(*args, actionIsSubstitute: bool | int = ..., ais: bool | int = ..., align: bool | int | str = ..., al: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., command: bool | int | str | Callable = ..., c: bool | int | str | Callable = ..., commandRepeatable: bool | int = ..., rpt: bool | int = ..., defineTemplate: str = ..., dt: str = ..., disabledImage: bool | int | str = ..., di: bool | int | str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., doubleClickCommand: bool | int | str | Callable = ..., dcc: bool | int | str | Callable = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableCommandRepeat: bool | int = ..., ecr: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., flat: bool | int = ..., fla: bool | int = ..., flexibleWidthType: bool | int | int = ..., fwt: bool | int | int = ..., flexibleWidthValue: bool | int | int = ..., fwv: bool | int | int = ..., flipX: bool | int = ..., fx: bool | int = ..., flipY: bool | int = ..., fy: bool | int = ..., font: bool | int | str = ..., fn: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., handleNodeDropCallback: str | Callable = ..., hnd: str | Callable = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., highlightImage: bool | int | str = ..., hi: bool | int | str = ..., image: bool | int | str = ..., i: bool | int | str = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., imageOverlayLabel: bool | int | str = ..., iol: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., labelEditingCallback: str | Callable = ..., lec: str | Callable = ..., labelOffset: bool | int | int = ..., lo: bool | int | int = ..., ltVersion: bool | int | str = ..., lt: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., marginHeight: bool | int | int = ..., mh: bool | int | int = ..., marginWidth: bool | int | int = ..., mw: bool | int | int = ..., menuItem: tuple[str, str] | list[tuple[str, str]] = ..., mi: tuple[str, str] | list[tuple[str, str]] = ..., menuItemPython: int | list[int] = ..., mip: int | list[int] = ..., noBackground: bool | int = ..., nbg: bool | int = ..., noDefaultPopup: bool | int = ..., ndp: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., overlayLabelBackColor: bool | int | tuple[float, float, float, float] = ..., olb: bool | int | tuple[float, float, float, float] = ..., overlayLabelColor: bool | int | tuple[float, float, float] = ..., olc: bool | int | tuple[float, float, float] = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rotation: bool | int | float = ..., rot: bool | int | float = ..., scaleIcon: bool | int = ..., sic: bool | int = ..., selectionImage: bool | int | str = ..., si: bool | int | str = ..., sourceType: bool | int | str = ..., stp: bool | int | str = ..., statusBarMessage: str = ..., sbm: str = ..., style: bool | int | str = ..., st: bool | int | str = ..., useAlpha: bool | int = ..., ua: bool | int = ..., useTemplate: str = ..., ut: str = ..., version: bool | int | str = ..., ver: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def shelfLayout(*args, alignment: bool | int | str = ..., aln: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., cellHeight: bool | int | int = ..., ch: bool | int | int = ..., cellWidth: bool | int | int = ..., cw: bool | int | int = ..., cellWidthHeight: bool | int | tuple[int, int] = ..., cwh: bool | int | tuple[int, int] = ..., childArray: bool | int = ..., ca: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., horizontal: bool | int = ..., hr: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., ltVersion: bool | int | str = ..., lt: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., position: tuple[str, int] | list[tuple[str, int]] = ..., pos: tuple[str, int] | list[tuple[str, int]] = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., spacing: bool | int | int = ..., spa: bool | int | int = ..., statusBarMessage: str = ..., sbm: str = ..., style: bool | int | str = ..., st: bool | int | str = ..., useTemplate: str = ..., ut: str = ..., version: bool | int | str = ..., ver: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def shelfTabLayout(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., borderStyle: bool | int | str = ..., bs: bool | int | str = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., childArray: bool | int = ..., ca: bool | int = ..., childResizable: bool | int = ..., cr: bool | int = ..., closeTab: int = ..., ct: int = ..., closeTabCommand: str | Callable = ..., ctc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., doubleClickCommand: str | Callable = ..., dcc: str | Callable = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., horizontalScrollBarThickness: int = ..., hst: int = ..., image: bool | int | str = ..., i: bool | int | str = ..., imageVisible: bool | int = ..., iv: bool | int = ..., innerMarginHeight: bool | int | int = ..., imh: bool | int | int = ..., innerMarginWidth: bool | int | int = ..., imw: bool | int | int = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., minChildWidth: bool | int | int = ..., mcw: bool | int | int = ..., moveTab: tuple[int, int] = ..., mt: tuple[int, int] = ..., newTabCommand: str | Callable = ..., ntc: str | Callable = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., postMenuCommand: str | Callable = ..., pmc: str | Callable = ..., preSelectCommand: str | Callable = ..., psc: str | Callable = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., scrollable: bool | int = ..., scr: bool | int = ..., scrollableTabs: bool | int = ..., stb: bool | int = ..., selectCommand: bool | int | str | Callable = ..., sc: bool | int | str | Callable = ..., selectTab: bool | int | str = ..., st: bool | int | str = ..., selectTabIndex: bool | int | int = ..., sti: bool | int | int = ..., showNewTab: bool | int = ..., snt: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., tabIcon: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., ti: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., tabIconIndex: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tii: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tabLabel: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., tl: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., tabLabelIndex: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tli: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tabPosition: bool | int | str = ..., tp: bool | int | str = ..., tabTooltip: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., tt: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., tabTooltipIndex: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tti: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tabsClosable: bool | int = ..., tc: bool | int = ..., tabsVisible: bool | int = ..., tv: bool | int = ..., useTemplate: str = ..., ut: str = ..., verticalScrollBarThickness: int = ..., vst: int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def shot(*args, audio: bool | int | str = ..., aud: bool | int | str = ..., clip: bool | int | str = ..., cl: bool | int | str = ..., clipDuration: bool | int | int | float = ..., cd: bool | int | int | float = ..., clipOpacity: bool | int | float = ..., co: bool | int | float = ..., clipSyncState: bool | int = ..., css: bool | int = ..., clipZeroOffset: bool | int | int | float = ..., czo: bool | int | int | float = ..., copy: bool | int = ..., c: bool | int = ..., createCustomAnim: bool | int = ..., cca: bool | int = ..., currentCamera: bool | int | str = ..., cc: bool | int | str = ..., customAnim: bool | int = ..., ca: bool | int = ..., deleteCustomAnim: bool | int = ..., dca: bool | int = ..., determineTrack: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endTime: bool | int | int | float = ..., et: bool | int | int | float = ..., favorite: bool | int = ..., fav: bool | int = ..., flag1: bool | int = ..., f1: bool | int = ..., flag10: bool | int = ..., f10: bool | int = ..., flag11: bool | int = ..., f11: bool | int = ..., flag12: bool | int = ..., f12: bool | int = ..., flag2: bool | int = ..., f2: bool | int = ..., flag3: bool | int = ..., f3: bool | int = ..., flag4: bool | int = ..., f4: bool | int = ..., flag5: bool | int = ..., f5: bool | int = ..., flag6: bool | int = ..., f6: bool | int = ..., flag7: bool | int = ..., f7: bool | int = ..., flag8: bool | int = ..., f8: bool | int = ..., flag9: bool | int = ..., f9: bool | int = ..., hasCameraSet: bool | int = ..., hcs: bool | int = ..., hasStereoCamera: bool | int = ..., hsc: bool | int = ..., imagePlaneVisibility: bool | int = ..., ipv: bool | int = ..., linkAudio: bool | int | str = ..., la: bool | int | str = ..., lock: bool | int = ..., lck: bool | int = ..., mute: bool | int = ..., m: bool | int = ..., paste: bool | int = ..., p: bool | int = ..., pasteInstance: bool | int = ..., pi: bool | int = ..., postHoldTime: bool | int | int | float = ..., pst: bool | int | int | float = ..., preHoldTime: bool | int | int | float = ..., prt: bool | int | int | float = ..., query: bool | int = ..., q: bool | int = ..., scale: bool | int | float = ..., s: bool | int | float = ..., selfmute: bool | int = ..., sm: bool | int = ..., sequenceDuration: bool | int | int | float = ..., sqd: bool | int | int | float = ..., sequenceEndTime: bool | int | int | float = ..., set: bool | int | int | float = ..., sequenceStartTime: bool | int | int | float = ..., sst: bool | int | int | float = ..., shotName: bool | int | str = ..., sn: bool | int | str = ..., sourceDuration: bool | int | int | float = ..., sd: bool | int | int | float = ..., startTime: bool | int | int | float = ..., st: bool | int | int | float = ..., track: bool | int | int = ..., trk: bool | int | int = ..., transitionInLength: bool | int | int | float = ..., til: bool | int | int | float = ..., transitionInType: bool | int | int = ..., tit: bool | int | int = ..., transitionOutLength: bool | int | int | float = ..., tol: bool | int | int | float = ..., transitionOutType: bool | int | int = ..., tot: bool | int | int = ..., unlinkAudio: bool | int = ..., ula: bool | int = ...) -> Any: ...
def shotRipple(*args, deleted: bool | int = ..., d: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endDelta: bool | int | int | float = ..., ed: bool | int | int | float = ..., endTime: bool | int | int | float = ..., et: bool | int | int | float = ..., query: bool | int = ..., q: bool | int = ..., startDelta: bool | int | int | float = ..., sd: bool | int | int | float = ..., startTime: bool | int | int | float = ..., st: bool | int | int | float = ...) -> Any: ...
def shotTrack(*args, edit: bool | int = ..., e: bool | int = ..., insertTrack: int = ..., it: int = ..., lock: bool | int = ..., l: bool | int = ..., mute: bool | int = ..., m: bool | int = ..., numTracks: bool | int | int = ..., nt: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., removeEmptyTracks: bool | int = ..., ret: bool | int = ..., removeTrack: int = ..., rt: int = ..., selfmute: bool | int = ..., sm: bool | int = ..., solo: bool | int = ..., so: bool | int = ..., swapTracks: tuple[int, int] = ..., st: tuple[int, int] = ..., title: bool | int | str = ..., t: bool | int | str = ..., track: bool | int | int = ..., tr: bool | int | int = ..., unsolo: bool | int = ..., uso: bool | int = ...) -> Any: ...
def showHelp(*args, absolute: bool | int = ..., a: bool | int = ..., docs: bool | int = ..., d: bool | int = ..., helpTable: bool | int = ..., ht: bool | int = ..., query: bool | int = ..., q: bool | int = ..., version: bool | int = ..., v: bool | int = ...) -> Any: ...
def showHidden(*args, above: bool | int = ..., a: bool | int = ..., allObjects: bool | int = ..., all: bool | int = ..., below: bool | int = ..., b: bool | int = ..., lastHidden: bool | int = ..., lh: bool | int = ...) -> Any: ...
def showManipCtx(*args, currentNodeName: bool | int = ..., cnn: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., incSnap: bool | int | tuple[int, bool | int] | list[tuple[int, bool | int]] = ..., incSnapRelative: bool | int | tuple[int, bool | int] | list[tuple[int, bool | int]] = ..., isr: bool | int | tuple[int, bool | int] | list[tuple[int, bool | int]] = ..., incSnapUI: bool | int = ..., isu: bool | int = ..., incSnapValue: bool | int | tuple[int, float] | list[tuple[int, float]] = ..., isv: bool | int | tuple[int, float] | list[tuple[int, float]] = ..., lockSelection: bool | int = ..., ls: bool | int = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., toggleIncSnap: bool | int = ..., tis: bool | int = ..., toolFinish: bool | int | str | Callable = ..., tf: bool | int | str | Callable = ..., toolStart: bool | int | str | Callable = ..., ts: bool | int | str | Callable = ...) -> Any: ...
def showMetadata(*args, auto: bool | int = ..., a: bool | int = ..., dataType: bool | int | str = ..., dt: bool | int | str = ..., interpolation: bool | int = ..., i: bool | int = ..., isActivated: bool | int = ..., ia: bool | int = ..., listAllStreams: bool | int = ..., las: bool | int = ..., listMembers: bool | int = ..., lm: bool | int = ..., listValidMethods: bool | int = ..., lvm: bool | int = ..., listVisibleStreams: bool | int = ..., lvs: bool | int = ..., member: bool | int | str = ..., mb: bool | int | str = ..., method: bool | int | str = ..., m: bool | int | str = ..., off: bool | int | tuple[Any, Any, Any] = ..., boolean: bool | int | tuple[Any, Any, Any] = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int | tuple[float, float] = ..., r: bool | int | tuple[float, float] = ..., rayScale: bool | int | float = ..., rs: bool | int | float = ..., stream: bool | int | str = ..., s: bool | int | str = ...) -> Any: ...
def showSelectionInTitle(*args) -> Any: ...
def showShadingGroupAttrEditor(*args, query: bool | int = ..., q: bool | int = ...) -> Any: ...
def showWindow(*args) -> Any: ...
def simplify(*args, animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., controlPoints: bool | int = ..., cp: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., floatTolerance: float = ..., ft: float = ..., hierarchy: str = ..., hi: str = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., shape: bool | int = ..., s: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., timeTolerance: int | float = ..., tt: int | float = ..., valueTolerance: float = ..., vt: float = ...) -> Any: ...
def singleProfileBirailSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., tangentContinuityProfile1: bool | int = ..., tp1: bool | int = ..., transformMode: bool | int | int = ..., tm: bool | int | int = ...) -> Any: ...
def skeletonEmbed(*args, mergedMesh: bool | int = ..., mm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., segmentationMethod: int = ..., sm: int = ..., segmentationResolution: int = ..., sr: int = ...) -> Any: ...
def skinBindCtx(*args, about: bool | int | str = ..., a: bool | int | str = ..., axis: bool | int | str = ..., ax: bool | int | str = ..., colorRamp: bool | int | str = ..., cr: bool | int | str = ..., currentInfluence: bool | int | str = ..., ci: bool | int | str = ..., displayInactiveMode: bool | int | int = ..., di: bool | int | int = ..., displayNormalized: bool | int = ..., dn: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., falloffCurve: bool | int | str = ..., fc: bool | int | str = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., symmetry: bool | int = ..., s: bool | int = ..., tolerance: bool | int | float = ..., t: bool | int | float = ...) -> Any: ...
def skinCluster(*args, addInfluence: str | list[str] = ..., ai: str | list[str] = ..., addToSelection: bool | int = ..., ats: bool | int = ..., after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., baseShape: str | list[str] = ..., bsh: str | list[str] = ..., before: bool | int = ..., bf: bool | int = ..., bindMethod: bool | int | int = ..., bm: bool | int | int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., dropoffRate: bool | int | float = ..., dr: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., forceNormalizeWeights: bool | int = ..., fnw: bool | int = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., heatmapFalloff: float = ..., hmf: float = ..., ignoreBindPose: bool | int = ..., ibp: bool | int = ..., ignoreHierarchy: bool | int = ..., ih: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., influence: bool | int | str = ..., inf: bool | int | str = ..., lockWeights: bool | int = ..., lw: bool | int = ..., maximumInfluences: bool | int | int = ..., mi: bool | int | int = ..., moveJointsMode: bool | int = ..., mjm: bool | int = ..., name: str = ..., n: str = ..., normalizeWeights: bool | int | int = ..., nw: bool | int | int = ..., nurbsSamples: int = ..., ns: int = ..., obeyMaxInfluences: bool | int = ..., omi: bool | int = ..., parallel: bool | int = ..., par: bool | int = ..., polySmoothness: float = ..., ps: float = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., recacheBindMatrices: bool | int = ..., rbm: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., removeFromSelection: bool | int = ..., rfs: bool | int = ..., removeInfluence: str | list[str] = ..., ri: str | list[str] = ..., removeUnusedInfluence: bool | int = ..., rui: bool | int = ..., selectInfluenceVerts: str = ..., siv: str = ..., skinMethod: bool | int | int = ..., sm: bool | int | int = ..., smoothWeights: float = ..., sw: float = ..., smoothWeightsMaxIterations: int = ..., swi: int = ..., split: bool | int = ..., sp: bool | int = ..., toSelectedBones: bool | int = ..., tsb: bool | int = ..., toSkeletonAndTransforms: bool | int = ..., tst: bool | int = ..., unbind: bool | int = ..., ub: bool | int = ..., unbindKeepHistory: bool | int = ..., ubk: bool | int = ..., useComponentTags: bool | int = ..., uct: bool | int = ..., useGeometry: bool | int = ..., ug: bool | int = ..., volumeBind: float = ..., vb: float = ..., volumeType: int = ..., vt: int = ..., weight: float = ..., wt: float = ..., weightDistribution: bool | int | int = ..., wd: bool | int | int = ..., weightedInfluence: bool | int = ..., wi: bool | int = ...) -> Any: ...
def skinPercent(*args, ignoreBelow: bool | int | float = ..., ib: bool | int | float = ..., normalize: bool | int = ..., nrm: bool | int = ..., pruneWeights: float = ..., prw: float = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., resetToDefault: bool | int = ..., rtd: bool | int = ..., transform: bool | int | str = ..., t: bool | int | str = ..., transformMoveWeights: str | list[str] = ..., tmw: str | list[str] = ..., transformValue: tuple[str, float] | list[tuple[str, float]] = ..., tv: tuple[str, float] | list[tuple[str, float]] = ..., value: bool | int = ..., v: bool | int = ..., zeroRemainingInfluences: bool | int = ..., zri: bool | int = ...) -> Any: ...
def smoothCurve(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., smoothness: bool | int | float = ..., s: bool | int | float = ...) -> Any: ...
def smoothTangentSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameter: bool | int | float | list[float] = ..., p: bool | int | float | list[float] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., smoothness: bool | int | int = ..., s: bool | int | int = ...) -> Any: ...
def snapKey(*args, animation: str = ..., an: str = ..., attribute: str | list[str] = ..., at: str | list[str] = ..., controlPoints: bool | int = ..., cp: bool | int = ..., float: str | int | float | list[str | int | float] = ..., f: str | int | float | list[str | int | float] = ..., hierarchy: str = ..., hi: str = ..., includeUpperBound: bool | int = ..., iub: bool | int = ..., index: int | list[int] = ..., mergeDuplicate: bool | int = ..., md: bool | int = ..., shape: bool | int = ..., s: bool | int = ..., time: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., t: str | tuple[float, float] | tuple[float] | list[str | tuple[float, float] | tuple[float]] = ..., timeMultiple: float = ..., tm: float = ..., valueMultiple: float = ..., vm: float = ...) -> Any: ...
def snapMode(*args, curve: bool | int = ..., c: bool | int = ..., distanceIncrement: bool | int | float = ..., dsi: bool | int | float = ..., edgeMagnet: bool | int | int = ..., em: bool | int | int = ..., edgeMagnetTolerance: bool | int | float = ..., emt: bool | int | float = ..., grid: bool | int = ..., gr: bool | int = ..., liveFaceCenter: bool | int = ..., lfc: bool | int = ..., livePoint: bool | int = ..., lp: bool | int = ..., meshCenter: bool | int = ..., mc: bool | int = ..., pixelCenter: bool | int = ..., pc: bool | int = ..., pixelSnap: bool | int = ..., ps: bool | int = ..., point: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tolerance: bool | int | int = ..., t: bool | int | int = ..., useTolerance: bool | int = ..., ut: bool | int = ..., uvTolerance: bool | int | int = ..., uvt: bool | int | int = ..., viewPlane: bool | int = ..., vp: bool | int = ...) -> Any: ...
def snapTogetherCtx(*args, clearSelection: bool | int = ..., cs: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., setOrientation: bool | int = ..., so: bool | int = ..., snapPolygonFace: bool | int = ..., spf: bool | int = ...) -> Any: ...
def snapshot(*args, anchorTransform: str = ..., at: str = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., endTime: bool | int | int | float = ..., et: bool | int | int | float = ..., increment: bool | int | int | float = ..., i: bool | int | int | float = ..., motionTrail: bool | int = ..., mt: bool | int = ..., motionTrailName: str = ..., mtn: str = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., removeAnchorTransform: str = ..., rat: str = ..., startTime: bool | int | int | float = ..., st: bool | int | int | float = ..., update: bool | int | str = ..., u: bool | int | str = ...) -> Any: ...
def snapshotBeadCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., inTangent: bool | int = ..., i: bool | int = ..., name: str = ..., n: str = ..., outTangent: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def snapshotModifyKeyCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def soft(*args, convert: bool | int = ..., c: bool | int = ..., duplicate: bool | int = ..., d: bool | int = ..., duplicateHistory: bool | int = ..., dh: bool | int = ..., goal: float = ..., g: float = ..., hideOriginal: bool | int = ..., h: bool | int = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def softMod(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., bindState: bool | int = ..., bs: bool | int = ..., curveInterpolation: int | list[int] = ..., ci: int | list[int] = ..., curvePoint: float | list[float] = ..., cp: float | list[float] = ..., curveValue: float | list[float] = ..., cv: float | list[float] = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., envelope: bool | int | float = ..., en: bool | int | float = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., falloffAroundSelection: bool | int = ..., fas: bool | int = ..., falloffBasedOnX: bool | int = ..., fbx: bool | int = ..., falloffBasedOnY: bool | int = ..., fby: bool | int = ..., falloffBasedOnZ: bool | int = ..., fbz: bool | int = ..., falloffCenter: tuple[float, float, float] = ..., fc: tuple[float, float, float] = ..., falloffMasking: bool | int = ..., fm: bool | int = ..., falloffMode: int = ..., fom: int = ..., falloffRadius: float = ..., fr: float = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., name: str = ..., n: str = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., rel: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., resetGeometry: bool | int = ..., rg: bool | int = ..., split: bool | int = ..., sp: bool | int = ..., useComponentTags: bool | int = ..., uct: bool | int = ..., weightedNode: bool | int | tuple[str, str] = ..., wn: bool | int | tuple[str, str] = ...) -> Any: ...
def softModCtx(*args, dragSlider: str = ..., ds: str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., falseColor: bool | int = ..., fc: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., rst: bool | int = ...) -> Any: ...
def softSelect(*args, compressUndo: bool | int | int = ..., cu: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., enableFalseColor: bool | int | int = ..., efc: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., softSelectColorCurve: bool | int | str = ..., scc: bool | int | str = ..., softSelectCurve: bool | int | str = ..., ssc: bool | int | str = ..., softSelectDistance: bool | int | float = ..., ssd: bool | int | float = ..., softSelectEnabled: bool | int | int = ..., sse: bool | int | int = ..., softSelectFalloff: bool | int | int = ..., ssf: bool | int | int = ..., softSelectReset: bool | int = ..., ssr: bool | int = ..., softSelectUVDistance: bool | int | float = ..., sud: bool | int | float = ...) -> Any: ...
def softSelectOptionsCtx(*args, buttonDown: bool | int = ..., btd: bool | int = ..., buttonUp: bool | int = ..., btu: bool | int = ..., colorCurve: str = ..., cc: str = ..., condition: bool | int = ..., cdn: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., enableFalseColor: int = ..., efc: int = ..., enabled: bool | int = ..., en: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., falloffCurve: str = ..., fc: str = ..., falloffMode: int = ..., fm: int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., query: bool | int = ..., q: bool | int = ..., size: float = ..., sz: float = ..., uvSize: float = ..., uvs: float = ...) -> Any: ...
def soloMaterial(*args, attr: bool | int | str = ..., a: bool | int | str = ..., last: bool | int = ..., l: bool | int = ..., node: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., unsolo: bool | int = ..., us: bool | int = ...) -> Any: ...
def sortCaseInsensitive(*args) -> Any: ...
def sound(*args, edit: bool | int = ..., e: bool | int = ..., endTime: bool | int | int | float = ..., et: bool | int | int | float = ..., file: bool | int | str = ..., f: bool | int | str = ..., length: bool | int = ..., l: bool | int = ..., mute: bool | int = ..., m: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., offset: bool | int | int | float = ..., o: bool | int | int | float = ..., query: bool | int = ..., q: bool | int = ..., sourceEnd: bool | int | int | float = ..., se: bool | int | int | float = ..., sourceStart: bool | int | int | float = ..., ss: bool | int | int | float = ...) -> Any: ...
def soundControl(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., beginScrub: bool | int = ..., bs: bool | int = ..., defineTemplate: str = ..., dt: str = ..., displaySound: bool | int = ..., ds: bool | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., endScrub: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., maxTime: bool | int | int | float = ..., max: bool | int | int | float = ..., minTime: bool | int | int | float = ..., min: bool | int | int | float = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., pressCommand: str = ..., pc: str = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., releaseCommand: str = ..., rc: str = ..., repeatChunkSize: bool | int | float = ..., rcs: bool | int | float = ..., repeatOnHold: bool | int = ..., roh: bool | int = ..., resample: bool | int = ..., r: bool | int = ..., sound: bool | int | str = ..., s: bool | int | str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., waveform: bool | int | str = ..., wf: bool | int | str = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def soundPopup(*args, annotation: str = ..., ann: str = ..., backgroundColor: tuple[float, float, float] = ..., bgc: tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: str = ..., dtg: str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: int = ..., h: int = ..., highlightColor: tuple[float, float, float] = ..., hlc: tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: str = ..., p: str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: str | Callable = ..., vcc: str | Callable = ..., width: int = ..., w: int = ...) -> Any: ...
def spBirailCtx(*args, activeNodes: bool | int = ..., anq: bool | int = ..., autoCreate: bool | int = ..., ac: bool | int = ..., bldProfileFirst: bool | int = ..., bpf: bool | int = ..., bldProfileLast: bool | int = ..., bpl: bool | int = ..., bldProfiles: bool | int = ..., bp: bool | int = ..., bldRailOne: bool | int = ..., br1: bool | int = ..., bldRailTwo: bool | int = ..., br2: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., immediate: bool | int = ..., im: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., rs: bool | int = ..., tangentContinuityProfile1: bool | int = ..., tp1: bool | int = ..., toolNode: bool | int = ..., tnq: bool | int = ..., transformMode: int = ..., tm: int = ...) -> Any: ...
def spaceLocator(*args, absolute: bool | int = ..., a: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., name: str = ..., n: str = ..., position: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ...) -> Any: ...
def sphere(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: bool | int | float = ..., esw: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., heightRatio: bool | int | float = ..., hr: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sections: bool | int | int = ..., s: bool | int | int = ..., spans: bool | int | int = ..., nsp: bool | int | int = ..., startSweep: bool | int | float = ..., ssw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useTolerance: bool | int = ..., ut: bool | int = ...) -> Any: ...
def spotLight(*args, barnDoors: bool | int = ..., bd: bool | int = ..., bottomBarnDoorAngle: bool | int | float = ..., bbd: bool | int | float = ..., coneAngle: bool | int | float = ..., ca: bool | int | float = ..., decayRate: int = ..., d: int = ..., discRadius: bool | int | float = ..., drs: bool | int | float = ..., dropOff: bool | int | float = ..., do: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int = ..., exc: bool | int = ..., intensity: bool | int | float = ..., i: bool | int | float = ..., leftBarnDoorAngle: bool | int | float = ..., lbd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., penumbra: bool | int | float = ..., p: bool | int | float = ..., position: bool | int | tuple[float, float, float] = ..., pos: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., rgb: bool | int | tuple[float, float, float] = ..., rightBarnDoorAngle: bool | int | float = ..., rbd: bool | int | float = ..., rotation: bool | int | tuple[float, float, float] = ..., rot: bool | int | tuple[float, float, float] = ..., shadowColor: bool | int | tuple[float, float, float] = ..., sc: bool | int | tuple[float, float, float] = ..., shadowDither: bool | int | float = ..., sd: bool | int | float = ..., shadowSamples: bool | int | int = ..., sh: bool | int | int = ..., softShadow: bool | int = ..., ss: bool | int = ..., topBarnDoorAngle: bool | int | float = ..., tbd: bool | int | float = ..., useRayTraceShadows: bool | int = ..., rs: bool | int = ...) -> Any: ...
def spotLightPreviewPort(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., spotLight: str = ..., sl: str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ..., widthHeight: tuple[int, int] = ..., wh: tuple[int, int] = ...) -> Any: ...
def spreadSheetEditor(*args, allAttr: bool | int = ..., aa: bool | int = ..., attrRegExp: bool | int | str = ..., are: bool | int | str = ..., control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., execute: str = ..., exe: str = ..., exists: bool | int = ..., ex: bool | int = ..., filter: bool | int | str = ..., f: bool | int | str = ..., fixedAttrList: bool | int | str = ..., fal: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., keyableOnly: bool | int = ..., ko: bool | int = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., longNames: bool | int = ..., ln: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., niceNames: bool | int = ..., nn: bool | int = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., precision: bool | int | int = ..., pre: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., selectedAttr: bool | int = ..., sla: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., showShapes: bool | int = ..., ss: bool | int = ..., stateString: bool | int = ..., sts: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def spring(*args, addSprings: bool | int = ..., add: bool | int = ..., allPoints: bool | int = ..., all: bool | int = ..., count: bool | int = ..., ct: bool | int = ..., damp: float = ..., dmp: float = ..., damping: bool | int | float = ..., d: bool | int | float = ..., dampingPS: bool | int | float = ..., dPS: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., endForceWeight: bool | int | float = ..., efw: bool | int | float = ..., exclusive: bool | int = ..., exc: bool | int = ..., length: bool | int | float = ..., l: bool | int | float = ..., maxDistance: float = ..., mxd: float = ..., minDistance: float = ..., mnd: float = ..., minMax: bool | int = ..., mm: bool | int = ..., name: bool | int | str = ..., n: bool | int | str = ..., noDuplicate: bool | int = ..., nd: bool | int = ..., query: bool | int = ..., q: bool | int = ..., restLength: bool | int | float = ..., rl: bool | int | float = ..., restLengthPS: bool | int | float = ..., rPS: bool | int | float = ..., startForceWeight: bool | int | float = ..., sfw: bool | int | float = ..., stiffness: bool | int | float = ..., s: bool | int | float = ..., stiffnessPS: bool | int | float = ..., sPS: bool | int | float = ..., strength: float = ..., str: float = ..., useDampingPS: bool | int = ..., udp: bool | int = ..., useRestLengthPS: bool | int = ..., urp: bool | int = ..., useStiffnessPS: bool | int = ..., usp: bool | int = ..., walkLength: int = ..., wl: int = ..., wireframe: bool | int = ..., wf: bool | int = ...) -> Any: ...
def squareSurface(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., continuityType1: bool | int | int = ..., ct1: bool | int | int = ..., continuityType2: bool | int | int = ..., ct2: bool | int | int = ..., continuityType3: bool | int | int = ..., ct3: bool | int | int = ..., continuityType4: bool | int | int = ..., ct4: bool | int | int = ..., curveFitCheckpoints: bool | int | int = ..., cfc: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endPointTolerance: bool | int | float = ..., ept: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., rebuildCurve1: bool | int = ..., rc1: bool | int = ..., rebuildCurve2: bool | int = ..., rc2: bool | int = ..., rebuildCurve3: bool | int = ..., rc3: bool | int = ..., rebuildCurve4: bool | int = ..., rc4: bool | int = ...) -> Any: ...
def srtContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def stackTrace(*args, dump: bool | int = ..., d: bool | int = ..., parameterCount: int = ..., pc: int = ..., parameterType: tuple[int, int] = ..., pt: tuple[int, int] = ..., parameterValue: tuple[int, int] = ..., pv: tuple[int, int] = ..., query: bool | int = ..., q: bool | int = ..., state: bool | int = ..., s: bool | int = ...) -> Any: ...
def stitchSurface(*args, bias: bool | int | float = ..., b: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., cascade: bool | int = ..., c: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cvIthIndex: bool | int | int | list[int] = ..., ci: bool | int | int | list[int] = ..., cvJthIndex: bool | int | int | list[int] = ..., cj: bool | int | int | list[int] = ..., edit: bool | int = ..., e: bool | int = ..., fixBoundary: bool | int = ..., fb: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepG0Continuity: bool | int = ..., kg0: bool | int = ..., keepG1Continuity: bool | int = ..., kg1: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberOfSamples: int = ..., ns: int = ..., object: bool | int = ..., o: bool | int = ..., parameterU: bool | int | float | list[float] = ..., u: bool | int | float | list[float] = ..., parameterV: bool | int | float | list[float] = ..., v: bool | int | float | list[float] = ..., positionalContinuity: bool | int | bool | int | list[bool | int] = ..., pc: bool | int | bool | int | list[bool | int] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., stepCount: bool | int | int | list[int] = ..., sc: bool | int | int | list[int] = ..., tangentialContinuity: bool | int | bool | int | list[bool | int] = ..., tc: bool | int | bool | int | list[bool | int] = ..., togglePointNormals: bool | int = ..., tpn: bool | int = ..., togglePointPosition: bool | int = ..., tpp: bool | int = ..., toggleTolerance: bool | int | bool | int | list[bool | int] = ..., tt: bool | int | bool | int | list[bool | int] = ..., tolerance: bool | int | float | list[float] = ..., tol: bool | int | float | list[float] = ..., weight0: float = ..., wt0: float = ..., weight1: float = ..., wt1: float = ...) -> Any: ...
def stitchSurfaceCtx(*args, activeNodes: bool | int = ..., anq: bool | int = ..., autoCreate: bool | int = ..., ac: bool | int = ..., bias: float = ..., b: float = ..., caching: bool | int = ..., cch: bool | int = ..., cascade: bool | int = ..., c: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cvIthIndex: int | list[int] = ..., ci: int | list[int] = ..., cvJthIndex: int | list[int] = ..., cj: int | list[int] = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fixBoundary: bool | int = ..., fb: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., immediate: bool | int = ..., im: bool | int = ..., keepG0Continuity: bool | int = ..., kg0: bool | int = ..., keepG1Continuity: bool | int = ..., kg1: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., numberOfSamples: int = ..., ns: int = ..., object: bool | int = ..., o: bool | int = ..., parameterU: float | list[float] = ..., u: float | list[float] = ..., parameterV: float | list[float] = ..., v: float | list[float] = ..., positionalContinuity: bool | int | list[bool | int] = ..., pc: bool | int | list[bool | int] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reset: bool | int = ..., rs: bool | int = ..., stepCount: int | list[int] = ..., sc: int | list[int] = ..., tangentialContinuity: bool | int | list[bool | int] = ..., tc: bool | int | list[bool | int] = ..., togglePointNormals: bool | int = ..., tpn: bool | int = ..., togglePointPosition: bool | int = ..., tpp: bool | int = ..., toggleTolerance: bool | int | list[bool | int] = ..., tt: bool | int | list[bool | int] = ..., tolerance: float | list[float] = ..., tol: float | list[float] = ..., toolNode: bool | int = ..., tnq: bool | int = ..., weight0: float = ..., wt0: float = ..., weight1: float = ..., wt1: float = ...) -> Any: ...
def stitchSurfacePoints(*args, bias: bool | int | float = ..., b: bool | int | float = ..., caching: bool | int = ..., cch: bool | int = ..., cascade: bool | int = ..., c: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., cvIthIndex: bool | int | int | list[int] = ..., ci: bool | int | int | list[int] = ..., cvJthIndex: bool | int | int | list[int] = ..., cj: bool | int | int | list[int] = ..., edit: bool | int = ..., e: bool | int = ..., equalWeight: bool | int = ..., ewt: bool | int = ..., fixBoundary: bool | int = ..., fb: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., keepG0Continuity: bool | int = ..., kg0: bool | int = ..., keepG1Continuity: bool | int = ..., kg1: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., parameterU: bool | int | float | list[float] = ..., u: bool | int | float | list[float] = ..., parameterV: bool | int | float | list[float] = ..., v: bool | int | float | list[float] = ..., positionalContinuity: bool | int | bool | int | list[bool | int] = ..., pc: bool | int | bool | int | list[bool | int] = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., stepCount: bool | int | int | list[int] = ..., sc: bool | int | int | list[int] = ..., tangentialContinuity: bool | int | bool | int | list[bool | int] = ..., tc: bool | int | bool | int | list[bool | int] = ..., togglePointNormals: bool | int = ..., tpn: bool | int = ..., togglePointPosition: bool | int = ..., tpp: bool | int = ..., toggleTolerance: bool | int | bool | int | list[bool | int] = ..., tt: bool | int | bool | int | list[bool | int] = ..., tolerance: bool | int | float | list[float] = ..., tol: bool | int | float | list[float] = ...) -> Any: ...
def stringArrayIntersector(*args, allowDuplicates: bool | int = ..., ad: bool | int = ..., defineTemplate: str = ..., dt: str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., intersect: str = ..., i: str = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., r: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def stroke(*args, name: str = ..., n: str = ..., pressure: bool | int = ..., pr: bool | int = ..., seed: int = ..., s: int = ...) -> Any: ...
def subdAutoProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., layout: bool | int | int = ..., l: bool | int | int = ..., layoutMethod: bool | int | int = ..., lm: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., optimize: bool | int | int = ..., o: bool | int | int = ..., percentageSpace: bool | int | float = ..., ps: bool | int | float = ..., planes: bool | int | int = ..., p: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., scale: bool | int | int = ..., sc: bool | int | int = ..., skipIntersect: bool | int = ..., si: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def subdCleanTopology(*args) -> Any: ...
def subdCollapse(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., level: bool | int | int = ..., l: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def subdDuplicateAndConnect(*args) -> Any: ...
def subdEditUV(*args, angle: bool | int | float = ..., a: bool | int | float = ..., pivotU: bool | int | float = ..., pu: bool | int | float = ..., pivotV: bool | int | float = ..., pv: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., relative: bool | int = ..., r: bool | int = ..., rotateRatio: bool | int | float = ..., rr: bool | int | float = ..., rotation: bool | int = ..., rot: bool | int = ..., scale: bool | int = ..., s: bool | int = ..., scaleU: bool | int | float = ..., su: bool | int | float = ..., scaleV: bool | int | float = ..., sv: bool | int | float = ..., uValue: bool | int | float = ..., u: bool | int | float = ..., uvSetName: bool | int | str = ..., uvs: bool | int | str = ..., vValue: bool | int | float = ..., v: bool | int | float = ...) -> Any: ...
def subdLayoutUV(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., flipReversed: bool | int = ..., fr: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., layout: bool | int | int = ..., l: bool | int | int = ..., layoutMethod: bool | int | int = ..., lm: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., percentageSpace: bool | int | float = ..., ps: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., rotateForBestFit: bool | int | int = ..., rbf: bool | int | int = ..., scale: bool | int | int = ..., sc: bool | int | int = ..., separate: bool | int | int = ..., se: bool | int | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def subdMapCut(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def subdMapSewMove(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., limitPieceSize: bool | int = ..., lps: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., numberFaces: bool | int | int = ..., nf: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def subdMatchTopology(*args, frontOfChain: bool | int = ..., foc: bool | int = ...) -> Any: ...
def subdMirror(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., xMirror: bool | int = ..., xm: bool | int = ..., yMirror: bool | int = ..., ym: bool | int = ..., zMirror: bool | int = ..., zm: bool | int = ...) -> Any: ...
def subdPlanarProjection(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., createNewMap: bool | int = ..., cm: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., imageCenter: bool | int | tuple[float, float] = ..., ic2: bool | int | tuple[float, float] = ..., imageCenterX: bool | int | float = ..., icx: bool | int | float = ..., imageCenterY: bool | int | float = ..., icy: bool | int | float = ..., imageScale: bool | int | tuple[float, float] = ..., is2: bool | int | tuple[float, float] = ..., imageScaleU: bool | int | float = ..., isu: bool | int | float = ..., imageScaleV: bool | int | float = ..., isv: bool | int | float = ..., insertBeforeDeformers: bool | int = ..., ibd: bool | int = ..., keepImageRatio: bool | int = ..., kir: bool | int = ..., mapDirection: str = ..., md: str = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., projectionCenter: bool | int | tuple[float, float, float] = ..., pc: bool | int | tuple[float, float, float] = ..., projectionCenterX: bool | int | float = ..., pcx: bool | int | float = ..., projectionCenterY: bool | int | float = ..., pcy: bool | int | float = ..., projectionCenterZ: bool | int | float = ..., pcz: bool | int | float = ..., projectionHeight: bool | int | float = ..., ph: bool | int | float = ..., projectionScale: bool | int | tuple[float, float] = ..., ps: bool | int | tuple[float, float] = ..., projectionWidth: bool | int | float = ..., pw: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., rotate: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., rotateX: bool | int | float = ..., rx: bool | int | float = ..., rotateY: bool | int | float = ..., ry: bool | int | float = ..., rotateZ: bool | int | float = ..., rz: bool | int | float = ..., rotationAngle: bool | int | float = ..., ra: bool | int | float = ..., smartFit: bool | int = ..., sf: bool | int = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def subdToNurbs(*args, addUnderTransform: bool | int = ..., aut: bool | int = ..., applyMatrixToResult: bool | int = ..., amr: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., outputType: int = ..., ot: int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def subdToPoly(*args, addUnderTransform: bool | int = ..., aut: bool | int = ..., applyMatrixToResult: bool | int = ..., amr: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., connectShaders: bool | int = ..., cs: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., copyUVTopology: bool | int = ..., cut: bool | int = ..., depth: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., extractPointPosition: bool | int = ..., epp: bool | int = ..., format: bool | int | int = ..., f: bool | int | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., inSubdCVId: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., inSubdCVIdLeft: bool | int | int = ..., isl: bool | int | int = ..., inSubdCVIdRight: bool | int | int = ..., isr: bool | int | int = ..., maxPolys: bool | int | int = ..., mp: bool | int | int = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., outSubdCVId: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., os: bool | int | tuple[int, int] | list[tuple[int, int]] = ..., outSubdCVIdLeft: bool | int | int = ..., osl: bool | int | int = ..., outSubdCVIdRight: bool | int | int = ..., osr: bool | int | int = ..., outv: bool | int | int | list[int] = ..., ov: bool | int | int | list[int] = ..., preserveVertexOrdering: bool | int = ..., pvo: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sampleCount: bool | int | int = ..., sc: bool | int | int = ..., shareUVs: bool | int = ..., suv: bool | int = ..., subdNormals: bool | int = ..., un: bool | int = ...) -> Any: ...
def subdTransferUVsToCache(*args) -> Any: ...
def substituteGeometry(*args, disableNonSkinDeformers: bool | int = ..., dnd: bool | int = ..., newGeometryToLayer: bool | int = ..., ngl: bool | int = ..., oldGeometryToLayer: bool | int = ..., ogl: bool | int = ..., reWeightDistTolerance: float = ..., wdt: float = ..., retainOldGeometry: bool | int = ..., rog: bool | int = ...) -> Any: ...
def suitePrefs(*args, applyToSuite: str = ..., ats: str = ..., edit: bool | int = ..., e: bool | int = ..., installedAsSuite: bool | int = ..., ias: bool | int = ..., isCompleteSuite: bool | int = ..., ics: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def superCtx(*args, attach: str | list[str] = ..., a: str | list[str] = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def surface(*args, degreeU: int = ..., du: int = ..., degreeV: int = ..., dv: int = ..., formU: str = ..., fu: str = ..., formV: str = ..., fv: str = ..., knotU: float | list[float] = ..., ku: float | list[float] = ..., knotV: float | list[float] = ..., kv: float | list[float] = ..., name: str = ..., n: str = ..., objectSpace: bool | int = ..., ob: bool | int = ..., point: tuple[float, float, float] | list[tuple[float, float, float]] = ..., p: tuple[float, float, float] | list[tuple[float, float, float]] = ..., pointWeight: tuple[float, float, float, float] | list[tuple[float, float, float, float]] = ..., pw: tuple[float, float, float, float] | list[tuple[float, float, float, float]] = ..., worldSpace: bool | int = ..., ws: bool | int = ...) -> Any: ...
def surfaceSampler(*args, camera: str = ..., cam: str = ..., fileFormat: str | list[str] = ..., ff: str | list[str] = ..., filename: str | list[str] = ..., fn: str | list[str] = ..., filterSize: float = ..., fs: float = ..., filterType: int = ..., ft: int = ..., flipU: bool | int = ..., fu: bool | int = ..., flipV: bool | int = ..., fv: bool | int = ..., ignoreMirroredFaces: bool | int = ..., imf: bool | int = ..., ignoreTransforms: bool | int = ..., it: bool | int = ..., mapHeight: int | list[int] = ..., mh: int | list[int] = ..., mapMaterials: bool | int | list[bool | int] = ..., mm: bool | int | list[bool | int] = ..., mapOutput: str | list[str] = ..., mo: str | list[str] = ..., mapSpace: str | list[str] = ..., sp: str | list[str] = ..., mapWidth: int | list[int] = ..., mw: int | list[int] = ..., maxSearchDistance: float | list[float] = ..., msd: float | list[float] = ..., maximumValue: float | list[float] = ..., max: float | list[float] = ..., overscan: int = ..., os: int = ..., searchCage: str | list[str] = ..., sc: str | list[str] = ..., searchMethod: int = ..., sm: int = ..., searchOffset: float | list[float] = ..., so: float | list[float] = ..., shadows: bool | int | list[bool | int] = ..., sh: bool | int | list[bool | int] = ..., source: str | list[str] = ..., s: str | list[str] = ..., sourceUVSpace: str | list[str] = ..., sus: str | list[str] = ..., superSampling: int = ..., ss: int = ..., target: str | list[str] = ..., t: str | list[str] = ..., targetUVSpace: str | list[str] = ..., tus: str | list[str] = ..., useGeometryNormals: bool | int = ..., ugn: bool | int = ..., uvSet: str | list[str] = ..., uv: str | list[str] = ...) -> Any: ...
def surfaceShaderList(*args, add: str = ..., edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: str = ..., rm: str = ...) -> Any: ...
def swatchDisplayPort(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., borderColor: bool | int | tuple[float, float, float] = ..., bc: bool | int | tuple[float, float, float] = ..., borderWidth: bool | int | int = ..., bw: bool | int | int = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., pressCommand: str | Callable = ..., pc: str | Callable = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., renderPriority: int = ..., rp: int = ..., renderSize: bool | int | int = ..., rs: bool | int | int = ..., shadingNode: bool | int | str = ..., sn: bool | int | str = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ..., widthHeight: tuple[int, int] = ..., wh: tuple[int, int] = ...) -> Any: ...
def swatchRefresh(*args) -> Any: ...
def switchTable(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label1: str = ..., l1: str = ..., label2: str = ..., l2: str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., selectedRow: bool | int = ..., sr: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., switchNode: bool | int | str = ..., sn: bool | int | str = ..., underPointerRow: bool | int = ..., upr: bool | int = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def symbolButton(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., command: bool | int | str | Callable = ..., c: bool | int | str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., image: bool | int | str = ..., i: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def symbolCheckBox(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., disableOffImage: bool | int | str = ..., dfi: bool | int | str = ..., disableOnImage: bool | int | str = ..., dni: bool | int | str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., image: bool | int | str = ..., i: bool | int | str = ..., innerMargin: bool | int = ..., im: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., ltVersion: bool | int | str = ..., lt: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., offCommand: str | Callable = ..., ofc: str | Callable = ..., offImage: bool | int | str = ..., ofi: bool | int | str = ..., onCommand: str | Callable = ..., onc: str | Callable = ..., onImage: bool | int | str = ..., oni: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., value: bool | int = ..., v: bool | int = ..., version: bool | int | str = ..., ver: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def symmetricModelling(*args, about: bool | int | str = ..., a: bool | int | str = ..., allowPartial: bool | int = ..., ap: bool | int = ..., axis: bool | int | str = ..., ax: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., preserveSeam: bool | int | int = ..., ps: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., r: bool | int = ..., seamFalloffCurve: bool | int | str = ..., sf: bool | int | str = ..., seamTolerance: bool | int | float = ..., st: bool | int | float = ..., symmetry: bool | int | int = ..., s: bool | int | int = ..., tolerance: bool | int | float = ..., t: bool | int | float = ..., topoSymmetry: bool | int = ..., ts: bool | int = ...) -> Any: ...
def syncSculptCache(*args) -> Any: ...
def sysFile(*args, copy: str = ..., cp: str = ..., delete: bool | int = ..., makeDir: bool | int = ..., md: bool | int = ..., move: str = ..., mov: str = ..., removeEmptyDir: bool | int = ..., red: bool | int = ..., rename: str = ..., ren: str = ...) -> Any: ...
def tabLayout(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., borderStyle: bool | int | str = ..., bs: bool | int | str = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., childArray: bool | int = ..., ca: bool | int = ..., childResizable: bool | int = ..., cr: bool | int = ..., closeTab: int = ..., ct: int = ..., closeTabCommand: str | Callable = ..., ctc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., doubleClickCommand: str | Callable = ..., dcc: str | Callable = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., horizontalScrollBarThickness: int = ..., hst: int = ..., image: bool | int | str = ..., i: bool | int | str = ..., imageVisible: bool | int = ..., iv: bool | int = ..., innerMarginHeight: bool | int | int = ..., imh: bool | int | int = ..., innerMarginWidth: bool | int | int = ..., imw: bool | int | int = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., minChildWidth: bool | int | int = ..., mcw: bool | int | int = ..., moveTab: tuple[int, int] = ..., mt: tuple[int, int] = ..., newTabCommand: str | Callable = ..., ntc: str | Callable = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfChildren: bool | int = ..., nch: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., postMenuCommand: str | Callable = ..., pmc: str | Callable = ..., preSelectCommand: str | Callable = ..., psc: str | Callable = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., scrollable: bool | int = ..., scr: bool | int = ..., scrollableTabs: bool | int = ..., stb: bool | int = ..., selectCommand: bool | int | str | Callable = ..., sc: bool | int | str | Callable = ..., selectTab: bool | int | str = ..., st: bool | int | str = ..., selectTabIndex: bool | int | int = ..., sti: bool | int | int = ..., showNewTab: bool | int = ..., snt: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., tabIcon: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., ti: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., tabIconIndex: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tii: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tabLabel: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., tl: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., tabLabelIndex: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tli: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tabPosition: bool | int | str = ..., tp: bool | int | str = ..., tabTooltip: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., tt: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., tabTooltipIndex: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tti: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., tabsClosable: bool | int = ..., tc: bool | int = ..., tabsVisible: bool | int = ..., tv: bool | int = ..., useTemplate: str = ..., ut: str = ..., verticalScrollBarThickness: int = ..., vst: int = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def tangentConstraint(*args, aimVector: bool | int | tuple[float, float, float] = ..., aim: bool | int | tuple[float, float, float] = ..., edit: bool | int = ..., e: bool | int = ..., layer: str = ..., l: str = ..., name: bool | int | str = ..., n: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., targetList: bool | int = ..., tl: bool | int = ..., upVector: bool | int | tuple[float, float, float] = ..., u: bool | int | tuple[float, float, float] = ..., weight: bool | int | float = ..., w: bool | int | float = ..., weightAliasList: bool | int = ..., wal: bool | int = ..., worldUpObject: bool | int | str = ..., wuo: bool | int | str = ..., worldUpType: bool | int | str = ..., wut: bool | int | str = ..., worldUpVector: bool | int | tuple[float, float, float] = ..., wu: bool | int | tuple[float, float, float] = ...) -> Any: ...
def targetWeldCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., mergeToCenter: bool | int = ..., mtc: bool | int = ..., preserveUV: bool | int = ..., puv: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def tension(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., envelope: bool | int | float = ..., en: bool | int | float = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., inwardConstraint: bool | int | float = ..., iwc: bool | int | float = ..., name: str = ..., n: str = ..., outwardConstraint: bool | int | float = ..., owc: bool | int | float = ..., parallel: bool | int = ..., par: bool | int = ..., pinBorderVertices: bool | int = ..., pbv: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., smoothingIterations: bool | int | int = ..., si: bool | int | int = ..., smoothingStep: bool | int | float = ..., ss: bool | int | float = ..., split: bool | int = ..., sp: bool | int = ..., useComponentTags: bool | int = ..., uct: bool | int = ...) -> Any: ...
def testPa(*args) -> Any: ...
def testPassContribution(*args, renderLayer: str = ..., rl: str = ..., renderPass: str = ..., rp: str = ...) -> Any: ...
def texCutContext(*args, adjustSize: bool | int = ..., asz: bool | int = ..., displayShellBorders: bool | int = ..., dsb: bool | int = ..., edgeSelectSensitive: bool | int | float = ..., ess: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., mode: bool | int | str = ..., m: bool | int | str = ..., moveRatio: bool | int | float = ..., mvr: bool | int | float = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., size: bool | int | float = ..., sz: bool | int | float = ..., steadyStroke: bool | int = ..., ss: bool | int = ..., steadyStrokeDistance: bool | int | float = ..., ssd: bool | int | float = ..., touchToSew: bool | int = ..., tts: bool | int = ...) -> Any: ...
def texLatticeDeformContext(*args, edit: bool | int = ..., e: bool | int = ..., envelope: bool | int | float = ..., ev: bool | int | float = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., latticeColumns: bool | int | int = ..., lc: bool | int | int = ..., latticeRows: bool | int | int = ..., lr: bool | int | int = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., showMoveManipulator: bool | int = ..., smm: bool | int = ..., snapPixelMode: bool | int = ..., spm: bool | int = ..., useBoundingRect: bool | int = ..., ubr: bool | int = ...) -> Any: ...
def texManipContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def texMoveContext(*args, edit: bool | int = ..., e: bool | int = ..., editPivotMode: bool | int = ..., epm: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., position: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., snap: bool | int = ..., s: bool | int = ..., snapComponentsRelative: bool | int = ..., scr: bool | int = ..., snapPixelMode: bool | int | int = ..., spm: bool | int | int = ..., snapValue: bool | int | float = ..., sv: bool | int | float = ..., tweakMode: bool | int = ..., twk: bool | int = ...) -> Any: ...
def texMoveUVShellContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., iterations: bool | int | int = ..., it: bool | int | int = ..., mask: bool | int = ..., m: bool | int = ..., position: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., shellBorder: bool | int | float = ..., sb: bool | int | float = ...) -> Any: ...
def texRotateContext(*args, edit: bool | int = ..., e: bool | int = ..., editPivotMode: bool | int = ..., epm: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., position: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., snap: bool | int = ..., s: bool | int = ..., snapRelative: bool | int = ..., sr: bool | int = ..., snapValue: bool | int | float = ..., sv: bool | int | float = ..., tweakMode: bool | int = ..., twk: bool | int = ...) -> Any: ...
def texScaleContext(*args, edit: bool | int = ..., e: bool | int = ..., editPivotMode: bool | int = ..., epm: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., position: bool | int = ..., p: bool | int = ..., preventNegativeScale: bool | int = ..., pns: bool | int = ..., query: bool | int = ..., q: bool | int = ..., snap: bool | int = ..., s: bool | int = ..., snapRelative: bool | int = ..., sr: bool | int = ..., snapValue: bool | int | float = ..., sv: bool | int | float = ..., tweakMode: bool | int = ..., twk: bool | int = ...) -> Any: ...
def texSculptCacheContext(*args, adjustSize: bool | int = ..., asz: bool | int = ..., adjustStrength: bool | int = ..., ast: bool | int = ..., direction: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., falloffType: bool | int | int = ..., ft: bool | int | int = ..., floodPin: float = ..., fp: float = ..., grabTwist: bool | int = ..., gtw: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., inverted: bool | int = ..., inv: bool | int = ..., mode: bool | int | str = ..., m: bool | int | str = ..., name: str = ..., n: str = ..., pinsmooth: bool | int = ..., ps: bool | int = ..., pinsmoothandpaint: bool | int = ..., psp: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sculptFalloffCurve: bool | int | str = ..., sfc: bool | int | str = ..., showBrushRingDuringStroke: bool | int = ..., sbr: bool | int = ..., size: bool | int | float = ..., sz: bool | int | float = ..., strength: bool | int | float = ..., st: bool | int | float = ...) -> Any: ...
def texSculptCacheSync(*args) -> Any: ...
def texSelectContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def texSelectShortestPathCtx(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def texSmoothContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., pinBorder: bool | int = ..., pb: bool | int = ..., query: bool | int = ..., q: bool | int = ..., space: int = ..., sp: int = ...) -> Any: ...
def texSmudgeUVContext(*args, dragSlider: bool | int | str = ..., ds: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., effectType: bool | int | str = ..., et: bool | int | str = ..., exists: bool | int = ..., ex: bool | int = ..., functionType: bool | int | str = ..., ft: bool | int | str = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., pressure: bool | int | float = ..., prs: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., smudgeIsMiddle: bool | int = ..., sim: bool | int = ...) -> Any: ...
def texTweakUVContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., position: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., tolerance: bool | int | float = ..., t: bool | int | float = ...) -> Any: ...
def texWinToolCtx(*args, alternateContext: bool | int = ..., ac: bool | int = ..., boxzoom: bool | int = ..., bz: bool | int = ..., dolly: bool | int = ..., do: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., toolName: bool | int | str = ..., tn: bool | int | str = ..., track: bool | int = ..., tr: bool | int = ...) -> Any: ...
def text(*args, align: bool | int | str = ..., al: bool | int | str = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., dropRectCallback: str | Callable = ..., drc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., font: bool | int | str = ..., fn: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., hyperlink: bool | int = ..., hl: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., recomputeSize: bool | int = ..., rs: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ..., wordWrap: bool | int = ..., ww: bool | int = ...) -> Any: ...
def textCurves(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., deprecatedFontName: bool | int = ..., dfn: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., font: str = ..., f: str = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., text: str = ..., t: str = ...) -> Any: ...
def textField(*args, alwaysInvokeEnterCommandOnReturn: bool | int = ..., aie: bool | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., disableButtons: bool | int = ..., db: bool | int = ..., disableClearButton: bool | int = ..., dcb: bool | int = ..., disableHistoryButton: bool | int = ..., dhb: bool | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., drawInactiveFrame: bool | int = ..., dif: bool | int = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., enterCommand: str | Callable = ..., ec: str | Callable = ..., exists: bool | int = ..., ex: bool | int = ..., fileName: bool | int | str = ..., fi: bool | int | str = ..., font: bool | int | str = ..., fn: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., insertText: str = ..., it: str = ..., insertionPosition: bool | int | int = ..., ip: bool | int | int = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., placeholderText: bool | int | str = ..., pht: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., receiveFocusCommand: str | Callable = ..., rfc: str | Callable = ..., searchField: bool | int = ..., sf: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., text: bool | int | str = ..., tx: bool | int | str = ..., textChangedCommand: str | Callable = ..., tcc: str | Callable = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def textFieldButtonGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., buttonCommand: str | Callable = ..., bc: str | Callable = ..., buttonLabel: bool | int | str = ..., bl: bool | int | str = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableButton: bool | int = ..., eb: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fileName: bool | int | str = ..., fi: bool | int | str = ..., forceChangeCommand: bool | int = ..., fcc: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., insertText: str = ..., it: str = ..., insertionPosition: bool | int | int = ..., ip: bool | int | int = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., placeholderText: bool | int | str = ..., pht: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., text: bool | int | str = ..., tx: bool | int | str = ..., textChangedCommand: str | Callable = ..., tcc: str | Callable = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def textFieldGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fileName: bool | int | str = ..., fi: bool | int | str = ..., forceChangeCommand: bool | int = ..., fcc: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., insertText: str = ..., it: str = ..., insertionPosition: bool | int | int = ..., ip: bool | int | int = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., placeholderText: bool | int | str = ..., pht: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., text: bool | int | str = ..., tx: bool | int | str = ..., textChangedCommand: str | Callable = ..., tcc: str | Callable = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def textScrollList(*args, allItems: bool | int = ..., ai: bool | int = ..., allowAutomaticSelection: bool | int = ..., aas: bool | int = ..., allowMultiSelection: bool | int = ..., ams: bool | int = ..., allowSorting: bool | int | list[bool | int] = ..., als: bool | int | list[bool | int] = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., append: str | list[str] = ..., a: str | list[str] = ..., appendPosition: tuple[int, str] | list[tuple[int, str]] = ..., ap: tuple[int, str] | list[tuple[int, str]] = ..., appendWithToolTip: tuple[str, str] | list[tuple[str, str]] = ..., atp: tuple[str, str] | list[tuple[str, str]] = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., deleteKeyCommand: str | Callable = ..., dkc: str | Callable = ..., deselectAll: bool | int = ..., da: bool | int = ..., deselectIndexedItem: int | list[int] = ..., dii: int | list[int] = ..., deselectItem: str | list[str] = ..., di: str | list[str] = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., doubleClickCommand: str | Callable = ..., dcc: str | Callable = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., font: bool | int | str = ..., fn: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., lineFont: tuple[int, str] | list[tuple[int, str]] = ..., lf: tuple[int, str] | list[tuple[int, str]] = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfItems: bool | int = ..., ni: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., numberOfRows: bool | int | int = ..., nr: bool | int | int = ..., numberOfSelectedItems: bool | int = ..., nsi: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeAll: bool | int = ..., ra: bool | int = ..., removeIndexedItem: int | list[int] = ..., rii: int | list[int] = ..., removeItem: str | list[str] = ..., ri: str | list[str] = ..., selectCommand: str | Callable = ..., sc: str | Callable = ..., selectIndexedItem: bool | int | int | list[int] = ..., sii: bool | int | int | list[int] = ..., selectItem: bool | int | str | list[str] = ..., si: bool | int | str | list[str] = ..., selectUniqueTagItem: bool | int | str | list[str] = ..., sut: bool | int | str | list[str] = ..., setCheckedState: tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., scs: tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., setUniformItemSize: bool | int = ..., sus: bool | int = ..., showIndexedItem: int = ..., shi: int = ..., statusBarMessage: str = ..., sbm: str = ..., uniqueTag: str | list[str] = ..., utg: str | list[str] = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def textureDeformer(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., direction: str = ..., d: str = ..., edit: bool | int = ..., e: bool | int = ..., envelope: float = ..., en: float = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., name: str = ..., n: str = ..., offset: float = ..., o: float = ..., parallel: bool | int = ..., par: bool | int = ..., pointSpace: str = ..., ps: str = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., split: bool | int = ..., sp: bool | int = ..., strength: float = ..., s: float = ..., useComponentTags: bool | int = ..., uct: bool | int = ..., vectorOffset: tuple[float, float, float] = ..., vo: tuple[float, float, float] = ..., vectorSpace: str = ..., vsp: str = ..., vectorStrength: tuple[float, float, float] = ..., vs: tuple[float, float, float] = ...) -> Any: ...
def textureLassoContext(*args, drawClosed: bool | int = ..., dc: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def texturePlacementContext(*args, edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., labelMapping: bool | int = ..., lm: bool | int = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def textureWindow(*args, activeSelectionOnTop: bool | int = ..., ast: bool | int = ..., axesColor: bool | int | tuple[float, float, float] = ..., axc: bool | int | tuple[float, float, float] = ..., backFacingColor: bool | int | tuple[float, float, float, float] = ..., bfc: bool | int | tuple[float, float, float, float] = ..., capture: str = ..., cpt: str = ..., captureSequenceNumber: int = ..., csn: int = ..., changeCommand: bool | int | tuple[str, str, str, str] = ..., cc: bool | int | tuple[str, str, str, str] = ..., checkerColor1: bool | int | tuple[float, float, float] = ..., cc1: bool | int | tuple[float, float, float] = ..., checkerColor2: bool | int | tuple[float, float, float] = ..., cc2: bool | int | tuple[float, float, float] = ..., checkerColorMode: bool | int | int = ..., ccm: bool | int | int = ..., checkerDensity: bool | int | int = ..., cd: bool | int | int = ..., checkerDrawTileLabels: bool | int = ..., cdt: bool | int = ..., checkerGradient1: bool | int | tuple[float, float, float] = ..., cg1: bool | int | tuple[float, float, float] = ..., checkerGradient2: bool | int | tuple[float, float, float] = ..., cg2: bool | int | tuple[float, float, float] = ..., checkerGradientOverlay: bool | int = ..., cgo: bool | int = ..., checkerTileLabelColor: bool | int | tuple[float, float, float] = ..., ctc: bool | int | tuple[float, float, float] = ..., clearImage: bool | int = ..., ci: bool | int = ..., cmEnabled: bool | int = ..., cme: bool | int = ..., control: bool | int = ..., ctl: bool | int = ..., defineTemplate: str = ..., dt: str = ..., displayAxes: bool | int = ..., dax: bool | int = ..., displayCheckered: bool | int = ..., dct: bool | int = ..., displayDistortion: bool | int = ..., ddt: bool | int = ..., displayDivisionLines: bool | int = ..., ddl: bool | int = ..., displayGridLines: bool | int = ..., dgl: bool | int = ..., displayImage: bool | int | int = ..., di: bool | int | int = ..., displayIsolateSelectHUD: bool | int = ..., dih: bool | int = ..., displayLabels: bool | int = ..., dl: bool | int = ..., displayOverlappingUVCountHUD: bool | int = ..., doh: bool | int = ..., displayPreselection: bool | int = ..., dps: bool | int = ..., displayReversedUVCountHUD: bool | int = ..., drh: bool | int = ..., displaySolidMap: bool | int = ..., dsm: bool | int = ..., displayStyle: bool | int | str = ..., dst: bool | int | str = ..., displayTextureBorder: bool | int = ..., dtb: bool | int = ..., displayUVPositionHUD: bool | int = ..., duv: bool | int = ..., displayUVShellCountHUD: bool | int = ..., dsh: bool | int = ..., displayUVStatisticsHUD: bool | int = ..., duh: bool | int = ..., displayUsedPercentageHUD: bool | int = ..., dph: bool | int = ..., distortionAlpha: bool | int | float = ..., dta: bool | int | float = ..., distortionPerObject: bool | int = ..., dpo: bool | int = ..., divisions: bool | int | int = ..., d: bool | int | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., doubleBuffer: bool | int = ..., dbf: bool | int = ..., drawAxis: bool | int = ..., da: bool | int = ..., drawSubregions: bool | int = ..., dsr: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., exposure: bool | int | float = ..., exp: bool | int | float = ..., filter: bool | int | str = ..., f: bool | int | str = ..., forceMainConnection: bool | int | str = ..., fmc: bool | int | str = ..., forceRebake: bool | int = ..., frb: bool | int = ..., frameAll: bool | int = ..., fa: bool | int = ..., frameSelected: bool | int = ..., fs: bool | int = ..., frontFacingColor: bool | int | tuple[float, float, float, float] = ..., ffc: bool | int | tuple[float, float, float, float] = ..., gamma: bool | int | float = ..., ga: bool | int | float = ..., gridLinesColor: bool | int | tuple[float, float, float] = ..., glc: bool | int | tuple[float, float, float] = ..., gridNumbersColor: bool | int | tuple[float, float, float] = ..., gnc: bool | int | tuple[float, float, float] = ..., highlightConnection: bool | int | str = ..., hlc: bool | int | str = ..., imageBaseColor: bool | int | tuple[float, float, float] = ..., ibc: bool | int | tuple[float, float, float] = ..., imageDim: bool | int = ..., idm: bool | int = ..., imageDisplay: bool | int = ..., id: bool | int = ..., imageNames: bool | int = ..., imn: bool | int = ..., imageNumber: bool | int | int = ..., imagePixelSnap: bool | int = ..., ip: bool | int = ..., imageRatio: bool | int = ..., imr: bool | int = ..., imageRatioValue: bool | int | float = ..., irv: bool | int | float = ..., imageSize: bool | int = ..., imageTileRange: bool | int | tuple[float, float, float, float] = ..., itr: bool | int | tuple[float, float, float, float] = ..., imageToTextureNumber: int = ..., itn: int = ..., imageUnfiltered: bool | int = ..., iuf: bool | int = ..., internalFaces: bool | int = ..., isolateSelectSetUpdated: bool | int = ..., isu: bool | int = ..., labelPosition: bool | int | str = ..., lp: bool | int | str = ..., loadImage: str = ..., li: str = ..., lockMainConnection: bool | int = ..., lck: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., maxResolution: bool | int | int = ..., mrs: bool | int | int = ..., multiColorAlpha: bool | int | float = ..., mca: bool | int | float = ..., nbImages: bool | int = ..., nim: bool | int = ..., nextView: bool | int = ..., nv: bool | int = ..., numUvSets: bool | int = ..., nuv: bool | int = ..., numberOfImages: bool | int | int = ..., ni: bool | int | int = ..., numberOfTextures: bool | int | int = ..., nt: bool | int | int = ..., panel: bool | int | str = ..., pnl: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., previousView: bool | int = ..., pv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., realSize: bool | int = ..., rs: bool | int = ..., refresh: bool | int = ..., ref: bool | int = ..., relatedFaces: bool | int = ..., rf: bool | int = ..., removeAllImages: bool | int = ..., ra: bool | int = ..., removeImage: bool | int = ..., ri: bool | int = ..., rendererString: bool | int | str = ..., rds: bool | int | str = ..., reset: bool | int = ..., r: bool | int = ..., saveImage: bool | int = ..., si: bool | int = ..., scaleBlue: bool | int | float = ..., sb: bool | int | float = ..., scaleGreen: bool | int | float = ..., sg: bool | int | float = ..., scaleRed: bool | int | float = ..., sr: bool | int | float = ..., selectInternalFaces: bool | int = ..., sif: bool | int = ..., selectRelatedFaces: bool | int = ..., srf: bool | int = ..., selectionConnection: bool | int | str = ..., slc: bool | int | str = ..., setUvSet: int = ..., suv: int = ..., singleBuffer: bool | int = ..., sbf: bool | int = ..., size: bool | int | float = ..., s: bool | int | float = ..., solidMap3dView: bool | int = ..., s3d: bool | int = ..., solidMapColorSeed: bool | int | int = ..., scs: bool | int | int = ..., solidMapPerShell: bool | int = ..., sps: bool | int = ..., spacing: float = ..., sp: float = ..., stateString: bool | int = ..., sts: bool | int = ..., style: bool | int | int = ..., st: bool | int | int = ..., subdivisionLinesColor: bool | int | tuple[float, float, float] = ..., sdc: bool | int | tuple[float, float, float] = ..., textureBorder3dView: bool | int = ..., t3d: bool | int = ..., textureBorderColor: bool | int | tuple[float, float, float] = ..., tbc: bool | int | tuple[float, float, float] = ..., textureBorderWidth: bool | int | int = ..., tbw: bool | int | int = ..., textureNames: bool | int = ..., txn: bool | int = ..., textureNumber: bool | int | int = ..., tn: bool | int | int = ..., textureToImageNumber: int = ..., tin: int = ..., tileLabels: bool | int = ..., tlb: bool | int = ..., tileLinesColor: bool | int | tuple[float, float, float] = ..., tlc: bool | int | tuple[float, float, float] = ..., toggle: bool | int = ..., tgl: bool | int = ..., toggleExposure: bool | int = ..., tge: bool | int = ..., toggleGamma: bool | int = ..., tgg: bool | int = ..., unParent: bool | int = ..., up: bool | int = ..., unlockMainConnection: bool | int = ..., ulk: bool | int = ..., updateMainConnection: bool | int = ..., upd: bool | int = ..., useFaceGroup: bool | int = ..., uf: bool | int = ..., useTemplate: str = ..., ut: str = ..., usedPercentageHUDRange: bool | int | tuple[float, float, float, float] = ..., upr: bool | int | tuple[float, float, float, float] = ..., uvSets: bool | int = ..., uvs: bool | int = ..., viewPortImage: bool | int = ..., vpi: bool | int = ..., viewTransformName: bool | int | str = ..., vtn: bool | int | str = ..., wireframeComponentColor: bool | int | tuple[float, float, float, float] = ..., wcc: bool | int | tuple[float, float, float, float] = ..., wireframeObjectColor: bool | int | tuple[float, float, float, float] = ..., woc: bool | int | tuple[float, float, float, float] = ..., writeImage: str = ..., wi: str = ...) -> Any: ...
def threadCount(*args, numberOfThreads: bool | int | int = ..., n: bool | int | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def threePointArcCtx(*args, degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., spans: bool | int | int = ..., s: bool | int | int = ...) -> Any: ...
def thumbnailCaptureComponent(*args, capture: bool | int = ..., c: bool | int = ..., capturedFrameCount: bool | int = ..., cfc: bool | int = ..., closeCurrentSession: bool | int = ..., ccs: bool | int = ..., delete: bool | int = ..., d: bool | int = ..., endFrame: bool | int | int = ..., ef: bool | int | int = ..., fileDialogCallback: str = ..., fdc: str = ..., fileDialogProcessing: bool | int = ..., fdp: bool | int = ..., isSessionOpened: bool | int = ..., iso: bool | int = ..., launchedFromOptionsBox: bool | int = ..., lfo: bool | int = ..., previewPath: bool | int = ..., pp: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeProjectThumbnail: str = ..., rpt: str = ..., save: str = ..., s: str = ..., selectedFileName: bool | int = ..., sfn: bool | int = ..., startFrame: bool | int | int = ..., sf: bool | int | int = ...) -> Any: ...
def timeCode(*args, edit: bool | int = ..., e: bool | int = ..., mayaStartFrame: bool | int | float = ..., msf: bool | int | float = ..., productionStartFrame: bool | int | float = ..., psf: bool | int | float = ..., productionStartHour: bool | int | float = ..., psh: bool | int | float = ..., productionStartMinute: bool | int | float = ..., psm: bool | int | float = ..., productionStartSecond: bool | int | float = ..., pss: bool | int | float = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def timeControl(*args, animCurveNames: bool | int = ..., acn: bool | int = ..., animLayerFilterOptions: bool | int | str = ..., alf: bool | int | str = ..., animLayerShowWeight: bool | int = ..., asw: bool | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., beginScrub: bool | int = ..., bs: bool | int = ..., currentFrameColor: tuple[float, float, float, float] = ..., cfc: tuple[float, float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., displaySound: bool | int = ..., ds: bool | int = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., endScrub: bool | int = ..., es: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., forceRedraw: bool | int = ..., fd: bool | int = ..., forceRefresh: bool | int = ..., fr: bool | int = ..., foregroundColor: tuple[float, float, float] = ..., fgc: tuple[float, float, float] = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., globalTime: bool | int = ..., gt: bool | int = ..., greasePencilSequenceNames: bool | int = ..., gn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., mainListConnection: bool | int | str = ..., mlc: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., outsideSpacing: int = ..., os: int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., pressCommand: str | Callable = ..., pc: str | Callable = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., range: bool | int = ..., rng: bool | int = ..., rangeArray: bool | int = ..., ra: bool | int = ..., rangeVisible: bool | int = ..., rv: bool | int = ..., releaseCommand: str | Callable = ..., rc: str | Callable = ..., repeatChunkSize: bool | int | float = ..., rcs: bool | int | float = ..., repeatOnHold: bool | int = ..., roh: bool | int = ..., resample: bool | int = ..., r: bool | int = ..., showGreaseFrames: bool | int | str = ..., sg: bool | int | str = ..., showKeys: bool | int | str = ..., sk: bool | int | str = ..., showKeysCombined: bool | int = ..., skc: bool | int = ..., snap: bool | int = ..., sn: bool | int = ..., sound: bool | int | str = ..., s: bool | int | str = ..., statusBarMessage: str = ..., sbm: str = ..., tickSize: bool | int | int = ..., ts: bool | int | int = ..., tickSpan: bool | int | int = ..., tsp: bool | int | int = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., waveform: bool | int | str = ..., wf: bool | int | str = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def timeField(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editable: bool | int = ..., ed: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., enterCommand: str | Callable = ..., ec: str | Callable = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., precision: bool | int | int = ..., pre: bool | int | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., receiveFocusCommand: str | Callable = ..., rfc: str | Callable = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | int | float = ..., s: bool | int | int | float = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | int | float = ..., v: bool | int | int | float = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def timeFieldGrp(*args, adjustableColumn: int = ..., adj: int = ..., adjustableColumn2: int = ..., ad2: int = ..., adjustableColumn3: int = ..., ad3: int = ..., adjustableColumn4: int = ..., ad4: int = ..., adjustableColumn5: int = ..., ad5: int = ..., adjustableColumn6: int = ..., ad6: int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., columnAlign: tuple[int, str] | list[tuple[int, str]] = ..., cal: tuple[int, str] | list[tuple[int, str]] = ..., columnAlign2: tuple[str, str] = ..., cl2: tuple[str, str] = ..., columnAlign3: tuple[str, str, str] = ..., cl3: tuple[str, str, str] = ..., columnAlign4: tuple[str, str, str, str] = ..., cl4: tuple[str, str, str, str] = ..., columnAlign5: tuple[str, str, str, str, str] = ..., cl5: tuple[str, str, str, str, str] = ..., columnAlign6: tuple[str, str, str, str, str, str] = ..., cl6: tuple[str, str, str, str, str, str] = ..., columnAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., cat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., columnAttach2: tuple[str, str] = ..., ct2: tuple[str, str] = ..., columnAttach3: tuple[str, str, str] = ..., ct3: tuple[str, str, str] = ..., columnAttach4: tuple[str, str, str, str] = ..., ct4: tuple[str, str, str, str] = ..., columnAttach5: tuple[str, str, str, str, str] = ..., ct5: tuple[str, str, str, str, str] = ..., columnAttach6: tuple[str, str, str, str, str, str] = ..., ct6: tuple[str, str, str, str, str, str] = ..., columnOffset2: tuple[int, int] = ..., co2: tuple[int, int] = ..., columnOffset3: tuple[int, int, int] = ..., co3: tuple[int, int, int] = ..., columnOffset4: tuple[int, int, int, int] = ..., co4: tuple[int, int, int, int] = ..., columnOffset5: tuple[int, int, int, int, int] = ..., co5: tuple[int, int, int, int, int] = ..., columnOffset6: tuple[int, int, int, int, int, int] = ..., co6: tuple[int, int, int, int, int, int] = ..., columnWidth: tuple[int, int] | list[tuple[int, int]] = ..., cw: tuple[int, int] | list[tuple[int, int]] = ..., columnWidth1: int = ..., cw1: int = ..., columnWidth2: tuple[int, int] = ..., cw2: tuple[int, int] = ..., columnWidth3: tuple[int, int, int] = ..., cw3: tuple[int, int, int] = ..., columnWidth4: tuple[int, int, int, int] = ..., cw4: tuple[int, int, int, int] = ..., columnWidth5: tuple[int, int, int, int, int] = ..., cw5: tuple[int, int, int, int, int] = ..., columnWidth6: tuple[int, int, int, int, int, int] = ..., cw6: tuple[int, int, int, int, int, int] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dragCommand: str | Callable = ..., dc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enable1: bool | int = ..., en1: bool | int = ..., enable2: bool | int = ..., en2: bool | int = ..., enable3: bool | int = ..., en3: bool | int = ..., enable4: bool | int = ..., en4: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., extraLabel: bool | int | str = ..., el: bool | int | str = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfFields: int = ..., nf: int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., precision: int = ..., pre: int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rowAttach: tuple[int, str, int] | list[tuple[int, str, int]] = ..., rat: tuple[int, str, int] | list[tuple[int, str, int]] = ..., statusBarMessage: str = ..., sbm: str = ..., step: bool | int | int | float = ..., s: bool | int | int | float = ..., useTemplate: str = ..., ut: str = ..., value: bool | int | tuple[int | float, int | float, int | float, int | float] = ..., v: bool | int | tuple[int | float, int | float, int | float, int | float] = ..., value1: bool | int | int | float = ..., v1: bool | int | int | float = ..., value2: bool | int | int | float = ..., v2: bool | int | int | float = ..., value3: bool | int | int | float = ..., v3: bool | int | int | float = ..., value4: bool | int | int | float = ..., v4: bool | int | int | float = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def timePort(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., globalTime: bool | int = ..., gt: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., snap: bool | int = ..., sn: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def timeRangeInfo(*args, time: None | list[None] = ..., t: None | list[None] = ...) -> Any: ...
def timeSliderCustomDraw(*args, clearPrimitives: bool | int = ..., cp: bool | int = ..., color: tuple[float, float, float, float] = ..., clr: tuple[float, float, float, float] = ..., deregister: int = ..., der: int = ..., edit: bool | int = ..., e: bool | int = ..., height: int = ..., h: int = ..., layer: int = ..., l: int = ..., location: int = ..., loc: int = ..., priority: int = ..., p: int = ..., query: bool | int = ..., q: bool | int = ..., registerAbove: str = ..., rab: str = ..., registerBelow: str = ..., rbe: str = ..., registerOn: tuple[str, int] = ..., ron: tuple[str, int] = ..., setPrimitives: tuple[str, float, float] = ..., sp: tuple[str, float, float] = ..., visible: bool | int = ..., v: bool | int = ...) -> Any: ...
def timeWarp(*args, deleteFrame: int = ..., df: int = ..., edit: bool | int = ..., e: bool | int = ..., frame: bool | int | float | list[float] = ..., f: bool | int | float | list[float] = ..., g: bool | int = ..., interpType: bool | int | tuple[int, str] = ..., it: bool | int | tuple[int, str] = ..., moveFrame: bool | int | tuple[int, float] = ..., mf: bool | int | tuple[int, float] = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def timer(*args, endTimer: bool | int = ..., e: bool | int = ..., lapTime: bool | int = ..., lap: bool | int = ..., name: str = ..., n: str = ..., startTimer: bool | int = ..., s: bool | int = ...) -> Any: ...
def timerX(*args, startTime: float = ..., st: float = ...) -> Any: ...
def toggle(*args, above: bool | int = ..., a: bool | int = ..., below: bool | int = ..., b: bool | int = ..., boundary: bool | int = ..., bn: bool | int = ..., boundingBox: bool | int = ..., box: bool | int = ..., controlVertex: bool | int = ..., cv: bool | int = ..., doNotWrite: bool | int = ..., dnw: bool | int = ..., editPoint: bool | int = ..., ep: bool | int = ..., extent: bool | int = ..., et: bool | int = ..., facet: bool | int = ..., f: bool | int = ..., geometry: bool | int = ..., g: bool | int = ..., gl: bool | int = ..., highPrecisionNurbs: bool | int = ..., hpn: bool | int = ..., hull: bool | int = ..., hl: bool | int = ..., latticePoint: bool | int = ..., lp: bool | int = ..., latticeShape: bool | int = ..., ls: bool | int = ..., localAxis: bool | int = ..., la: bool | int = ..., newCurve: bool | int = ..., nc: bool | int = ..., newPolymesh: bool | int = ..., np: bool | int = ..., newSurface: bool | int = ..., ns: bool | int = ..., normal: bool | int = ..., nr: bool | int = ..., origin: bool | int = ..., o: bool | int = ..., point: bool | int = ..., pt: bool | int = ..., pointDisplay: bool | int = ..., pd: bool | int = ..., pointFacet: bool | int = ..., pf: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rotatePivot: bool | int = ..., rp: bool | int = ..., scalePivot: bool | int = ..., sp: bool | int = ..., selectHandle: bool | int = ..., sh: bool | int = ..., state: bool | int = ..., st: bool | int = ..., surfaceFace: bool | int = ..., sf: bool | int = ..., template: bool | int = ..., te: bool | int = ..., uvCoords: bool | int = ..., uv: bool | int = ..., vertex: bool | int = ..., vt: bool | int = ...) -> Any: ...
def toggleAxis(*args, origin: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., view: bool | int = ..., v: bool | int = ...) -> Any: ...
def toggleDisplacement(*args) -> Any: ...
def toggleWindowVisibility(*args) -> Any: ...
def tolerance(*args, angular: bool | int | float = ..., a: bool | int | float = ..., linear: bool | int | float = ..., l: bool | int | float = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def toolBar(*args, allowedArea: bool | int | str | list[str] = ..., aa: bool | int | str | list[str] = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., area: bool | int | str = ..., a: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., content: bool | int | str = ..., con: bool | int | str = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., label: bool | int | str = ..., l: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def toolButton(*args, allowMultipleTools: bool | int = ..., amt: bool | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., changeCommand: str | Callable = ..., cc: str | Callable = ..., collection: str = ..., cl: str = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., doubleClickCommand: str | Callable = ..., dcc: str | Callable = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., imageOverlayLabel: bool | int | str = ..., iol: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., ltVersion: bool | int | str = ..., lt: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., offCommand: str | Callable = ..., ofc: str | Callable = ..., onCommand: str | Callable = ..., onc: str | Callable = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupIndicatorVisible: bool | int = ..., piv: bool | int = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., select: bool | int = ..., sl: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., style: str = ..., st: str = ..., tool: bool | int | str | list[str] = ..., t: bool | int | str | list[str] = ..., toolArray: bool | int = ..., ta: bool | int = ..., toolCount: bool | int = ..., tc: bool | int = ..., toolImage1: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., ti1: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., toolImage2: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., ti2: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., toolImage3: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., ti3: bool | int | tuple[str, str] | list[tuple[str, str]] = ..., useTemplate: str = ..., ut: str = ..., version: bool | int | str = ..., ver: bool | int | str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def toolCollection(*args, collectionItemArray: bool | int = ..., cia: bool | int = ..., defineTemplate: str = ..., dt: str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., gl: bool | int = ..., numberOfCollectionItems: bool | int = ..., nci: bool | int = ..., parent: str = ..., p: str = ..., query: bool | int = ..., q: bool | int = ..., select: bool | int | str = ..., sl: bool | int | str = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def toolDropped(*args) -> Any: ...
def toolHasOptions(*args) -> Any: ...
def toolPropertyWindow(*args, edit: bool | int = ..., e: bool | int = ..., field: bool | int | str = ..., fld: bool | int | str = ..., helpButton: bool | int | str = ..., hb: bool | int | str = ..., icon: bool | int | str = ..., icn: bool | int | str = ..., inMainWindow: bool | int = ..., imw: bool | int = ..., location: bool | int | str = ..., loc: bool | int | str = ..., noviceMode: bool | int = ..., nm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., refresh: bool | int = ..., rf: bool | int = ..., resetButton: bool | int | str = ..., rb: bool | int | str = ..., restore: bool | int = ..., rs: bool | int = ..., selectCommand: bool | int | str = ..., sel: bool | int | str = ..., showCommand: bool | int | str = ..., shw: bool | int | str = ...) -> Any: ...
def torus(*args, axis: bool | int | tuple[float, float, float] = ..., ax: bool | int | tuple[float, float, float] = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., endSweep: bool | int | float = ..., esw: bool | int | float = ..., frozen: bool | int = ..., fzn: bool | int = ..., heightRatio: bool | int | float = ..., hr: bool | int | float = ..., minorSweep: bool | int | float = ..., msw: bool | int | float = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., pivot: bool | int | tuple[float, float, float] = ..., p: bool | int | tuple[float, float, float] = ..., polygon: int = ..., po: int = ..., query: bool | int = ..., q: bool | int = ..., radius: bool | int | float = ..., r: bool | int | float = ..., sections: bool | int | int = ..., s: bool | int | int = ..., spans: bool | int | int = ..., nsp: bool | int | int = ..., startSweep: bool | int | float = ..., ssw: bool | int | float = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ..., useTolerance: bool | int = ..., ut: bool | int = ...) -> Any: ...
def track(*args, down: float = ..., d: float = ..., left: float = ..., l: float = ..., right: float = ..., r: float = ..., upDistance01: float = ..., u: float = ..., upDistance02: float = ..., up: float = ...) -> Any: ...
def trackCtx(*args, alternateContext: bool | int = ..., ac: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., toolName: bool | int | str = ..., tn: bool | int | str = ..., trackGeometry: bool | int = ..., tg: bool | int = ..., trackScale: bool | int | float = ..., ts: bool | int | float = ...) -> Any: ...
def transferAttributes(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., colorBorders: int = ..., clb: int = ..., deformerTools: bool | int = ..., dt: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., flipUVs: int = ..., fuv: int = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., matchChoice: int = ..., mch: int = ..., name: str = ..., n: str = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., sampleSpace: int = ..., spa: int = ..., searchMethod: int = ..., sm: int = ..., searchScaleX: float = ..., ssx: float = ..., searchScaleY: float = ..., ssy: float = ..., searchScaleZ: float = ..., ssz: float = ..., sourceColorSet: str = ..., scs: str = ..., sourceUvSet: str = ..., suv: str = ..., sourceUvSpace: str = ..., sus: str = ..., split: bool | int = ..., sp: bool | int = ..., targetColorSet: str = ..., tcs: str = ..., targetUvSet: str = ..., tuv: str = ..., targetUvSpace: str = ..., tus: str = ..., transferColors: int = ..., col: int = ..., transferNormals: int = ..., nml: int = ..., transferPositions: int = ..., pos: int = ..., transferUVs: int = ..., uvs: int = ..., useComponentTags: bool | int = ..., uct: bool | int = ...) -> Any: ...
def transferShadingSets(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ..., sampleSpace: bool | int | int = ..., spa: bool | int | int = ..., searchMethod: bool | int | int = ..., sm: bool | int | int = ...) -> Any: ...
def transformCompare(*args, root: bool | int = ..., r: bool | int = ...) -> Any: ...
def transformLimits(*args, edit: bool | int = ..., e: bool | int = ..., enableRotationX: bool | int | tuple[bool | int, bool | int] = ..., erx: bool | int | tuple[bool | int, bool | int] = ..., enableRotationY: bool | int | tuple[bool | int, bool | int] = ..., ery: bool | int | tuple[bool | int, bool | int] = ..., enableRotationZ: bool | int | tuple[bool | int, bool | int] = ..., erz: bool | int | tuple[bool | int, bool | int] = ..., enableScaleX: bool | int | tuple[bool | int, bool | int] = ..., esx: bool | int | tuple[bool | int, bool | int] = ..., enableScaleY: bool | int | tuple[bool | int, bool | int] = ..., esy: bool | int | tuple[bool | int, bool | int] = ..., enableScaleZ: bool | int | tuple[bool | int, bool | int] = ..., esz: bool | int | tuple[bool | int, bool | int] = ..., enableTranslationX: bool | int | tuple[bool | int, bool | int] = ..., etx: bool | int | tuple[bool | int, bool | int] = ..., enableTranslationY: bool | int | tuple[bool | int, bool | int] = ..., ety: bool | int | tuple[bool | int, bool | int] = ..., enableTranslationZ: bool | int | tuple[bool | int, bool | int] = ..., etz: bool | int | tuple[bool | int, bool | int] = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., rm: bool | int = ..., rotationX: bool | int | tuple[float, float] = ..., rx: bool | int | tuple[float, float] = ..., rotationY: bool | int | tuple[float, float] = ..., ry: bool | int | tuple[float, float] = ..., rotationZ: bool | int | tuple[float, float] = ..., rz: bool | int | tuple[float, float] = ..., scaleX: bool | int | tuple[float, float] = ..., sx: bool | int | tuple[float, float] = ..., scaleY: bool | int | tuple[float, float] = ..., sy: bool | int | tuple[float, float] = ..., scaleZ: bool | int | tuple[float, float] = ..., sz: bool | int | tuple[float, float] = ..., translationX: bool | int | tuple[float, float] = ..., tx: bool | int | tuple[float, float] = ..., translationY: bool | int | tuple[float, float] = ..., ty: bool | int | tuple[float, float] = ..., translationZ: bool | int | tuple[float, float] = ..., tz: bool | int | tuple[float, float] = ...) -> Any: ...
def translator(*args, defaultFileRule: bool | int = ..., dfr: bool | int = ..., defaultOptions: bool | int | str = ..., do: bool | int | str = ..., extension: bool | int = ..., ext: bool | int = ..., fileCompression: bool | int | str = ..., cmp: bool | int | str = ..., filter: bool | int = ..., f: bool | int = ..., list: bool | int = ..., l: bool | int = ..., loaded: bool | int = ..., ld: bool | int = ..., objectType: bool | int = ..., ot: bool | int = ..., optionsScript: bool | int = ..., os: bool | int = ..., query: bool | int = ..., q: bool | int = ..., readSupport: bool | int = ..., rs: bool | int = ..., writeSupport: bool | int = ..., ws: bool | int = ...) -> Any: ...
def treeLister(*args, addFavorite: str | list[str] = ..., af: str | list[str] = ..., addItem: tuple[str, str, str | Callable] | list[tuple[str, str, str | Callable]] = ..., add: tuple[str, str, str | Callable] | list[tuple[str, str, str | Callable]] = ..., addVnnItem: tuple[str, str, str, str] | list[tuple[str, str, str, str]] = ..., avi: tuple[str, str, str, str] | list[tuple[str, str, str, str]] = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., clearContents: bool | int = ..., clr: bool | int = ..., collapsePath: str | list[str] = ..., cp: str | list[str] = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., executeItem: str = ..., ei: str = ..., exists: bool | int = ..., ex: bool | int = ..., expandPath: str | list[str] = ..., ep: str | list[str] = ..., expandToDepth: int = ..., etd: int = ..., favoritesCallback: str | Callable = ..., fcb: str | Callable = ..., favoritesList: bool | int = ..., fl: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., isObscured: bool | int = ..., io: bool | int = ..., itemScript: bool | int | str = ..., isc: bool | int | str = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., refreshCommand: bool | int | str | Callable = ..., rc: bool | int | str | Callable = ..., removeFavorite: str | list[str] = ..., rf: str | list[str] = ..., removeItem: str | list[str] = ..., rem: str | list[str] = ..., resultsPathUnderCursor: bool | int = ..., ruc: bool | int = ..., selectPath: str | list[str] = ..., sp: str | list[str] = ..., statusBarMessage: str = ..., sbm: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., vnnString: bool | int = ..., vnn: bool | int = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def treeView(*args, addItem: tuple[str, str] | list[tuple[str, str]] = ..., ai: tuple[str, str] | list[tuple[str, str]] = ..., allowDragAndDrop: bool | int = ..., adr: bool | int = ..., allowHiddenParents: bool | int = ..., ahp: bool | int = ..., allowMultiSelection: bool | int = ..., ams: bool | int = ..., allowReparenting: bool | int = ..., arp: bool | int = ..., annotation: bool | int | str = ..., ann: bool | int | str = ..., attachButtonRight: int = ..., abr: int = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., borderHighlite: tuple[str, bool | int] = ..., bh: tuple[str, bool | int] = ..., borderHighliteColor: tuple[str, float, float, float] = ..., bcl: tuple[str, float, float, float] = ..., buttonErase: bool | int | tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., bef: bool | int | tuple[str, bool | int] | list[tuple[str, bool | int]] = ..., buttonState: tuple[str, int, str] | list[tuple[str, int, str]] = ..., bst: tuple[str, int, str] | list[tuple[str, int, str]] = ..., buttonStyle: tuple[str, int, str] | list[tuple[str, int, str]] = ..., bs: tuple[str, int, str] | list[tuple[str, int, str]] = ..., buttonTextIcon: tuple[str, int, str] | list[tuple[str, int, str]] = ..., bti: tuple[str, int, str] | list[tuple[str, int, str]] = ..., buttonTooltip: tuple[str, int, str] | list[tuple[str, int, str]] = ..., btp: tuple[str, int, str] | list[tuple[str, int, str]] = ..., buttonTransparencyColor: tuple[str, int, float, float, float] | list[tuple[str, int, float, float, float]] = ..., btc: tuple[str, int, float, float, float] | list[tuple[str, int, float, float, float]] = ..., buttonTransparencyOverride: tuple[str, int, bool | int] | list[tuple[str, int, bool | int]] = ..., bto: tuple[str, int, bool | int] | list[tuple[str, int, bool | int]] = ..., buttonVisible: tuple[str, int, bool | int] | list[tuple[str, int, bool | int]] = ..., bvf: tuple[str, int, bool | int] | list[tuple[str, int, bool | int]] = ..., children: bool | int | str = ..., ch: bool | int | str = ..., clearSelection: bool | int = ..., cs: bool | int = ..., contextMenuCommand: str | Callable = ..., cmc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., displayLabel: tuple[str, str] | list[tuple[str, str]] = ..., dl: tuple[str, str] | list[tuple[str, str]] = ..., displayLabelSuffix: tuple[str, str] | list[tuple[str, str]] = ..., dls: tuple[str, str] | list[tuple[str, str]] = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragAndDropCommand: str | Callable = ..., dad: str | Callable = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., editLabelCommand: str | Callable = ..., elc: str | Callable = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableButton: tuple[str, int, int] | list[tuple[str, int, int]] = ..., eb: tuple[str, int, int] | list[tuple[str, int, int]] = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., enableKeys: bool | int = ..., enk: bool | int = ..., enableLabel: tuple[str, int] = ..., enl: tuple[str, int] = ..., exists: bool | int = ..., ex: bool | int = ..., expandCollapseCommand: str | Callable = ..., ecc: str | Callable = ..., expandItem: tuple[str, bool | int] = ..., ei: tuple[str, bool | int] = ..., flatButton: bool | int | int = ..., fb: bool | int | int = ..., font: bool | int | tuple[str, str] = ..., fn: bool | int | tuple[str, str] = ..., fontFace: tuple[str, int] = ..., ff: tuple[str, int] = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., hideButtons: bool | int = ..., hb: bool | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., highlite: tuple[str, bool | int] = ..., hl: tuple[str, bool | int] = ..., highliteColor: tuple[str, float, float, float] = ..., hc: tuple[str, float, float, float] = ..., ignoreButtonClick: tuple[str, int, int] | list[tuple[str, int, int]] = ..., ibc: tuple[str, int, int] | list[tuple[str, int, int]] = ..., image: tuple[str, int, str] | list[tuple[str, int, str]] = ..., i: tuple[str, int, str] | list[tuple[str, int, str]] = ..., insertItem: tuple[str, str, int] | list[tuple[str, str, int]] = ..., ii: tuple[str, str, int] | list[tuple[str, str, int]] = ..., isItemExpanded: bool | int | str = ..., iie: bool | int | str = ..., isLeaf: bool | int | str = ..., il: bool | int | str = ..., isObscured: bool | int = ..., io: bool | int = ..., item: bool | int | str = ..., it: bool | int | str = ..., itemAnnotation: bool | int | tuple[str, str] = ..., ia: bool | int | tuple[str, str] = ..., itemDblClickCommand: str | Callable = ..., idc: str | Callable = ..., itemDblClickCommand2: str | Callable = ..., dc2: str | Callable = ..., itemExists: bool | int | str = ..., iex: bool | int | str = ..., itemIndex: bool | int | str = ..., idx: bool | int | str = ..., itemParent: bool | int | str = ..., ip: bool | int | str = ..., itemRenamedCommand: str | Callable = ..., irc: str | Callable = ..., itemSelected: bool | int | str = ..., isl: bool | int | str = ..., itemVisible: bool | int | tuple[str, bool | int] = ..., iv: bool | int | tuple[str, bool | int] = ..., labelBackgroundColor: tuple[str, float, float, float] = ..., lbc: tuple[str, float, float, float] = ..., manage: bool | int = ..., m: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfButtons: int = ..., nb: int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., ornament: tuple[str, int, int, int] = ..., ornamentColor: tuple[str, float, float, float] = ..., orc: tuple[str, float, float, float] = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., pressCommand: tuple[int, str | Callable] | list[tuple[int, str | Callable]] = ..., pc: tuple[int, str | Callable] | list[tuple[int, str | Callable]] = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., removeAll: bool | int = ..., ra: bool | int = ..., removeItem: str = ..., ri: str = ..., reverseTreeOrder: bool | int = ..., rto: bool | int = ..., rightPressCommand: tuple[int, str | Callable] | list[tuple[int, str | Callable]] = ..., rpc: tuple[int, str | Callable] | list[tuple[int, str | Callable]] = ..., select: tuple[str, int] = ..., sl: tuple[str, int] = ..., selectCommand: str | Callable = ..., sc: str | Callable = ..., selectItem: bool | int | tuple[str, bool | int] = ..., si: bool | int | tuple[str, bool | int] = ..., selectionChangedCommand: str | Callable = ..., scc: str | Callable = ..., selectionColor: bool | int | tuple[str, float, float, float] = ..., scl: bool | int | tuple[str, float, float, float] = ..., showItem: str = ..., shi: str = ..., statusBarMessage: str = ..., sbm: str = ..., textColor: tuple[str, float, float, float] = ..., tc: tuple[str, float, float, float] = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ...) -> Any: ...
def trim(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., locatorU: bool | int | float | list[float] = ..., lu: bool | int | float | list[float] = ..., locatorV: bool | int | float | list[float] = ..., lv: bool | int | float | list[float] = ..., name: str = ..., n: str = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., selected: bool | int | int = ..., sl: bool | int | int = ..., shrink: bool | int = ..., sh: bool | int = ..., tolerance: bool | int | float = ..., tol: bool | int | float = ...) -> Any: ...
def trimCtx(*args, activeNodes: bool | int = ..., anq: bool | int = ..., autoCreate: bool | int = ..., ac: bool | int = ..., caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., immediate: bool | int = ..., im: bool | int = ..., locatorU: float | list[float] = ..., lu: float | list[float] = ..., locatorV: float | list[float] = ..., lv: float | list[float] = ..., name: str = ..., n: str = ..., nodeState: int = ..., nds: int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., reset: bool | int = ..., rs: bool | int = ..., selected: int = ..., sl: int = ..., shrink: bool | int = ..., sh: bool | int = ..., tolerance: float = ..., tol: float = ..., toolNode: bool | int = ..., tnq: bool | int = ...) -> Any: ...
def truncateFluidCache(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def truncateHairCache(*args, edit: bool | int = ..., e: bool | int = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def tumble(*args, azimuthAngle: float = ..., aa: float = ..., elevationAngle: float = ..., ea: float = ..., localTumble: int = ..., lt: int = ..., pivotPoint: tuple[float, float, float] = ..., pp: tuple[float, float, float] = ..., rotationAngles: tuple[float, float] = ..., ra: tuple[float, float] = ...) -> Any: ...
def tumbleCtx(*args, alternateContext: bool | int = ..., ac: bool | int = ..., autoOrthoConstrain: bool | int = ..., aoc: bool | int = ..., autoSetPivot: bool | int = ..., asp: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., localTumble: bool | int | int = ..., lt: bool | int | int = ..., name: str = ..., n: str = ..., objectTumble: bool | int = ..., ot: bool | int = ..., orthoLock: bool | int = ..., ol: bool | int = ..., orthoStep: bool | int | float = ..., os: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., toolName: bool | int | str = ..., tn: bool | int | str = ..., tumbleScale: bool | int | float = ..., ts: bool | int | float = ...) -> Any: ...
def turbulence(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., frequency: bool | int | float = ..., f: bool | int | float = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., noiseLevel: bool | int | int = ..., nsl: bool | int | int = ..., noiseRatio: bool | int | float = ..., nsr: bool | int | float = ..., perVertex: bool | int = ..., pv: bool | int = ..., phase: bool | int | float = ..., p: bool | int | float = ..., phaseX: bool | int | float = ..., px: bool | int | float = ..., phaseY: bool | int | float = ..., py: bool | int | float = ..., phaseZ: bool | int | float = ..., pz: bool | int | float = ..., position: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | tuple[float, float, float] = ..., vof: bool | int | tuple[float, float, float] = ..., volumeShape: bool | int | str = ..., vsh: bool | int | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...
def twoPointArcCtx(*args, degree: bool | int | int = ..., d: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., spans: bool | int | int = ..., s: bool | int | int = ...) -> Any: ...
def ubercam(*args) -> Any: ...
def uiTemplate(*args, defineTemplate: str = ..., dt: str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., query: bool | int = ..., q: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...

unapplyOverride: Callable
def unassignInputDevice(*args, clutch: str = ..., c: str = ..., device: str = ..., d: str = ...) -> Any: ...
def undo(*args) -> Any: ...
def undoInfo(*args, chunkName: bool | int | str = ..., cn: bool | int | str = ..., closeChunk: bool | int = ..., cck: bool | int = ..., infinity: bool | int = ..., length: bool | int | int = ..., l: bool | int | int = ..., openChunk: bool | int = ..., ock: bool | int = ..., printQueue: bool | int = ..., pq: bool | int = ..., printRedoQueue: bool | int = ..., prq: bool | int = ..., query: bool | int = ..., q: bool | int = ..., redoName: bool | int | str = ..., rn: bool | int | str = ..., redoQueueEmpty: bool | int = ..., rqe: bool | int = ..., state: bool | int = ..., st: bool | int = ..., stateWithoutFlush: bool | int = ..., swf: bool | int = ..., undoName: bool | int | str = ..., un: bool | int | str = ..., undoQueueEmpty: bool | int = ..., uqe: bool | int = ...) -> Any: ...
def unfold(*args, applyToShell: bool | int = ..., areaWeight: float = ..., aw: float = ..., globalBlend: float = ..., gb: float = ..., globalMethodBlend: float = ..., gmb: float = ..., iterations: int = ..., i: int = ..., optimizeAxis: int = ..., oa: int = ..., pinSelected: bool | int = ..., ps: bool | int = ..., pinUvBorder: bool | int = ..., pub: bool | int = ..., scale: float = ..., s: float = ..., stoppingThreshold: float = ..., ss: float = ..., useScale: bool | int = ..., us: bool | int = ...) -> Any: ...
def ungroup(*args, absolute: bool | int = ..., a: bool | int = ..., parent: str = ..., p: str = ..., relative: bool | int = ..., r: bool | int = ..., world: bool | int = ..., w: bool | int = ...) -> Any: ...
def uniform(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | tuple[float, float, float] = ..., vof: bool | int | tuple[float, float, float] = ..., volumeShape: bool | int | str = ..., vsh: bool | int | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...
def unknownNode(*args, plugin: bool | int = ..., p: bool | int = ..., query: bool | int = ..., q: bool | int = ..., realClassName: bool | int = ..., rcn: bool | int = ..., realClassTag: bool | int = ..., rct: bool | int = ...) -> Any: ...
def unknownPlugin(*args, dataTypes: bool | int = ..., dt: bool | int = ..., list: bool | int = ..., l: bool | int = ..., nodeTypes: bool | int = ..., nt: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., r: bool | int = ..., version: bool | int = ..., v: bool | int = ...) -> Any: ...
def unloadPlugin(*args, addCallback: str | Callable = ..., ac: str | Callable = ..., force: bool | int = ..., f: bool | int = ..., removeCallback: str | Callable = ..., rc: str | Callable = ...) -> Any: ...
def untangleUV(*args, mapBorder: str = ..., mb: str = ..., maxRelaxIterations: int = ..., mri: int = ..., pinBorder: bool | int = ..., pb: bool | int = ..., pinSelected: bool | int = ..., ps: bool | int = ..., pinUnselected: bool | int = ..., pu: bool | int = ..., relax: str = ..., r: str = ..., relaxTolerance: float = ..., rt: float = ..., shapeDetail: float = ..., sd: float = ...) -> Any: ...
def untrim(*args, caching: bool | int = ..., cch: bool | int = ..., constructionHistory: bool | int = ..., ch: bool | int = ..., curveOnSurface: bool | int = ..., cos: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., frozen: bool | int = ..., fzn: bool | int = ..., name: str = ..., n: str = ..., noChanges: bool | int = ..., nc: bool | int = ..., nodeState: bool | int | int = ..., nds: bool | int | int = ..., object: bool | int = ..., o: bool | int = ..., query: bool | int = ..., q: bool | int = ..., replaceOriginal: bool | int = ..., rpo: bool | int = ..., untrimAll: bool | int = ..., all: bool | int = ...) -> Any: ...
def upAxis(*args, axis: bool | int | str = ..., ax: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., rotateView: bool | int = ..., rv: bool | int = ...) -> Any: ...
def userCtx(*args, edit: bool | int = ..., e: bool | int = ..., editCommand: callable = ..., ec: callable = ..., editPrompt: str = ..., ep: str = ..., exists: bool | int = ..., ex: bool | int = ..., finalCommand: str = ..., fc: str = ..., history: bool | int = ..., ch: bool | int = ..., image1: str = ..., i1: str = ..., image2: str = ..., i2: str = ..., image3: str = ..., i3: str = ..., name: str = ..., n: str = ..., noSelectionPrompt: tuple[int, str] | list[tuple[int, str]] = ..., nsp: tuple[int, str] | list[tuple[int, str]] = ..., query: bool | int = ..., q: bool | int = ..., selectionCount: tuple[int, int] | list[tuple[int, int]] = ..., sc: tuple[int, int] | list[tuple[int, int]] = ..., selectionFlag: tuple[int, str] | list[tuple[int, str]] = ..., flg: tuple[int, str] | list[tuple[int, str]] = ..., selectionMask: tuple[int, str] | list[tuple[int, str]] = ..., sm: tuple[int, str] | list[tuple[int, str]] = ..., selectionPrompt: str | list[str] = ..., sp: str | list[str] = ...) -> Any: ...
def uvLink(*args, b: bool | int = ..., isValid: bool | int = ..., iv: bool | int = ..., make: bool | int = ..., m: bool | int = ..., query: bool | int = ..., q: bool | int = ..., queryObject: str = ..., qo: str = ..., texture: str = ..., t: str = ..., uvSet: str = ..., uvs: str = ...) -> Any: ...
def uvSnapshot(*args, antiAliased: bool | int = ..., aa: bool | int = ..., blueColor: int = ..., b: int = ..., entireUVRange: bool | int = ..., euv: bool | int = ..., fileFormat: str = ..., ff: str = ..., greenColor: int = ..., g: int = ..., name: str = ..., n: str = ..., overwrite: bool | int = ..., o: bool | int = ..., redColor: int = ..., r: int = ..., uMax: float = ..., umx: float = ..., uMin: float = ..., umn: float = ..., uvSetName: str = ..., uvs: str = ..., vMax: float = ..., vmx: float = ..., vMin: float = ..., vmn: float = ..., xResolution: int = ..., xr: int = ..., yResolution: int = ..., yr: int = ...) -> Any: ...
def view2dToolCtx(*args, alternateContext: bool | int = ..., ac: bool | int = ..., boxzoom: bool | int = ..., bz: bool | int = ..., dolly: bool | int = ..., do: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., toolName: bool | int | str = ..., tn: bool | int | str = ..., track: bool | int = ..., tr: bool | int = ...) -> Any: ...
def viewCamera(*args, move: str = ..., m: str = ..., sideView: bool | int = ..., s: bool | int = ..., topView: bool | int = ..., t: bool | int = ...) -> Any: ...
def viewClipPlane(*args, autoClipPlane: bool | int = ..., acp: bool | int = ..., farClipPlane: bool | int | float = ..., fcp: bool | int | float = ..., nearClipPlane: bool | int | float = ..., ncp: bool | int | float = ..., query: bool | int = ..., q: bool | int = ..., surfacesOnly: bool | int = ..., so: bool | int = ...) -> Any: ...
def viewFit(*args, allObjects: bool | int = ..., all: bool | int = ..., animate: bool | int = ..., an: bool | int = ..., center: bool | int = ..., c: bool | int = ..., fitFactor: float = ..., f: float = ..., namespace: str = ..., ns: str = ..., noChildren: bool | int = ..., noc: bool | int = ..., panel: str = ..., p: str = ...) -> Any: ...
def viewHeadOn(*args) -> Any: ...
def viewLookAt(*args, position: tuple[float, float, float] = ..., pos: tuple[float, float, float] = ...) -> Any: ...
def viewPlace(*args, animate: bool | int = ..., an: bool | int = ..., eyePoint: tuple[float, float, float] = ..., eye: tuple[float, float, float] = ..., fieldOfView: float = ..., fov: float = ..., lookAt: tuple[float, float, float] = ..., la: tuple[float, float, float] = ..., ortho: bool | int = ..., o: bool | int = ..., perspective: bool | int = ..., p: bool | int = ..., upDirection: tuple[float, float, float] = ..., up: tuple[float, float, float] = ..., viewDirection: tuple[float, float, float] = ..., vd: tuple[float, float, float] = ...) -> Any: ...
def viewSet(*args, animate: bool | int = ..., an: bool | int = ..., back: bool | int = ..., b: bool | int = ..., bottom: bool | int = ..., bo: bool | int = ..., fit: bool | int = ..., fitFactor: float = ..., ff: float = ..., front: bool | int = ..., f: bool | int = ..., home: bool | int = ..., h: bool | int = ..., keepRenderSettings: bool | int = ..., krs: bool | int = ..., leftSide: bool | int = ..., ls: bool | int = ..., namespace: str = ..., ns: str = ..., nextView: bool | int = ..., nv: bool | int = ..., persp: bool | int = ..., p: bool | int = ..., previousView: bool | int = ..., pv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., rightSide: bool | int = ..., rs: bool | int = ..., side: bool | int = ..., s: bool | int = ..., t: bool | int = ..., top: bool | int = ..., viewNegativeX: bool | int = ..., vnx: bool | int = ..., viewNegativeY: bool | int = ..., vny: bool | int = ..., viewNegativeZ: bool | int = ..., vnz: bool | int = ..., viewX: bool | int = ..., vx: bool | int = ..., viewY: bool | int = ..., vy: bool | int = ..., viewZ: bool | int = ..., vz: bool | int = ...) -> Any: ...
def visor(*args, addFolder: bool | int = ..., add: bool | int = ..., addNodes: bool | int | str = ..., adn: bool | int | str = ..., allowPanningInX: bool | int = ..., apx: bool | int = ..., allowPanningInY: bool | int = ..., apy: bool | int = ..., allowZooming: bool | int = ..., az: bool | int = ..., command: bool | int | str = ..., cmd: bool | int | str = ..., deleteFolder: bool | int | str = ..., editFolder: bool | int | str = ..., edf: bool | int | str = ..., folderList: bool | int | str = ..., fl: bool | int | str = ..., menu: bool | int | str = ..., mn: bool | int | str = ..., name: bool | int | str = ..., n: bool | int | str = ..., nodeType: bool | int | str = ..., ntp: bool | int | str = ..., openDirectories: bool | int = ..., opd: bool | int = ..., openFolder: bool | int = ..., opf: bool | int = ..., parent: bool | int | str = ..., p: bool | int | str = ..., path: bool | int | str = ..., pth: bool | int | str = ..., popupMenuScript: bool | int | str = ..., pms: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., rebuild: bool | int = ..., re: bool | int = ..., refreshAllSwatches: bool | int = ..., ras: bool | int = ..., refreshSelectedSwatches: bool | int = ..., rss: bool | int = ..., refreshSwatch: bool | int | str = ..., rs: bool | int | str = ..., reset: bool | int = ..., rst: bool | int = ..., restrictPanAndZoom: bool | int = ..., rpz: bool | int = ..., saveSwatches: bool | int = ..., ss: bool | int = ..., scrollBar: bool | int | str = ..., sb: bool | int | str = ..., scrollPercent: bool | int | float = ..., sp: bool | int | float = ..., selectedGadgets: bool | int | str = ..., sg: bool | int | str = ..., showDividers: bool | int = ..., sd: bool | int = ..., showFiles: bool | int = ..., sfi: bool | int = ..., showFolders: bool | int = ..., sfo: bool | int = ..., showNodes: bool | int = ..., sn: bool | int = ..., stateString: bool | int = ..., sts: bool | int = ..., style: bool | int | str = ..., stl: bool | int | str = ..., transform: bool | int | str = ..., trn: bool | int | str = ..., type: bool | int | str = ..., typ: bool | int | str = ...) -> Any: ...
def volumeAxis(*args, alongAxis: bool | int | float = ..., alx: bool | int | float = ..., aroundAxis: bool | int | float = ..., arx: bool | int | float = ..., attenuation: bool | int | float = ..., att: bool | int | float = ..., awayFromAxis: bool | int | float = ..., afx: bool | int | float = ..., awayFromCenter: bool | int | float = ..., afc: bool | int | float = ..., detailTurbulence: bool | int | float = ..., dtr: bool | int | float = ..., directionX: bool | int | float = ..., dx: bool | int | float = ..., directionY: bool | int | float = ..., dy: bool | int | float = ..., directionZ: bool | int | float = ..., dz: bool | int | float = ..., directionalSpeed: bool | int | float = ..., drs: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., invertAttenuation: bool | int = ..., ia: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., turbulence: bool | int | float = ..., trb: bool | int | float = ..., turbulenceFrequencyX: bool | int | float = ..., tfx: bool | int | float = ..., turbulenceFrequencyY: bool | int | float = ..., tfy: bool | int | float = ..., turbulenceFrequencyZ: bool | int | float = ..., tfz: bool | int | float = ..., turbulenceOffsetX: bool | int | float = ..., tox: bool | int | float = ..., turbulenceOffsetY: bool | int | float = ..., toy: bool | int | float = ..., turbulenceOffsetZ: bool | int | float = ..., toz: bool | int | float = ..., turbulenceSpeed: bool | int | float = ..., trs: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | tuple[float, float, float] = ..., vof: bool | int | tuple[float, float, float] = ..., volumeShape: bool | int | str = ..., vsh: bool | int | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...
def volumeBind(*args, edit: bool | int = ..., e: bool | int = ..., influence: bool | int | str = ..., inf: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def vortex(*args, attenuation: bool | int | float = ..., att: bool | int | float = ..., axisX: bool | int | float = ..., ax: bool | int | float = ..., axisY: bool | int | float = ..., ay: bool | int | float = ..., axisZ: bool | int | float = ..., az: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., magnitude: bool | int | float = ..., m: bool | int | float = ..., maxDistance: bool | int | float = ..., mxd: bool | int | float = ..., name: bool | int | str = ..., n: bool | int | str = ..., perVertex: bool | int = ..., pv: bool | int = ..., position: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., pos: bool | int | tuple[float, float, float] | list[tuple[float, float, float]] = ..., query: bool | int = ..., q: bool | int = ..., torusSectionRadius: bool | int | float = ..., tsr: bool | int | float = ..., volumeExclusion: bool | int = ..., vex: bool | int = ..., volumeOffset: bool | int | tuple[float, float, float] = ..., vof: bool | int | tuple[float, float, float] = ..., volumeShape: bool | int | str = ..., vsh: bool | int | str = ..., volumeSweep: bool | int | float = ..., vsw: bool | int | float = ...) -> Any: ...
def waitCursor(*args, query: bool | int = ..., q: bool | int = ..., state: bool | int = ..., st: bool | int = ...) -> Any: ...
def walkCtx(*args, alternateContext: bool | int = ..., ac: bool | int = ..., crouchCount: bool | int | float = ..., wcc: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., toolName: bool | int | str = ..., tn: bool | int | str = ..., walkHeight: bool | int | float = ..., wh: bool | int | float = ..., walkSensitivity: bool | int | float = ..., wsv: bool | int | float = ..., walkSpeed: bool | int | float = ..., ws: bool | int | float = ..., walkToolHud: bool | int = ..., wth: bool | int = ...) -> Any: ...
def warnUserDialog(*args, addInfo: tuple[str, str] = ..., adi: tuple[str, str] = ..., cbl: str = ..., dt: str = ..., ial: int = ..., lk: str = ..., message: str = ..., m: str = ..., title: str = ..., t: str = ..., w: int = ...) -> Any: ...
def warning(*args, noContext: bool | int = ..., n: bool | int = ..., showLineNumber: bool | int = ..., sl: bool | int = ...) -> Any: ...
def webBrowser(*args, annotation: bool | int | str = ..., ann: bool | int | str = ..., back: bool | int = ..., bk: bool | int = ..., backgroundColor: bool | int | tuple[float, float, float] = ..., bgc: bool | int | tuple[float, float, float] = ..., command: str = ..., c: str = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dragCallback: str | Callable = ..., dgc: str | Callable = ..., dropCallback: str | Callable = ..., dpc: str | Callable = ..., edit: bool | int = ..., e: bool | int = ..., enable: bool | int = ..., en: bool | int = ..., enableBackground: bool | int = ..., ebg: bool | int = ..., enableKeyboardFocus: bool | int = ..., ekf: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., find: str = ..., f: str = ..., forward: bool | int = ..., fwd: bool | int = ..., fullPathName: bool | int = ..., fpn: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., highlightColor: bool | int | tuple[float, float, float] = ..., hlc: bool | int | tuple[float, float, float] = ..., home: bool | int = ..., hm: bool | int = ..., isObscured: bool | int = ..., io: bool | int = ..., manage: bool | int = ..., m: bool | int = ..., matchCase: bool | int = ..., mc: bool | int = ..., matchWholeWord: bool | int = ..., mww: bool | int = ..., matchWholeWorld: bool | int = ..., noBackground: bool | int = ..., nbg: bool | int = ..., numberOfPopupMenus: bool | int = ..., npm: bool | int = ..., openURL: bool | int | str = ..., url: bool | int | str = ..., parent: bool | int | str = ..., p: bool | int | str = ..., popupMenuArray: bool | int = ..., pma: bool | int = ..., preventOverride: bool | int = ..., po: bool | int = ..., query: bool | int = ..., q: bool | int = ..., reload: bool | int = ..., rl: bool | int = ..., searchForward: bool | int = ..., sf: bool | int = ..., statusBarMessage: str = ..., sbm: str = ..., stop: bool | int = ..., st: bool | int = ..., urlChangedCb: str = ..., ucc: str = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: bool | int | str | Callable = ..., vcc: bool | int | str | Callable = ..., width: bool | int | int = ..., w: bool | int | int = ..., wrap: bool | int = ..., wr: bool | int = ...) -> Any: ...
def webBrowserPrefs(*args, edit: bool | int = ..., e: bool | int = ..., preference: tuple[str, str] = ..., prf: tuple[str, str] = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def weightsColor(*args, colorRamp: bool | int | str = ..., cr: bool | int | str = ..., deformer: bool | int | str = ..., dfm: bool | int | str = ..., falseColor: bool | int = ..., fc: bool | int = ..., outOfRangeColor: bool | int | tuple[float, float, float] = ..., orc: bool | int | tuple[float, float, float] = ..., query: bool | int = ..., q: bool | int = ..., rampMaxColor: bool | int | tuple[float, float, float] = ..., rxc: bool | int | tuple[float, float, float] = ..., rampMinColor: bool | int | tuple[float, float, float] = ..., rmc: bool | int | tuple[float, float, float] = ..., useColorRamp: bool | int = ..., ucr: bool | int = ..., useMaxMinColor: bool | int = ..., umc: bool | int = ...) -> Any: ...
def whatsNewHighlight(*args, highlightColor: bool | int | tuple[float, float, float] = ..., hc: bool | int | tuple[float, float, float] = ..., highlightOn: bool | int = ..., ho: bool | int = ..., query: bool | int = ..., q: bool | int = ..., showStartupDialog: bool | int = ..., ssd: bool | int = ...) -> Any: ...
def window(*args, backgroundColor: tuple[float, float, float] = ..., bgc: tuple[float, float, float] = ..., closeCommand: str | Callable = ..., cc: str | Callable = ..., defineTemplate: str = ..., dt: str = ..., docTag: bool | int | str = ..., dtg: bool | int | str = ..., dockCorner: tuple[str, str] | list[tuple[str, str]] = ..., dc: tuple[str, str] | list[tuple[str, str]] = ..., dockStation: bool | int = ..., ds: bool | int = ..., dockingLayout: bool | int | str = ..., dl: bool | int | str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., frontWindow: bool | int = ..., fw: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., iconName: bool | int | str = ..., iconify: bool | int = ..., i: bool | int = ..., interactivePlacement: bool | int = ..., ip: bool | int = ..., leftEdge: bool | int | int = ..., le: bool | int | int = ..., mainMenuBar: bool | int = ..., mm: bool | int = ..., mainWindow: bool | int = ..., mw: bool | int = ..., maximizeButton: bool | int = ..., mxb: bool | int = ..., menuArray: bool | int = ..., ma: bool | int = ..., menuBar: bool | int = ..., mb: bool | int = ..., menuBarCornerWidget: bool | int | tuple[str, str] = ..., mcw: bool | int | tuple[str, str] = ..., menuBarResize: bool | int = ..., mbr: bool | int = ..., menuBarVisible: bool | int = ..., mbv: bool | int = ..., menuIndex: tuple[str, int] = ..., mi: tuple[str, int] = ..., minimizeButton: bool | int = ..., mnb: bool | int = ..., minimizeCommand: str | Callable = ..., mnc: str | Callable = ..., nestedDockingEnabled: bool | int = ..., nde: bool | int = ..., numberOfMenus: bool | int = ..., nm: bool | int = ..., parent: str = ..., p: str = ..., query: bool | int = ..., q: bool | int = ..., resizeToFitChildren: bool | int = ..., rtf: bool | int = ..., restoreCommand: str | Callable = ..., rc: str | Callable = ..., retain: bool | int = ..., ret: bool | int = ..., sizeable: bool | int = ..., s: bool | int = ..., state: bool | int | str = ..., st: bool | int | str = ..., title: bool | int | str = ..., t: bool | int | str = ..., titleBar: bool | int = ..., tb: bool | int = ..., titleBarMenu: bool | int = ..., tbm: bool | int = ..., toolbox: bool | int = ..., tlb: bool | int = ..., topEdge: bool | int | int = ..., te: bool | int | int = ..., topLeftCorner: bool | int | tuple[int, int] = ..., tlc: bool | int | tuple[int, int] = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., width: bool | int | int = ..., w: bool | int | int = ..., widthHeight: bool | int | tuple[int, int] = ..., wh: bool | int | tuple[int, int] = ...) -> Any: ...
def windowPref(*args, edit: bool | int = ..., e: bool | int = ..., enableAll: bool | int = ..., ea: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., leftEdge: bool | int | int = ..., le: bool | int | int = ..., loadAll: bool | int = ..., la: bool | int = ..., maximized: bool | int = ..., max: bool | int = ..., parentMain: bool | int = ..., pm: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., r: bool | int = ..., removeAll: bool | int = ..., ra: bool | int = ..., restoreMainWindowState: str = ..., rms: str = ..., saveAll: bool | int = ..., sa: bool | int = ..., saveMainWindowState: str = ..., sms: str = ..., topEdge: bool | int | int = ..., te: bool | int | int = ..., topLeftCorner: bool | int | tuple[int, int] = ..., tlc: bool | int | tuple[int, int] = ..., width: bool | int | int = ..., w: bool | int | int = ..., widthHeight: bool | int | tuple[int, int] = ..., wh: bool | int | tuple[int, int] = ...) -> Any: ...
def wire(*args, after: bool | int = ..., af: bool | int = ..., afterReference: bool | int = ..., ar: bool | int = ..., before: bool | int = ..., bf: bool | int = ..., crossingEffect: bool | int | float = ..., ce: bool | int | float = ..., deformerTools: bool | int = ..., dt: bool | int = ..., dropoffDistance: bool | int | tuple[int, float] | list[tuple[int, float]] = ..., dds: bool | int | tuple[int, float] | list[tuple[int, float]] = ..., edit: bool | int = ..., e: bool | int = ..., envelope: bool | int | float = ..., en: bool | int | float = ..., exclusive: bool | int | str = ..., ex: bool | int | str = ..., frontOfChain: bool | int = ..., foc: bool | int = ..., geometry: bool | int | str | list[str] = ..., g: bool | int | str | list[str] = ..., geometryIndices: bool | int = ..., gi: bool | int = ..., groupWithBase: bool | int = ..., gw: bool | int = ..., holder: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., ho: bool | int | tuple[int, str] | list[tuple[int, str]] = ..., ignoreSelected: bool | int = ..., includeHiddenSelections: bool | int = ..., ihs: bool | int = ..., localInfluence: bool | int | float = ..., li: bool | int | float = ..., name: str = ..., n: str = ..., parallel: bool | int = ..., par: bool | int = ..., prune: bool | int = ..., pr: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int | list[bool | int] = ..., rm: bool | int | list[bool | int] = ..., split: bool | int = ..., sp: bool | int = ..., useComponentTags: bool | int = ..., uct: bool | int = ..., wire: bool | int | str | list[str] = ..., w: bool | int | str | list[str] = ..., wireCount: bool | int | int = ..., wc: bool | int | int = ...) -> Any: ...
def wireContext(*args, crossingEffect: bool | int | float = ..., ce: bool | int | float = ..., deformationOrder: bool | int | str = ..., do: bool | int | str = ..., dropoffDistance: bool | int | float = ..., dds: bool | int | float = ..., edit: bool | int = ..., e: bool | int = ..., envelope: bool | int | float = ..., en: bool | int | float = ..., exclusive: bool | int = ..., exc: bool | int = ..., exclusivePartition: bool | int | str = ..., ep: bool | int | str = ..., exists: bool | int = ..., ex: bool | int = ..., groupWithBase: bool | int = ..., gw: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., holder: bool | int = ..., ho: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., localInfluence: bool | int | float = ..., li: bool | int | float = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ...) -> Any: ...
def workspace(*args, active: bool | int = ..., act: bool | int = ..., baseWorkspace: bool | int | str = ..., bw: bool | int | str = ..., create: str = ..., cr: str = ..., directory: bool | int | str = ..., dir: bool | int | str = ..., expandName: bool | int | str = ..., en: bool | int | str = ..., fileRule: bool | int | tuple[str, str] = ..., fr: bool | int | tuple[str, str] = ..., fileRuleEntry: bool | int | str = ..., fre: bool | int | str = ..., fileRuleList: bool | int = ..., frl: bool | int = ..., filter: bool | int = ..., f: bool | int = ..., fullName: bool | int = ..., fn: bool | int = ..., list: bool | int = ..., l: bool | int = ..., listFullWorkspaces: bool | int = ..., lfw: bool | int = ..., listWorkspaces: bool | int = ..., lw: bool | int = ..., newWorkspace: bool | int = ..., n: bool | int = ..., objectType: bool | int | tuple[str, str] = ..., ot: bool | int | tuple[str, str] = ..., objectTypeEntry: bool | int | str = ..., ote: bool | int | str = ..., objectTypeList: bool | int = ..., otl: bool | int = ..., openWorkspace: bool | int = ..., o: bool | int = ..., projectPath: bool | int | str = ..., pp: bool | int | str = ..., query: bool | int = ..., q: bool | int = ..., removeFileRuleEntry: str = ..., rfr: str = ..., removeVariableEntry: str = ..., rve: str = ..., renderType: bool | int | tuple[str, str] = ..., rt: bool | int | tuple[str, str] = ..., renderTypeEntry: bool | int | str = ..., rte: bool | int | str = ..., renderTypeList: bool | int = ..., rtl: bool | int = ..., rootDirectory: bool | int = ..., rd: bool | int = ..., saveWorkspace: bool | int = ..., s: bool | int = ..., shortName: bool | int = ..., sn: bool | int = ..., update: bool | int = ..., u: bool | int = ..., updateAll: bool | int = ..., ua: bool | int = ..., variable: bool | int | tuple[str, str] = ..., v: bool | int | tuple[str, str] = ..., variableEntry: bool | int | str = ..., ve: bool | int | str = ..., variableList: bool | int = ..., vl: bool | int = ...) -> Any: ...
def workspaceControl(*args, checksPlugins: bool | int = ..., cp: bool | int = ..., close: bool | int = ..., cl: bool | int = ..., closeCommand: str | Callable = ..., cc: str | Callable = ..., collapse: bool | int = ..., clp: bool | int = ..., defineTemplate: str = ..., dt: str = ..., deleteLater: bool | int = ..., dockToControl: tuple[str, str] = ..., dtc: tuple[str, str] = ..., dockToMainWindow: tuple[str, bool | int] = ..., dtm: tuple[str, bool | int] = ..., dockToPanel: tuple[str, str, bool | int] = ..., dtp: tuple[str, str, bool | int] = ..., duplicatable: bool | int = ..., dup: bool | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., floating: bool | int = ..., fl: bool | int = ..., height: bool | int = ..., h: bool | int = ..., heightProperty: bool | int | str = ..., hp: bool | int | str = ..., horizontal: bool | int = ..., hr: bool | int = ..., initCallback: bool | int | str = ..., ic: bool | int | str = ..., initialHeight: int = ..., ih: int = ..., initialWidth: int = ..., iw: int = ..., label: bool | int | str = ..., l: bool | int | str = ..., loadImmediately: bool | int = ..., li: bool | int = ..., minimumHeight: bool | int | int = ..., mh: bool | int | int = ..., minimumWidth: bool | int | int = ..., mw: bool | int | int = ..., query: bool | int = ..., q: bool | int = ..., r: bool | int = ..., requiredControl: str | list[str] = ..., rc: str | list[str] = ..., requiredPlugin: str | list[str] = ..., rp: str | list[str] = ..., resizeHeight: int = ..., rsh: int = ..., resizeWidth: int = ..., rsw: int = ..., restore: bool | int = ..., rs: bool | int = ..., retain: bool | int = ..., rt: bool | int = ..., stateString: bool | int | str = ..., ss: bool | int | str = ..., tabPosition: bool | int | tuple[str, bool | int] = ..., tp: bool | int | tuple[str, bool | int] = ..., tabToControl: tuple[str, int] = ..., ttc: tuple[str, int] = ..., uiScript: str | Callable = ..., ui: str | Callable = ..., useTemplate: str = ..., ut: str = ..., visible: bool | int = ..., vis: bool | int = ..., visibleChangeCommand: str | Callable = ..., vcc: str | Callable = ..., width: bool | int = ..., w: bool | int = ..., widthProperty: bool | int | str = ..., wp: bool | int | str = ...) -> Any: ...
def workspaceControlState(*args, defaultTopLeftCorner: bool | int | tuple[int, int] = ..., dc: bool | int | tuple[int, int] = ..., defaultWidthHeight: bool | int | tuple[int, int] = ..., dwh: bool | int | tuple[int, int] = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., height: bool | int | int = ..., h: bool | int | int = ..., leftEdge: bool | int | int = ..., le: bool | int | int = ..., maximized: bool | int = ..., max: bool | int = ..., query: bool | int = ..., q: bool | int = ..., remove: bool | int = ..., r: bool | int = ..., topEdge: bool | int | int = ..., te: bool | int | int = ..., topLeftCorner: bool | int | tuple[int, int] = ..., tlc: bool | int | tuple[int, int] = ..., width: bool | int | int = ..., w: bool | int | int = ..., widthHeight: bool | int | tuple[int, int] = ..., wh: bool | int | tuple[int, int] = ...) -> Any: ...
def workspaceLayoutManager(*args, collapseMainWindowControls: tuple[str, bool | int] = ..., cmw: tuple[str, bool | int] = ..., current: bool | int = ..., cu: bool | int = ..., delete: str = ..., d: str = ..., edit: bool | int = ..., e: bool | int = ..., i: str = ..., listLayouts: bool | int = ..., ll: bool | int = ..., listModuleLayouts: bool | int = ..., lml: bool | int = ..., listUserLayouts: bool | int = ..., lul: bool | int = ..., modified: str = ..., m: str = ..., parentWorkspaceControl: str = ..., pwc: str = ..., query: bool | int = ..., q: bool | int = ..., reset: bool | int = ..., rs: bool | int = ..., restoreMainWindowControls: bool | int = ..., rmw: bool | int = ..., save: bool | int = ..., s: bool | int = ..., saveAs: str = ..., sa: str = ..., setCurrent: str = ..., sc: str = ..., setCurrentCallback: str = ..., scc: str = ..., setModifiedCallback: str = ..., smc: str = ..., type: str = ..., t: str = ...) -> Any: ...
def workspacePanel(*args, defineTemplate: str = ..., dt: str = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., mainWindow: bool | int = ..., mw: bool | int = ..., query: bool | int = ..., q: bool | int = ..., useTemplate: str = ..., ut: str = ...) -> Any: ...
def wrinkle(*args, axis: tuple[float, float, float] = ..., ax: tuple[float, float, float] = ..., branchCount: int = ..., brc: int = ..., branchDepth: int = ..., bd: int = ..., center: tuple[float, float, float] = ..., ct: tuple[float, float, float] = ..., crease: str | list[str] = ..., cr: str | list[str] = ..., dropoffDistance: float = ..., dds: float = ..., envelope: float = ..., en: float = ..., randomness: float = ..., rnd: float = ..., style: str = ..., st: str = ..., thickness: float = ..., th: float = ..., uvSpace: tuple[float, float, float, float, float] = ..., uv: tuple[float, float, float, float, float] = ..., wrinkleCount: int = ..., wc: int = ..., wrinkleIntensity: float = ..., wi: float = ...) -> Any: ...
def wrinkleContext(*args, branchCount: bool | int | int = ..., brc: bool | int | int = ..., branchDepth: bool | int | int = ..., bd: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., exists: bool | int = ..., ex: bool | int = ..., history: bool | int = ..., ch: bool | int = ..., image1: bool | int | str = ..., i1: bool | int | str = ..., image2: bool | int | str = ..., i2: bool | int | str = ..., image3: bool | int | str = ..., i3: bool | int | str = ..., name: str = ..., n: str = ..., query: bool | int = ..., q: bool | int = ..., randomness: bool | int | float = ..., rnd: bool | int | float = ..., style: bool | int | str = ..., st: bool | int | str = ..., thickness: bool | int | float = ..., th: bool | int | float = ..., wrinkleCount: bool | int | int = ..., wc: bool | int | int = ..., wrinkleIntensity: bool | int | float = ..., wi: bool | int | float = ...) -> Any: ...
def writeTake(*args, angle: str = ..., a: str = ..., device: str = ..., d: str = ..., linear: str = ..., l: str = ..., noTime: bool | int = ..., nt: bool | int = ..., precision: int = ..., pre: int = ..., take: str = ..., t: str = ..., virtualDevice: str = ..., vd: str = ...) -> Any: ...
def xform(*args, absolute: bool | int = ..., a: bool | int = ..., boundingBox: bool | int = ..., bb: bool | int = ..., boundingBoxInvisible: bool | int = ..., bbi: bool | int = ..., centerPivots: bool | int = ..., cp: bool | int = ..., centerPivotsOnComponents: bool | int = ..., cpc: bool | int = ..., deletePriorHistory: bool | int = ..., dph: bool | int = ..., euler: bool | int = ..., eu: bool | int = ..., matrix: bool | int | tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float] = ..., m: bool | int | tuple[float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float] = ..., objectSpace: bool | int = ..., os: bool | int = ..., pivots: bool | int | tuple[float, float, float] = ..., piv: bool | int | tuple[float, float, float] = ..., preserve: bool | int = ..., p: bool | int = ..., preserveUV: bool | int = ..., puv: bool | int = ..., query: bool | int = ..., q: bool | int = ..., reflection: bool | int = ..., rfl: bool | int = ..., reflectionAboutBBox: bool | int = ..., rab: bool | int = ..., reflectionAboutOrigin: bool | int = ..., rao: bool | int = ..., reflectionAboutX: bool | int = ..., rax: bool | int = ..., reflectionAboutY: bool | int = ..., ray: bool | int = ..., reflectionAboutZ: bool | int = ..., raz: bool | int = ..., reflectionTolerance: float = ..., rft: float = ..., relative: bool | int = ..., r: bool | int = ..., rotateAxis: bool | int | tuple[float, float, float] = ..., ra: bool | int | tuple[float, float, float] = ..., rotateOrder: bool | int | str = ..., roo: bool | int | str = ..., rotatePivot: bool | int | tuple[float, float, float] = ..., rp: bool | int | tuple[float, float, float] = ..., rotateTranslation: bool | int | tuple[float, float, float] = ..., rt: bool | int | tuple[float, float, float] = ..., rotation: bool | int | tuple[float, float, float] = ..., ro: bool | int | tuple[float, float, float] = ..., scale: bool | int | tuple[float, float, float] = ..., s: bool | int | tuple[float, float, float] = ..., scalePivot: bool | int | tuple[float, float, float] = ..., sp: bool | int | tuple[float, float, float] = ..., scaleTranslation: bool | int | tuple[float, float, float] = ..., st: bool | int | tuple[float, float, float] = ..., shear: bool | int | tuple[float, float, float] = ..., sh: bool | int | tuple[float, float, float] = ..., translation: bool | int | tuple[float, float, float] = ..., t: bool | int | tuple[float, float, float] = ..., worldSpace: bool | int = ..., ws: bool | int = ..., worldSpaceDistance: bool | int = ..., wd: bool | int = ..., zeroTransformPivots: bool | int = ..., ztp: bool | int = ...) -> Any: ...
def xformConstraint(*args, alongNormal: bool | int | int = ..., n: bool | int | int = ..., edit: bool | int = ..., e: bool | int = ..., live: bool | int = ..., l: bool | int = ..., query: bool | int = ..., q: bool | int = ..., type: bool | int | str = ..., t: bool | int | str = ...) -> Any: ...
