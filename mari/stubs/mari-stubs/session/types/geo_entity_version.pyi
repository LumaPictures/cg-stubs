from .metadata import Metadata as Metadata
from _typeshed import Incomplete
from collections.abc import Generator

class GeoEntityVersion(Metadata):
    geometryCount: Incomplete
    meshPaths: Incomplete
    path: Incomplete
    settings: Incomplete
    settingsString: Incomplete
    copied: bool
    def __init__(self, name, parent) -> None: ...
    @property
    def uvIndexes(self): ...
    def asDict(self, includeDict: Incomplete | None = ...): ...
    def export(self, exportDir) -> None: ...
    @classmethod
    def fromDict(cls, dataDict, parent, sourceFilePath): ...
    @classmethod
    def fromMariObject(cls, mariObject, parent): ...
    mariObject: Incomplete
    def make(self, finishedCallback=...) -> None: ...
    def walk(self, depth: int = ...) -> Generator[Incomplete, None, None]: ...
