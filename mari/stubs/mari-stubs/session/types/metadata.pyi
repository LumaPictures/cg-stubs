from .mari_entity import MariEntity as MariEntity
from _typeshed import Incomplete

class Metadata(MariEntity):
    metadata: Incomplete
    metadataDefault: Incomplete
    metadataDescription: Incomplete
    metadataDisplayName: Incomplete
    metadataEnabled: Incomplete
    metadataItemList: Incomplete
    metadataMax: Incomplete
    metadataMin: Incomplete
    metadataStep: Incomplete
    uuid: Incomplete
    def __init__(self, name, parent) -> None: ...
    def __eq__(self, other): ...
    def __hash__(self): ...
    def __ne__(self, other): ...
    def applyMetadata(self, finishedCallback=...) -> None: ...
    def asDict(self, includeDict: Incomplete | None = ...): ...
    def findByUUID(self, uuid): ...
    @classmethod
    def fromDict(cls, dataDict, parent, sourceFilePath): ...
    @classmethod
    def fromMariObject(cls, mariObject, parent, name: Incomplete | None = ...): ...
    @classmethod
    def getUUID(self, mariEntity): ...
